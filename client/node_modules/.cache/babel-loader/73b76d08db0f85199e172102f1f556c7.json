{"ast":null,"code":"var utils = {\n  isiOS: function isiOS() {\n    return /(ipad|iphone|ipod)/ig.test(navigator.userAgent);\n  },\n  isEdge: function isEdge() {\n    return /(Edge)/ig.test(navigator.userAgent);\n  },\n  shouldUseAudioDriver: function shouldUseAudioDriver() {\n    var isOldiOSOnIphone = /iphone.*(7|8|9)_[0-9]/i.test(navigator.userAgent);\n    var isWebView = /(iPhone|iPod).*AppleWebKit(?!.*Safari)/i.test(navigator.userAgent);\n    return isOldiOSOnIphone || isWebView;\n  },\n  shouldUseCanvasInBetween: function shouldUseCanvasInBetween() {\n    return /trident|edge/i.test(navigator.userAgent);\n  }\n};\n\nfunction _classCallCheck(instance, Constructor) {\n  if (!(instance instanceof Constructor)) {\n    throw new TypeError(\"Cannot call a class as a function\");\n  }\n}\n\nfunction _defineProperties(target, props) {\n  for (var i = 0; i < props.length; i++) {\n    var descriptor = props[i];\n    descriptor.enumerable = descriptor.enumerable || false;\n    descriptor.configurable = true;\n    if (\"value\" in descriptor) descriptor.writable = true;\n    Object.defineProperty(target, descriptor.key, descriptor);\n  }\n}\n\nfunction _createClass(Constructor, protoProps, staticProps) {\n  if (protoProps) _defineProperties(Constructor.prototype, protoProps);\n  if (staticProps) _defineProperties(Constructor, staticProps);\n  return Constructor;\n}\n\nfunction _inherits(subClass, superClass) {\n  if (typeof superClass !== \"function\" && superClass !== null) {\n    throw new TypeError(\"Super expression must either be null or a function\");\n  }\n\n  subClass.prototype = Object.create(superClass && superClass.prototype, {\n    constructor: {\n      value: subClass,\n      writable: true,\n      configurable: true\n    }\n  });\n  if (superClass) _setPrototypeOf(subClass, superClass);\n}\n\nfunction _getPrototypeOf(o) {\n  _getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf : function _getPrototypeOf(o) {\n    return o.__proto__ || Object.getPrototypeOf(o);\n  };\n  return _getPrototypeOf(o);\n}\n\nfunction _setPrototypeOf(o, p) {\n  _setPrototypeOf = Object.setPrototypeOf || function _setPrototypeOf(o, p) {\n    o.__proto__ = p;\n    return o;\n  };\n\n  return _setPrototypeOf(o, p);\n}\n\nfunction _assertThisInitialized(self) {\n  if (self === void 0) {\n    throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\");\n  }\n\n  return self;\n}\n\nfunction _possibleConstructorReturn(self, call) {\n  if (call && (typeof call === \"object\" || typeof call === \"function\")) {\n    return call;\n  }\n\n  return _assertThisInitialized(self);\n}\n\nfunction _superPropBase(object, property) {\n  while (!Object.prototype.hasOwnProperty.call(object, property)) {\n    object = _getPrototypeOf(object);\n    if (object === null) break;\n  }\n\n  return object;\n}\n\nfunction _get(target, property, receiver) {\n  if (typeof Reflect !== \"undefined\" && Reflect.get) {\n    _get = Reflect.get;\n  } else {\n    _get = function _get(target, property, receiver) {\n      var base = _superPropBase(target, property);\n\n      if (!base) return;\n      var desc = Object.getOwnPropertyDescriptor(base, property);\n\n      if (desc.get) {\n        return desc.get.call(receiver);\n      }\n\n      return desc.value;\n    };\n  }\n\n  return _get(target, property, receiver || target);\n} // File:src/Three.js\n\n/**\n * @author mrdoob / http://mrdoob.com/\n */\n\n\nvar THREE = {\n  REVISION: '75'\n}; //\n\nvar threejs360 = THREE; //\n\nif (Number.EPSILON === undefined) {\n  Number.EPSILON = Math.pow(2, -52);\n} //\n\n\nif (Math.sign === undefined) {\n  // https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Math/sign\n  Math.sign = function (x) {\n    return x < 0 ? -1 : x > 0 ? 1 : +x;\n  };\n}\n\nif (Function.prototype.name === undefined && Object.defineProperty !== undefined) {\n  // Missing in IE9-11.\n  // https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Function/name\n  Object.defineProperty(Function.prototype, 'name', {\n    get: function () {\n      return this.toString().match(/^\\s*function\\s*(\\S*)\\s*\\(/)[1];\n    }\n  });\n}\n\nif (Object.assign === undefined) {\n  // https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Object/assign\n  Object.defineProperty(Object, 'assign', {\n    writable: true,\n    configurable: true,\n    value: function (target) {\n      if (target === undefined || target === null) {\n        throw new TypeError(\"Cannot convert first argument to object\");\n      }\n\n      var to = Object(target);\n\n      for (var i = 1, n = arguments.length; i !== n; ++i) {\n        var nextSource = arguments[i];\n        if (nextSource === undefined || nextSource === null) continue;\n        nextSource = Object(nextSource);\n        var keysArray = Object.keys(nextSource);\n\n        for (var nextIndex = 0, len = keysArray.length; nextIndex !== len; ++nextIndex) {\n          var nextKey = keysArray[nextIndex];\n          var desc = Object.getOwnPropertyDescriptor(nextSource, nextKey);\n\n          if (desc !== undefined && desc.enumerable) {\n            to[nextKey] = nextSource[nextKey];\n          }\n        }\n      }\n\n      return to;\n    }\n  });\n} // https://developer.mozilla.org/en-US/docs/Web/API/MouseEvent.button\n\n\nTHREE.MOUSE = {\n  LEFT: 0,\n  MIDDLE: 1,\n  RIGHT: 2\n}; // GL STATE CONSTANTS\n\nTHREE.CullFaceNone = 0;\nTHREE.CullFaceBack = 1;\nTHREE.CullFaceFront = 2;\nTHREE.CullFaceFrontBack = 3;\nTHREE.FrontFaceDirectionCW = 0;\nTHREE.FrontFaceDirectionCCW = 1; // SHADOWING TYPES\n\nTHREE.BasicShadowMap = 0;\nTHREE.PCFShadowMap = 1;\nTHREE.PCFSoftShadowMap = 2; // MATERIAL CONSTANTS\n// side\n\nTHREE.FrontSide = 0;\nTHREE.BackSide = 1;\nTHREE.DoubleSide = 2; // shading\n\nTHREE.FlatShading = 1;\nTHREE.SmoothShading = 2; // colors\n\nTHREE.NoColors = 0;\nTHREE.FaceColors = 1;\nTHREE.VertexColors = 2; // blending modes\n\nTHREE.NoBlending = 0;\nTHREE.NormalBlending = 1;\nTHREE.AdditiveBlending = 2;\nTHREE.SubtractiveBlending = 3;\nTHREE.MultiplyBlending = 4;\nTHREE.CustomBlending = 5; // custom blending equations\n// (numbers start from 100 not to clash with other\n// mappings to OpenGL constants defined in Texture.js)\n\nTHREE.AddEquation = 100;\nTHREE.SubtractEquation = 101;\nTHREE.ReverseSubtractEquation = 102;\nTHREE.MinEquation = 103;\nTHREE.MaxEquation = 104; // custom blending destination factors\n\nTHREE.ZeroFactor = 200;\nTHREE.OneFactor = 201;\nTHREE.SrcColorFactor = 202;\nTHREE.OneMinusSrcColorFactor = 203;\nTHREE.SrcAlphaFactor = 204;\nTHREE.OneMinusSrcAlphaFactor = 205;\nTHREE.DstAlphaFactor = 206;\nTHREE.OneMinusDstAlphaFactor = 207; // custom blending source factors\n//THREE.ZeroFactor = 200;\n//THREE.OneFactor = 201;\n//THREE.SrcAlphaFactor = 204;\n//THREE.OneMinusSrcAlphaFactor = 205;\n//THREE.DstAlphaFactor = 206;\n//THREE.OneMinusDstAlphaFactor = 207;\n\nTHREE.DstColorFactor = 208;\nTHREE.OneMinusDstColorFactor = 209;\nTHREE.SrcAlphaSaturateFactor = 210; // depth modes\n\nTHREE.NeverDepth = 0;\nTHREE.AlwaysDepth = 1;\nTHREE.LessDepth = 2;\nTHREE.LessEqualDepth = 3;\nTHREE.EqualDepth = 4;\nTHREE.GreaterEqualDepth = 5;\nTHREE.GreaterDepth = 6;\nTHREE.NotEqualDepth = 7; // TEXTURE CONSTANTS\n\nTHREE.MultiplyOperation = 0;\nTHREE.MixOperation = 1;\nTHREE.AddOperation = 2; // Tone Mapping modes\n\nTHREE.NoToneMapping = 0; // do not do any tone mapping, not even exposure (required for special purpose passes.)\n\nTHREE.LinearToneMapping = 1; // only apply exposure.\n\nTHREE.ReinhardToneMapping = 2;\nTHREE.Uncharted2ToneMapping = 3; // John Hable\n\nTHREE.CineonToneMapping = 4; // optimized filmic operator by Jim Hejl and Richard Burgess-Dawson\n// Mapping modes\n\nTHREE.UVMapping = 300;\nTHREE.CubeReflectionMapping = 301;\nTHREE.CubeRefractionMapping = 302;\nTHREE.EquirectangularReflectionMapping = 303;\nTHREE.EquirectangularRefractionMapping = 304;\nTHREE.SphericalReflectionMapping = 305;\nTHREE.CubeUVReflectionMapping = 306;\nTHREE.CubeUVRefractionMapping = 307; // Wrapping modes\n\nTHREE.RepeatWrapping = 1000;\nTHREE.ClampToEdgeWrapping = 1001;\nTHREE.MirroredRepeatWrapping = 1002; // Filters\n\nTHREE.NearestFilter = 1003;\nTHREE.NearestMipMapNearestFilter = 1004;\nTHREE.NearestMipMapLinearFilter = 1005;\nTHREE.LinearFilter = 1006;\nTHREE.LinearMipMapNearestFilter = 1007;\nTHREE.LinearMipMapLinearFilter = 1008; // Data types\n\nTHREE.UnsignedByteType = 1009;\nTHREE.ByteType = 1010;\nTHREE.ShortType = 1011;\nTHREE.UnsignedShortType = 1012;\nTHREE.IntType = 1013;\nTHREE.UnsignedIntType = 1014;\nTHREE.FloatType = 1015;\nTHREE.HalfFloatType = 1025; // Pixel types\n//THREE.UnsignedByteType = 1009;\n\nTHREE.UnsignedShort4444Type = 1016;\nTHREE.UnsignedShort5551Type = 1017;\nTHREE.UnsignedShort565Type = 1018; // Pixel formats\n\nTHREE.AlphaFormat = 1019;\nTHREE.RGBFormat = 1020;\nTHREE.RGBAFormat = 1021;\nTHREE.LuminanceFormat = 1022;\nTHREE.LuminanceAlphaFormat = 1023; // THREE.RGBEFormat handled as THREE.RGBAFormat in shaders\n\nTHREE.RGBEFormat = THREE.RGBAFormat; //1024;\n// DDS / ST3C Compressed texture formats\n\nTHREE.RGB_S3TC_DXT1_Format = 2001;\nTHREE.RGBA_S3TC_DXT1_Format = 2002;\nTHREE.RGBA_S3TC_DXT3_Format = 2003;\nTHREE.RGBA_S3TC_DXT5_Format = 2004; // PVRTC compressed texture formats\n\nTHREE.RGB_PVRTC_4BPPV1_Format = 2100;\nTHREE.RGB_PVRTC_2BPPV1_Format = 2101;\nTHREE.RGBA_PVRTC_4BPPV1_Format = 2102;\nTHREE.RGBA_PVRTC_2BPPV1_Format = 2103; // ETC compressed texture formats\n\nTHREE.RGB_ETC1_Format = 2151; // Loop styles for AnimationAction\n\nTHREE.LoopOnce = 2200;\nTHREE.LoopRepeat = 2201;\nTHREE.LoopPingPong = 2202; // Interpolation\n\nTHREE.InterpolateDiscrete = 2300;\nTHREE.InterpolateLinear = 2301;\nTHREE.InterpolateSmooth = 2302; // Interpolant ending modes\n\nTHREE.ZeroCurvatureEnding = 2400;\nTHREE.ZeroSlopeEnding = 2401;\nTHREE.WrapAroundEnding = 2402; // Triangle Draw modes\n\nTHREE.TrianglesDrawMode = 0;\nTHREE.TriangleStripDrawMode = 1;\nTHREE.TriangleFanDrawMode = 2; // Texture Encodings\n\nTHREE.LinearEncoding = 3000; // No encoding at all.\n\nTHREE.sRGBEncoding = 3001;\nTHREE.GammaEncoding = 3007; // uses GAMMA_FACTOR, for backwards compatibility with WebGLRenderer.gammaInput/gammaOutput\n// The following Texture Encodings are for RGB-only (no alpha) HDR light emission sources.\n// These encodings should not specified as output encodings except in rare situations.\n\nTHREE.RGBEEncoding = 3002; // AKA Radiance.\n\nTHREE.LogLuvEncoding = 3003;\nTHREE.RGBM7Encoding = 3004;\nTHREE.RGBM16Encoding = 3005;\nTHREE.RGBDEncoding = 3006; // MaxRange is 256.\n// File:src/math/Math.js\n\n/**\n * @author alteredq / http://alteredqualia.com/\n * @author mrdoob / http://mrdoob.com/\n */\n\nTHREE.Math = {\n  generateUUID: function () {\n    // http://www.broofa.com/Tools/Math.uuid.htm\n    var chars = '0123456789ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz'.split('');\n    var uuid = new Array(36);\n    var rnd = 0,\n        r;\n    return function () {\n      for (var i = 0; i < 36; i++) {\n        if (i === 8 || i === 13 || i === 18 || i === 23) {\n          uuid[i] = '-';\n        } else if (i === 14) {\n          uuid[i] = '4';\n        } else {\n          if (rnd <= 0x02) rnd = 0x2000000 + Math.random() * 0x1000000 | 0;\n          r = rnd & 0xf;\n          rnd = rnd >> 4;\n          uuid[i] = chars[i === 19 ? r & 0x3 | 0x8 : r];\n        }\n      }\n\n      return uuid.join('');\n    };\n  }(),\n  clamp: function (value, min, max) {\n    return Math.max(min, Math.min(max, value));\n  },\n  // compute euclidian modulo of m % n\n  // https://en.wikipedia.org/wiki/Modulo_operation\n  euclideanModulo: function (n, m) {\n    return (n % m + m) % m;\n  },\n  // Linear mapping from range <a1, a2> to range <b1, b2>\n  mapLinear: function (x, a1, a2, b1, b2) {\n    return b1 + (x - a1) * (b2 - b1) / (a2 - a1);\n  },\n  // http://en.wikipedia.org/wiki/Smoothstep\n  smoothstep: function (x, min, max) {\n    if (x <= min) return 0;\n    if (x >= max) return 1;\n    x = (x - min) / (max - min);\n    return x * x * (3 - 2 * x);\n  },\n  smootherstep: function (x, min, max) {\n    if (x <= min) return 0;\n    if (x >= max) return 1;\n    x = (x - min) / (max - min);\n    return x * x * x * (x * (x * 6 - 15) + 10);\n  },\n  random16: function () {\n    return Math.random();\n  },\n  // Random integer from <low, high> interval\n  randInt: function (low, high) {\n    return low + Math.floor(Math.random() * (high - low + 1));\n  },\n  // Random float from <low, high> interval\n  randFloat: function (low, high) {\n    return low + Math.random() * (high - low);\n  },\n  // Random float from <-range/2, range/2> interval\n  randFloatSpread: function (range) {\n    return range * (0.5 - Math.random());\n  },\n  degToRad: function () {\n    var degreeToRadiansFactor = Math.PI / 180;\n    return function (degrees) {\n      return degrees * degreeToRadiansFactor;\n    };\n  }(),\n  radToDeg: function () {\n    var radianToDegreesFactor = 180 / Math.PI;\n    return function (radians) {\n      return radians * radianToDegreesFactor;\n    };\n  }(),\n  isPowerOfTwo: function (value) {\n    return (value & value - 1) === 0 && value !== 0;\n  },\n  nearestPowerOfTwo: function (value) {\n    return Math.pow(2, Math.round(Math.log(value) / Math.LN2));\n  },\n  nextPowerOfTwo: function (value) {\n    value--;\n    value |= value >> 1;\n    value |= value >> 2;\n    value |= value >> 4;\n    value |= value >> 8;\n    value |= value >> 16;\n    value++;\n    return value;\n  }\n}; // File:src/math/Color.js\n\n/**\n * @author mrdoob / http://mrdoob.com/\n */\n\nTHREE.Color = function (color) {\n  if (arguments.length === 3) {\n    return this.fromArray(arguments);\n  }\n\n  return this.set(color);\n};\n\nTHREE.Color.prototype = {\n  constructor: THREE.Color,\n  r: 1,\n  g: 1,\n  b: 1,\n  set: function (value) {\n    if (value instanceof THREE.Color) {\n      this.copy(value);\n    } else if (typeof value === 'number') {\n      this.setHex(value);\n    } else if (typeof value === 'string') {\n      this.setStyle(value);\n    }\n\n    return this;\n  },\n  setScalar: function (scalar) {\n    this.r = scalar;\n    this.g = scalar;\n    this.b = scalar;\n  },\n  setHex: function (hex) {\n    hex = Math.floor(hex);\n    this.r = (hex >> 16 & 255) / 255;\n    this.g = (hex >> 8 & 255) / 255;\n    this.b = (hex & 255) / 255;\n    return this;\n  },\n  setRGB: function (r, g, b) {\n    this.r = r;\n    this.g = g;\n    this.b = b;\n    return this;\n  },\n  setHSL: function () {\n    function hue2rgb(p, q, t) {\n      if (t < 0) t += 1;\n      if (t > 1) t -= 1;\n      if (t < 1 / 6) return p + (q - p) * 6 * t;\n      if (t < 1 / 2) return q;\n      if (t < 2 / 3) return p + (q - p) * 6 * (2 / 3 - t);\n      return p;\n    }\n\n    return function (h, s, l) {\n      // h,s,l ranges are in 0.0 - 1.0\n      h = THREE.Math.euclideanModulo(h, 1);\n      s = THREE.Math.clamp(s, 0, 1);\n      l = THREE.Math.clamp(l, 0, 1);\n\n      if (s === 0) {\n        this.r = this.g = this.b = l;\n      } else {\n        var p = l <= 0.5 ? l * (1 + s) : l + s - l * s;\n        var q = 2 * l - p;\n        this.r = hue2rgb(q, p, h + 1 / 3);\n        this.g = hue2rgb(q, p, h);\n        this.b = hue2rgb(q, p, h - 1 / 3);\n      }\n\n      return this;\n    };\n  }(),\n  setStyle: function (style) {\n    function handleAlpha(string) {\n      if (string === undefined) return;\n    }\n\n    var m;\n\n    if (m = /^((?:rgb|hsl)a?)\\(\\s*([^\\)]*)\\)/.exec(style)) {\n      // rgb / hsl\n      var color;\n      var name = m[1];\n      var components = m[2];\n\n      switch (name) {\n        case 'rgb':\n        case 'rgba':\n          if (color = /^(\\d+)\\s*,\\s*(\\d+)\\s*,\\s*(\\d+)\\s*(,\\s*([0-9]*\\.?[0-9]+)\\s*)?$/.exec(components)) {\n            // rgb(255,0,0) rgba(255,0,0,0.5)\n            this.r = Math.min(255, parseInt(color[1], 10)) / 255;\n            this.g = Math.min(255, parseInt(color[2], 10)) / 255;\n            this.b = Math.min(255, parseInt(color[3], 10)) / 255;\n            handleAlpha(color[5]);\n            return this;\n          }\n\n          if (color = /^(\\d+)\\%\\s*,\\s*(\\d+)\\%\\s*,\\s*(\\d+)\\%\\s*(,\\s*([0-9]*\\.?[0-9]+)\\s*)?$/.exec(components)) {\n            // rgb(100%,0%,0%) rgba(100%,0%,0%,0.5)\n            this.r = Math.min(100, parseInt(color[1], 10)) / 100;\n            this.g = Math.min(100, parseInt(color[2], 10)) / 100;\n            this.b = Math.min(100, parseInt(color[3], 10)) / 100;\n            handleAlpha(color[5]);\n            return this;\n          }\n\n          break;\n\n        case 'hsl':\n        case 'hsla':\n          if (color = /^([0-9]*\\.?[0-9]+)\\s*,\\s*(\\d+)\\%\\s*,\\s*(\\d+)\\%\\s*(,\\s*([0-9]*\\.?[0-9]+)\\s*)?$/.exec(components)) {\n            // hsl(120,50%,50%) hsla(120,50%,50%,0.5)\n            var h = parseFloat(color[1]) / 360;\n            var s = parseInt(color[2], 10) / 100;\n            var l = parseInt(color[3], 10) / 100;\n            handleAlpha(color[5]);\n            return this.setHSL(h, s, l);\n          }\n\n          break;\n      }\n    } else if (m = /^\\#([A-Fa-f0-9]+)$/.exec(style)) {\n      // hex color\n      var hex = m[1];\n      var size = hex.length;\n\n      if (size === 3) {\n        // #ff0\n        this.r = parseInt(hex.charAt(0) + hex.charAt(0), 16) / 255;\n        this.g = parseInt(hex.charAt(1) + hex.charAt(1), 16) / 255;\n        this.b = parseInt(hex.charAt(2) + hex.charAt(2), 16) / 255;\n        return this;\n      } else if (size === 6) {\n        // #ff0000\n        this.r = parseInt(hex.charAt(0) + hex.charAt(1), 16) / 255;\n        this.g = parseInt(hex.charAt(2) + hex.charAt(3), 16) / 255;\n        this.b = parseInt(hex.charAt(4) + hex.charAt(5), 16) / 255;\n        return this;\n      }\n    }\n\n    if (style && style.length > 0) {\n      // color keywords\n      var hex = THREE.ColorKeywords[style];\n\n      if (hex !== undefined) {\n        // red\n        this.setHex(hex);\n      }\n    }\n\n    return this;\n  },\n  clone: function () {\n    return new this.constructor(this.r, this.g, this.b);\n  },\n  copy: function (color) {\n    this.r = color.r;\n    this.g = color.g;\n    this.b = color.b;\n    return this;\n  },\n  copyGammaToLinear: function (color, gammaFactor) {\n    if (gammaFactor === undefined) gammaFactor = 2.0;\n    this.r = Math.pow(color.r, gammaFactor);\n    this.g = Math.pow(color.g, gammaFactor);\n    this.b = Math.pow(color.b, gammaFactor);\n    return this;\n  },\n  copyLinearToGamma: function (color, gammaFactor) {\n    if (gammaFactor === undefined) gammaFactor = 2.0;\n    var safeInverse = gammaFactor > 0 ? 1.0 / gammaFactor : 1.0;\n    this.r = Math.pow(color.r, safeInverse);\n    this.g = Math.pow(color.g, safeInverse);\n    this.b = Math.pow(color.b, safeInverse);\n    return this;\n  },\n  convertGammaToLinear: function () {\n    var r = this.r,\n        g = this.g,\n        b = this.b;\n    this.r = r * r;\n    this.g = g * g;\n    this.b = b * b;\n    return this;\n  },\n  convertLinearToGamma: function () {\n    this.r = Math.sqrt(this.r);\n    this.g = Math.sqrt(this.g);\n    this.b = Math.sqrt(this.b);\n    return this;\n  },\n  getHex: function () {\n    return this.r * 255 << 16 ^ this.g * 255 << 8 ^ this.b * 255 << 0;\n  },\n  getHexString: function () {\n    return ('000000' + this.getHex().toString(16)).slice(-6);\n  },\n  getHSL: function (optionalTarget) {\n    // h,s,l ranges are in 0.0 - 1.0\n    var hsl = optionalTarget || {\n      h: 0,\n      s: 0,\n      l: 0\n    };\n    var r = this.r,\n        g = this.g,\n        b = this.b;\n    var max = Math.max(r, g, b);\n    var min = Math.min(r, g, b);\n    var hue, saturation;\n    var lightness = (min + max) / 2.0;\n\n    if (min === max) {\n      hue = 0;\n      saturation = 0;\n    } else {\n      var delta = max - min;\n      saturation = lightness <= 0.5 ? delta / (max + min) : delta / (2 - max - min);\n\n      switch (max) {\n        case r:\n          hue = (g - b) / delta + (g < b ? 6 : 0);\n          break;\n\n        case g:\n          hue = (b - r) / delta + 2;\n          break;\n\n        case b:\n          hue = (r - g) / delta + 4;\n          break;\n      }\n\n      hue /= 6;\n    }\n\n    hsl.h = hue;\n    hsl.s = saturation;\n    hsl.l = lightness;\n    return hsl;\n  },\n  getStyle: function () {\n    return 'rgb(' + (this.r * 255 | 0) + ',' + (this.g * 255 | 0) + ',' + (this.b * 255 | 0) + ')';\n  },\n  offsetHSL: function (h, s, l) {\n    var hsl = this.getHSL();\n    hsl.h += h;\n    hsl.s += s;\n    hsl.l += l;\n    this.setHSL(hsl.h, hsl.s, hsl.l);\n    return this;\n  },\n  add: function (color) {\n    this.r += color.r;\n    this.g += color.g;\n    this.b += color.b;\n    return this;\n  },\n  addColors: function (color1, color2) {\n    this.r = color1.r + color2.r;\n    this.g = color1.g + color2.g;\n    this.b = color1.b + color2.b;\n    return this;\n  },\n  addScalar: function (s) {\n    this.r += s;\n    this.g += s;\n    this.b += s;\n    return this;\n  },\n  multiply: function (color) {\n    this.r *= color.r;\n    this.g *= color.g;\n    this.b *= color.b;\n    return this;\n  },\n  multiplyScalar: function (s) {\n    this.r *= s;\n    this.g *= s;\n    this.b *= s;\n    return this;\n  },\n  lerp: function (color, alpha) {\n    this.r += (color.r - this.r) * alpha;\n    this.g += (color.g - this.g) * alpha;\n    this.b += (color.b - this.b) * alpha;\n    return this;\n  },\n  equals: function (c) {\n    return c.r === this.r && c.g === this.g && c.b === this.b;\n  },\n  fromArray: function (array, offset) {\n    if (offset === undefined) offset = 0;\n    this.r = array[offset];\n    this.g = array[offset + 1];\n    this.b = array[offset + 2];\n    return this;\n  },\n  toArray: function (array, offset) {\n    if (array === undefined) array = [];\n    if (offset === undefined) offset = 0;\n    array[offset] = this.r;\n    array[offset + 1] = this.g;\n    array[offset + 2] = this.b;\n    return array;\n  }\n};\nTHREE.ColorKeywords = {\n  'aliceblue': 0xF0F8FF,\n  'antiquewhite': 0xFAEBD7,\n  'aqua': 0x00FFFF,\n  'aquamarine': 0x7FFFD4,\n  'azure': 0xF0FFFF,\n  'beige': 0xF5F5DC,\n  'bisque': 0xFFE4C4,\n  'black': 0x000000,\n  'blanchedalmond': 0xFFEBCD,\n  'blue': 0x0000FF,\n  'blueviolet': 0x8A2BE2,\n  'brown': 0xA52A2A,\n  'burlywood': 0xDEB887,\n  'cadetblue': 0x5F9EA0,\n  'chartreuse': 0x7FFF00,\n  'chocolate': 0xD2691E,\n  'coral': 0xFF7F50,\n  'cornflowerblue': 0x6495ED,\n  'cornsilk': 0xFFF8DC,\n  'crimson': 0xDC143C,\n  'cyan': 0x00FFFF,\n  'darkblue': 0x00008B,\n  'darkcyan': 0x008B8B,\n  'darkgoldenrod': 0xB8860B,\n  'darkgray': 0xA9A9A9,\n  'darkgreen': 0x006400,\n  'darkgrey': 0xA9A9A9,\n  'darkkhaki': 0xBDB76B,\n  'darkmagenta': 0x8B008B,\n  'darkolivegreen': 0x556B2F,\n  'darkorange': 0xFF8C00,\n  'darkorchid': 0x9932CC,\n  'darkred': 0x8B0000,\n  'darksalmon': 0xE9967A,\n  'darkseagreen': 0x8FBC8F,\n  'darkslateblue': 0x483D8B,\n  'darkslategray': 0x2F4F4F,\n  'darkslategrey': 0x2F4F4F,\n  'darkturquoise': 0x00CED1,\n  'darkviolet': 0x9400D3,\n  'deeppink': 0xFF1493,\n  'deepskyblue': 0x00BFFF,\n  'dimgray': 0x696969,\n  'dimgrey': 0x696969,\n  'dodgerblue': 0x1E90FF,\n  'firebrick': 0xB22222,\n  'floralwhite': 0xFFFAF0,\n  'forestgreen': 0x228B22,\n  'fuchsia': 0xFF00FF,\n  'gainsboro': 0xDCDCDC,\n  'ghostwhite': 0xF8F8FF,\n  'gold': 0xFFD700,\n  'goldenrod': 0xDAA520,\n  'gray': 0x808080,\n  'green': 0x008000,\n  'greenyellow': 0xADFF2F,\n  'grey': 0x808080,\n  'honeydew': 0xF0FFF0,\n  'hotpink': 0xFF69B4,\n  'indianred': 0xCD5C5C,\n  'indigo': 0x4B0082,\n  'ivory': 0xFFFFF0,\n  'khaki': 0xF0E68C,\n  'lavender': 0xE6E6FA,\n  'lavenderblush': 0xFFF0F5,\n  'lawngreen': 0x7CFC00,\n  'lemonchiffon': 0xFFFACD,\n  'lightblue': 0xADD8E6,\n  'lightcoral': 0xF08080,\n  'lightcyan': 0xE0FFFF,\n  'lightgoldenrodyellow': 0xFAFAD2,\n  'lightgray': 0xD3D3D3,\n  'lightgreen': 0x90EE90,\n  'lightgrey': 0xD3D3D3,\n  'lightpink': 0xFFB6C1,\n  'lightsalmon': 0xFFA07A,\n  'lightseagreen': 0x20B2AA,\n  'lightskyblue': 0x87CEFA,\n  'lightslategray': 0x778899,\n  'lightslategrey': 0x778899,\n  'lightsteelblue': 0xB0C4DE,\n  'lightyellow': 0xFFFFE0,\n  'lime': 0x00FF00,\n  'limegreen': 0x32CD32,\n  'linen': 0xFAF0E6,\n  'magenta': 0xFF00FF,\n  'maroon': 0x800000,\n  'mediumaquamarine': 0x66CDAA,\n  'mediumblue': 0x0000CD,\n  'mediumorchid': 0xBA55D3,\n  'mediumpurple': 0x9370DB,\n  'mediumseagreen': 0x3CB371,\n  'mediumslateblue': 0x7B68EE,\n  'mediumspringgreen': 0x00FA9A,\n  'mediumturquoise': 0x48D1CC,\n  'mediumvioletred': 0xC71585,\n  'midnightblue': 0x191970,\n  'mintcream': 0xF5FFFA,\n  'mistyrose': 0xFFE4E1,\n  'moccasin': 0xFFE4B5,\n  'navajowhite': 0xFFDEAD,\n  'navy': 0x000080,\n  'oldlace': 0xFDF5E6,\n  'olive': 0x808000,\n  'olivedrab': 0x6B8E23,\n  'orange': 0xFFA500,\n  'orangered': 0xFF4500,\n  'orchid': 0xDA70D6,\n  'palegoldenrod': 0xEEE8AA,\n  'palegreen': 0x98FB98,\n  'paleturquoise': 0xAFEEEE,\n  'palevioletred': 0xDB7093,\n  'papayawhip': 0xFFEFD5,\n  'peachpuff': 0xFFDAB9,\n  'peru': 0xCD853F,\n  'pink': 0xFFC0CB,\n  'plum': 0xDDA0DD,\n  'powderblue': 0xB0E0E6,\n  'purple': 0x800080,\n  'red': 0xFF0000,\n  'rosybrown': 0xBC8F8F,\n  'royalblue': 0x4169E1,\n  'saddlebrown': 0x8B4513,\n  'salmon': 0xFA8072,\n  'sandybrown': 0xF4A460,\n  'seagreen': 0x2E8B57,\n  'seashell': 0xFFF5EE,\n  'sienna': 0xA0522D,\n  'silver': 0xC0C0C0,\n  'skyblue': 0x87CEEB,\n  'slateblue': 0x6A5ACD,\n  'slategray': 0x708090,\n  'slategrey': 0x708090,\n  'snow': 0xFFFAFA,\n  'springgreen': 0x00FF7F,\n  'steelblue': 0x4682B4,\n  'tan': 0xD2B48C,\n  'teal': 0x008080,\n  'thistle': 0xD8BFD8,\n  'tomato': 0xFF6347,\n  'turquoise': 0x40E0D0,\n  'violet': 0xEE82EE,\n  'wheat': 0xF5DEB3,\n  'white': 0xFFFFFF,\n  'whitesmoke': 0xF5F5F5,\n  'yellow': 0xFFFF00,\n  'yellowgreen': 0x9ACD32\n}; // File:src/math/Vector2.js\n\n/**\n * @author mrdoob / http://mrdoob.com/\n * @author philogb / http://blog.thejit.org/\n * @author egraether / http://egraether.com/\n * @author zz85 / http://www.lab4games.net/zz85/blog\n */\n\nTHREE.Vector2 = function (x, y) {\n  this.x = x || 0;\n  this.y = y || 0;\n};\n\nTHREE.Vector2.prototype = {\n  constructor: THREE.Vector2,\n\n  get width() {\n    return this.x;\n  },\n\n  set width(value) {\n    this.x = value;\n  },\n\n  get height() {\n    return this.y;\n  },\n\n  set height(value) {\n    this.y = value;\n  },\n\n  //\n  set: function (x, y) {\n    this.x = x;\n    this.y = y;\n    return this;\n  },\n  setScalar: function (scalar) {\n    this.x = scalar;\n    this.y = scalar;\n    return this;\n  },\n  setX: function (x) {\n    this.x = x;\n    return this;\n  },\n  setY: function (y) {\n    this.y = y;\n    return this;\n  },\n  setComponent: function (index, value) {\n    switch (index) {\n      case 0:\n        this.x = value;\n        break;\n\n      case 1:\n        this.y = value;\n        break;\n\n      default:\n        throw new Error('index is out of range: ' + index);\n    }\n  },\n  getComponent: function (index) {\n    switch (index) {\n      case 0:\n        return this.x;\n\n      case 1:\n        return this.y;\n\n      default:\n        throw new Error('index is out of range: ' + index);\n    }\n  },\n  clone: function () {\n    return new this.constructor(this.x, this.y);\n  },\n  copy: function (v) {\n    this.x = v.x;\n    this.y = v.y;\n    return this;\n  },\n  add: function (v, w) {\n    if (w !== undefined) {\n      return this.addVectors(v, w);\n    }\n\n    this.x += v.x;\n    this.y += v.y;\n    return this;\n  },\n  addScalar: function (s) {\n    this.x += s;\n    this.y += s;\n    return this;\n  },\n  addVectors: function (a, b) {\n    this.x = a.x + b.x;\n    this.y = a.y + b.y;\n    return this;\n  },\n  addScaledVector: function (v, s) {\n    this.x += v.x * s;\n    this.y += v.y * s;\n    return this;\n  },\n  sub: function (v, w) {\n    if (w !== undefined) {\n      return this.subVectors(v, w);\n    }\n\n    this.x -= v.x;\n    this.y -= v.y;\n    return this;\n  },\n  subScalar: function (s) {\n    this.x -= s;\n    this.y -= s;\n    return this;\n  },\n  subVectors: function (a, b) {\n    this.x = a.x - b.x;\n    this.y = a.y - b.y;\n    return this;\n  },\n  multiply: function (v) {\n    this.x *= v.x;\n    this.y *= v.y;\n    return this;\n  },\n  multiplyScalar: function (scalar) {\n    if (isFinite(scalar)) {\n      this.x *= scalar;\n      this.y *= scalar;\n    } else {\n      this.x = 0;\n      this.y = 0;\n    }\n\n    return this;\n  },\n  divide: function (v) {\n    this.x /= v.x;\n    this.y /= v.y;\n    return this;\n  },\n  divideScalar: function (scalar) {\n    return this.multiplyScalar(1 / scalar);\n  },\n  min: function (v) {\n    this.x = Math.min(this.x, v.x);\n    this.y = Math.min(this.y, v.y);\n    return this;\n  },\n  max: function (v) {\n    this.x = Math.max(this.x, v.x);\n    this.y = Math.max(this.y, v.y);\n    return this;\n  },\n  clamp: function (min, max) {\n    // This function assumes min < max, if this assumption isn't true it will not operate correctly\n    this.x = Math.max(min.x, Math.min(max.x, this.x));\n    this.y = Math.max(min.y, Math.min(max.y, this.y));\n    return this;\n  },\n  clampScalar: function () {\n    var min, max;\n    return function clampScalar(minVal, maxVal) {\n      if (min === undefined) {\n        min = new THREE.Vector2();\n        max = new THREE.Vector2();\n      }\n\n      min.set(minVal, minVal);\n      max.set(maxVal, maxVal);\n      return this.clamp(min, max);\n    };\n  }(),\n  clampLength: function (min, max) {\n    var length = this.length();\n    this.multiplyScalar(Math.max(min, Math.min(max, length)) / length);\n    return this;\n  },\n  floor: function () {\n    this.x = Math.floor(this.x);\n    this.y = Math.floor(this.y);\n    return this;\n  },\n  ceil: function () {\n    this.x = Math.ceil(this.x);\n    this.y = Math.ceil(this.y);\n    return this;\n  },\n  round: function () {\n    this.x = Math.round(this.x);\n    this.y = Math.round(this.y);\n    return this;\n  },\n  roundToZero: function () {\n    this.x = this.x < 0 ? Math.ceil(this.x) : Math.floor(this.x);\n    this.y = this.y < 0 ? Math.ceil(this.y) : Math.floor(this.y);\n    return this;\n  },\n  negate: function () {\n    this.x = -this.x;\n    this.y = -this.y;\n    return this;\n  },\n  dot: function (v) {\n    return this.x * v.x + this.y * v.y;\n  },\n  lengthSq: function () {\n    return this.x * this.x + this.y * this.y;\n  },\n  length: function () {\n    return Math.sqrt(this.x * this.x + this.y * this.y);\n  },\n  lengthManhattan: function () {\n    return Math.abs(this.x) + Math.abs(this.y);\n  },\n  normalize: function () {\n    return this.divideScalar(this.length());\n  },\n  angle: function () {\n    // computes the angle in radians with respect to the positive x-axis\n    var angle = Math.atan2(this.y, this.x);\n    if (angle < 0) angle += 2 * Math.PI;\n    return angle;\n  },\n  distanceTo: function (v) {\n    return Math.sqrt(this.distanceToSquared(v));\n  },\n  distanceToSquared: function (v) {\n    var dx = this.x - v.x,\n        dy = this.y - v.y;\n    return dx * dx + dy * dy;\n  },\n  setLength: function (length) {\n    return this.multiplyScalar(length / this.length());\n  },\n  lerp: function (v, alpha) {\n    this.x += (v.x - this.x) * alpha;\n    this.y += (v.y - this.y) * alpha;\n    return this;\n  },\n  lerpVectors: function (v1, v2, alpha) {\n    this.subVectors(v2, v1).multiplyScalar(alpha).add(v1);\n    return this;\n  },\n  equals: function (v) {\n    return v.x === this.x && v.y === this.y;\n  },\n  fromArray: function (array, offset) {\n    if (offset === undefined) offset = 0;\n    this.x = array[offset];\n    this.y = array[offset + 1];\n    return this;\n  },\n  toArray: function (array, offset) {\n    if (array === undefined) array = [];\n    if (offset === undefined) offset = 0;\n    array[offset] = this.x;\n    array[offset + 1] = this.y;\n    return array;\n  },\n  fromAttribute: function (attribute, index, offset) {\n    if (offset === undefined) offset = 0;\n    index = index * attribute.itemSize + offset;\n    this.x = attribute.array[index];\n    this.y = attribute.array[index + 1];\n    return this;\n  },\n  rotateAround: function (center, angle) {\n    var c = Math.cos(angle),\n        s = Math.sin(angle);\n    var x = this.x - center.x;\n    var y = this.y - center.y;\n    this.x = x * c - y * s + center.x;\n    this.y = x * s + y * c + center.y;\n    return this;\n  }\n}; // File:src/math/Vector3.js\n\n/**\n * @author mrdoob / http://mrdoob.com/\n * @author *kile / http://kile.stravaganza.org/\n * @author philogb / http://blog.thejit.org/\n * @author mikael emtinger / http://gomo.se/\n * @author egraether / http://egraether.com/\n * @author WestLangley / http://github.com/WestLangley\n */\n\nTHREE.Vector3 = function (x, y, z) {\n  this.x = x || 0;\n  this.y = y || 0;\n  this.z = z || 0;\n};\n\nTHREE.Vector3.prototype = {\n  constructor: THREE.Vector3,\n  set: function (x, y, z) {\n    this.x = x;\n    this.y = y;\n    this.z = z;\n    return this;\n  },\n  setScalar: function (scalar) {\n    this.x = scalar;\n    this.y = scalar;\n    this.z = scalar;\n    return this;\n  },\n  setX: function (x) {\n    this.x = x;\n    return this;\n  },\n  setY: function (y) {\n    this.y = y;\n    return this;\n  },\n  setZ: function (z) {\n    this.z = z;\n    return this;\n  },\n  setComponent: function (index, value) {\n    switch (index) {\n      case 0:\n        this.x = value;\n        break;\n\n      case 1:\n        this.y = value;\n        break;\n\n      case 2:\n        this.z = value;\n        break;\n\n      default:\n        throw new Error('index is out of range: ' + index);\n    }\n  },\n  getComponent: function (index) {\n    switch (index) {\n      case 0:\n        return this.x;\n\n      case 1:\n        return this.y;\n\n      case 2:\n        return this.z;\n\n      default:\n        throw new Error('index is out of range: ' + index);\n    }\n  },\n  clone: function () {\n    return new this.constructor(this.x, this.y, this.z);\n  },\n  copy: function (v) {\n    this.x = v.x;\n    this.y = v.y;\n    this.z = v.z;\n    return this;\n  },\n  add: function (v, w) {\n    if (w !== undefined) {\n      return this.addVectors(v, w);\n    }\n\n    this.x += v.x;\n    this.y += v.y;\n    this.z += v.z;\n    return this;\n  },\n  addScalar: function (s) {\n    this.x += s;\n    this.y += s;\n    this.z += s;\n    return this;\n  },\n  addVectors: function (a, b) {\n    this.x = a.x + b.x;\n    this.y = a.y + b.y;\n    this.z = a.z + b.z;\n    return this;\n  },\n  addScaledVector: function (v, s) {\n    this.x += v.x * s;\n    this.y += v.y * s;\n    this.z += v.z * s;\n    return this;\n  },\n  sub: function (v, w) {\n    if (w !== undefined) {\n      return this.subVectors(v, w);\n    }\n\n    this.x -= v.x;\n    this.y -= v.y;\n    this.z -= v.z;\n    return this;\n  },\n  subScalar: function (s) {\n    this.x -= s;\n    this.y -= s;\n    this.z -= s;\n    return this;\n  },\n  subVectors: function (a, b) {\n    this.x = a.x - b.x;\n    this.y = a.y - b.y;\n    this.z = a.z - b.z;\n    return this;\n  },\n  multiply: function (v, w) {\n    if (w !== undefined) {\n      return this.multiplyVectors(v, w);\n    }\n\n    this.x *= v.x;\n    this.y *= v.y;\n    this.z *= v.z;\n    return this;\n  },\n  multiplyScalar: function (scalar) {\n    if (isFinite(scalar)) {\n      this.x *= scalar;\n      this.y *= scalar;\n      this.z *= scalar;\n    } else {\n      this.x = 0;\n      this.y = 0;\n      this.z = 0;\n    }\n\n    return this;\n  },\n  multiplyVectors: function (a, b) {\n    this.x = a.x * b.x;\n    this.y = a.y * b.y;\n    this.z = a.z * b.z;\n    return this;\n  },\n  applyEuler: function () {\n    var quaternion;\n    return function applyEuler(euler) {\n      if (quaternion === undefined) quaternion = new THREE.Quaternion();\n      this.applyQuaternion(quaternion.setFromEuler(euler));\n      return this;\n    };\n  }(),\n  applyAxisAngle: function () {\n    var quaternion;\n    return function applyAxisAngle(axis, angle) {\n      if (quaternion === undefined) quaternion = new THREE.Quaternion();\n      this.applyQuaternion(quaternion.setFromAxisAngle(axis, angle));\n      return this;\n    };\n  }(),\n  applyMatrix3: function (m) {\n    var x = this.x;\n    var y = this.y;\n    var z = this.z;\n    var e = m.elements;\n    this.x = e[0] * x + e[3] * y + e[6] * z;\n    this.y = e[1] * x + e[4] * y + e[7] * z;\n    this.z = e[2] * x + e[5] * y + e[8] * z;\n    return this;\n  },\n  applyMatrix4: function (m) {\n    // input: THREE.Matrix4 affine matrix\n    var x = this.x,\n        y = this.y,\n        z = this.z;\n    var e = m.elements;\n    this.x = e[0] * x + e[4] * y + e[8] * z + e[12];\n    this.y = e[1] * x + e[5] * y + e[9] * z + e[13];\n    this.z = e[2] * x + e[6] * y + e[10] * z + e[14];\n    return this;\n  },\n  applyProjection: function (m) {\n    // input: THREE.Matrix4 projection matrix\n    var x = this.x,\n        y = this.y,\n        z = this.z;\n    var e = m.elements;\n    var d = 1 / (e[3] * x + e[7] * y + e[11] * z + e[15]); // perspective divide\n\n    this.x = (e[0] * x + e[4] * y + e[8] * z + e[12]) * d;\n    this.y = (e[1] * x + e[5] * y + e[9] * z + e[13]) * d;\n    this.z = (e[2] * x + e[6] * y + e[10] * z + e[14]) * d;\n    return this;\n  },\n  applyQuaternion: function (q) {\n    var x = this.x;\n    var y = this.y;\n    var z = this.z;\n    var qx = q.x;\n    var qy = q.y;\n    var qz = q.z;\n    var qw = q.w; // calculate quat * vector\n\n    var ix = qw * x + qy * z - qz * y;\n    var iy = qw * y + qz * x - qx * z;\n    var iz = qw * z + qx * y - qy * x;\n    var iw = -qx * x - qy * y - qz * z; // calculate result * inverse quat\n\n    this.x = ix * qw + iw * -qx + iy * -qz - iz * -qy;\n    this.y = iy * qw + iw * -qy + iz * -qx - ix * -qz;\n    this.z = iz * qw + iw * -qz + ix * -qy - iy * -qx;\n    return this;\n  },\n  project: function () {\n    var matrix;\n    return function project(camera) {\n      if (matrix === undefined) matrix = new THREE.Matrix4();\n      matrix.multiplyMatrices(camera.projectionMatrix, matrix.getInverse(camera.matrixWorld));\n      return this.applyProjection(matrix);\n    };\n  }(),\n  unproject: function () {\n    var matrix;\n    return function unproject(camera) {\n      if (matrix === undefined) matrix = new THREE.Matrix4();\n      matrix.multiplyMatrices(camera.matrixWorld, matrix.getInverse(camera.projectionMatrix));\n      return this.applyProjection(matrix);\n    };\n  }(),\n  transformDirection: function (m) {\n    // input: THREE.Matrix4 affine matrix\n    // vector interpreted as a direction\n    var x = this.x,\n        y = this.y,\n        z = this.z;\n    var e = m.elements;\n    this.x = e[0] * x + e[4] * y + e[8] * z;\n    this.y = e[1] * x + e[5] * y + e[9] * z;\n    this.z = e[2] * x + e[6] * y + e[10] * z;\n    this.normalize();\n    return this;\n  },\n  divide: function (v) {\n    this.x /= v.x;\n    this.y /= v.y;\n    this.z /= v.z;\n    return this;\n  },\n  divideScalar: function (scalar) {\n    return this.multiplyScalar(1 / scalar);\n  },\n  min: function (v) {\n    this.x = Math.min(this.x, v.x);\n    this.y = Math.min(this.y, v.y);\n    this.z = Math.min(this.z, v.z);\n    return this;\n  },\n  max: function (v) {\n    this.x = Math.max(this.x, v.x);\n    this.y = Math.max(this.y, v.y);\n    this.z = Math.max(this.z, v.z);\n    return this;\n  },\n  clamp: function (min, max) {\n    // This function assumes min < max, if this assumption isn't true it will not operate correctly\n    this.x = Math.max(min.x, Math.min(max.x, this.x));\n    this.y = Math.max(min.y, Math.min(max.y, this.y));\n    this.z = Math.max(min.z, Math.min(max.z, this.z));\n    return this;\n  },\n  clampScalar: function () {\n    var min, max;\n    return function clampScalar(minVal, maxVal) {\n      if (min === undefined) {\n        min = new THREE.Vector3();\n        max = new THREE.Vector3();\n      }\n\n      min.set(minVal, minVal, minVal);\n      max.set(maxVal, maxVal, maxVal);\n      return this.clamp(min, max);\n    };\n  }(),\n  clampLength: function (min, max) {\n    var length = this.length();\n    this.multiplyScalar(Math.max(min, Math.min(max, length)) / length);\n    return this;\n  },\n  floor: function () {\n    this.x = Math.floor(this.x);\n    this.y = Math.floor(this.y);\n    this.z = Math.floor(this.z);\n    return this;\n  },\n  ceil: function () {\n    this.x = Math.ceil(this.x);\n    this.y = Math.ceil(this.y);\n    this.z = Math.ceil(this.z);\n    return this;\n  },\n  round: function () {\n    this.x = Math.round(this.x);\n    this.y = Math.round(this.y);\n    this.z = Math.round(this.z);\n    return this;\n  },\n  roundToZero: function () {\n    this.x = this.x < 0 ? Math.ceil(this.x) : Math.floor(this.x);\n    this.y = this.y < 0 ? Math.ceil(this.y) : Math.floor(this.y);\n    this.z = this.z < 0 ? Math.ceil(this.z) : Math.floor(this.z);\n    return this;\n  },\n  negate: function () {\n    this.x = -this.x;\n    this.y = -this.y;\n    this.z = -this.z;\n    return this;\n  },\n  dot: function (v) {\n    return this.x * v.x + this.y * v.y + this.z * v.z;\n  },\n  lengthSq: function () {\n    return this.x * this.x + this.y * this.y + this.z * this.z;\n  },\n  length: function () {\n    return Math.sqrt(this.x * this.x + this.y * this.y + this.z * this.z);\n  },\n  lengthManhattan: function () {\n    return Math.abs(this.x) + Math.abs(this.y) + Math.abs(this.z);\n  },\n  normalize: function () {\n    return this.divideScalar(this.length());\n  },\n  setLength: function (length) {\n    return this.multiplyScalar(length / this.length());\n  },\n  lerp: function (v, alpha) {\n    this.x += (v.x - this.x) * alpha;\n    this.y += (v.y - this.y) * alpha;\n    this.z += (v.z - this.z) * alpha;\n    return this;\n  },\n  lerpVectors: function (v1, v2, alpha) {\n    this.subVectors(v2, v1).multiplyScalar(alpha).add(v1);\n    return this;\n  },\n  cross: function (v, w) {\n    if (w !== undefined) {\n      return this.crossVectors(v, w);\n    }\n\n    var x = this.x,\n        y = this.y,\n        z = this.z;\n    this.x = y * v.z - z * v.y;\n    this.y = z * v.x - x * v.z;\n    this.z = x * v.y - y * v.x;\n    return this;\n  },\n  crossVectors: function (a, b) {\n    var ax = a.x,\n        ay = a.y,\n        az = a.z;\n    var bx = b.x,\n        by = b.y,\n        bz = b.z;\n    this.x = ay * bz - az * by;\n    this.y = az * bx - ax * bz;\n    this.z = ax * by - ay * bx;\n    return this;\n  },\n  projectOnVector: function () {\n    var v1, dot;\n    return function projectOnVector(vector) {\n      if (v1 === undefined) v1 = new THREE.Vector3();\n      v1.copy(vector).normalize();\n      dot = this.dot(v1);\n      return this.copy(v1).multiplyScalar(dot);\n    };\n  }(),\n  projectOnPlane: function () {\n    var v1;\n    return function projectOnPlane(planeNormal) {\n      if (v1 === undefined) v1 = new THREE.Vector3();\n      v1.copy(this).projectOnVector(planeNormal);\n      return this.sub(v1);\n    };\n  }(),\n  reflect: function () {\n    // reflect incident vector off plane orthogonal to normal\n    // normal is assumed to have unit length\n    var v1;\n    return function reflect(normal) {\n      if (v1 === undefined) v1 = new THREE.Vector3();\n      return this.sub(v1.copy(normal).multiplyScalar(2 * this.dot(normal)));\n    };\n  }(),\n  angleTo: function (v) {\n    var theta = this.dot(v) / Math.sqrt(this.lengthSq() * v.lengthSq()); // clamp, to handle numerical problems\n\n    return Math.acos(THREE.Math.clamp(theta, -1, 1));\n  },\n  distanceTo: function (v) {\n    return Math.sqrt(this.distanceToSquared(v));\n  },\n  distanceToSquared: function (v) {\n    var dx = this.x - v.x;\n    var dy = this.y - v.y;\n    var dz = this.z - v.z;\n    return dx * dx + dy * dy + dz * dz;\n  },\n  setFromSpherical: function (s) {\n    var sinPhiRadius = Math.sin(s.phi) * s.radius;\n    this.x = sinPhiRadius * Math.sin(s.theta);\n    this.y = Math.cos(s.phi) * s.radius;\n    this.z = sinPhiRadius * Math.cos(s.theta);\n    return this;\n  },\n  setFromMatrixPosition: function (m) {\n    return this.setFromMatrixColumn(m, 3);\n  },\n  setFromMatrixScale: function (m) {\n    var sx = this.setFromMatrixColumn(m, 0).length();\n    var sy = this.setFromMatrixColumn(m, 1).length();\n    var sz = this.setFromMatrixColumn(m, 2).length();\n    this.x = sx;\n    this.y = sy;\n    this.z = sz;\n    return this;\n  },\n  setFromMatrixColumn: function (m, index) {\n    if (typeof m === 'number') {\n      m = arguments[1];\n      index = arguments[0];\n    }\n\n    return this.fromArray(m.elements, index * 4);\n  },\n  equals: function (v) {\n    return v.x === this.x && v.y === this.y && v.z === this.z;\n  },\n  fromArray: function (array, offset) {\n    if (offset === undefined) offset = 0;\n    this.x = array[offset];\n    this.y = array[offset + 1];\n    this.z = array[offset + 2];\n    return this;\n  },\n  toArray: function (array, offset) {\n    if (array === undefined) array = [];\n    if (offset === undefined) offset = 0;\n    array[offset] = this.x;\n    array[offset + 1] = this.y;\n    array[offset + 2] = this.z;\n    return array;\n  },\n  fromAttribute: function (attribute, index, offset) {\n    if (offset === undefined) offset = 0;\n    index = index * attribute.itemSize + offset;\n    this.x = attribute.array[index];\n    this.y = attribute.array[index + 1];\n    this.z = attribute.array[index + 2];\n    return this;\n  }\n}; // File:src/math/Vector4.js\n\n/**\n * @author supereggbert / http://www.paulbrunt.co.uk/\n * @author philogb / http://blog.thejit.org/\n * @author mikael emtinger / http://gomo.se/\n * @author egraether / http://egraether.com/\n * @author WestLangley / http://github.com/WestLangley\n */\n\nTHREE.Vector4 = function (x, y, z, w) {\n  this.x = x || 0;\n  this.y = y || 0;\n  this.z = z || 0;\n  this.w = w !== undefined ? w : 1;\n};\n\nTHREE.Vector4.prototype = {\n  constructor: THREE.Vector4,\n  set: function (x, y, z, w) {\n    this.x = x;\n    this.y = y;\n    this.z = z;\n    this.w = w;\n    return this;\n  },\n  setScalar: function (scalar) {\n    this.x = scalar;\n    this.y = scalar;\n    this.z = scalar;\n    this.w = scalar;\n    return this;\n  },\n  setX: function (x) {\n    this.x = x;\n    return this;\n  },\n  setY: function (y) {\n    this.y = y;\n    return this;\n  },\n  setZ: function (z) {\n    this.z = z;\n    return this;\n  },\n  setW: function (w) {\n    this.w = w;\n    return this;\n  },\n  setComponent: function (index, value) {\n    switch (index) {\n      case 0:\n        this.x = value;\n        break;\n\n      case 1:\n        this.y = value;\n        break;\n\n      case 2:\n        this.z = value;\n        break;\n\n      case 3:\n        this.w = value;\n        break;\n\n      default:\n        throw new Error('index is out of range: ' + index);\n    }\n  },\n  getComponent: function (index) {\n    switch (index) {\n      case 0:\n        return this.x;\n\n      case 1:\n        return this.y;\n\n      case 2:\n        return this.z;\n\n      case 3:\n        return this.w;\n\n      default:\n        throw new Error('index is out of range: ' + index);\n    }\n  },\n  clone: function () {\n    return new this.constructor(this.x, this.y, this.z, this.w);\n  },\n  copy: function (v) {\n    this.x = v.x;\n    this.y = v.y;\n    this.z = v.z;\n    this.w = v.w !== undefined ? v.w : 1;\n    return this;\n  },\n  add: function (v, w) {\n    if (w !== undefined) {\n      return this.addVectors(v, w);\n    }\n\n    this.x += v.x;\n    this.y += v.y;\n    this.z += v.z;\n    this.w += v.w;\n    return this;\n  },\n  addScalar: function (s) {\n    this.x += s;\n    this.y += s;\n    this.z += s;\n    this.w += s;\n    return this;\n  },\n  addVectors: function (a, b) {\n    this.x = a.x + b.x;\n    this.y = a.y + b.y;\n    this.z = a.z + b.z;\n    this.w = a.w + b.w;\n    return this;\n  },\n  addScaledVector: function (v, s) {\n    this.x += v.x * s;\n    this.y += v.y * s;\n    this.z += v.z * s;\n    this.w += v.w * s;\n    return this;\n  },\n  sub: function (v, w) {\n    if (w !== undefined) {\n      return this.subVectors(v, w);\n    }\n\n    this.x -= v.x;\n    this.y -= v.y;\n    this.z -= v.z;\n    this.w -= v.w;\n    return this;\n  },\n  subScalar: function (s) {\n    this.x -= s;\n    this.y -= s;\n    this.z -= s;\n    this.w -= s;\n    return this;\n  },\n  subVectors: function (a, b) {\n    this.x = a.x - b.x;\n    this.y = a.y - b.y;\n    this.z = a.z - b.z;\n    this.w = a.w - b.w;\n    return this;\n  },\n  multiplyScalar: function (scalar) {\n    if (isFinite(scalar)) {\n      this.x *= scalar;\n      this.y *= scalar;\n      this.z *= scalar;\n      this.w *= scalar;\n    } else {\n      this.x = 0;\n      this.y = 0;\n      this.z = 0;\n      this.w = 0;\n    }\n\n    return this;\n  },\n  applyMatrix4: function (m) {\n    var x = this.x;\n    var y = this.y;\n    var z = this.z;\n    var w = this.w;\n    var e = m.elements;\n    this.x = e[0] * x + e[4] * y + e[8] * z + e[12] * w;\n    this.y = e[1] * x + e[5] * y + e[9] * z + e[13] * w;\n    this.z = e[2] * x + e[6] * y + e[10] * z + e[14] * w;\n    this.w = e[3] * x + e[7] * y + e[11] * z + e[15] * w;\n    return this;\n  },\n  divideScalar: function (scalar) {\n    return this.multiplyScalar(1 / scalar);\n  },\n  setAxisAngleFromQuaternion: function (q) {\n    // http://www.euclideanspace.com/maths/geometry/rotations/conversions/quaternionToAngle/index.htm\n    // q is assumed to be normalized\n    this.w = 2 * Math.acos(q.w);\n    var s = Math.sqrt(1 - q.w * q.w);\n\n    if (s < 0.0001) {\n      this.x = 1;\n      this.y = 0;\n      this.z = 0;\n    } else {\n      this.x = q.x / s;\n      this.y = q.y / s;\n      this.z = q.z / s;\n    }\n\n    return this;\n  },\n  setAxisAngleFromRotationMatrix: function (m) {\n    // http://www.euclideanspace.com/maths/geometry/rotations/conversions/matrixToAngle/index.htm\n    // assumes the upper 3x3 of m is a pure rotation matrix (i.e, unscaled)\n    var angle,\n        x,\n        y,\n        z,\n        // variables for result\n    epsilon = 0.01,\n        // margin to allow for rounding errors\n    epsilon2 = 0.1,\n        // margin to distinguish between 0 and 180 degrees\n    te = m.elements,\n        m11 = te[0],\n        m12 = te[4],\n        m13 = te[8],\n        m21 = te[1],\n        m22 = te[5],\n        m23 = te[9],\n        m31 = te[2],\n        m32 = te[6],\n        m33 = te[10];\n\n    if (Math.abs(m12 - m21) < epsilon && Math.abs(m13 - m31) < epsilon && Math.abs(m23 - m32) < epsilon) {\n      // singularity found\n      // first check for identity matrix which must have +1 for all terms\n      // in leading diagonal and zero in other terms\n      if (Math.abs(m12 + m21) < epsilon2 && Math.abs(m13 + m31) < epsilon2 && Math.abs(m23 + m32) < epsilon2 && Math.abs(m11 + m22 + m33 - 3) < epsilon2) {\n        // this singularity is identity matrix so angle = 0\n        this.set(1, 0, 0, 0);\n        return this; // zero angle, arbitrary axis\n      } // otherwise this singularity is angle = 180\n\n\n      angle = Math.PI;\n      var xx = (m11 + 1) / 2;\n      var yy = (m22 + 1) / 2;\n      var zz = (m33 + 1) / 2;\n      var xy = (m12 + m21) / 4;\n      var xz = (m13 + m31) / 4;\n      var yz = (m23 + m32) / 4;\n\n      if (xx > yy && xx > zz) {\n        // m11 is the largest diagonal term\n        if (xx < epsilon) {\n          x = 0;\n          y = 0.707106781;\n          z = 0.707106781;\n        } else {\n          x = Math.sqrt(xx);\n          y = xy / x;\n          z = xz / x;\n        }\n      } else if (yy > zz) {\n        // m22 is the largest diagonal term\n        if (yy < epsilon) {\n          x = 0.707106781;\n          y = 0;\n          z = 0.707106781;\n        } else {\n          y = Math.sqrt(yy);\n          x = xy / y;\n          z = yz / y;\n        }\n      } else {\n        // m33 is the largest diagonal term so base result on this\n        if (zz < epsilon) {\n          x = 0.707106781;\n          y = 0.707106781;\n          z = 0;\n        } else {\n          z = Math.sqrt(zz);\n          x = xz / z;\n          y = yz / z;\n        }\n      }\n\n      this.set(x, y, z, angle);\n      return this; // return 180 deg rotation\n    } // as we have reached here there are no singularities so we can handle normally\n\n\n    var s = Math.sqrt((m32 - m23) * (m32 - m23) + (m13 - m31) * (m13 - m31) + (m21 - m12) * (m21 - m12)); // used to normalize\n\n    if (Math.abs(s) < 0.001) s = 1; // prevent divide by zero, should not happen if matrix is orthogonal and should be\n    // caught by singularity test above, but I've left it in just in case\n\n    this.x = (m32 - m23) / s;\n    this.y = (m13 - m31) / s;\n    this.z = (m21 - m12) / s;\n    this.w = Math.acos((m11 + m22 + m33 - 1) / 2);\n    return this;\n  },\n  min: function (v) {\n    this.x = Math.min(this.x, v.x);\n    this.y = Math.min(this.y, v.y);\n    this.z = Math.min(this.z, v.z);\n    this.w = Math.min(this.w, v.w);\n    return this;\n  },\n  max: function (v) {\n    this.x = Math.max(this.x, v.x);\n    this.y = Math.max(this.y, v.y);\n    this.z = Math.max(this.z, v.z);\n    this.w = Math.max(this.w, v.w);\n    return this;\n  },\n  clamp: function (min, max) {\n    // This function assumes min < max, if this assumption isn't true it will not operate correctly\n    this.x = Math.max(min.x, Math.min(max.x, this.x));\n    this.y = Math.max(min.y, Math.min(max.y, this.y));\n    this.z = Math.max(min.z, Math.min(max.z, this.z));\n    this.w = Math.max(min.w, Math.min(max.w, this.w));\n    return this;\n  },\n  clampScalar: function () {\n    var min, max;\n    return function clampScalar(minVal, maxVal) {\n      if (min === undefined) {\n        min = new THREE.Vector4();\n        max = new THREE.Vector4();\n      }\n\n      min.set(minVal, minVal, minVal, minVal);\n      max.set(maxVal, maxVal, maxVal, maxVal);\n      return this.clamp(min, max);\n    };\n  }(),\n  floor: function () {\n    this.x = Math.floor(this.x);\n    this.y = Math.floor(this.y);\n    this.z = Math.floor(this.z);\n    this.w = Math.floor(this.w);\n    return this;\n  },\n  ceil: function () {\n    this.x = Math.ceil(this.x);\n    this.y = Math.ceil(this.y);\n    this.z = Math.ceil(this.z);\n    this.w = Math.ceil(this.w);\n    return this;\n  },\n  round: function () {\n    this.x = Math.round(this.x);\n    this.y = Math.round(this.y);\n    this.z = Math.round(this.z);\n    this.w = Math.round(this.w);\n    return this;\n  },\n  roundToZero: function () {\n    this.x = this.x < 0 ? Math.ceil(this.x) : Math.floor(this.x);\n    this.y = this.y < 0 ? Math.ceil(this.y) : Math.floor(this.y);\n    this.z = this.z < 0 ? Math.ceil(this.z) : Math.floor(this.z);\n    this.w = this.w < 0 ? Math.ceil(this.w) : Math.floor(this.w);\n    return this;\n  },\n  negate: function () {\n    this.x = -this.x;\n    this.y = -this.y;\n    this.z = -this.z;\n    this.w = -this.w;\n    return this;\n  },\n  dot: function (v) {\n    return this.x * v.x + this.y * v.y + this.z * v.z + this.w * v.w;\n  },\n  lengthSq: function () {\n    return this.x * this.x + this.y * this.y + this.z * this.z + this.w * this.w;\n  },\n  length: function () {\n    return Math.sqrt(this.x * this.x + this.y * this.y + this.z * this.z + this.w * this.w);\n  },\n  lengthManhattan: function () {\n    return Math.abs(this.x) + Math.abs(this.y) + Math.abs(this.z) + Math.abs(this.w);\n  },\n  normalize: function () {\n    return this.divideScalar(this.length());\n  },\n  setLength: function (length) {\n    return this.multiplyScalar(length / this.length());\n  },\n  lerp: function (v, alpha) {\n    this.x += (v.x - this.x) * alpha;\n    this.y += (v.y - this.y) * alpha;\n    this.z += (v.z - this.z) * alpha;\n    this.w += (v.w - this.w) * alpha;\n    return this;\n  },\n  lerpVectors: function (v1, v2, alpha) {\n    this.subVectors(v2, v1).multiplyScalar(alpha).add(v1);\n    return this;\n  },\n  equals: function (v) {\n    return v.x === this.x && v.y === this.y && v.z === this.z && v.w === this.w;\n  },\n  fromArray: function (array, offset) {\n    if (offset === undefined) offset = 0;\n    this.x = array[offset];\n    this.y = array[offset + 1];\n    this.z = array[offset + 2];\n    this.w = array[offset + 3];\n    return this;\n  },\n  toArray: function (array, offset) {\n    if (array === undefined) array = [];\n    if (offset === undefined) offset = 0;\n    array[offset] = this.x;\n    array[offset + 1] = this.y;\n    array[offset + 2] = this.z;\n    array[offset + 3] = this.w;\n    return array;\n  },\n  fromAttribute: function (attribute, index, offset) {\n    if (offset === undefined) offset = 0;\n    index = index * attribute.itemSize + offset;\n    this.x = attribute.array[index];\n    this.y = attribute.array[index + 1];\n    this.z = attribute.array[index + 2];\n    this.w = attribute.array[index + 3];\n    return this;\n  }\n}; // File:src/math/Matrix3.js\n\n/**\n * @author alteredq / http://alteredqualia.com/\n * @author WestLangley / http://github.com/WestLangley\n * @author bhouston / http://clara.io\n * @author tschw\n */\n\nTHREE.Matrix3 = function () {\n  this.elements = new Float32Array([1, 0, 0, 0, 1, 0, 0, 0, 1]);\n};\n\nTHREE.Matrix3.prototype = {\n  constructor: THREE.Matrix3,\n  set: function (n11, n12, n13, n21, n22, n23, n31, n32, n33) {\n    var te = this.elements;\n    te[0] = n11;\n    te[1] = n21;\n    te[2] = n31;\n    te[3] = n12;\n    te[4] = n22;\n    te[5] = n32;\n    te[6] = n13;\n    te[7] = n23;\n    te[8] = n33;\n    return this;\n  },\n  identity: function () {\n    this.set(1, 0, 0, 0, 1, 0, 0, 0, 1);\n    return this;\n  },\n  clone: function () {\n    return new this.constructor().fromArray(this.elements);\n  },\n  copy: function (m) {\n    var me = m.elements;\n    this.set(me[0], me[3], me[6], me[1], me[4], me[7], me[2], me[5], me[8]);\n    return this;\n  },\n  setFromMatrix4: function (m) {\n    var me = m.elements;\n    this.set(me[0], me[4], me[8], me[1], me[5], me[9], me[2], me[6], me[10]);\n    return this;\n  },\n  applyToVector3Array: function () {\n    var v1;\n    return function (array, offset, length) {\n      if (v1 === undefined) v1 = new THREE.Vector3();\n      if (offset === undefined) offset = 0;\n      if (length === undefined) length = array.length;\n\n      for (var i = 0, j = offset; i < length; i += 3, j += 3) {\n        v1.fromArray(array, j);\n        v1.applyMatrix3(this);\n        v1.toArray(array, j);\n      }\n\n      return array;\n    };\n  }(),\n  applyToBuffer: function () {\n    var v1;\n    return function applyToBuffer(buffer, offset, length) {\n      if (v1 === undefined) v1 = new THREE.Vector3();\n      if (offset === undefined) offset = 0;\n      if (length === undefined) length = buffer.length / buffer.itemSize;\n\n      for (var i = 0, j = offset; i < length; i++, j++) {\n        v1.x = buffer.getX(j);\n        v1.y = buffer.getY(j);\n        v1.z = buffer.getZ(j);\n        v1.applyMatrix3(this);\n        buffer.setXYZ(v1.x, v1.y, v1.z);\n      }\n\n      return buffer;\n    };\n  }(),\n  multiplyScalar: function (s) {\n    var te = this.elements;\n    te[0] *= s;\n    te[3] *= s;\n    te[6] *= s;\n    te[1] *= s;\n    te[4] *= s;\n    te[7] *= s;\n    te[2] *= s;\n    te[5] *= s;\n    te[8] *= s;\n    return this;\n  },\n  determinant: function () {\n    var te = this.elements;\n    var a = te[0],\n        b = te[1],\n        c = te[2],\n        d = te[3],\n        e = te[4],\n        f = te[5],\n        g = te[6],\n        h = te[7],\n        i = te[8];\n    return a * e * i - a * f * h - b * d * i + b * f * g + c * d * h - c * e * g;\n  },\n  getInverse: function (matrix, throwOnDegenerate) {\n    var me = matrix.elements,\n        te = this.elements,\n        n11 = me[0],\n        n21 = me[1],\n        n31 = me[2],\n        n12 = me[3],\n        n22 = me[4],\n        n32 = me[5],\n        n13 = me[6],\n        n23 = me[7],\n        n33 = me[8],\n        t11 = n33 * n22 - n32 * n23,\n        t12 = n32 * n13 - n33 * n12,\n        t13 = n23 * n12 - n22 * n13,\n        det = n11 * t11 + n21 * t12 + n31 * t13;\n\n    if (det === 0) {\n      var msg = \"THREE.Matrix3.getInverse(): can't invert matrix, determinant is 0\";\n\n      if (throwOnDegenerate || false) {\n        throw new Error(msg);\n      }\n\n      return this.identity();\n    }\n\n    te[0] = t11;\n    te[1] = n31 * n23 - n33 * n21;\n    te[2] = n32 * n21 - n31 * n22;\n    te[3] = t12;\n    te[4] = n33 * n11 - n31 * n13;\n    te[5] = n31 * n12 - n32 * n11;\n    te[6] = t13;\n    te[7] = n21 * n13 - n23 * n11;\n    te[8] = n22 * n11 - n21 * n12;\n    return this.multiplyScalar(1 / det);\n  },\n  transpose: function () {\n    var tmp,\n        m = this.elements;\n    tmp = m[1];\n    m[1] = m[3];\n    m[3] = tmp;\n    tmp = m[2];\n    m[2] = m[6];\n    m[6] = tmp;\n    tmp = m[5];\n    m[5] = m[7];\n    m[7] = tmp;\n    return this;\n  },\n  flattenToArrayOffset: function (array, offset) {\n    var te = this.elements;\n    array[offset] = te[0];\n    array[offset + 1] = te[1];\n    array[offset + 2] = te[2];\n    array[offset + 3] = te[3];\n    array[offset + 4] = te[4];\n    array[offset + 5] = te[5];\n    array[offset + 6] = te[6];\n    array[offset + 7] = te[7];\n    array[offset + 8] = te[8];\n    return array;\n  },\n  getNormalMatrix: function (matrix4) {\n    return this.setFromMatrix4(matrix4).getInverse(this).transpose();\n  },\n  transposeIntoArray: function (r) {\n    var m = this.elements;\n    r[0] = m[0];\n    r[1] = m[3];\n    r[2] = m[6];\n    r[3] = m[1];\n    r[4] = m[4];\n    r[5] = m[7];\n    r[6] = m[2];\n    r[7] = m[5];\n    r[8] = m[8];\n    return this;\n  },\n  fromArray: function (array) {\n    this.elements.set(array);\n    return this;\n  },\n  toArray: function () {\n    var te = this.elements;\n    return [te[0], te[1], te[2], te[3], te[4], te[5], te[6], te[7], te[8]];\n  }\n}; // File:src/math/Matrix4.js\n\n/**\n * @author mrdoob / http://mrdoob.com/\n * @author supereggbert / http://www.paulbrunt.co.uk/\n * @author philogb / http://blog.thejit.org/\n * @author jordi_ros / http://plattsoft.com\n * @author D1plo1d / http://github.com/D1plo1d\n * @author alteredq / http://alteredqualia.com/\n * @author mikael emtinger / http://gomo.se/\n * @author timknip / http://www.floorplanner.com/\n * @author bhouston / http://clara.io\n * @author WestLangley / http://github.com/WestLangley\n */\n\nTHREE.Matrix4 = function () {\n  this.elements = new Float32Array([1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1]);\n};\n\nTHREE.Matrix4.prototype = {\n  constructor: THREE.Matrix4,\n  set: function (n11, n12, n13, n14, n21, n22, n23, n24, n31, n32, n33, n34, n41, n42, n43, n44) {\n    var te = this.elements;\n    te[0] = n11;\n    te[4] = n12;\n    te[8] = n13;\n    te[12] = n14;\n    te[1] = n21;\n    te[5] = n22;\n    te[9] = n23;\n    te[13] = n24;\n    te[2] = n31;\n    te[6] = n32;\n    te[10] = n33;\n    te[14] = n34;\n    te[3] = n41;\n    te[7] = n42;\n    te[11] = n43;\n    te[15] = n44;\n    return this;\n  },\n  identity: function () {\n    this.set(1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1);\n    return this;\n  },\n  clone: function () {\n    return new THREE.Matrix4().fromArray(this.elements);\n  },\n  copy: function (m) {\n    this.elements.set(m.elements);\n    return this;\n  },\n  copyPosition: function (m) {\n    var te = this.elements;\n    var me = m.elements;\n    te[12] = me[12];\n    te[13] = me[13];\n    te[14] = me[14];\n    return this;\n  },\n  extractBasis: function (xAxis, yAxis, zAxis) {\n    xAxis.setFromMatrixColumn(this, 0);\n    yAxis.setFromMatrixColumn(this, 1);\n    zAxis.setFromMatrixColumn(this, 2);\n    return this;\n  },\n  makeBasis: function (xAxis, yAxis, zAxis) {\n    this.set(xAxis.x, yAxis.x, zAxis.x, 0, xAxis.y, yAxis.y, zAxis.y, 0, xAxis.z, yAxis.z, zAxis.z, 0, 0, 0, 0, 1);\n    return this;\n  },\n  extractRotation: function () {\n    var v1;\n    return function (m) {\n      if (v1 === undefined) v1 = new THREE.Vector3();\n      var te = this.elements;\n      var me = m.elements;\n      var scaleX = 1 / v1.setFromMatrixColumn(m, 0).length();\n      var scaleY = 1 / v1.setFromMatrixColumn(m, 1).length();\n      var scaleZ = 1 / v1.setFromMatrixColumn(m, 2).length();\n      te[0] = me[0] * scaleX;\n      te[1] = me[1] * scaleX;\n      te[2] = me[2] * scaleX;\n      te[4] = me[4] * scaleY;\n      te[5] = me[5] * scaleY;\n      te[6] = me[6] * scaleY;\n      te[8] = me[8] * scaleZ;\n      te[9] = me[9] * scaleZ;\n      te[10] = me[10] * scaleZ;\n      return this;\n    };\n  }(),\n  makeRotationFromEuler: function (euler) {\n    var te = this.elements;\n    var x = euler.x,\n        y = euler.y,\n        z = euler.z;\n    var a = Math.cos(x),\n        b = Math.sin(x);\n    var c = Math.cos(y),\n        d = Math.sin(y);\n    var e = Math.cos(z),\n        f = Math.sin(z);\n\n    if (euler.order === 'XYZ') {\n      var ae = a * e,\n          af = a * f,\n          be = b * e,\n          bf = b * f;\n      te[0] = c * e;\n      te[4] = -c * f;\n      te[8] = d;\n      te[1] = af + be * d;\n      te[5] = ae - bf * d;\n      te[9] = -b * c;\n      te[2] = bf - ae * d;\n      te[6] = be + af * d;\n      te[10] = a * c;\n    } else if (euler.order === 'YXZ') {\n      var ce = c * e,\n          cf = c * f,\n          de = d * e,\n          df = d * f;\n      te[0] = ce + df * b;\n      te[4] = de * b - cf;\n      te[8] = a * d;\n      te[1] = a * f;\n      te[5] = a * e;\n      te[9] = -b;\n      te[2] = cf * b - de;\n      te[6] = df + ce * b;\n      te[10] = a * c;\n    } else if (euler.order === 'ZXY') {\n      var ce = c * e,\n          cf = c * f,\n          de = d * e,\n          df = d * f;\n      te[0] = ce - df * b;\n      te[4] = -a * f;\n      te[8] = de + cf * b;\n      te[1] = cf + de * b;\n      te[5] = a * e;\n      te[9] = df - ce * b;\n      te[2] = -a * d;\n      te[6] = b;\n      te[10] = a * c;\n    } else if (euler.order === 'ZYX') {\n      var ae = a * e,\n          af = a * f,\n          be = b * e,\n          bf = b * f;\n      te[0] = c * e;\n      te[4] = be * d - af;\n      te[8] = ae * d + bf;\n      te[1] = c * f;\n      te[5] = bf * d + ae;\n      te[9] = af * d - be;\n      te[2] = -d;\n      te[6] = b * c;\n      te[10] = a * c;\n    } else if (euler.order === 'YZX') {\n      var ac = a * c,\n          ad = a * d,\n          bc = b * c,\n          bd = b * d;\n      te[0] = c * e;\n      te[4] = bd - ac * f;\n      te[8] = bc * f + ad;\n      te[1] = f;\n      te[5] = a * e;\n      te[9] = -b * e;\n      te[2] = -d * e;\n      te[6] = ad * f + bc;\n      te[10] = ac - bd * f;\n    } else if (euler.order === 'XZY') {\n      var ac = a * c,\n          ad = a * d,\n          bc = b * c,\n          bd = b * d;\n      te[0] = c * e;\n      te[4] = -f;\n      te[8] = d * e;\n      te[1] = ac * f + bd;\n      te[5] = a * e;\n      te[9] = ad * f - bc;\n      te[2] = bc * f - ad;\n      te[6] = b * e;\n      te[10] = bd * f + ac;\n    } // last column\n\n\n    te[3] = 0;\n    te[7] = 0;\n    te[11] = 0; // bottom row\n\n    te[12] = 0;\n    te[13] = 0;\n    te[14] = 0;\n    te[15] = 1;\n    return this;\n  },\n  makeRotationFromQuaternion: function (q) {\n    var te = this.elements;\n    var x = q.x,\n        y = q.y,\n        z = q.z,\n        w = q.w;\n    var x2 = x + x,\n        y2 = y + y,\n        z2 = z + z;\n    var xx = x * x2,\n        xy = x * y2,\n        xz = x * z2;\n    var yy = y * y2,\n        yz = y * z2,\n        zz = z * z2;\n    var wx = w * x2,\n        wy = w * y2,\n        wz = w * z2;\n    te[0] = 1 - (yy + zz);\n    te[4] = xy - wz;\n    te[8] = xz + wy;\n    te[1] = xy + wz;\n    te[5] = 1 - (xx + zz);\n    te[9] = yz - wx;\n    te[2] = xz - wy;\n    te[6] = yz + wx;\n    te[10] = 1 - (xx + yy); // last column\n\n    te[3] = 0;\n    te[7] = 0;\n    te[11] = 0; // bottom row\n\n    te[12] = 0;\n    te[13] = 0;\n    te[14] = 0;\n    te[15] = 1;\n    return this;\n  },\n  lookAt: function () {\n    var x, y, z;\n    return function (eye, target, up) {\n      if (x === undefined) x = new THREE.Vector3();\n      if (y === undefined) y = new THREE.Vector3();\n      if (z === undefined) z = new THREE.Vector3();\n      var te = this.elements;\n      z.subVectors(eye, target).normalize();\n\n      if (z.lengthSq() === 0) {\n        z.z = 1;\n      }\n\n      x.crossVectors(up, z).normalize();\n\n      if (x.lengthSq() === 0) {\n        z.x += 0.0001;\n        x.crossVectors(up, z).normalize();\n      }\n\n      y.crossVectors(z, x);\n      te[0] = x.x;\n      te[4] = y.x;\n      te[8] = z.x;\n      te[1] = x.y;\n      te[5] = y.y;\n      te[9] = z.y;\n      te[2] = x.z;\n      te[6] = y.z;\n      te[10] = z.z;\n      return this;\n    };\n  }(),\n  multiply: function (m, n) {\n    if (n !== undefined) {\n      return this.multiplyMatrices(m, n);\n    }\n\n    return this.multiplyMatrices(this, m);\n  },\n  multiplyMatrices: function (a, b) {\n    var ae = a.elements;\n    var be = b.elements;\n    var te = this.elements;\n    var a11 = ae[0],\n        a12 = ae[4],\n        a13 = ae[8],\n        a14 = ae[12];\n    var a21 = ae[1],\n        a22 = ae[5],\n        a23 = ae[9],\n        a24 = ae[13];\n    var a31 = ae[2],\n        a32 = ae[6],\n        a33 = ae[10],\n        a34 = ae[14];\n    var a41 = ae[3],\n        a42 = ae[7],\n        a43 = ae[11],\n        a44 = ae[15];\n    var b11 = be[0],\n        b12 = be[4],\n        b13 = be[8],\n        b14 = be[12];\n    var b21 = be[1],\n        b22 = be[5],\n        b23 = be[9],\n        b24 = be[13];\n    var b31 = be[2],\n        b32 = be[6],\n        b33 = be[10],\n        b34 = be[14];\n    var b41 = be[3],\n        b42 = be[7],\n        b43 = be[11],\n        b44 = be[15];\n    te[0] = a11 * b11 + a12 * b21 + a13 * b31 + a14 * b41;\n    te[4] = a11 * b12 + a12 * b22 + a13 * b32 + a14 * b42;\n    te[8] = a11 * b13 + a12 * b23 + a13 * b33 + a14 * b43;\n    te[12] = a11 * b14 + a12 * b24 + a13 * b34 + a14 * b44;\n    te[1] = a21 * b11 + a22 * b21 + a23 * b31 + a24 * b41;\n    te[5] = a21 * b12 + a22 * b22 + a23 * b32 + a24 * b42;\n    te[9] = a21 * b13 + a22 * b23 + a23 * b33 + a24 * b43;\n    te[13] = a21 * b14 + a22 * b24 + a23 * b34 + a24 * b44;\n    te[2] = a31 * b11 + a32 * b21 + a33 * b31 + a34 * b41;\n    te[6] = a31 * b12 + a32 * b22 + a33 * b32 + a34 * b42;\n    te[10] = a31 * b13 + a32 * b23 + a33 * b33 + a34 * b43;\n    te[14] = a31 * b14 + a32 * b24 + a33 * b34 + a34 * b44;\n    te[3] = a41 * b11 + a42 * b21 + a43 * b31 + a44 * b41;\n    te[7] = a41 * b12 + a42 * b22 + a43 * b32 + a44 * b42;\n    te[11] = a41 * b13 + a42 * b23 + a43 * b33 + a44 * b43;\n    te[15] = a41 * b14 + a42 * b24 + a43 * b34 + a44 * b44;\n    return this;\n  },\n  multiplyToArray: function (a, b, r) {\n    var te = this.elements;\n    this.multiplyMatrices(a, b);\n    r[0] = te[0];\n    r[1] = te[1];\n    r[2] = te[2];\n    r[3] = te[3];\n    r[4] = te[4];\n    r[5] = te[5];\n    r[6] = te[6];\n    r[7] = te[7];\n    r[8] = te[8];\n    r[9] = te[9];\n    r[10] = te[10];\n    r[11] = te[11];\n    r[12] = te[12];\n    r[13] = te[13];\n    r[14] = te[14];\n    r[15] = te[15];\n    return this;\n  },\n  multiplyScalar: function (s) {\n    var te = this.elements;\n    te[0] *= s;\n    te[4] *= s;\n    te[8] *= s;\n    te[12] *= s;\n    te[1] *= s;\n    te[5] *= s;\n    te[9] *= s;\n    te[13] *= s;\n    te[2] *= s;\n    te[6] *= s;\n    te[10] *= s;\n    te[14] *= s;\n    te[3] *= s;\n    te[7] *= s;\n    te[11] *= s;\n    te[15] *= s;\n    return this;\n  },\n  applyToVector3Array: function () {\n    var v1;\n    return function (array, offset, length) {\n      if (v1 === undefined) v1 = new THREE.Vector3();\n      if (offset === undefined) offset = 0;\n      if (length === undefined) length = array.length;\n\n      for (var i = 0, j = offset; i < length; i += 3, j += 3) {\n        v1.fromArray(array, j);\n        v1.applyMatrix4(this);\n        v1.toArray(array, j);\n      }\n\n      return array;\n    };\n  }(),\n  applyToBuffer: function () {\n    var v1;\n    return function applyToBuffer(buffer, offset, length) {\n      if (v1 === undefined) v1 = new THREE.Vector3();\n      if (offset === undefined) offset = 0;\n      if (length === undefined) length = buffer.length / buffer.itemSize;\n\n      for (var i = 0, j = offset; i < length; i++, j++) {\n        v1.x = buffer.getX(j);\n        v1.y = buffer.getY(j);\n        v1.z = buffer.getZ(j);\n        v1.applyMatrix4(this);\n        buffer.setXYZ(v1.x, v1.y, v1.z);\n      }\n\n      return buffer;\n    };\n  }(),\n  determinant: function () {\n    var te = this.elements;\n    var n11 = te[0],\n        n12 = te[4],\n        n13 = te[8],\n        n14 = te[12];\n    var n21 = te[1],\n        n22 = te[5],\n        n23 = te[9],\n        n24 = te[13];\n    var n31 = te[2],\n        n32 = te[6],\n        n33 = te[10],\n        n34 = te[14];\n    var n41 = te[3],\n        n42 = te[7],\n        n43 = te[11],\n        n44 = te[15]; //TODO: make this more efficient\n    //( based on http://www.euclideanspace.com/maths/algebra/matrix/functions/inverse/fourD/index.htm )\n\n    return n41 * (+n14 * n23 * n32 - n13 * n24 * n32 - n14 * n22 * n33 + n12 * n24 * n33 + n13 * n22 * n34 - n12 * n23 * n34) + n42 * (+n11 * n23 * n34 - n11 * n24 * n33 + n14 * n21 * n33 - n13 * n21 * n34 + n13 * n24 * n31 - n14 * n23 * n31) + n43 * (+n11 * n24 * n32 - n11 * n22 * n34 - n14 * n21 * n32 + n12 * n21 * n34 + n14 * n22 * n31 - n12 * n24 * n31) + n44 * (-n13 * n22 * n31 - n11 * n23 * n32 + n11 * n22 * n33 + n13 * n21 * n32 - n12 * n21 * n33 + n12 * n23 * n31);\n  },\n  transpose: function () {\n    var te = this.elements;\n    var tmp;\n    tmp = te[1];\n    te[1] = te[4];\n    te[4] = tmp;\n    tmp = te[2];\n    te[2] = te[8];\n    te[8] = tmp;\n    tmp = te[6];\n    te[6] = te[9];\n    te[9] = tmp;\n    tmp = te[3];\n    te[3] = te[12];\n    te[12] = tmp;\n    tmp = te[7];\n    te[7] = te[13];\n    te[13] = tmp;\n    tmp = te[11];\n    te[11] = te[14];\n    te[14] = tmp;\n    return this;\n  },\n  flattenToArrayOffset: function (array, offset) {\n    var te = this.elements;\n    array[offset] = te[0];\n    array[offset + 1] = te[1];\n    array[offset + 2] = te[2];\n    array[offset + 3] = te[3];\n    array[offset + 4] = te[4];\n    array[offset + 5] = te[5];\n    array[offset + 6] = te[6];\n    array[offset + 7] = te[7];\n    array[offset + 8] = te[8];\n    array[offset + 9] = te[9];\n    array[offset + 10] = te[10];\n    array[offset + 11] = te[11];\n    array[offset + 12] = te[12];\n    array[offset + 13] = te[13];\n    array[offset + 14] = te[14];\n    array[offset + 15] = te[15];\n    return array;\n  },\n  getPosition: function () {\n    var v1;\n    return function () {\n      if (v1 === undefined) v1 = new THREE.Vector3();\n      return v1.setFromMatrixColumn(this, 3);\n    };\n  }(),\n  setPosition: function (v) {\n    var te = this.elements;\n    te[12] = v.x;\n    te[13] = v.y;\n    te[14] = v.z;\n    return this;\n  },\n  getInverse: function (m, throwOnDegenerate) {\n    // based on http://www.euclideanspace.com/maths/algebra/matrix/functions/inverse/fourD/index.htm\n    var te = this.elements,\n        me = m.elements,\n        n11 = me[0],\n        n21 = me[1],\n        n31 = me[2],\n        n41 = me[3],\n        n12 = me[4],\n        n22 = me[5],\n        n32 = me[6],\n        n42 = me[7],\n        n13 = me[8],\n        n23 = me[9],\n        n33 = me[10],\n        n43 = me[11],\n        n14 = me[12],\n        n24 = me[13],\n        n34 = me[14],\n        n44 = me[15],\n        t11 = n23 * n34 * n42 - n24 * n33 * n42 + n24 * n32 * n43 - n22 * n34 * n43 - n23 * n32 * n44 + n22 * n33 * n44,\n        t12 = n14 * n33 * n42 - n13 * n34 * n42 - n14 * n32 * n43 + n12 * n34 * n43 + n13 * n32 * n44 - n12 * n33 * n44,\n        t13 = n13 * n24 * n42 - n14 * n23 * n42 + n14 * n22 * n43 - n12 * n24 * n43 - n13 * n22 * n44 + n12 * n23 * n44,\n        t14 = n14 * n23 * n32 - n13 * n24 * n32 - n14 * n22 * n33 + n12 * n24 * n33 + n13 * n22 * n34 - n12 * n23 * n34;\n    var det = n11 * t11 + n21 * t12 + n31 * t13 + n41 * t14;\n\n    if (det === 0) {\n      var msg = \"THREE.Matrix4.getInverse(): can't invert matrix, determinant is 0\";\n\n      if (throwOnDegenerate || false) {\n        throw new Error(msg);\n      }\n\n      return this.identity();\n    }\n\n    te[0] = t11;\n    te[1] = n24 * n33 * n41 - n23 * n34 * n41 - n24 * n31 * n43 + n21 * n34 * n43 + n23 * n31 * n44 - n21 * n33 * n44;\n    te[2] = n22 * n34 * n41 - n24 * n32 * n41 + n24 * n31 * n42 - n21 * n34 * n42 - n22 * n31 * n44 + n21 * n32 * n44;\n    te[3] = n23 * n32 * n41 - n22 * n33 * n41 - n23 * n31 * n42 + n21 * n33 * n42 + n22 * n31 * n43 - n21 * n32 * n43;\n    te[4] = t12;\n    te[5] = n13 * n34 * n41 - n14 * n33 * n41 + n14 * n31 * n43 - n11 * n34 * n43 - n13 * n31 * n44 + n11 * n33 * n44;\n    te[6] = n14 * n32 * n41 - n12 * n34 * n41 - n14 * n31 * n42 + n11 * n34 * n42 + n12 * n31 * n44 - n11 * n32 * n44;\n    te[7] = n12 * n33 * n41 - n13 * n32 * n41 + n13 * n31 * n42 - n11 * n33 * n42 - n12 * n31 * n43 + n11 * n32 * n43;\n    te[8] = t13;\n    te[9] = n14 * n23 * n41 - n13 * n24 * n41 - n14 * n21 * n43 + n11 * n24 * n43 + n13 * n21 * n44 - n11 * n23 * n44;\n    te[10] = n12 * n24 * n41 - n14 * n22 * n41 + n14 * n21 * n42 - n11 * n24 * n42 - n12 * n21 * n44 + n11 * n22 * n44;\n    te[11] = n13 * n22 * n41 - n12 * n23 * n41 - n13 * n21 * n42 + n11 * n23 * n42 + n12 * n21 * n43 - n11 * n22 * n43;\n    te[12] = t14;\n    te[13] = n13 * n24 * n31 - n14 * n23 * n31 + n14 * n21 * n33 - n11 * n24 * n33 - n13 * n21 * n34 + n11 * n23 * n34;\n    te[14] = n14 * n22 * n31 - n12 * n24 * n31 - n14 * n21 * n32 + n11 * n24 * n32 + n12 * n21 * n34 - n11 * n22 * n34;\n    te[15] = n12 * n23 * n31 - n13 * n22 * n31 + n13 * n21 * n32 - n11 * n23 * n32 - n12 * n21 * n33 + n11 * n22 * n33;\n    return this.multiplyScalar(1 / det);\n  },\n  scale: function (v) {\n    var te = this.elements;\n    var x = v.x,\n        y = v.y,\n        z = v.z;\n    te[0] *= x;\n    te[4] *= y;\n    te[8] *= z;\n    te[1] *= x;\n    te[5] *= y;\n    te[9] *= z;\n    te[2] *= x;\n    te[6] *= y;\n    te[10] *= z;\n    te[3] *= x;\n    te[7] *= y;\n    te[11] *= z;\n    return this;\n  },\n  getMaxScaleOnAxis: function () {\n    var te = this.elements;\n    var scaleXSq = te[0] * te[0] + te[1] * te[1] + te[2] * te[2];\n    var scaleYSq = te[4] * te[4] + te[5] * te[5] + te[6] * te[6];\n    var scaleZSq = te[8] * te[8] + te[9] * te[9] + te[10] * te[10];\n    return Math.sqrt(Math.max(scaleXSq, scaleYSq, scaleZSq));\n  },\n  makeTranslation: function (x, y, z) {\n    this.set(1, 0, 0, x, 0, 1, 0, y, 0, 0, 1, z, 0, 0, 0, 1);\n    return this;\n  },\n  makeRotationX: function (theta) {\n    var c = Math.cos(theta),\n        s = Math.sin(theta);\n    this.set(1, 0, 0, 0, 0, c, -s, 0, 0, s, c, 0, 0, 0, 0, 1);\n    return this;\n  },\n  makeRotationY: function (theta) {\n    var c = Math.cos(theta),\n        s = Math.sin(theta);\n    this.set(c, 0, s, 0, 0, 1, 0, 0, -s, 0, c, 0, 0, 0, 0, 1);\n    return this;\n  },\n  makeRotationZ: function (theta) {\n    var c = Math.cos(theta),\n        s = Math.sin(theta);\n    this.set(c, -s, 0, 0, s, c, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1);\n    return this;\n  },\n  makeRotationAxis: function (axis, angle) {\n    // Based on http://www.gamedev.net/reference/articles/article1199.asp\n    var c = Math.cos(angle);\n    var s = Math.sin(angle);\n    var t = 1 - c;\n    var x = axis.x,\n        y = axis.y,\n        z = axis.z;\n    var tx = t * x,\n        ty = t * y;\n    this.set(tx * x + c, tx * y - s * z, tx * z + s * y, 0, tx * y + s * z, ty * y + c, ty * z - s * x, 0, tx * z - s * y, ty * z + s * x, t * z * z + c, 0, 0, 0, 0, 1);\n    return this;\n  },\n  makeScale: function (x, y, z) {\n    this.set(x, 0, 0, 0, 0, y, 0, 0, 0, 0, z, 0, 0, 0, 0, 1);\n    return this;\n  },\n  compose: function (position, quaternion, scale) {\n    this.makeRotationFromQuaternion(quaternion);\n    this.scale(scale);\n    this.setPosition(position);\n    return this;\n  },\n  decompose: function () {\n    var vector, matrix;\n    return function (position, quaternion, scale) {\n      if (vector === undefined) vector = new THREE.Vector3();\n      if (matrix === undefined) matrix = new THREE.Matrix4();\n      var te = this.elements;\n      var sx = vector.set(te[0], te[1], te[2]).length();\n      var sy = vector.set(te[4], te[5], te[6]).length();\n      var sz = vector.set(te[8], te[9], te[10]).length(); // if determine is negative, we need to invert one scale\n\n      var det = this.determinant();\n\n      if (det < 0) {\n        sx = -sx;\n      }\n\n      position.x = te[12];\n      position.y = te[13];\n      position.z = te[14]; // scale the rotation part\n\n      matrix.elements.set(this.elements); // at this point matrix is incomplete so we can't use .copy()\n\n      var invSX = 1 / sx;\n      var invSY = 1 / sy;\n      var invSZ = 1 / sz;\n      matrix.elements[0] *= invSX;\n      matrix.elements[1] *= invSX;\n      matrix.elements[2] *= invSX;\n      matrix.elements[4] *= invSY;\n      matrix.elements[5] *= invSY;\n      matrix.elements[6] *= invSY;\n      matrix.elements[8] *= invSZ;\n      matrix.elements[9] *= invSZ;\n      matrix.elements[10] *= invSZ;\n      quaternion.setFromRotationMatrix(matrix);\n      scale.x = sx;\n      scale.y = sy;\n      scale.z = sz;\n      return this;\n    };\n  }(),\n  makeFrustum: function (left, right, bottom, top, near, far) {\n    var te = this.elements;\n    var x = 2 * near / (right - left);\n    var y = 2 * near / (top - bottom);\n    var a = (right + left) / (right - left);\n    var b = (top + bottom) / (top - bottom);\n    var c = -(far + near) / (far - near);\n    var d = -2 * far * near / (far - near);\n    te[0] = x;\n    te[4] = 0;\n    te[8] = a;\n    te[12] = 0;\n    te[1] = 0;\n    te[5] = y;\n    te[9] = b;\n    te[13] = 0;\n    te[2] = 0;\n    te[6] = 0;\n    te[10] = c;\n    te[14] = d;\n    te[3] = 0;\n    te[7] = 0;\n    te[11] = -1;\n    te[15] = 0;\n    return this;\n  },\n  makePerspective: function (fov, aspect, near, far) {\n    var ymax = near * Math.tan(THREE.Math.degToRad(fov * 0.5));\n    var ymin = -ymax;\n    var xmin = ymin * aspect;\n    var xmax = ymax * aspect;\n    return this.makeFrustum(xmin, xmax, ymin, ymax, near, far);\n  },\n  makeOrthographic: function (left, right, top, bottom, near, far) {\n    var te = this.elements;\n    var w = 1.0 / (right - left);\n    var h = 1.0 / (top - bottom);\n    var p = 1.0 / (far - near);\n    var x = (right + left) * w;\n    var y = (top + bottom) * h;\n    var z = (far + near) * p;\n    te[0] = 2 * w;\n    te[4] = 0;\n    te[8] = 0;\n    te[12] = -x;\n    te[1] = 0;\n    te[5] = 2 * h;\n    te[9] = 0;\n    te[13] = -y;\n    te[2] = 0;\n    te[6] = 0;\n    te[10] = -2 * p;\n    te[14] = -z;\n    te[3] = 0;\n    te[7] = 0;\n    te[11] = 0;\n    te[15] = 1;\n    return this;\n  },\n  equals: function (matrix) {\n    var te = this.elements;\n    var me = matrix.elements;\n\n    for (var i = 0; i < 16; i++) {\n      if (te[i] !== me[i]) return false;\n    }\n\n    return true;\n  },\n  fromArray: function (array) {\n    this.elements.set(array);\n    return this;\n  },\n  toArray: function () {\n    var te = this.elements;\n    return [te[0], te[1], te[2], te[3], te[4], te[5], te[6], te[7], te[8], te[9], te[10], te[11], te[12], te[13], te[14], te[15]];\n  }\n}; // File:src/math/Plane.js\n\n/**\n * @author bhouston / http://clara.io\n */\n\nTHREE.Plane = function (normal, constant) {\n  this.normal = normal !== undefined ? normal : new THREE.Vector3(1, 0, 0);\n  this.constant = constant !== undefined ? constant : 0;\n};\n\nTHREE.Plane.prototype = {\n  constructor: THREE.Plane,\n  set: function (normal, constant) {\n    this.normal.copy(normal);\n    this.constant = constant;\n    return this;\n  },\n  setComponents: function (x, y, z, w) {\n    this.normal.set(x, y, z);\n    this.constant = w;\n    return this;\n  },\n  setFromNormalAndCoplanarPoint: function (normal, point) {\n    this.normal.copy(normal);\n    this.constant = -point.dot(this.normal); // must be this.normal, not normal, as this.normal is normalized\n\n    return this;\n  },\n  setFromCoplanarPoints: function () {\n    var v1 = new THREE.Vector3();\n    var v2 = new THREE.Vector3();\n    return function (a, b, c) {\n      var normal = v1.subVectors(c, b).cross(v2.subVectors(a, b)).normalize(); // Q: should an error be thrown if normal is zero (e.g. degenerate plane)?\n\n      this.setFromNormalAndCoplanarPoint(normal, a);\n      return this;\n    };\n  }(),\n  clone: function () {\n    return new this.constructor().copy(this);\n  },\n  copy: function (plane) {\n    this.normal.copy(plane.normal);\n    this.constant = plane.constant;\n    return this;\n  },\n  normalize: function () {\n    // Note: will lead to a divide by zero if the plane is invalid.\n    var inverseNormalLength = 1.0 / this.normal.length();\n    this.normal.multiplyScalar(inverseNormalLength);\n    this.constant *= inverseNormalLength;\n    return this;\n  },\n  negate: function () {\n    this.constant *= -1;\n    this.normal.negate();\n    return this;\n  },\n  distanceToPoint: function (point) {\n    return this.normal.dot(point) + this.constant;\n  },\n  distanceToSphere: function (sphere) {\n    return this.distanceToPoint(sphere.center) - sphere.radius;\n  },\n  projectPoint: function (point, optionalTarget) {\n    return this.orthoPoint(point, optionalTarget).sub(point).negate();\n  },\n  orthoPoint: function (point, optionalTarget) {\n    var perpendicularMagnitude = this.distanceToPoint(point);\n    var result = optionalTarget || new THREE.Vector3();\n    return result.copy(this.normal).multiplyScalar(perpendicularMagnitude);\n  },\n  intersectLine: function () {\n    var v1 = new THREE.Vector3();\n    return function (line, optionalTarget) {\n      var result = optionalTarget || new THREE.Vector3();\n      var direction = line.delta(v1);\n      var denominator = this.normal.dot(direction);\n\n      if (denominator === 0) {\n        // line is coplanar, return origin\n        if (this.distanceToPoint(line.start) === 0) {\n          return result.copy(line.start);\n        } // Unsure if this is the correct method to handle this case.\n\n\n        return undefined;\n      }\n\n      var t = -(line.start.dot(this.normal) + this.constant) / denominator;\n\n      if (t < 0 || t > 1) {\n        return undefined;\n      }\n\n      return result.copy(direction).multiplyScalar(t).add(line.start);\n    };\n  }(),\n  intersectsLine: function (line) {\n    // Note: this tests if a line intersects the plane, not whether it (or its end-points) are coplanar with it.\n    var startSign = this.distanceToPoint(line.start);\n    var endSign = this.distanceToPoint(line.end);\n    return startSign < 0 && endSign > 0 || endSign < 0 && startSign > 0;\n  },\n  intersectsBox: function (box) {\n    return box.intersectsPlane(this);\n  },\n  intersectsSphere: function (sphere) {\n    return sphere.intersectsPlane(this);\n  },\n  coplanarPoint: function (optionalTarget) {\n    var result = optionalTarget || new THREE.Vector3();\n    return result.copy(this.normal).multiplyScalar(-this.constant);\n  },\n  applyMatrix4: function () {\n    var v1 = new THREE.Vector3();\n    var v2 = new THREE.Vector3();\n    var m1 = new THREE.Matrix3();\n    return function (matrix, optionalNormalMatrix) {\n      // compute new normal based on theory here:\n      // http://www.songho.ca/opengl/gl_normaltransform.html\n      var normalMatrix = optionalNormalMatrix || m1.getNormalMatrix(matrix);\n      var newNormal = v1.copy(this.normal).applyMatrix3(normalMatrix);\n      var newCoplanarPoint = this.coplanarPoint(v2);\n      newCoplanarPoint.applyMatrix4(matrix);\n      this.setFromNormalAndCoplanarPoint(newNormal, newCoplanarPoint);\n      return this;\n    };\n  }(),\n  translate: function (offset) {\n    this.constant = this.constant - offset.dot(this.normal);\n    return this;\n  },\n  equals: function (plane) {\n    return plane.normal.equals(this.normal) && plane.constant === this.constant;\n  }\n}; // File:src/math/Quaternion.js\n\n/**\n * @author mikael emtinger / http://gomo.se/\n * @author alteredq / http://alteredqualia.com/\n * @author WestLangley / http://github.com/WestLangley\n * @author bhouston / http://clara.io\n */\n\nTHREE.Quaternion = function (x, y, z, w) {\n  this._x = x || 0;\n  this._y = y || 0;\n  this._z = z || 0;\n  this._w = w !== undefined ? w : 1;\n};\n\nTHREE.Quaternion.prototype = {\n  constructor: THREE.Quaternion,\n\n  get x() {\n    return this._x;\n  },\n\n  set x(value) {\n    this._x = value;\n    this.onChangeCallback();\n  },\n\n  get y() {\n    return this._y;\n  },\n\n  set y(value) {\n    this._y = value;\n    this.onChangeCallback();\n  },\n\n  get z() {\n    return this._z;\n  },\n\n  set z(value) {\n    this._z = value;\n    this.onChangeCallback();\n  },\n\n  get w() {\n    return this._w;\n  },\n\n  set w(value) {\n    this._w = value;\n    this.onChangeCallback();\n  },\n\n  set: function (x, y, z, w) {\n    this._x = x;\n    this._y = y;\n    this._z = z;\n    this._w = w;\n    this.onChangeCallback();\n    return this;\n  },\n  clone: function () {\n    return new this.constructor(this._x, this._y, this._z, this._w);\n  },\n  copy: function (quaternion) {\n    this._x = quaternion.x;\n    this._y = quaternion.y;\n    this._z = quaternion.z;\n    this._w = quaternion.w;\n    this.onChangeCallback();\n    return this;\n  },\n  setFromEuler: function (euler, update) {\n    if (euler instanceof THREE.Euler === false) {\n      throw new Error('THREE.Quaternion: .setFromEuler() now expects a Euler rotation rather than a Vector3 and order.');\n    } // http://www.mathworks.com/matlabcentral/fileexchange/\n    // \t20696-function-to-convert-between-dcm-euler-angles-quaternions-and-euler-vectors/\n    //\tcontent/SpinCalc.m\n\n\n    var c1 = Math.cos(euler._x / 2);\n    var c2 = Math.cos(euler._y / 2);\n    var c3 = Math.cos(euler._z / 2);\n    var s1 = Math.sin(euler._x / 2);\n    var s2 = Math.sin(euler._y / 2);\n    var s3 = Math.sin(euler._z / 2);\n    var order = euler.order;\n\n    if (order === 'XYZ') {\n      this._x = s1 * c2 * c3 + c1 * s2 * s3;\n      this._y = c1 * s2 * c3 - s1 * c2 * s3;\n      this._z = c1 * c2 * s3 + s1 * s2 * c3;\n      this._w = c1 * c2 * c3 - s1 * s2 * s3;\n    } else if (order === 'YXZ') {\n      this._x = s1 * c2 * c3 + c1 * s2 * s3;\n      this._y = c1 * s2 * c3 - s1 * c2 * s3;\n      this._z = c1 * c2 * s3 - s1 * s2 * c3;\n      this._w = c1 * c2 * c3 + s1 * s2 * s3;\n    } else if (order === 'ZXY') {\n      this._x = s1 * c2 * c3 - c1 * s2 * s3;\n      this._y = c1 * s2 * c3 + s1 * c2 * s3;\n      this._z = c1 * c2 * s3 + s1 * s2 * c3;\n      this._w = c1 * c2 * c3 - s1 * s2 * s3;\n    } else if (order === 'ZYX') {\n      this._x = s1 * c2 * c3 - c1 * s2 * s3;\n      this._y = c1 * s2 * c3 + s1 * c2 * s3;\n      this._z = c1 * c2 * s3 - s1 * s2 * c3;\n      this._w = c1 * c2 * c3 + s1 * s2 * s3;\n    } else if (order === 'YZX') {\n      this._x = s1 * c2 * c3 + c1 * s2 * s3;\n      this._y = c1 * s2 * c3 + s1 * c2 * s3;\n      this._z = c1 * c2 * s3 - s1 * s2 * c3;\n      this._w = c1 * c2 * c3 - s1 * s2 * s3;\n    } else if (order === 'XZY') {\n      this._x = s1 * c2 * c3 - c1 * s2 * s3;\n      this._y = c1 * s2 * c3 - s1 * c2 * s3;\n      this._z = c1 * c2 * s3 + s1 * s2 * c3;\n      this._w = c1 * c2 * c3 + s1 * s2 * s3;\n    }\n\n    if (update !== false) this.onChangeCallback();\n    return this;\n  },\n  setFromAxisAngle: function (axis, angle) {\n    // http://www.euclideanspace.com/maths/geometry/rotations/conversions/angleToQuaternion/index.htm\n    // assumes axis is normalized\n    var halfAngle = angle / 2,\n        s = Math.sin(halfAngle);\n    this._x = axis.x * s;\n    this._y = axis.y * s;\n    this._z = axis.z * s;\n    this._w = Math.cos(halfAngle);\n    this.onChangeCallback();\n    return this;\n  },\n  setFromRotationMatrix: function (m) {\n    // http://www.euclideanspace.com/maths/geometry/rotations/conversions/matrixToQuaternion/index.htm\n    // assumes the upper 3x3 of m is a pure rotation matrix (i.e, unscaled)\n    var te = m.elements,\n        m11 = te[0],\n        m12 = te[4],\n        m13 = te[8],\n        m21 = te[1],\n        m22 = te[5],\n        m23 = te[9],\n        m31 = te[2],\n        m32 = te[6],\n        m33 = te[10],\n        trace = m11 + m22 + m33,\n        s;\n\n    if (trace > 0) {\n      s = 0.5 / Math.sqrt(trace + 1.0);\n      this._w = 0.25 / s;\n      this._x = (m32 - m23) * s;\n      this._y = (m13 - m31) * s;\n      this._z = (m21 - m12) * s;\n    } else if (m11 > m22 && m11 > m33) {\n      s = 2.0 * Math.sqrt(1.0 + m11 - m22 - m33);\n      this._w = (m32 - m23) / s;\n      this._x = 0.25 * s;\n      this._y = (m12 + m21) / s;\n      this._z = (m13 + m31) / s;\n    } else if (m22 > m33) {\n      s = 2.0 * Math.sqrt(1.0 + m22 - m11 - m33);\n      this._w = (m13 - m31) / s;\n      this._x = (m12 + m21) / s;\n      this._y = 0.25 * s;\n      this._z = (m23 + m32) / s;\n    } else {\n      s = 2.0 * Math.sqrt(1.0 + m33 - m11 - m22);\n      this._w = (m21 - m12) / s;\n      this._x = (m13 + m31) / s;\n      this._y = (m23 + m32) / s;\n      this._z = 0.25 * s;\n    }\n\n    this.onChangeCallback();\n    return this;\n  },\n  setFromUnitVectors: function () {\n    // http://lolengine.net/blog/2014/02/24/quaternion-from-two-vectors-final\n    // assumes direction vectors vFrom and vTo are normalized\n    var v1, r;\n    var EPS = 0.000001;\n    return function (vFrom, vTo) {\n      if (v1 === undefined) v1 = new THREE.Vector3();\n      r = vFrom.dot(vTo) + 1;\n\n      if (r < EPS) {\n        r = 0;\n\n        if (Math.abs(vFrom.x) > Math.abs(vFrom.z)) {\n          v1.set(-vFrom.y, vFrom.x, 0);\n        } else {\n          v1.set(0, -vFrom.z, vFrom.y);\n        }\n      } else {\n        v1.crossVectors(vFrom, vTo);\n      }\n\n      this._x = v1.x;\n      this._y = v1.y;\n      this._z = v1.z;\n      this._w = r;\n      this.normalize();\n      return this;\n    };\n  }(),\n  inverse: function () {\n    this.conjugate().normalize();\n    return this;\n  },\n  conjugate: function () {\n    this._x *= -1;\n    this._y *= -1;\n    this._z *= -1;\n    this.onChangeCallback();\n    return this;\n  },\n  dot: function (v) {\n    return this._x * v._x + this._y * v._y + this._z * v._z + this._w * v._w;\n  },\n  lengthSq: function () {\n    return this._x * this._x + this._y * this._y + this._z * this._z + this._w * this._w;\n  },\n  length: function () {\n    return Math.sqrt(this._x * this._x + this._y * this._y + this._z * this._z + this._w * this._w);\n  },\n  normalize: function () {\n    var l = this.length();\n\n    if (l === 0) {\n      this._x = 0;\n      this._y = 0;\n      this._z = 0;\n      this._w = 1;\n    } else {\n      l = 1 / l;\n      this._x = this._x * l;\n      this._y = this._y * l;\n      this._z = this._z * l;\n      this._w = this._w * l;\n    }\n\n    this.onChangeCallback();\n    return this;\n  },\n  multiply: function (q, p) {\n    if (p !== undefined) {\n      return this.multiplyQuaternions(q, p);\n    }\n\n    return this.multiplyQuaternions(this, q);\n  },\n  multiplyQuaternions: function (a, b) {\n    // from http://www.euclideanspace.com/maths/algebra/realNormedAlgebra/quaternions/code/index.htm\n    var qax = a._x,\n        qay = a._y,\n        qaz = a._z,\n        qaw = a._w;\n    var qbx = b._x,\n        qby = b._y,\n        qbz = b._z,\n        qbw = b._w;\n    this._x = qax * qbw + qaw * qbx + qay * qbz - qaz * qby;\n    this._y = qay * qbw + qaw * qby + qaz * qbx - qax * qbz;\n    this._z = qaz * qbw + qaw * qbz + qax * qby - qay * qbx;\n    this._w = qaw * qbw - qax * qbx - qay * qby - qaz * qbz;\n    this.onChangeCallback();\n    return this;\n  },\n  slerp: function (qb, t) {\n    if (t === 0) return this;\n    if (t === 1) return this.copy(qb);\n    var x = this._x,\n        y = this._y,\n        z = this._z,\n        w = this._w; // http://www.euclideanspace.com/maths/algebra/realNormedAlgebra/quaternions/slerp/\n\n    var cosHalfTheta = w * qb._w + x * qb._x + y * qb._y + z * qb._z;\n\n    if (cosHalfTheta < 0) {\n      this._w = -qb._w;\n      this._x = -qb._x;\n      this._y = -qb._y;\n      this._z = -qb._z;\n      cosHalfTheta = -cosHalfTheta;\n    } else {\n      this.copy(qb);\n    }\n\n    if (cosHalfTheta >= 1.0) {\n      this._w = w;\n      this._x = x;\n      this._y = y;\n      this._z = z;\n      return this;\n    }\n\n    var sinHalfTheta = Math.sqrt(1.0 - cosHalfTheta * cosHalfTheta);\n\n    if (Math.abs(sinHalfTheta) < 0.001) {\n      this._w = 0.5 * (w + this._w);\n      this._x = 0.5 * (x + this._x);\n      this._y = 0.5 * (y + this._y);\n      this._z = 0.5 * (z + this._z);\n      return this;\n    }\n\n    var halfTheta = Math.atan2(sinHalfTheta, cosHalfTheta);\n    var ratioA = Math.sin((1 - t) * halfTheta) / sinHalfTheta,\n        ratioB = Math.sin(t * halfTheta) / sinHalfTheta;\n    this._w = w * ratioA + this._w * ratioB;\n    this._x = x * ratioA + this._x * ratioB;\n    this._y = y * ratioA + this._y * ratioB;\n    this._z = z * ratioA + this._z * ratioB;\n    this.onChangeCallback();\n    return this;\n  },\n  equals: function (quaternion) {\n    return quaternion._x === this._x && quaternion._y === this._y && quaternion._z === this._z && quaternion._w === this._w;\n  },\n  fromArray: function (array, offset) {\n    if (offset === undefined) offset = 0;\n    this._x = array[offset];\n    this._y = array[offset + 1];\n    this._z = array[offset + 2];\n    this._w = array[offset + 3];\n    this.onChangeCallback();\n    return this;\n  },\n  toArray: function (array, offset) {\n    if (array === undefined) array = [];\n    if (offset === undefined) offset = 0;\n    array[offset] = this._x;\n    array[offset + 1] = this._y;\n    array[offset + 2] = this._z;\n    array[offset + 3] = this._w;\n    return array;\n  },\n  onChange: function (callback) {\n    this.onChangeCallback = callback;\n    return this;\n  },\n  onChangeCallback: function () {}\n};\nObject.assign(THREE.Quaternion, {\n  slerp: function (qa, qb, qm, t) {\n    return qm.copy(qa).slerp(qb, t);\n  },\n  slerpFlat: function (dst, dstOffset, src0, srcOffset0, src1, srcOffset1, t) {\n    // fuzz-free, array-based Quaternion SLERP operation\n    var x0 = src0[srcOffset0 + 0],\n        y0 = src0[srcOffset0 + 1],\n        z0 = src0[srcOffset0 + 2],\n        w0 = src0[srcOffset0 + 3],\n        x1 = src1[srcOffset1 + 0],\n        y1 = src1[srcOffset1 + 1],\n        z1 = src1[srcOffset1 + 2],\n        w1 = src1[srcOffset1 + 3];\n\n    if (w0 !== w1 || x0 !== x1 || y0 !== y1 || z0 !== z1) {\n      var s = 1 - t,\n          cos = x0 * x1 + y0 * y1 + z0 * z1 + w0 * w1,\n          dir = cos >= 0 ? 1 : -1,\n          sqrSin = 1 - cos * cos; // Skip the Slerp for tiny steps to avoid numeric problems:\n\n      if (sqrSin > Number.EPSILON) {\n        var sin = Math.sqrt(sqrSin),\n            len = Math.atan2(sin, cos * dir);\n        s = Math.sin(s * len) / sin;\n        t = Math.sin(t * len) / sin;\n      }\n\n      var tDir = t * dir;\n      x0 = x0 * s + x1 * tDir;\n      y0 = y0 * s + y1 * tDir;\n      z0 = z0 * s + z1 * tDir;\n      w0 = w0 * s + w1 * tDir; // Normalize in case we just did a lerp:\n\n      if (s === 1 - t) {\n        var f = 1 / Math.sqrt(x0 * x0 + y0 * y0 + z0 * z0 + w0 * w0);\n        x0 *= f;\n        y0 *= f;\n        z0 *= f;\n        w0 *= f;\n      }\n    }\n\n    dst[dstOffset] = x0;\n    dst[dstOffset + 1] = y0;\n    dst[dstOffset + 2] = z0;\n    dst[dstOffset + 3] = w0;\n  }\n}); // File:src/math/Triangle.js\n\n/**\n * @author bhouston / http://clara.io\n * @author mrdoob / http://mrdoob.com/\n */\n\nTHREE.Triangle = function (a, b, c) {\n  this.a = a !== undefined ? a : new THREE.Vector3();\n  this.b = b !== undefined ? b : new THREE.Vector3();\n  this.c = c !== undefined ? c : new THREE.Vector3();\n};\n\nTHREE.Triangle.normal = function () {\n  var v0 = new THREE.Vector3();\n  return function (a, b, c, optionalTarget) {\n    var result = optionalTarget || new THREE.Vector3();\n    result.subVectors(c, b);\n    v0.subVectors(a, b);\n    result.cross(v0);\n    var resultLengthSq = result.lengthSq();\n\n    if (resultLengthSq > 0) {\n      return result.multiplyScalar(1 / Math.sqrt(resultLengthSq));\n    }\n\n    return result.set(0, 0, 0);\n  };\n}(); // static/instance method to calculate barycentric coordinates\n// based on: http://www.blackpawn.com/texts/pointinpoly/default.html\n\n\nTHREE.Triangle.barycoordFromPoint = function () {\n  var v0 = new THREE.Vector3();\n  var v1 = new THREE.Vector3();\n  var v2 = new THREE.Vector3();\n  return function (point, a, b, c, optionalTarget) {\n    v0.subVectors(c, a);\n    v1.subVectors(b, a);\n    v2.subVectors(point, a);\n    var dot00 = v0.dot(v0);\n    var dot01 = v0.dot(v1);\n    var dot02 = v0.dot(v2);\n    var dot11 = v1.dot(v1);\n    var dot12 = v1.dot(v2);\n    var denom = dot00 * dot11 - dot01 * dot01;\n    var result = optionalTarget || new THREE.Vector3(); // collinear or singular triangle\n\n    if (denom === 0) {\n      // arbitrary location outside of triangle?\n      // not sure if this is the best idea, maybe should be returning undefined\n      return result.set(-2, -1, -1);\n    }\n\n    var invDenom = 1 / denom;\n    var u = (dot11 * dot02 - dot01 * dot12) * invDenom;\n    var v = (dot00 * dot12 - dot01 * dot02) * invDenom; // barycentric coordinates must always sum to 1\n\n    return result.set(1 - u - v, v, u);\n  };\n}();\n\nTHREE.Triangle.containsPoint = function () {\n  var v1 = new THREE.Vector3();\n  return function (point, a, b, c) {\n    var result = THREE.Triangle.barycoordFromPoint(point, a, b, c, v1);\n    return result.x >= 0 && result.y >= 0 && result.x + result.y <= 1;\n  };\n}();\n\nTHREE.Triangle.prototype = {\n  constructor: THREE.Triangle,\n  set: function (a, b, c) {\n    this.a.copy(a);\n    this.b.copy(b);\n    this.c.copy(c);\n    return this;\n  },\n  setFromPointsAndIndices: function (points, i0, i1, i2) {\n    this.a.copy(points[i0]);\n    this.b.copy(points[i1]);\n    this.c.copy(points[i2]);\n    return this;\n  },\n  clone: function () {\n    return new this.constructor().copy(this);\n  },\n  copy: function (triangle) {\n    this.a.copy(triangle.a);\n    this.b.copy(triangle.b);\n    this.c.copy(triangle.c);\n    return this;\n  },\n  area: function () {\n    var v0 = new THREE.Vector3();\n    var v1 = new THREE.Vector3();\n    return function () {\n      v0.subVectors(this.c, this.b);\n      v1.subVectors(this.a, this.b);\n      return v0.cross(v1).length() * 0.5;\n    };\n  }(),\n  midpoint: function (optionalTarget) {\n    var result = optionalTarget || new THREE.Vector3();\n    return result.addVectors(this.a, this.b).add(this.c).multiplyScalar(1 / 3);\n  },\n  normal: function (optionalTarget) {\n    return THREE.Triangle.normal(this.a, this.b, this.c, optionalTarget);\n  },\n  plane: function (optionalTarget) {\n    var result = optionalTarget || new THREE.Plane();\n    return result.setFromCoplanarPoints(this.a, this.b, this.c);\n  },\n  barycoordFromPoint: function (point, optionalTarget) {\n    return THREE.Triangle.barycoordFromPoint(point, this.a, this.b, this.c, optionalTarget);\n  },\n  containsPoint: function (point) {\n    return THREE.Triangle.containsPoint(point, this.a, this.b, this.c);\n  },\n  equals: function (triangle) {\n    return triangle.a.equals(this.a) && triangle.b.equals(this.b) && triangle.c.equals(this.c);\n  }\n}; // File:src/math/Box3.js\n\n/**\n * @author bhouston / http://clara.io\n * @author WestLangley / http://github.com/WestLangley\n */\n\nTHREE.Box3 = function (min, max) {\n  this.min = min !== undefined ? min : new THREE.Vector3(+Infinity, +Infinity, +Infinity);\n  this.max = max !== undefined ? max : new THREE.Vector3(-Infinity, -Infinity, -Infinity);\n};\n\nTHREE.Box3.prototype = {\n  constructor: THREE.Box3,\n  set: function (min, max) {\n    this.min.copy(min);\n    this.max.copy(max);\n    return this;\n  },\n  setFromArray: function (array) {\n    this.makeEmpty();\n    var minX = +Infinity;\n    var minY = +Infinity;\n    var minZ = +Infinity;\n    var maxX = -Infinity;\n    var maxY = -Infinity;\n    var maxZ = -Infinity;\n\n    for (var i = 0, il = array.length; i < il; i += 3) {\n      var x = array[i];\n      var y = array[i + 1];\n      var z = array[i + 2];\n      if (x < minX) minX = x;\n      if (y < minY) minY = y;\n      if (z < minZ) minZ = z;\n      if (x > maxX) maxX = x;\n      if (y > maxY) maxY = y;\n      if (z > maxZ) maxZ = z;\n    }\n\n    this.min.set(minX, minY, minZ);\n    this.max.set(maxX, maxY, maxZ);\n  },\n  setFromPoints: function (points) {\n    this.makeEmpty();\n\n    for (var i = 0, il = points.length; i < il; i++) {\n      this.expandByPoint(points[i]);\n    }\n\n    return this;\n  },\n  setFromCenterAndSize: function () {\n    var v1 = new THREE.Vector3();\n    return function (center, size) {\n      var halfSize = v1.copy(size).multiplyScalar(0.5);\n      this.min.copy(center).sub(halfSize);\n      this.max.copy(center).add(halfSize);\n      return this;\n    };\n  }(),\n  setFromObject: function () {\n    // Computes the world-axis-aligned bounding box of an object (including its children),\n    // accounting for both the object's, and children's, world transforms\n    var box;\n    return function (object) {\n      if (box === undefined) box = new THREE.Box3();\n      var scope = this;\n      this.makeEmpty();\n      object.updateMatrixWorld(true);\n      object.traverse(function (node) {\n        var geometry = node.geometry;\n\n        if (geometry !== undefined) {\n          if (geometry.boundingBox === null) {\n            geometry.computeBoundingBox();\n          }\n\n          if (geometry.boundingBox.isEmpty() === false) {\n            box.copy(geometry.boundingBox);\n            box.applyMatrix4(node.matrixWorld);\n            scope.union(box);\n          }\n        }\n      });\n      return this;\n    };\n  }(),\n  clone: function () {\n    return new this.constructor().copy(this);\n  },\n  copy: function (box) {\n    this.min.copy(box.min);\n    this.max.copy(box.max);\n    return this;\n  },\n  makeEmpty: function () {\n    this.min.x = this.min.y = this.min.z = +Infinity;\n    this.max.x = this.max.y = this.max.z = -Infinity;\n    return this;\n  },\n  isEmpty: function () {\n    // this is a more robust check for empty than ( volume <= 0 ) because volume can get positive with two negative axes\n    return this.max.x < this.min.x || this.max.y < this.min.y || this.max.z < this.min.z;\n  },\n  center: function (optionalTarget) {\n    var result = optionalTarget || new THREE.Vector3();\n    return result.addVectors(this.min, this.max).multiplyScalar(0.5);\n  },\n  size: function (optionalTarget) {\n    var result = optionalTarget || new THREE.Vector3();\n    return result.subVectors(this.max, this.min);\n  },\n  expandByPoint: function (point) {\n    this.min.min(point);\n    this.max.max(point);\n    return this;\n  },\n  expandByVector: function (vector) {\n    this.min.sub(vector);\n    this.max.add(vector);\n    return this;\n  },\n  expandByScalar: function (scalar) {\n    this.min.addScalar(-scalar);\n    this.max.addScalar(scalar);\n    return this;\n  },\n  containsPoint: function (point) {\n    if (point.x < this.min.x || point.x > this.max.x || point.y < this.min.y || point.y > this.max.y || point.z < this.min.z || point.z > this.max.z) {\n      return false;\n    }\n\n    return true;\n  },\n  containsBox: function (box) {\n    if (this.min.x <= box.min.x && box.max.x <= this.max.x && this.min.y <= box.min.y && box.max.y <= this.max.y && this.min.z <= box.min.z && box.max.z <= this.max.z) {\n      return true;\n    }\n\n    return false;\n  },\n  getParameter: function (point, optionalTarget) {\n    // This can potentially have a divide by zero if the box\n    // has a size dimension of 0.\n    var result = optionalTarget || new THREE.Vector3();\n    return result.set((point.x - this.min.x) / (this.max.x - this.min.x), (point.y - this.min.y) / (this.max.y - this.min.y), (point.z - this.min.z) / (this.max.z - this.min.z));\n  },\n  intersectsBox: function (box) {\n    // using 6 splitting planes to rule out intersections.\n    if (box.max.x < this.min.x || box.min.x > this.max.x || box.max.y < this.min.y || box.min.y > this.max.y || box.max.z < this.min.z || box.min.z > this.max.z) {\n      return false;\n    }\n\n    return true;\n  },\n  intersectsSphere: function () {\n    var closestPoint;\n    return function intersectsSphere(sphere) {\n      if (closestPoint === undefined) closestPoint = new THREE.Vector3(); // Find the point on the AABB closest to the sphere center.\n\n      this.clampPoint(sphere.center, closestPoint); // If that point is inside the sphere, the AABB and sphere intersect.\n\n      return closestPoint.distanceToSquared(sphere.center) <= sphere.radius * sphere.radius;\n    };\n  }(),\n  intersectsPlane: function (plane) {\n    // We compute the minimum and maximum dot product values. If those values\n    // are on the same side (back or front) of the plane, then there is no intersection.\n    var min, max;\n\n    if (plane.normal.x > 0) {\n      min = plane.normal.x * this.min.x;\n      max = plane.normal.x * this.max.x;\n    } else {\n      min = plane.normal.x * this.max.x;\n      max = plane.normal.x * this.min.x;\n    }\n\n    if (plane.normal.y > 0) {\n      min += plane.normal.y * this.min.y;\n      max += plane.normal.y * this.max.y;\n    } else {\n      min += plane.normal.y * this.max.y;\n      max += plane.normal.y * this.min.y;\n    }\n\n    if (plane.normal.z > 0) {\n      min += plane.normal.z * this.min.z;\n      max += plane.normal.z * this.max.z;\n    } else {\n      min += plane.normal.z * this.max.z;\n      max += plane.normal.z * this.min.z;\n    }\n\n    return min <= plane.constant && max >= plane.constant;\n  },\n  clampPoint: function (point, optionalTarget) {\n    var result = optionalTarget || new THREE.Vector3();\n    return result.copy(point).clamp(this.min, this.max);\n  },\n  distanceToPoint: function () {\n    var v1 = new THREE.Vector3();\n    return function (point) {\n      var clampedPoint = v1.copy(point).clamp(this.min, this.max);\n      return clampedPoint.sub(point).length();\n    };\n  }(),\n  getBoundingSphere: function () {\n    var v1 = new THREE.Vector3();\n    return function (optionalTarget) {\n      var result = optionalTarget || new THREE.Sphere();\n      result.center = this.center();\n      result.radius = this.size(v1).length() * 0.5;\n      return result;\n    };\n  }(),\n  intersect: function (box) {\n    this.min.max(box.min);\n    this.max.min(box.max);\n    return this;\n  },\n  union: function (box) {\n    this.min.min(box.min);\n    this.max.max(box.max);\n    return this;\n  },\n  applyMatrix4: function () {\n    var points = [new THREE.Vector3(), new THREE.Vector3(), new THREE.Vector3(), new THREE.Vector3(), new THREE.Vector3(), new THREE.Vector3(), new THREE.Vector3(), new THREE.Vector3()];\n    return function (matrix) {\n      // NOTE: I am using a binary pattern to specify all 2^3 combinations below\n      points[0].set(this.min.x, this.min.y, this.min.z).applyMatrix4(matrix); // 000\n\n      points[1].set(this.min.x, this.min.y, this.max.z).applyMatrix4(matrix); // 001\n\n      points[2].set(this.min.x, this.max.y, this.min.z).applyMatrix4(matrix); // 010\n\n      points[3].set(this.min.x, this.max.y, this.max.z).applyMatrix4(matrix); // 011\n\n      points[4].set(this.max.x, this.min.y, this.min.z).applyMatrix4(matrix); // 100\n\n      points[5].set(this.max.x, this.min.y, this.max.z).applyMatrix4(matrix); // 101\n\n      points[6].set(this.max.x, this.max.y, this.min.z).applyMatrix4(matrix); // 110\n\n      points[7].set(this.max.x, this.max.y, this.max.z).applyMatrix4(matrix); // 111\n\n      this.makeEmpty();\n      this.setFromPoints(points);\n      return this;\n    };\n  }(),\n  translate: function (offset) {\n    this.min.add(offset);\n    this.max.add(offset);\n    return this;\n  },\n  equals: function (box) {\n    return box.min.equals(this.min) && box.max.equals(this.max);\n  }\n}; // File:src/math/Euler.js\n\n/**\n * @author mrdoob / http://mrdoob.com/\n * @author WestLangley / http://github.com/WestLangley\n * @author bhouston / http://clara.io\n */\n\nTHREE.Euler = function (x, y, z, order) {\n  this._x = x || 0;\n  this._y = y || 0;\n  this._z = z || 0;\n  this._order = order || THREE.Euler.DefaultOrder;\n};\n\nTHREE.Euler.RotationOrders = ['XYZ', 'YZX', 'ZXY', 'XZY', 'YXZ', 'ZYX'];\nTHREE.Euler.DefaultOrder = 'XYZ';\nTHREE.Euler.prototype = {\n  constructor: THREE.Euler,\n\n  get x() {\n    return this._x;\n  },\n\n  set x(value) {\n    this._x = value;\n    this.onChangeCallback();\n  },\n\n  get y() {\n    return this._y;\n  },\n\n  set y(value) {\n    this._y = value;\n    this.onChangeCallback();\n  },\n\n  get z() {\n    return this._z;\n  },\n\n  set z(value) {\n    this._z = value;\n    this.onChangeCallback();\n  },\n\n  get order() {\n    return this._order;\n  },\n\n  set order(value) {\n    this._order = value;\n    this.onChangeCallback();\n  },\n\n  set: function (x, y, z, order) {\n    this._x = x;\n    this._y = y;\n    this._z = z;\n    this._order = order || this._order;\n    this.onChangeCallback();\n    return this;\n  },\n  clone: function () {\n    return new this.constructor(this._x, this._y, this._z, this._order);\n  },\n  copy: function (euler) {\n    this._x = euler._x;\n    this._y = euler._y;\n    this._z = euler._z;\n    this._order = euler._order;\n    this.onChangeCallback();\n    return this;\n  },\n  setFromRotationMatrix: function (m, order, update) {\n    var clamp = THREE.Math.clamp; // assumes the upper 3x3 of m is a pure rotation matrix (i.e, unscaled)\n\n    var te = m.elements;\n    var m11 = te[0],\n        m12 = te[4],\n        m13 = te[8];\n    var m21 = te[1],\n        m22 = te[5],\n        m23 = te[9];\n    var m31 = te[2],\n        m32 = te[6],\n        m33 = te[10];\n    order = order || this._order;\n\n    if (order === 'XYZ') {\n      this._y = Math.asin(clamp(m13, -1, 1));\n\n      if (Math.abs(m13) < 0.99999) {\n        this._x = Math.atan2(-m23, m33);\n        this._z = Math.atan2(-m12, m11);\n      } else {\n        this._x = Math.atan2(m32, m22);\n        this._z = 0;\n      }\n    } else if (order === 'YXZ') {\n      this._x = Math.asin(-clamp(m23, -1, 1));\n\n      if (Math.abs(m23) < 0.99999) {\n        this._y = Math.atan2(m13, m33);\n        this._z = Math.atan2(m21, m22);\n      } else {\n        this._y = Math.atan2(-m31, m11);\n        this._z = 0;\n      }\n    } else if (order === 'ZXY') {\n      this._x = Math.asin(clamp(m32, -1, 1));\n\n      if (Math.abs(m32) < 0.99999) {\n        this._y = Math.atan2(-m31, m33);\n        this._z = Math.atan2(-m12, m22);\n      } else {\n        this._y = 0;\n        this._z = Math.atan2(m21, m11);\n      }\n    } else if (order === 'ZYX') {\n      this._y = Math.asin(-clamp(m31, -1, 1));\n\n      if (Math.abs(m31) < 0.99999) {\n        this._x = Math.atan2(m32, m33);\n        this._z = Math.atan2(m21, m11);\n      } else {\n        this._x = 0;\n        this._z = Math.atan2(-m12, m22);\n      }\n    } else if (order === 'YZX') {\n      this._z = Math.asin(clamp(m21, -1, 1));\n\n      if (Math.abs(m21) < 0.99999) {\n        this._x = Math.atan2(-m23, m22);\n        this._y = Math.atan2(-m31, m11);\n      } else {\n        this._x = 0;\n        this._y = Math.atan2(m13, m33);\n      }\n    } else if (order === 'XZY') {\n      this._z = Math.asin(-clamp(m12, -1, 1));\n\n      if (Math.abs(m12) < 0.99999) {\n        this._x = Math.atan2(m32, m22);\n        this._y = Math.atan2(m13, m11);\n      } else {\n        this._x = Math.atan2(-m23, m33);\n        this._y = 0;\n      }\n    }\n\n    this._order = order;\n    if (update !== false) this.onChangeCallback();\n    return this;\n  },\n  setFromQuaternion: function () {\n    var matrix;\n    return function (q, order, update) {\n      if (matrix === undefined) matrix = new THREE.Matrix4();\n      matrix.makeRotationFromQuaternion(q);\n      this.setFromRotationMatrix(matrix, order, update);\n      return this;\n    };\n  }(),\n  setFromVector3: function (v, order) {\n    return this.set(v.x, v.y, v.z, order || this._order);\n  },\n  reorder: function () {\n    // WARNING: this discards revolution information -bhouston\n    var q = new THREE.Quaternion();\n    return function (newOrder) {\n      q.setFromEuler(this);\n      this.setFromQuaternion(q, newOrder);\n    };\n  }(),\n  equals: function (euler) {\n    return euler._x === this._x && euler._y === this._y && euler._z === this._z && euler._order === this._order;\n  },\n  fromArray: function (array) {\n    this._x = array[0];\n    this._y = array[1];\n    this._z = array[2];\n    if (array[3] !== undefined) this._order = array[3];\n    this.onChangeCallback();\n    return this;\n  },\n  toArray: function (array, offset) {\n    if (array === undefined) array = [];\n    if (offset === undefined) offset = 0;\n    array[offset] = this._x;\n    array[offset + 1] = this._y;\n    array[offset + 2] = this._z;\n    array[offset + 3] = this._order;\n    return array;\n  },\n  toVector3: function (optionalResult) {\n    if (optionalResult) {\n      return optionalResult.set(this._x, this._y, this._z);\n    } else {\n      return new THREE.Vector3(this._x, this._y, this._z);\n    }\n  },\n  onChange: function (callback) {\n    this.onChangeCallback = callback;\n    return this;\n  },\n  onChangeCallback: function () {}\n}; // File:src/math/Ray.js\n\n/**\n * @author bhouston / http://clara.io\n */\n\nTHREE.Ray = function (origin, direction) {\n  this.origin = origin !== undefined ? origin : new THREE.Vector3();\n  this.direction = direction !== undefined ? direction : new THREE.Vector3();\n};\n\nTHREE.Ray.prototype = {\n  constructor: THREE.Ray,\n  set: function (origin, direction) {\n    this.origin.copy(origin);\n    this.direction.copy(direction);\n    return this;\n  },\n  clone: function () {\n    return new this.constructor().copy(this);\n  },\n  copy: function (ray) {\n    this.origin.copy(ray.origin);\n    this.direction.copy(ray.direction);\n    return this;\n  },\n  at: function (t, optionalTarget) {\n    var result = optionalTarget || new THREE.Vector3();\n    return result.copy(this.direction).multiplyScalar(t).add(this.origin);\n  },\n  lookAt: function (v) {\n    this.direction.copy(v).sub(this.origin).normalize();\n  },\n  recast: function () {\n    var v1 = new THREE.Vector3();\n    return function (t) {\n      this.origin.copy(this.at(t, v1));\n      return this;\n    };\n  }(),\n  closestPointToPoint: function (point, optionalTarget) {\n    var result = optionalTarget || new THREE.Vector3();\n    result.subVectors(point, this.origin);\n    var directionDistance = result.dot(this.direction);\n\n    if (directionDistance < 0) {\n      return result.copy(this.origin);\n    }\n\n    return result.copy(this.direction).multiplyScalar(directionDistance).add(this.origin);\n  },\n  distanceToPoint: function (point) {\n    return Math.sqrt(this.distanceSqToPoint(point));\n  },\n  distanceSqToPoint: function () {\n    var v1 = new THREE.Vector3();\n    return function (point) {\n      var directionDistance = v1.subVectors(point, this.origin).dot(this.direction); // point behind the ray\n\n      if (directionDistance < 0) {\n        return this.origin.distanceToSquared(point);\n      }\n\n      v1.copy(this.direction).multiplyScalar(directionDistance).add(this.origin);\n      return v1.distanceToSquared(point);\n    };\n  }(),\n  distanceSqToSegment: function () {\n    var segCenter = new THREE.Vector3();\n    var segDir = new THREE.Vector3();\n    var diff = new THREE.Vector3();\n    return function (v0, v1, optionalPointOnRay, optionalPointOnSegment) {\n      // from http://www.geometrictools.com/LibMathematics/Distance/Wm5DistRay3Segment3.cpp\n      // It returns the min distance between the ray and the segment\n      // defined by v0 and v1\n      // It can also set two optional targets :\n      // - The closest point on the ray\n      // - The closest point on the segment\n      segCenter.copy(v0).add(v1).multiplyScalar(0.5);\n      segDir.copy(v1).sub(v0).normalize();\n      diff.copy(this.origin).sub(segCenter);\n      var segExtent = v0.distanceTo(v1) * 0.5;\n      var a01 = -this.direction.dot(segDir);\n      var b0 = diff.dot(this.direction);\n      var b1 = -diff.dot(segDir);\n      var c = diff.lengthSq();\n      var det = Math.abs(1 - a01 * a01);\n      var s0, s1, sqrDist, extDet;\n\n      if (det > 0) {\n        // The ray and segment are not parallel.\n        s0 = a01 * b1 - b0;\n        s1 = a01 * b0 - b1;\n        extDet = segExtent * det;\n\n        if (s0 >= 0) {\n          if (s1 >= -extDet) {\n            if (s1 <= extDet) {\n              // region 0\n              // Minimum at interior points of ray and segment.\n              var invDet = 1 / det;\n              s0 *= invDet;\n              s1 *= invDet;\n              sqrDist = s0 * (s0 + a01 * s1 + 2 * b0) + s1 * (a01 * s0 + s1 + 2 * b1) + c;\n            } else {\n              // region 1\n              s1 = segExtent;\n              s0 = Math.max(0, -(a01 * s1 + b0));\n              sqrDist = -s0 * s0 + s1 * (s1 + 2 * b1) + c;\n            }\n          } else {\n            // region 5\n            s1 = -segExtent;\n            s0 = Math.max(0, -(a01 * s1 + b0));\n            sqrDist = -s0 * s0 + s1 * (s1 + 2 * b1) + c;\n          }\n        } else {\n          if (s1 <= -extDet) {\n            // region 4\n            s0 = Math.max(0, -(-a01 * segExtent + b0));\n            s1 = s0 > 0 ? -segExtent : Math.min(Math.max(-segExtent, -b1), segExtent);\n            sqrDist = -s0 * s0 + s1 * (s1 + 2 * b1) + c;\n          } else if (s1 <= extDet) {\n            // region 3\n            s0 = 0;\n            s1 = Math.min(Math.max(-segExtent, -b1), segExtent);\n            sqrDist = s1 * (s1 + 2 * b1) + c;\n          } else {\n            // region 2\n            s0 = Math.max(0, -(a01 * segExtent + b0));\n            s1 = s0 > 0 ? segExtent : Math.min(Math.max(-segExtent, -b1), segExtent);\n            sqrDist = -s0 * s0 + s1 * (s1 + 2 * b1) + c;\n          }\n        }\n      } else {\n        // Ray and segment are parallel.\n        s1 = a01 > 0 ? -segExtent : segExtent;\n        s0 = Math.max(0, -(a01 * s1 + b0));\n        sqrDist = -s0 * s0 + s1 * (s1 + 2 * b1) + c;\n      }\n\n      if (optionalPointOnRay) {\n        optionalPointOnRay.copy(this.direction).multiplyScalar(s0).add(this.origin);\n      }\n\n      if (optionalPointOnSegment) {\n        optionalPointOnSegment.copy(segDir).multiplyScalar(s1).add(segCenter);\n      }\n\n      return sqrDist;\n    };\n  }(),\n  intersectSphere: function () {\n    var v1 = new THREE.Vector3();\n    return function (sphere, optionalTarget) {\n      v1.subVectors(sphere.center, this.origin);\n      var tca = v1.dot(this.direction);\n      var d2 = v1.dot(v1) - tca * tca;\n      var radius2 = sphere.radius * sphere.radius;\n      if (d2 > radius2) return null;\n      var thc = Math.sqrt(radius2 - d2); // t0 = first intersect point - entrance on front of sphere\n\n      var t0 = tca - thc; // t1 = second intersect point - exit point on back of sphere\n\n      var t1 = tca + thc; // test to see if both t0 and t1 are behind the ray - if so, return null\n\n      if (t0 < 0 && t1 < 0) return null; // test to see if t0 is behind the ray:\n      // if it is, the ray is inside the sphere, so return the second exit point scaled by t1,\n      // in order to always return an intersect point that is in front of the ray.\n\n      if (t0 < 0) return this.at(t1, optionalTarget); // else t0 is in front of the ray, so return the first collision point scaled by t0\n\n      return this.at(t0, optionalTarget);\n    };\n  }(),\n  intersectsSphere: function (sphere) {\n    return this.distanceToPoint(sphere.center) <= sphere.radius;\n  },\n  distanceToPlane: function (plane) {\n    var denominator = plane.normal.dot(this.direction);\n\n    if (denominator === 0) {\n      // line is coplanar, return origin\n      if (plane.distanceToPoint(this.origin) === 0) {\n        return 0;\n      } // Null is preferable to undefined since undefined means.... it is undefined\n\n\n      return null;\n    }\n\n    var t = -(this.origin.dot(plane.normal) + plane.constant) / denominator; // Return if the ray never intersects the plane\n\n    return t >= 0 ? t : null;\n  },\n  intersectPlane: function (plane, optionalTarget) {\n    var t = this.distanceToPlane(plane);\n\n    if (t === null) {\n      return null;\n    }\n\n    return this.at(t, optionalTarget);\n  },\n  intersectsPlane: function (plane) {\n    // check if the ray lies on the plane first\n    var distToPoint = plane.distanceToPoint(this.origin);\n\n    if (distToPoint === 0) {\n      return true;\n    }\n\n    var denominator = plane.normal.dot(this.direction);\n\n    if (denominator * distToPoint < 0) {\n      return true;\n    } // ray origin is behind the plane (and is pointing behind it)\n\n\n    return false;\n  },\n  intersectBox: function (box, optionalTarget) {\n    var tmin, tmax, tymin, tymax, tzmin, tzmax;\n    var invdirx = 1 / this.direction.x,\n        invdiry = 1 / this.direction.y,\n        invdirz = 1 / this.direction.z;\n    var origin = this.origin;\n\n    if (invdirx >= 0) {\n      tmin = (box.min.x - origin.x) * invdirx;\n      tmax = (box.max.x - origin.x) * invdirx;\n    } else {\n      tmin = (box.max.x - origin.x) * invdirx;\n      tmax = (box.min.x - origin.x) * invdirx;\n    }\n\n    if (invdiry >= 0) {\n      tymin = (box.min.y - origin.y) * invdiry;\n      tymax = (box.max.y - origin.y) * invdiry;\n    } else {\n      tymin = (box.max.y - origin.y) * invdiry;\n      tymax = (box.min.y - origin.y) * invdiry;\n    }\n\n    if (tmin > tymax || tymin > tmax) return null; // These lines also handle the case where tmin or tmax is NaN\n    // (result of 0 * Infinity). x !== x returns true if x is NaN\n\n    if (tymin > tmin || tmin !== tmin) tmin = tymin;\n    if (tymax < tmax || tmax !== tmax) tmax = tymax;\n\n    if (invdirz >= 0) {\n      tzmin = (box.min.z - origin.z) * invdirz;\n      tzmax = (box.max.z - origin.z) * invdirz;\n    } else {\n      tzmin = (box.max.z - origin.z) * invdirz;\n      tzmax = (box.min.z - origin.z) * invdirz;\n    }\n\n    if (tmin > tzmax || tzmin > tmax) return null;\n    if (tzmin > tmin || tmin !== tmin) tmin = tzmin;\n    if (tzmax < tmax || tmax !== tmax) tmax = tzmax; //return point closest to the ray (positive side)\n\n    if (tmax < 0) return null;\n    return this.at(tmin >= 0 ? tmin : tmax, optionalTarget);\n  },\n  intersectsBox: function () {\n    var v = new THREE.Vector3();\n    return function (box) {\n      return this.intersectBox(box, v) !== null;\n    };\n  }(),\n  intersectTriangle: function () {\n    // Compute the offset origin, edges, and normal.\n    var diff = new THREE.Vector3();\n    var edge1 = new THREE.Vector3();\n    var edge2 = new THREE.Vector3();\n    var normal = new THREE.Vector3();\n    return function (a, b, c, backfaceCulling, optionalTarget) {\n      // from http://www.geometrictools.com/LibMathematics/Intersection/Wm5IntrRay3Triangle3.cpp\n      edge1.subVectors(b, a);\n      edge2.subVectors(c, a);\n      normal.crossVectors(edge1, edge2); // Solve Q + t*D = b1*E1 + b2*E2 (Q = kDiff, D = ray direction,\n      // E1 = kEdge1, E2 = kEdge2, N = Cross(E1,E2)) by\n      //   |Dot(D,N)|*b1 = sign(Dot(D,N))*Dot(D,Cross(Q,E2))\n      //   |Dot(D,N)|*b2 = sign(Dot(D,N))*Dot(D,Cross(E1,Q))\n      //   |Dot(D,N)|*t = -sign(Dot(D,N))*Dot(Q,N)\n\n      var DdN = this.direction.dot(normal);\n      var sign;\n\n      if (DdN > 0) {\n        if (backfaceCulling) return null;\n        sign = 1;\n      } else if (DdN < 0) {\n        sign = -1;\n        DdN = -DdN;\n      } else {\n        return null;\n      }\n\n      diff.subVectors(this.origin, a);\n      var DdQxE2 = sign * this.direction.dot(edge2.crossVectors(diff, edge2)); // b1 < 0, no intersection\n\n      if (DdQxE2 < 0) {\n        return null;\n      }\n\n      var DdE1xQ = sign * this.direction.dot(edge1.cross(diff)); // b2 < 0, no intersection\n\n      if (DdE1xQ < 0) {\n        return null;\n      } // b1+b2 > 1, no intersection\n\n\n      if (DdQxE2 + DdE1xQ > DdN) {\n        return null;\n      } // Line intersects triangle, check if ray does.\n\n\n      var QdN = -sign * diff.dot(normal); // t < 0, no intersection\n\n      if (QdN < 0) {\n        return null;\n      } // Ray intersects triangle.\n\n\n      return this.at(QdN / DdN, optionalTarget);\n    };\n  }(),\n  applyMatrix4: function (matrix4) {\n    this.direction.add(this.origin).applyMatrix4(matrix4);\n    this.origin.applyMatrix4(matrix4);\n    this.direction.sub(this.origin);\n    this.direction.normalize();\n    return this;\n  },\n  equals: function (ray) {\n    return ray.origin.equals(this.origin) && ray.direction.equals(this.direction);\n  }\n}; // File:src/math/Sphere.js\n\n/**\n * @author bhouston / http://clara.io\n * @author mrdoob / http://mrdoob.com/\n */\n\nTHREE.Sphere = function (center, radius) {\n  this.center = center !== undefined ? center : new THREE.Vector3();\n  this.radius = radius !== undefined ? radius : 0;\n};\n\nTHREE.Sphere.prototype = {\n  constructor: THREE.Sphere,\n  set: function (center, radius) {\n    this.center.copy(center);\n    this.radius = radius;\n    return this;\n  },\n  setFromPoints: function () {\n    var box = new THREE.Box3();\n    return function (points, optionalCenter) {\n      var center = this.center;\n\n      if (optionalCenter !== undefined) {\n        center.copy(optionalCenter);\n      } else {\n        box.setFromPoints(points).center(center);\n      }\n\n      var maxRadiusSq = 0;\n\n      for (var i = 0, il = points.length; i < il; i++) {\n        maxRadiusSq = Math.max(maxRadiusSq, center.distanceToSquared(points[i]));\n      }\n\n      this.radius = Math.sqrt(maxRadiusSq);\n      return this;\n    };\n  }(),\n  clone: function () {\n    return new this.constructor().copy(this);\n  },\n  copy: function (sphere) {\n    this.center.copy(sphere.center);\n    this.radius = sphere.radius;\n    return this;\n  },\n  empty: function () {\n    return this.radius <= 0;\n  },\n  containsPoint: function (point) {\n    return point.distanceToSquared(this.center) <= this.radius * this.radius;\n  },\n  distanceToPoint: function (point) {\n    return point.distanceTo(this.center) - this.radius;\n  },\n  intersectsSphere: function (sphere) {\n    var radiusSum = this.radius + sphere.radius;\n    return sphere.center.distanceToSquared(this.center) <= radiusSum * radiusSum;\n  },\n  intersectsBox: function (box) {\n    return box.intersectsSphere(this);\n  },\n  intersectsPlane: function (plane) {\n    // We use the following equation to compute the signed distance from\n    // the center of the sphere to the plane.\n    //\n    // distance = q * n - d\n    //\n    // If this distance is greater than the radius of the sphere,\n    // then there is no intersection.\n    return Math.abs(this.center.dot(plane.normal) - plane.constant) <= this.radius;\n  },\n  clampPoint: function (point, optionalTarget) {\n    var deltaLengthSq = this.center.distanceToSquared(point);\n    var result = optionalTarget || new THREE.Vector3();\n    result.copy(point);\n\n    if (deltaLengthSq > this.radius * this.radius) {\n      result.sub(this.center).normalize();\n      result.multiplyScalar(this.radius).add(this.center);\n    }\n\n    return result;\n  },\n  getBoundingBox: function (optionalTarget) {\n    var box = optionalTarget || new THREE.Box3();\n    box.set(this.center, this.center);\n    box.expandByScalar(this.radius);\n    return box;\n  },\n  applyMatrix4: function (matrix) {\n    this.center.applyMatrix4(matrix);\n    this.radius = this.radius * matrix.getMaxScaleOnAxis();\n    return this;\n  },\n  translate: function (offset) {\n    this.center.add(offset);\n    return this;\n  },\n  equals: function (sphere) {\n    return sphere.center.equals(this.center) && sphere.radius === this.radius;\n  }\n}; // File:src/math/Frustum.js\n\n/**\n * @author mrdoob / http://mrdoob.com/\n * @author alteredq / http://alteredqualia.com/\n * @author bhouston / http://clara.io\n */\n\nTHREE.Frustum = function (p0, p1, p2, p3, p4, p5) {\n  this.planes = [p0 !== undefined ? p0 : new THREE.Plane(), p1 !== undefined ? p1 : new THREE.Plane(), p2 !== undefined ? p2 : new THREE.Plane(), p3 !== undefined ? p3 : new THREE.Plane(), p4 !== undefined ? p4 : new THREE.Plane(), p5 !== undefined ? p5 : new THREE.Plane()];\n};\n\nTHREE.Frustum.prototype = {\n  constructor: THREE.Frustum,\n  set: function (p0, p1, p2, p3, p4, p5) {\n    var planes = this.planes;\n    planes[0].copy(p0);\n    planes[1].copy(p1);\n    planes[2].copy(p2);\n    planes[3].copy(p3);\n    planes[4].copy(p4);\n    planes[5].copy(p5);\n    return this;\n  },\n  clone: function () {\n    return new this.constructor().copy(this);\n  },\n  copy: function (frustum) {\n    var planes = this.planes;\n\n    for (var i = 0; i < 6; i++) {\n      planes[i].copy(frustum.planes[i]);\n    }\n\n    return this;\n  },\n  setFromMatrix: function (m) {\n    var planes = this.planes;\n    var me = m.elements;\n    var me0 = me[0],\n        me1 = me[1],\n        me2 = me[2],\n        me3 = me[3];\n    var me4 = me[4],\n        me5 = me[5],\n        me6 = me[6],\n        me7 = me[7];\n    var me8 = me[8],\n        me9 = me[9],\n        me10 = me[10],\n        me11 = me[11];\n    var me12 = me[12],\n        me13 = me[13],\n        me14 = me[14],\n        me15 = me[15];\n    planes[0].setComponents(me3 - me0, me7 - me4, me11 - me8, me15 - me12).normalize();\n    planes[1].setComponents(me3 + me0, me7 + me4, me11 + me8, me15 + me12).normalize();\n    planes[2].setComponents(me3 + me1, me7 + me5, me11 + me9, me15 + me13).normalize();\n    planes[3].setComponents(me3 - me1, me7 - me5, me11 - me9, me15 - me13).normalize();\n    planes[4].setComponents(me3 - me2, me7 - me6, me11 - me10, me15 - me14).normalize();\n    planes[5].setComponents(me3 + me2, me7 + me6, me11 + me10, me15 + me14).normalize();\n    return this;\n  },\n  intersectsObject: function () {\n    var sphere = new THREE.Sphere();\n    return function (object) {\n      var geometry = object.geometry;\n      if (geometry.boundingSphere === null) geometry.computeBoundingSphere();\n      sphere.copy(geometry.boundingSphere);\n      sphere.applyMatrix4(object.matrixWorld);\n      return this.intersectsSphere(sphere);\n    };\n  }(),\n  intersectsSphere: function (sphere) {\n    var planes = this.planes;\n    var center = sphere.center;\n    var negRadius = -sphere.radius;\n\n    for (var i = 0; i < 6; i++) {\n      var distance = planes[i].distanceToPoint(center);\n\n      if (distance < negRadius) {\n        return false;\n      }\n    }\n\n    return true;\n  },\n  intersectsBox: function () {\n    var p1 = new THREE.Vector3(),\n        p2 = new THREE.Vector3();\n    return function (box) {\n      var planes = this.planes;\n\n      for (var i = 0; i < 6; i++) {\n        var plane = planes[i];\n        p1.x = plane.normal.x > 0 ? box.min.x : box.max.x;\n        p2.x = plane.normal.x > 0 ? box.max.x : box.min.x;\n        p1.y = plane.normal.y > 0 ? box.min.y : box.max.y;\n        p2.y = plane.normal.y > 0 ? box.max.y : box.min.y;\n        p1.z = plane.normal.z > 0 ? box.min.z : box.max.z;\n        p2.z = plane.normal.z > 0 ? box.max.z : box.min.z;\n        var d1 = plane.distanceToPoint(p1);\n        var d2 = plane.distanceToPoint(p2); // if both outside plane, no intersection\n\n        if (d1 < 0 && d2 < 0) {\n          return false;\n        }\n      }\n\n      return true;\n    };\n  }(),\n  containsPoint: function (point) {\n    var planes = this.planes;\n\n    for (var i = 0; i < 6; i++) {\n      if (planes[i].distanceToPoint(point) < 0) {\n        return false;\n      }\n    }\n\n    return true;\n  }\n}; // File:src/core/EventDispatcher.js\n\n/**\n * https://github.com/mrdoob/eventdispatcher.js/\n */\n\nTHREE.EventDispatcher = function () {};\n\nTHREE.EventDispatcher.prototype = {\n  constructor: THREE.EventDispatcher,\n  apply: function (object) {\n    object.addEventListener = THREE.EventDispatcher.prototype.addEventListener;\n    object.hasEventListener = THREE.EventDispatcher.prototype.hasEventListener;\n    object.removeEventListener = THREE.EventDispatcher.prototype.removeEventListener;\n    object.dispatchEvent = THREE.EventDispatcher.prototype.dispatchEvent;\n  },\n  addEventListener: function (type, listener) {\n    if (this._listeners === undefined) this._listeners = {};\n    var listeners = this._listeners;\n\n    if (listeners[type] === undefined) {\n      listeners[type] = [];\n    }\n\n    if (listeners[type].indexOf(listener) === -1) {\n      listeners[type].push(listener);\n    }\n  },\n  hasEventListener: function (type, listener) {\n    if (this._listeners === undefined) return false;\n    var listeners = this._listeners;\n\n    if (listeners[type] !== undefined && listeners[type].indexOf(listener) !== -1) {\n      return true;\n    }\n\n    return false;\n  },\n  removeEventListener: function (type, listener) {\n    if (this._listeners === undefined) return;\n    var listeners = this._listeners;\n    var listenerArray = listeners[type];\n\n    if (listenerArray !== undefined) {\n      var index = listenerArray.indexOf(listener);\n\n      if (index !== -1) {\n        listenerArray.splice(index, 1);\n      }\n    }\n  },\n  dispatchEvent: function (event) {\n    if (this._listeners === undefined) return;\n    var listeners = this._listeners;\n    var listenerArray = listeners[event.type];\n\n    if (listenerArray !== undefined) {\n      event.target = this;\n      var array = [];\n      var length = listenerArray.length;\n\n      for (var i = 0; i < length; i++) {\n        array[i] = listenerArray[i];\n      }\n\n      for (var i = 0; i < length; i++) {\n        array[i].call(this, event);\n      }\n    }\n  }\n}; // File:src/core/Layers.js\n\n/**\n * @author mrdoob / http://mrdoob.com/\n */\n\nTHREE.Layers = function () {\n  this.mask = 1;\n};\n\nTHREE.Layers.prototype = {\n  constructor: THREE.Layers,\n  set: function (channel) {\n    this.mask = 1 << channel;\n  },\n  enable: function (channel) {\n    this.mask |= 1 << channel;\n  },\n  toggle: function (channel) {\n    this.mask ^= 1 << channel;\n  },\n  disable: function (channel) {\n    this.mask &= ~(1 << channel);\n  },\n  test: function (layers) {\n    return (this.mask & layers.mask) !== 0;\n  }\n}; // File:src/core/Object3D.js\n\n/**\n * @author mrdoob / http://mrdoob.com/\n * @author mikael emtinger / http://gomo.se/\n * @author alteredq / http://alteredqualia.com/\n * @author WestLangley / http://github.com/WestLangley\n * @author elephantatwork / www.elephantatwork.ch\n */\n\nTHREE.Object3D = function () {\n  Object.defineProperty(this, 'id', {\n    value: THREE.Object3DIdCount++\n  });\n  this.uuid = THREE.Math.generateUUID();\n  this.name = '';\n  this.type = 'Object3D';\n  this.parent = null;\n  this.children = [];\n  this.up = THREE.Object3D.DefaultUp.clone();\n  var position = new THREE.Vector3();\n  var rotation = new THREE.Euler();\n  var quaternion = new THREE.Quaternion();\n  var scale = new THREE.Vector3(1, 1, 1);\n\n  function onRotationChange() {\n    quaternion.setFromEuler(rotation, false);\n  }\n\n  function onQuaternionChange() {\n    rotation.setFromQuaternion(quaternion, undefined, false);\n  }\n\n  rotation.onChange(onRotationChange);\n  quaternion.onChange(onQuaternionChange);\n  Object.defineProperties(this, {\n    position: {\n      enumerable: true,\n      value: position\n    },\n    rotation: {\n      enumerable: true,\n      value: rotation\n    },\n    quaternion: {\n      enumerable: true,\n      value: quaternion\n    },\n    scale: {\n      enumerable: true,\n      value: scale\n    },\n    modelViewMatrix: {\n      value: new THREE.Matrix4()\n    },\n    normalMatrix: {\n      value: new THREE.Matrix3()\n    }\n  });\n  this.rotationAutoUpdate = true;\n  this.matrix = new THREE.Matrix4();\n  this.matrixWorld = new THREE.Matrix4();\n  this.matrixAutoUpdate = THREE.Object3D.DefaultMatrixAutoUpdate;\n  this.matrixWorldNeedsUpdate = false;\n  this.layers = new THREE.Layers();\n  this.visible = true;\n  this.castShadow = false;\n  this.receiveShadow = false;\n  this.frustumCulled = true;\n  this.renderOrder = 0;\n  this.userData = {};\n};\n\nTHREE.Object3D.DefaultUp = new THREE.Vector3(0, 1, 0);\nTHREE.Object3D.DefaultMatrixAutoUpdate = true;\nTHREE.Object3D.prototype = {\n  constructor: THREE.Object3D,\n  applyMatrix: function (matrix) {\n    this.matrix.multiplyMatrices(matrix, this.matrix);\n    this.matrix.decompose(this.position, this.quaternion, this.scale);\n  },\n  setRotationFromAxisAngle: function (axis, angle) {\n    // assumes axis is normalized\n    this.quaternion.setFromAxisAngle(axis, angle);\n  },\n  setRotationFromEuler: function (euler) {\n    this.quaternion.setFromEuler(euler, true);\n  },\n  setRotationFromMatrix: function (m) {\n    // assumes the upper 3x3 of m is a pure rotation matrix (i.e, unscaled)\n    this.quaternion.setFromRotationMatrix(m);\n  },\n  setRotationFromQuaternion: function (q) {\n    // assumes q is normalized\n    this.quaternion.copy(q);\n  },\n  rotateOnAxis: function () {\n    // rotate object on axis in object space\n    // axis is assumed to be normalized\n    var q1 = new THREE.Quaternion();\n    return function (axis, angle) {\n      q1.setFromAxisAngle(axis, angle);\n      this.quaternion.multiply(q1);\n      return this;\n    };\n  }(),\n  rotateX: function () {\n    var v1 = new THREE.Vector3(1, 0, 0);\n    return function (angle) {\n      return this.rotateOnAxis(v1, angle);\n    };\n  }(),\n  rotateY: function () {\n    var v1 = new THREE.Vector3(0, 1, 0);\n    return function (angle) {\n      return this.rotateOnAxis(v1, angle);\n    };\n  }(),\n  rotateZ: function () {\n    var v1 = new THREE.Vector3(0, 0, 1);\n    return function (angle) {\n      return this.rotateOnAxis(v1, angle);\n    };\n  }(),\n  translateOnAxis: function () {\n    // translate object by distance along axis in object space\n    // axis is assumed to be normalized\n    var v1 = new THREE.Vector3();\n    return function (axis, distance) {\n      v1.copy(axis).applyQuaternion(this.quaternion);\n      this.position.add(v1.multiplyScalar(distance));\n      return this;\n    };\n  }(),\n  translateX: function () {\n    var v1 = new THREE.Vector3(1, 0, 0);\n    return function (distance) {\n      return this.translateOnAxis(v1, distance);\n    };\n  }(),\n  translateY: function () {\n    var v1 = new THREE.Vector3(0, 1, 0);\n    return function (distance) {\n      return this.translateOnAxis(v1, distance);\n    };\n  }(),\n  translateZ: function () {\n    var v1 = new THREE.Vector3(0, 0, 1);\n    return function (distance) {\n      return this.translateOnAxis(v1, distance);\n    };\n  }(),\n  localToWorld: function (vector) {\n    return vector.applyMatrix4(this.matrixWorld);\n  },\n  worldToLocal: function () {\n    var m1 = new THREE.Matrix4();\n    return function (vector) {\n      return vector.applyMatrix4(m1.getInverse(this.matrixWorld));\n    };\n  }(),\n  lookAt: function () {\n    // This routine does not support objects with rotated and/or translated parent(s)\n    var m1 = new THREE.Matrix4();\n    return function (vector) {\n      m1.lookAt(vector, this.position, this.up);\n      this.quaternion.setFromRotationMatrix(m1);\n    };\n  }(),\n  add: function (object) {\n    if (arguments.length > 1) {\n      for (var i = 0; i < arguments.length; i++) {\n        this.add(arguments[i]);\n      }\n\n      return this;\n    }\n\n    if (object === this) {\n      return this;\n    }\n\n    if (object instanceof THREE.Object3D) {\n      if (object.parent !== null) {\n        object.parent.remove(object);\n      }\n\n      object.parent = this;\n      object.dispatchEvent({\n        type: 'added'\n      });\n      this.children.push(object);\n    }\n\n    return this;\n  },\n  remove: function (object) {\n    if (arguments.length > 1) {\n      for (var i = 0; i < arguments.length; i++) {\n        this.remove(arguments[i]);\n      }\n    }\n\n    var index = this.children.indexOf(object);\n\n    if (index !== -1) {\n      object.parent = null;\n      object.dispatchEvent({\n        type: 'removed'\n      });\n      this.children.splice(index, 1);\n    }\n  },\n  getObjectById: function (id) {\n    return this.getObjectByProperty('id', id);\n  },\n  getObjectByName: function (name) {\n    return this.getObjectByProperty('name', name);\n  },\n  getObjectByProperty: function (name, value) {\n    if (this[name] === value) return this;\n\n    for (var i = 0, l = this.children.length; i < l; i++) {\n      var child = this.children[i];\n      var object = child.getObjectByProperty(name, value);\n\n      if (object !== undefined) {\n        return object;\n      }\n    }\n\n    return undefined;\n  },\n  getWorldPosition: function (optionalTarget) {\n    var result = optionalTarget || new THREE.Vector3();\n    this.updateMatrixWorld(true);\n    return result.setFromMatrixPosition(this.matrixWorld);\n  },\n  getWorldQuaternion: function () {\n    var position = new THREE.Vector3();\n    var scale = new THREE.Vector3();\n    return function (optionalTarget) {\n      var result = optionalTarget || new THREE.Quaternion();\n      this.updateMatrixWorld(true);\n      this.matrixWorld.decompose(position, result, scale);\n      return result;\n    };\n  }(),\n  getWorldRotation: function () {\n    var quaternion = new THREE.Quaternion();\n    return function (optionalTarget) {\n      var result = optionalTarget || new THREE.Euler();\n      this.getWorldQuaternion(quaternion);\n      return result.setFromQuaternion(quaternion, this.rotation.order, false);\n    };\n  }(),\n  getWorldScale: function () {\n    var position = new THREE.Vector3();\n    var quaternion = new THREE.Quaternion();\n    return function (optionalTarget) {\n      var result = optionalTarget || new THREE.Vector3();\n      this.updateMatrixWorld(true);\n      this.matrixWorld.decompose(position, quaternion, result);\n      return result;\n    };\n  }(),\n  getWorldDirection: function () {\n    var quaternion = new THREE.Quaternion();\n    return function (optionalTarget) {\n      var result = optionalTarget || new THREE.Vector3();\n      this.getWorldQuaternion(quaternion);\n      return result.set(0, 0, 1).applyQuaternion(quaternion);\n    };\n  }(),\n  raycast: function () {},\n  traverse: function (callback) {\n    callback(this);\n    var children = this.children;\n\n    for (var i = 0, l = children.length; i < l; i++) {\n      children[i].traverse(callback);\n    }\n  },\n  traverseVisible: function (callback) {\n    if (this.visible === false) return;\n    callback(this);\n    var children = this.children;\n\n    for (var i = 0, l = children.length; i < l; i++) {\n      children[i].traverseVisible(callback);\n    }\n  },\n  traverseAncestors: function (callback) {\n    var parent = this.parent;\n\n    if (parent !== null) {\n      callback(parent);\n      parent.traverseAncestors(callback);\n    }\n  },\n  updateMatrix: function () {\n    this.matrix.compose(this.position, this.quaternion, this.scale);\n    this.matrixWorldNeedsUpdate = true;\n  },\n  updateMatrixWorld: function (force) {\n    if (this.matrixAutoUpdate === true) this.updateMatrix();\n\n    if (this.matrixWorldNeedsUpdate === true || force === true) {\n      if (this.parent === null) {\n        this.matrixWorld.copy(this.matrix);\n      } else {\n        this.matrixWorld.multiplyMatrices(this.parent.matrixWorld, this.matrix);\n      }\n\n      this.matrixWorldNeedsUpdate = false;\n      force = true;\n    } // update children\n\n\n    for (var i = 0, l = this.children.length; i < l; i++) {\n      this.children[i].updateMatrixWorld(force);\n    }\n  },\n  toJSON: function (meta) {\n    var isRootObject = meta === undefined;\n    var output = {}; // meta is a hash used to collect geometries, materials.\n    // not providing it implies that this is the root object\n    // being serialized.\n\n    if (isRootObject) {\n      // initialize meta obj\n      meta = {\n        geometries: {},\n        materials: {},\n        textures: {},\n        images: {}\n      };\n      output.metadata = {\n        version: 4.4,\n        type: 'Object',\n        generator: 'Object3D.toJSON'\n      };\n    } // standard Object3D serialization\n\n\n    var object = {};\n    object.uuid = this.uuid;\n    object.type = this.type;\n    if (this.name !== '') object.name = this.name;\n    if (JSON.stringify(this.userData) !== '{}') object.userData = this.userData;\n    if (this.castShadow === true) object.castShadow = true;\n    if (this.receiveShadow === true) object.receiveShadow = true;\n    if (this.visible === false) object.visible = false;\n    object.matrix = this.matrix.toArray(); //\n\n    if (this.geometry !== undefined) {\n      if (meta.geometries[this.geometry.uuid] === undefined) {\n        meta.geometries[this.geometry.uuid] = this.geometry.toJSON(meta);\n      }\n\n      object.geometry = this.geometry.uuid;\n    }\n\n    if (this.material !== undefined) {\n      if (meta.materials[this.material.uuid] === undefined) {\n        meta.materials[this.material.uuid] = this.material.toJSON(meta);\n      }\n\n      object.material = this.material.uuid;\n    } //\n\n\n    if (this.children.length > 0) {\n      object.children = [];\n\n      for (var i = 0; i < this.children.length; i++) {\n        object.children.push(this.children[i].toJSON(meta).object);\n      }\n    }\n\n    if (isRootObject) {\n      var geometries = extractFromCache(meta.geometries);\n      var materials = extractFromCache(meta.materials);\n      var textures = extractFromCache(meta.textures);\n      var images = extractFromCache(meta.images);\n      if (geometries.length > 0) output.geometries = geometries;\n      if (materials.length > 0) output.materials = materials;\n      if (textures.length > 0) output.textures = textures;\n      if (images.length > 0) output.images = images;\n    }\n\n    output.object = object;\n    return output; // extract data from the cache hash\n    // remove metadata on each item\n    // and return as array\n\n    function extractFromCache(cache) {\n      var values = [];\n\n      for (var key in cache) {\n        var data = cache[key];\n        delete data.metadata;\n        values.push(data);\n      }\n\n      return values;\n    }\n  },\n  clone: function (recursive) {\n    return new this.constructor().copy(this, recursive);\n  },\n  copy: function (source, recursive) {\n    if (recursive === undefined) recursive = true;\n    this.name = source.name;\n    this.up.copy(source.up);\n    this.position.copy(source.position);\n    this.quaternion.copy(source.quaternion);\n    this.scale.copy(source.scale);\n    this.rotationAutoUpdate = source.rotationAutoUpdate;\n    this.matrix.copy(source.matrix);\n    this.matrixWorld.copy(source.matrixWorld);\n    this.matrixAutoUpdate = source.matrixAutoUpdate;\n    this.matrixWorldNeedsUpdate = source.matrixWorldNeedsUpdate;\n    this.visible = source.visible;\n    this.castShadow = source.castShadow;\n    this.receiveShadow = source.receiveShadow;\n    this.frustumCulled = source.frustumCulled;\n    this.renderOrder = source.renderOrder;\n    this.userData = JSON.parse(JSON.stringify(source.userData));\n\n    if (recursive === true) {\n      for (var i = 0; i < source.children.length; i++) {\n        var child = source.children[i];\n        this.add(child.clone());\n      }\n    }\n\n    return this;\n  }\n};\nTHREE.EventDispatcher.prototype.apply(THREE.Object3D.prototype);\nTHREE.Object3DIdCount = 0; // File:src/core/Face3.js\n\n/**\n * @author mrdoob / http://mrdoob.com/\n * @author alteredq / http://alteredqualia.com/\n */\n\nTHREE.Face3 = function (a, b, c, normal, color, materialIndex) {\n  this.a = a;\n  this.b = b;\n  this.c = c;\n  this.normal = normal instanceof THREE.Vector3 ? normal : new THREE.Vector3();\n  this.vertexNormals = Array.isArray(normal) ? normal : [];\n  this.color = color instanceof THREE.Color ? color : new THREE.Color();\n  this.vertexColors = Array.isArray(color) ? color : [];\n  this.materialIndex = materialIndex !== undefined ? materialIndex : 0;\n};\n\nTHREE.Face3.prototype = {\n  constructor: THREE.Face3,\n  clone: function () {\n    return new this.constructor().copy(this);\n  },\n  copy: function (source) {\n    this.a = source.a;\n    this.b = source.b;\n    this.c = source.c;\n    this.normal.copy(source.normal);\n    this.color.copy(source.color);\n    this.materialIndex = source.materialIndex;\n\n    for (var i = 0, il = source.vertexNormals.length; i < il; i++) {\n      this.vertexNormals[i] = source.vertexNormals[i].clone();\n    }\n\n    for (var i = 0, il = source.vertexColors.length; i < il; i++) {\n      this.vertexColors[i] = source.vertexColors[i].clone();\n    }\n\n    return this;\n  }\n}; // File:src/core/BufferAttribute.js\n\n/**\n * @author mrdoob / http://mrdoob.com/\n */\n\nTHREE.BufferAttribute = function (array, itemSize) {\n  this.uuid = THREE.Math.generateUUID();\n  this.array = array;\n  this.itemSize = itemSize;\n  this.dynamic = false;\n  this.updateRange = {\n    offset: 0,\n    count: -1\n  };\n  this.version = 0;\n};\n\nTHREE.BufferAttribute.prototype = {\n  constructor: THREE.BufferAttribute,\n\n  get count() {\n    return this.array.length / this.itemSize;\n  },\n\n  set needsUpdate(value) {\n    if (value === true) this.version++;\n  },\n\n  setDynamic: function (value) {\n    this.dynamic = value;\n    return this;\n  },\n  copy: function (source) {\n    this.array = new source.array.constructor(source.array);\n    this.itemSize = source.itemSize;\n    this.dynamic = source.dynamic;\n    return this;\n  },\n  copyAt: function (index1, attribute, index2) {\n    index1 *= this.itemSize;\n    index2 *= attribute.itemSize;\n\n    for (var i = 0, l = this.itemSize; i < l; i++) {\n      this.array[index1 + i] = attribute.array[index2 + i];\n    }\n\n    return this;\n  },\n  copyArray: function (array) {\n    this.array.set(array);\n    return this;\n  },\n  copyColorsArray: function (colors) {\n    var array = this.array,\n        offset = 0;\n\n    for (var i = 0, l = colors.length; i < l; i++) {\n      var color = colors[i];\n\n      if (color === undefined) {\n        color = new THREE.Color();\n      }\n\n      array[offset++] = color.r;\n      array[offset++] = color.g;\n      array[offset++] = color.b;\n    }\n\n    return this;\n  },\n  copyIndicesArray: function (indices) {\n    var array = this.array,\n        offset = 0;\n\n    for (var i = 0, l = indices.length; i < l; i++) {\n      var index = indices[i];\n      array[offset++] = index.a;\n      array[offset++] = index.b;\n      array[offset++] = index.c;\n    }\n\n    return this;\n  },\n  copyVector2sArray: function (vectors) {\n    var array = this.array,\n        offset = 0;\n\n    for (var i = 0, l = vectors.length; i < l; i++) {\n      var vector = vectors[i];\n\n      if (vector === undefined) {\n        vector = new THREE.Vector2();\n      }\n\n      array[offset++] = vector.x;\n      array[offset++] = vector.y;\n    }\n\n    return this;\n  },\n  copyVector3sArray: function (vectors) {\n    var array = this.array,\n        offset = 0;\n\n    for (var i = 0, l = vectors.length; i < l; i++) {\n      var vector = vectors[i];\n\n      if (vector === undefined) {\n        vector = new THREE.Vector3();\n      }\n\n      array[offset++] = vector.x;\n      array[offset++] = vector.y;\n      array[offset++] = vector.z;\n    }\n\n    return this;\n  },\n  copyVector4sArray: function (vectors) {\n    var array = this.array,\n        offset = 0;\n\n    for (var i = 0, l = vectors.length; i < l; i++) {\n      var vector = vectors[i];\n\n      if (vector === undefined) {\n        vector = new THREE.Vector4();\n      }\n\n      array[offset++] = vector.x;\n      array[offset++] = vector.y;\n      array[offset++] = vector.z;\n      array[offset++] = vector.w;\n    }\n\n    return this;\n  },\n  set: function (value, offset) {\n    if (offset === undefined) offset = 0;\n    this.array.set(value, offset);\n    return this;\n  },\n  getX: function (index) {\n    return this.array[index * this.itemSize];\n  },\n  setX: function (index, x) {\n    this.array[index * this.itemSize] = x;\n    return this;\n  },\n  getY: function (index) {\n    return this.array[index * this.itemSize + 1];\n  },\n  setY: function (index, y) {\n    this.array[index * this.itemSize + 1] = y;\n    return this;\n  },\n  getZ: function (index) {\n    return this.array[index * this.itemSize + 2];\n  },\n  setZ: function (index, z) {\n    this.array[index * this.itemSize + 2] = z;\n    return this;\n  },\n  getW: function (index) {\n    return this.array[index * this.itemSize + 3];\n  },\n  setW: function (index, w) {\n    this.array[index * this.itemSize + 3] = w;\n    return this;\n  },\n  setXY: function (index, x, y) {\n    index *= this.itemSize;\n    this.array[index + 0] = x;\n    this.array[index + 1] = y;\n    return this;\n  },\n  setXYZ: function (index, x, y, z) {\n    index *= this.itemSize;\n    this.array[index + 0] = x;\n    this.array[index + 1] = y;\n    this.array[index + 2] = z;\n    return this;\n  },\n  setXYZW: function (index, x, y, z, w) {\n    index *= this.itemSize;\n    this.array[index + 0] = x;\n    this.array[index + 1] = y;\n    this.array[index + 2] = z;\n    this.array[index + 3] = w;\n    return this;\n  },\n  clone: function () {\n    return new this.constructor().copy(this);\n  }\n}; //\n\nTHREE.Int8Attribute = function (array, itemSize) {\n  return new THREE.BufferAttribute(new Int8Array(array), itemSize);\n};\n\nTHREE.Uint8Attribute = function (array, itemSize) {\n  return new THREE.BufferAttribute(new Uint8Array(array), itemSize);\n};\n\nTHREE.Uint8ClampedAttribute = function (array, itemSize) {\n  return new THREE.BufferAttribute(new Uint8ClampedArray(array), itemSize);\n};\n\nTHREE.Int16Attribute = function (array, itemSize) {\n  return new THREE.BufferAttribute(new Int16Array(array), itemSize);\n};\n\nTHREE.Uint16Attribute = function (array, itemSize) {\n  return new THREE.BufferAttribute(new Uint16Array(array), itemSize);\n};\n\nTHREE.Int32Attribute = function (array, itemSize) {\n  return new THREE.BufferAttribute(new Int32Array(array), itemSize);\n};\n\nTHREE.Uint32Attribute = function (array, itemSize) {\n  return new THREE.BufferAttribute(new Uint32Array(array), itemSize);\n};\n\nTHREE.Float32Attribute = function (array, itemSize) {\n  return new THREE.BufferAttribute(new Float32Array(array), itemSize);\n};\n\nTHREE.Float64Attribute = function (array, itemSize) {\n  return new THREE.BufferAttribute(new Float64Array(array), itemSize);\n}; // Deprecated\n\n\nTHREE.DynamicBufferAttribute = function (array, itemSize) {\n  return new THREE.BufferAttribute(array, itemSize).setDynamic(true);\n}; // File:src/core/InstancedBufferAttribute.js\n\n/**\n * @author benaadams / https://twitter.com/ben_a_adams\n */\n\n\nTHREE.InstancedBufferAttribute = function (array, itemSize, meshPerAttribute) {\n  THREE.BufferAttribute.call(this, array, itemSize);\n  this.meshPerAttribute = meshPerAttribute || 1;\n};\n\nTHREE.InstancedBufferAttribute.prototype = Object.create(THREE.BufferAttribute.prototype);\nTHREE.InstancedBufferAttribute.prototype.constructor = THREE.InstancedBufferAttribute;\n\nTHREE.InstancedBufferAttribute.prototype.copy = function (source) {\n  THREE.BufferAttribute.prototype.copy.call(this, source);\n  this.meshPerAttribute = source.meshPerAttribute;\n  return this;\n}; // File:src/core/BufferGeometry.js\n\n/**\n * @author alteredq / http://alteredqualia.com/\n * @author mrdoob / http://mrdoob.com/\n */\n\n\nTHREE.BufferGeometry = function () {\n  Object.defineProperty(this, 'id', {\n    value: THREE.GeometryIdCount++\n  });\n  this.uuid = THREE.Math.generateUUID();\n  this.name = '';\n  this.type = 'BufferGeometry';\n  this.index = null;\n  this.attributes = {};\n  this.morphAttributes = {};\n  this.groups = [];\n  this.boundingBox = null;\n  this.boundingSphere = null;\n  this.drawRange = {\n    start: 0,\n    count: Infinity\n  };\n};\n\nTHREE.BufferGeometry.prototype = {\n  constructor: THREE.BufferGeometry,\n  getIndex: function () {\n    return this.index;\n  },\n  setIndex: function (index) {\n    this.index = index;\n  },\n  addAttribute: function (name, attribute) {\n    if (attribute instanceof THREE.BufferAttribute === false && attribute instanceof THREE.InterleavedBufferAttribute === false) {\n      this.addAttribute(name, new THREE.BufferAttribute(arguments[1], arguments[2]));\n      return;\n    }\n\n    if (name === 'index') {\n      this.setIndex(attribute);\n      return;\n    }\n\n    this.attributes[name] = attribute;\n    return this;\n  },\n  getAttribute: function (name) {\n    return this.attributes[name];\n  },\n  removeAttribute: function (name) {\n    delete this.attributes[name];\n    return this;\n  },\n  addGroup: function (start, count, materialIndex) {\n    this.groups.push({\n      start: start,\n      count: count,\n      materialIndex: materialIndex !== undefined ? materialIndex : 0\n    });\n  },\n  clearGroups: function () {\n    this.groups = [];\n  },\n  setDrawRange: function (start, count) {\n    this.drawRange.start = start;\n    this.drawRange.count = count;\n  },\n  applyMatrix: function (matrix) {\n    var position = this.attributes.position;\n\n    if (position !== undefined) {\n      matrix.applyToVector3Array(position.array);\n      position.needsUpdate = true;\n    }\n\n    var normal = this.attributes.normal;\n\n    if (normal !== undefined) {\n      var normalMatrix = new THREE.Matrix3().getNormalMatrix(matrix);\n      normalMatrix.applyToVector3Array(normal.array);\n      normal.needsUpdate = true;\n    }\n\n    if (this.boundingBox !== null) {\n      this.computeBoundingBox();\n    }\n\n    if (this.boundingSphere !== null) {\n      this.computeBoundingSphere();\n    }\n\n    return this;\n  },\n  rotateX: function () {\n    // rotate geometry around world x-axis\n    var m1;\n    return function rotateX(angle) {\n      if (m1 === undefined) m1 = new THREE.Matrix4();\n      m1.makeRotationX(angle);\n      this.applyMatrix(m1);\n      return this;\n    };\n  }(),\n  rotateY: function () {\n    // rotate geometry around world y-axis\n    var m1;\n    return function rotateY(angle) {\n      if (m1 === undefined) m1 = new THREE.Matrix4();\n      m1.makeRotationY(angle);\n      this.applyMatrix(m1);\n      return this;\n    };\n  }(),\n  rotateZ: function () {\n    // rotate geometry around world z-axis\n    var m1;\n    return function rotateZ(angle) {\n      if (m1 === undefined) m1 = new THREE.Matrix4();\n      m1.makeRotationZ(angle);\n      this.applyMatrix(m1);\n      return this;\n    };\n  }(),\n  translate: function () {\n    // translate geometry\n    var m1;\n    return function translate(x, y, z) {\n      if (m1 === undefined) m1 = new THREE.Matrix4();\n      m1.makeTranslation(x, y, z);\n      this.applyMatrix(m1);\n      return this;\n    };\n  }(),\n  scale: function () {\n    // scale geometry\n    var m1;\n    return function scale(x, y, z) {\n      if (m1 === undefined) m1 = new THREE.Matrix4();\n      m1.makeScale(x, y, z);\n      this.applyMatrix(m1);\n      return this;\n    };\n  }(),\n  lookAt: function () {\n    var obj;\n    return function lookAt(vector) {\n      if (obj === undefined) obj = new THREE.Object3D();\n      obj.lookAt(vector);\n      obj.updateMatrix();\n      this.applyMatrix(obj.matrix);\n    };\n  }(),\n  center: function () {\n    this.computeBoundingBox();\n    var offset = this.boundingBox.center().negate();\n    this.translate(offset.x, offset.y, offset.z);\n    return offset;\n  },\n  setFromObject: function (object) {\n    // console.log( 'THREE.BufferGeometry.setFromObject(). Converting', object, this );\n    var geometry = object.geometry;\n\n    if (object instanceof THREE.Points || object instanceof THREE.Line) {\n      var positions = new THREE.Float32Attribute(geometry.vertices.length * 3, 3);\n      var colors = new THREE.Float32Attribute(geometry.colors.length * 3, 3);\n      this.addAttribute('position', positions.copyVector3sArray(geometry.vertices));\n      this.addAttribute('color', colors.copyColorsArray(geometry.colors));\n\n      if (geometry.lineDistances && geometry.lineDistances.length === geometry.vertices.length) {\n        var lineDistances = new THREE.Float32Attribute(geometry.lineDistances.length, 1);\n        this.addAttribute('lineDistance', lineDistances.copyArray(geometry.lineDistances));\n      }\n\n      if (geometry.boundingSphere !== null) {\n        this.boundingSphere = geometry.boundingSphere.clone();\n      }\n\n      if (geometry.boundingBox !== null) {\n        this.boundingBox = geometry.boundingBox.clone();\n      }\n    } else if (object instanceof THREE.Mesh) {\n      if (geometry instanceof THREE.Geometry) {\n        this.fromGeometry(geometry);\n      }\n    }\n\n    return this;\n  },\n  updateFromObject: function (object) {\n    var geometry = object.geometry;\n\n    if (object instanceof THREE.Mesh) {\n      var direct = geometry.__directGeometry;\n\n      if (direct === undefined) {\n        return this.fromGeometry(geometry);\n      }\n\n      direct.verticesNeedUpdate = geometry.verticesNeedUpdate;\n      direct.normalsNeedUpdate = geometry.normalsNeedUpdate;\n      direct.colorsNeedUpdate = geometry.colorsNeedUpdate;\n      direct.uvsNeedUpdate = geometry.uvsNeedUpdate;\n      direct.groupsNeedUpdate = geometry.groupsNeedUpdate;\n      geometry.verticesNeedUpdate = false;\n      geometry.normalsNeedUpdate = false;\n      geometry.colorsNeedUpdate = false;\n      geometry.uvsNeedUpdate = false;\n      geometry.groupsNeedUpdate = false;\n      geometry = direct;\n    }\n\n    if (geometry.verticesNeedUpdate === true) {\n      var attribute = this.attributes.position;\n\n      if (attribute !== undefined) {\n        attribute.copyVector3sArray(geometry.vertices);\n        attribute.needsUpdate = true;\n      }\n\n      geometry.verticesNeedUpdate = false;\n    }\n\n    if (geometry.normalsNeedUpdate === true) {\n      var attribute = this.attributes.normal;\n\n      if (attribute !== undefined) {\n        attribute.copyVector3sArray(geometry.normals);\n        attribute.needsUpdate = true;\n      }\n\n      geometry.normalsNeedUpdate = false;\n    }\n\n    if (geometry.colorsNeedUpdate === true) {\n      var attribute = this.attributes.color;\n\n      if (attribute !== undefined) {\n        attribute.copyColorsArray(geometry.colors);\n        attribute.needsUpdate = true;\n      }\n\n      geometry.colorsNeedUpdate = false;\n    }\n\n    if (geometry.uvsNeedUpdate) {\n      var attribute = this.attributes.uv;\n\n      if (attribute !== undefined) {\n        attribute.copyVector2sArray(geometry.uvs);\n        attribute.needsUpdate = true;\n      }\n\n      geometry.uvsNeedUpdate = false;\n    }\n\n    if (geometry.lineDistancesNeedUpdate) {\n      var attribute = this.attributes.lineDistance;\n\n      if (attribute !== undefined) {\n        attribute.copyArray(geometry.lineDistances);\n        attribute.needsUpdate = true;\n      }\n\n      geometry.lineDistancesNeedUpdate = false;\n    }\n\n    if (geometry.groupsNeedUpdate) {\n      geometry.computeGroups(object.geometry);\n      this.groups = geometry.groups;\n      geometry.groupsNeedUpdate = false;\n    }\n\n    return this;\n  },\n  fromGeometry: function (geometry) {\n    geometry.__directGeometry = new THREE.DirectGeometry().fromGeometry(geometry);\n    return this.fromDirectGeometry(geometry.__directGeometry);\n  },\n  fromDirectGeometry: function (geometry) {\n    var positions = new Float32Array(geometry.vertices.length * 3);\n    this.addAttribute('position', new THREE.BufferAttribute(positions, 3).copyVector3sArray(geometry.vertices));\n\n    if (geometry.normals.length > 0) {\n      var normals = new Float32Array(geometry.normals.length * 3);\n      this.addAttribute('normal', new THREE.BufferAttribute(normals, 3).copyVector3sArray(geometry.normals));\n    }\n\n    if (geometry.colors.length > 0) {\n      var colors = new Float32Array(geometry.colors.length * 3);\n      this.addAttribute('color', new THREE.BufferAttribute(colors, 3).copyColorsArray(geometry.colors));\n    }\n\n    if (geometry.uvs.length > 0) {\n      var uvs = new Float32Array(geometry.uvs.length * 2);\n      this.addAttribute('uv', new THREE.BufferAttribute(uvs, 2).copyVector2sArray(geometry.uvs));\n    }\n\n    if (geometry.uvs2.length > 0) {\n      var uvs2 = new Float32Array(geometry.uvs2.length * 2);\n      this.addAttribute('uv2', new THREE.BufferAttribute(uvs2, 2).copyVector2sArray(geometry.uvs2));\n    }\n\n    if (geometry.indices.length > 0) {\n      var TypeArray = geometry.vertices.length > 65535 ? Uint32Array : Uint16Array;\n      var indices = new TypeArray(geometry.indices.length * 3);\n      this.setIndex(new THREE.BufferAttribute(indices, 1).copyIndicesArray(geometry.indices));\n    } // groups\n\n\n    this.groups = geometry.groups; // morphs\n\n    for (var name in geometry.morphTargets) {\n      var array = [];\n      var morphTargets = geometry.morphTargets[name];\n\n      for (var i = 0, l = morphTargets.length; i < l; i++) {\n        var morphTarget = morphTargets[i];\n        var attribute = new THREE.Float32Attribute(morphTarget.length * 3, 3);\n        array.push(attribute.copyVector3sArray(morphTarget));\n      }\n\n      this.morphAttributes[name] = array;\n    } // skinning\n\n\n    if (geometry.skinIndices.length > 0) {\n      var skinIndices = new THREE.Float32Attribute(geometry.skinIndices.length * 4, 4);\n      this.addAttribute('skinIndex', skinIndices.copyVector4sArray(geometry.skinIndices));\n    }\n\n    if (geometry.skinWeights.length > 0) {\n      var skinWeights = new THREE.Float32Attribute(geometry.skinWeights.length * 4, 4);\n      this.addAttribute('skinWeight', skinWeights.copyVector4sArray(geometry.skinWeights));\n    } //\n\n\n    if (geometry.boundingSphere !== null) {\n      this.boundingSphere = geometry.boundingSphere.clone();\n    }\n\n    if (geometry.boundingBox !== null) {\n      this.boundingBox = geometry.boundingBox.clone();\n    }\n\n    return this;\n  },\n  computeBoundingBox: function () {\n    var vector = new THREE.Vector3();\n    return function () {\n      if (this.boundingBox === null) {\n        this.boundingBox = new THREE.Box3();\n      }\n\n      var positions = this.attributes.position.array;\n\n      if (positions) {\n        this.boundingBox.setFromArray(positions);\n      }\n\n      if (positions === undefined || positions.length === 0) {\n        this.boundingBox.min.set(0, 0, 0);\n        this.boundingBox.max.set(0, 0, 0);\n      }\n\n      if (isNaN(this.boundingBox.min.x) || isNaN(this.boundingBox.min.y) || isNaN(this.boundingBox.min.z)) ;\n    };\n  }(),\n  computeBoundingSphere: function () {\n    var box = new THREE.Box3();\n    var vector = new THREE.Vector3();\n    return function () {\n      if (this.boundingSphere === null) {\n        this.boundingSphere = new THREE.Sphere();\n      }\n\n      var positions = this.attributes.position.array;\n\n      if (positions) {\n        var center = this.boundingSphere.center;\n        box.setFromArray(positions);\n        box.center(center); // hoping to find a boundingSphere with a radius smaller than the\n        // boundingSphere of the boundingBox: sqrt(3) smaller in the best case\n\n        var maxRadiusSq = 0;\n\n        for (var i = 0, il = positions.length; i < il; i += 3) {\n          vector.fromArray(positions, i);\n          maxRadiusSq = Math.max(maxRadiusSq, center.distanceToSquared(vector));\n        }\n\n        this.boundingSphere.radius = Math.sqrt(maxRadiusSq);\n        if (isNaN(this.boundingSphere.radius)) ;\n      }\n    };\n  }(),\n  computeFaceNormals: function () {// backwards compatibility\n  },\n  computeVertexNormals: function () {\n    var index = this.index;\n    var attributes = this.attributes;\n    var groups = this.groups;\n\n    if (attributes.position) {\n      var positions = attributes.position.array;\n\n      if (attributes.normal === undefined) {\n        this.addAttribute('normal', new THREE.BufferAttribute(new Float32Array(positions.length), 3));\n      } else {\n        // reset existing normals to zero\n        var array = attributes.normal.array;\n\n        for (var i = 0, il = array.length; i < il; i++) {\n          array[i] = 0;\n        }\n      }\n\n      var normals = attributes.normal.array;\n      var vA,\n          vB,\n          vC,\n          pA = new THREE.Vector3(),\n          pB = new THREE.Vector3(),\n          pC = new THREE.Vector3(),\n          cb = new THREE.Vector3(),\n          ab = new THREE.Vector3(); // indexed elements\n\n      if (index) {\n        var indices = index.array;\n\n        if (groups.length === 0) {\n          this.addGroup(0, indices.length);\n        }\n\n        for (var j = 0, jl = groups.length; j < jl; ++j) {\n          var group = groups[j];\n          var start = group.start;\n          var count = group.count;\n\n          for (var i = start, il = start + count; i < il; i += 3) {\n            vA = indices[i + 0] * 3;\n            vB = indices[i + 1] * 3;\n            vC = indices[i + 2] * 3;\n            pA.fromArray(positions, vA);\n            pB.fromArray(positions, vB);\n            pC.fromArray(positions, vC);\n            cb.subVectors(pC, pB);\n            ab.subVectors(pA, pB);\n            cb.cross(ab);\n            normals[vA] += cb.x;\n            normals[vA + 1] += cb.y;\n            normals[vA + 2] += cb.z;\n            normals[vB] += cb.x;\n            normals[vB + 1] += cb.y;\n            normals[vB + 2] += cb.z;\n            normals[vC] += cb.x;\n            normals[vC + 1] += cb.y;\n            normals[vC + 2] += cb.z;\n          }\n        }\n      } else {\n        // non-indexed elements (unconnected triangle soup)\n        for (var i = 0, il = positions.length; i < il; i += 9) {\n          pA.fromArray(positions, i);\n          pB.fromArray(positions, i + 3);\n          pC.fromArray(positions, i + 6);\n          cb.subVectors(pC, pB);\n          ab.subVectors(pA, pB);\n          cb.cross(ab);\n          normals[i] = cb.x;\n          normals[i + 1] = cb.y;\n          normals[i + 2] = cb.z;\n          normals[i + 3] = cb.x;\n          normals[i + 4] = cb.y;\n          normals[i + 5] = cb.z;\n          normals[i + 6] = cb.x;\n          normals[i + 7] = cb.y;\n          normals[i + 8] = cb.z;\n        }\n      }\n\n      this.normalizeNormals();\n      attributes.normal.needsUpdate = true;\n    }\n  },\n  merge: function (geometry, offset) {\n    if (geometry instanceof THREE.BufferGeometry === false) {\n      return;\n    }\n\n    if (offset === undefined) offset = 0;\n    var attributes = this.attributes;\n\n    for (var key in attributes) {\n      if (geometry.attributes[key] === undefined) continue;\n      var attribute1 = attributes[key];\n      var attributeArray1 = attribute1.array;\n      var attribute2 = geometry.attributes[key];\n      var attributeArray2 = attribute2.array;\n      var attributeSize = attribute2.itemSize;\n\n      for (var i = 0, j = attributeSize * offset; i < attributeArray2.length; i++, j++) {\n        attributeArray1[j] = attributeArray2[i];\n      }\n    }\n\n    return this;\n  },\n  normalizeNormals: function () {\n    var normals = this.attributes.normal.array;\n    var x, y, z, n;\n\n    for (var i = 0, il = normals.length; i < il; i += 3) {\n      x = normals[i];\n      y = normals[i + 1];\n      z = normals[i + 2];\n      n = 1.0 / Math.sqrt(x * x + y * y + z * z);\n      normals[i] *= n;\n      normals[i + 1] *= n;\n      normals[i + 2] *= n;\n    }\n  },\n  toNonIndexed: function () {\n    if (this.index === null) {\n      return this;\n    }\n\n    var geometry2 = new THREE.BufferGeometry();\n    var indices = this.index.array;\n    var attributes = this.attributes;\n\n    for (var name in attributes) {\n      var attribute = attributes[name];\n      var array = attribute.array;\n      var itemSize = attribute.itemSize;\n      var array2 = new array.constructor(indices.length * itemSize);\n      var index = 0,\n          index2 = 0;\n\n      for (var i = 0, l = indices.length; i < l; i++) {\n        index = indices[i] * itemSize;\n\n        for (var j = 0; j < itemSize; j++) {\n          array2[index2++] = array[index++];\n        }\n      }\n\n      geometry2.addAttribute(name, new THREE.BufferAttribute(array2, itemSize));\n    }\n\n    return geometry2;\n  },\n  toJSON: function () {\n    var data = {\n      metadata: {\n        version: 4.4,\n        type: 'BufferGeometry',\n        generator: 'BufferGeometry.toJSON'\n      }\n    }; // standard BufferGeometry serialization\n\n    data.uuid = this.uuid;\n    data.type = this.type;\n    if (this.name !== '') data.name = this.name;\n\n    if (this.parameters !== undefined) {\n      var parameters = this.parameters;\n\n      for (var key in parameters) {\n        if (parameters[key] !== undefined) data[key] = parameters[key];\n      }\n\n      return data;\n    }\n\n    data.data = {\n      attributes: {}\n    };\n    var index = this.index;\n\n    if (index !== null) {\n      var array = Array.prototype.slice.call(index.array);\n      data.data.index = {\n        type: index.array.constructor.name,\n        array: array\n      };\n    }\n\n    var attributes = this.attributes;\n\n    for (var key in attributes) {\n      var attribute = attributes[key];\n      var array = Array.prototype.slice.call(attribute.array);\n      data.data.attributes[key] = {\n        itemSize: attribute.itemSize,\n        type: attribute.array.constructor.name,\n        array: array\n      };\n    }\n\n    var groups = this.groups;\n\n    if (groups.length > 0) {\n      data.data.groups = JSON.parse(JSON.stringify(groups));\n    }\n\n    var boundingSphere = this.boundingSphere;\n\n    if (boundingSphere !== null) {\n      data.data.boundingSphere = {\n        center: boundingSphere.center.toArray(),\n        radius: boundingSphere.radius\n      };\n    }\n\n    return data;\n  },\n  clone: function () {\n    /*\n    // Handle primitives\n    \tvar parameters = this.parameters;\n    \tif ( parameters !== undefined ) {\n    \t\tvar values = [];\n    \t\tfor ( var key in parameters ) {\n    \t\t\tvalues.push( parameters[ key ] );\n    \t\t}\n    \t\tvar geometry = Object.create( this.constructor.prototype );\n    \tthis.constructor.apply( geometry, values );\n    \treturn geometry;\n    \t}\n    \treturn new this.constructor().copy( this );\n    */\n    return new THREE.BufferGeometry().copy(this);\n  },\n  copy: function (source) {\n    var index = source.index;\n\n    if (index !== null) {\n      this.setIndex(index.clone());\n    }\n\n    var attributes = source.attributes;\n\n    for (var name in attributes) {\n      var attribute = attributes[name];\n      this.addAttribute(name, attribute.clone());\n    }\n\n    var groups = source.groups;\n\n    for (var i = 0, l = groups.length; i < l; i++) {\n      var group = groups[i];\n      this.addGroup(group.start, group.count);\n    }\n\n    return this;\n  },\n  dispose: function () {\n    this.dispatchEvent({\n      type: 'dispose'\n    });\n  }\n};\nTHREE.EventDispatcher.prototype.apply(THREE.BufferGeometry.prototype);\nTHREE.BufferGeometry.MaxIndex = 65535; // File:src/core/InterleavedBufferAttribute.js\n\n/**\n * @author benaadams / https://twitter.com/ben_a_adams\n */\n\nTHREE.InterleavedBufferAttribute = function (interleavedBuffer, itemSize, offset) {\n  this.uuid = THREE.Math.generateUUID();\n  this.data = interleavedBuffer;\n  this.itemSize = itemSize;\n  this.offset = offset;\n};\n\nTHREE.InterleavedBufferAttribute.prototype = {\n  constructor: THREE.InterleavedBufferAttribute,\n\n  get length() {\n    return this.array.length;\n  },\n\n  get count() {\n    return this.data.count;\n  },\n\n  setX: function (index, x) {\n    this.data.array[index * this.data.stride + this.offset] = x;\n    return this;\n  },\n  setY: function (index, y) {\n    this.data.array[index * this.data.stride + this.offset + 1] = y;\n    return this;\n  },\n  setZ: function (index, z) {\n    this.data.array[index * this.data.stride + this.offset + 2] = z;\n    return this;\n  },\n  setW: function (index, w) {\n    this.data.array[index * this.data.stride + this.offset + 3] = w;\n    return this;\n  },\n  getX: function (index) {\n    return this.data.array[index * this.data.stride + this.offset];\n  },\n  getY: function (index) {\n    return this.data.array[index * this.data.stride + this.offset + 1];\n  },\n  getZ: function (index) {\n    return this.data.array[index * this.data.stride + this.offset + 2];\n  },\n  getW: function (index) {\n    return this.data.array[index * this.data.stride + this.offset + 3];\n  },\n  setXY: function (index, x, y) {\n    index = index * this.data.stride + this.offset;\n    this.data.array[index + 0] = x;\n    this.data.array[index + 1] = y;\n    return this;\n  },\n  setXYZ: function (index, x, y, z) {\n    index = index * this.data.stride + this.offset;\n    this.data.array[index + 0] = x;\n    this.data.array[index + 1] = y;\n    this.data.array[index + 2] = z;\n    return this;\n  },\n  setXYZW: function (index, x, y, z, w) {\n    index = index * this.data.stride + this.offset;\n    this.data.array[index + 0] = x;\n    this.data.array[index + 1] = y;\n    this.data.array[index + 2] = z;\n    this.data.array[index + 3] = w;\n    return this;\n  }\n}; // File:src/core/InstancedBufferGeometry.js\n\n/**\n * @author benaadams / https://twitter.com/ben_a_adams\n */\n\nTHREE.InstancedBufferGeometry = function () {\n  THREE.BufferGeometry.call(this);\n  this.type = 'InstancedBufferGeometry';\n  this.maxInstancedCount = undefined;\n};\n\nTHREE.InstancedBufferGeometry.prototype = Object.create(THREE.BufferGeometry.prototype);\nTHREE.InstancedBufferGeometry.prototype.constructor = THREE.InstancedBufferGeometry;\n\nTHREE.InstancedBufferGeometry.prototype.addGroup = function (start, count, instances) {\n  this.groups.push({\n    start: start,\n    count: count,\n    instances: instances\n  });\n};\n\nTHREE.InstancedBufferGeometry.prototype.copy = function (source) {\n  var index = source.index;\n\n  if (index !== null) {\n    this.setIndex(index.clone());\n  }\n\n  var attributes = source.attributes;\n\n  for (var name in attributes) {\n    var attribute = attributes[name];\n    this.addAttribute(name, attribute.clone());\n  }\n\n  var groups = source.groups;\n\n  for (var i = 0, l = groups.length; i < l; i++) {\n    var group = groups[i];\n    this.addGroup(group.start, group.count, group.instances);\n  }\n\n  return this;\n};\n\nTHREE.EventDispatcher.prototype.apply(THREE.InstancedBufferGeometry.prototype); // File:src/core/Geometry.js\n\n/**\n * @author mrdoob / http://mrdoob.com/\n * @author kile / http://kile.stravaganza.org/\n * @author alteredq / http://alteredqualia.com/\n * @author mikael emtinger / http://gomo.se/\n * @author zz85 / http://www.lab4games.net/zz85/blog\n * @author bhouston / http://clara.io\n */\n\nTHREE.Geometry = function () {\n  Object.defineProperty(this, 'id', {\n    value: THREE.GeometryIdCount++\n  });\n  this.uuid = THREE.Math.generateUUID();\n  this.name = '';\n  this.type = 'Geometry';\n  this.vertices = [];\n  this.colors = [];\n  this.faces = [];\n  this.faceVertexUvs = [[]];\n  this.morphTargets = [];\n  this.morphNormals = [];\n  this.skinWeights = [];\n  this.skinIndices = [];\n  this.lineDistances = [];\n  this.boundingBox = null;\n  this.boundingSphere = null; // update flags\n\n  this.verticesNeedUpdate = false;\n  this.elementsNeedUpdate = false;\n  this.uvsNeedUpdate = false;\n  this.normalsNeedUpdate = false;\n  this.colorsNeedUpdate = false;\n  this.lineDistancesNeedUpdate = false;\n  this.groupsNeedUpdate = false;\n};\n\nTHREE.Geometry.prototype = {\n  constructor: THREE.Geometry,\n  applyMatrix: function (matrix) {\n    var normalMatrix = new THREE.Matrix3().getNormalMatrix(matrix);\n\n    for (var i = 0, il = this.vertices.length; i < il; i++) {\n      var vertex = this.vertices[i];\n      vertex.applyMatrix4(matrix);\n    }\n\n    for (var i = 0, il = this.faces.length; i < il; i++) {\n      var face = this.faces[i];\n      face.normal.applyMatrix3(normalMatrix).normalize();\n\n      for (var j = 0, jl = face.vertexNormals.length; j < jl; j++) {\n        face.vertexNormals[j].applyMatrix3(normalMatrix).normalize();\n      }\n    }\n\n    if (this.boundingBox !== null) {\n      this.computeBoundingBox();\n    }\n\n    if (this.boundingSphere !== null) {\n      this.computeBoundingSphere();\n    }\n\n    this.verticesNeedUpdate = true;\n    this.normalsNeedUpdate = true;\n    return this;\n  },\n  rotateX: function () {\n    // rotate geometry around world x-axis\n    var m1;\n    return function rotateX(angle) {\n      if (m1 === undefined) m1 = new THREE.Matrix4();\n      m1.makeRotationX(angle);\n      this.applyMatrix(m1);\n      return this;\n    };\n  }(),\n  rotateY: function () {\n    // rotate geometry around world y-axis\n    var m1;\n    return function rotateY(angle) {\n      if (m1 === undefined) m1 = new THREE.Matrix4();\n      m1.makeRotationY(angle);\n      this.applyMatrix(m1);\n      return this;\n    };\n  }(),\n  rotateZ: function () {\n    // rotate geometry around world z-axis\n    var m1;\n    return function rotateZ(angle) {\n      if (m1 === undefined) m1 = new THREE.Matrix4();\n      m1.makeRotationZ(angle);\n      this.applyMatrix(m1);\n      return this;\n    };\n  }(),\n  translate: function () {\n    // translate geometry\n    var m1;\n    return function translate(x, y, z) {\n      if (m1 === undefined) m1 = new THREE.Matrix4();\n      m1.makeTranslation(x, y, z);\n      this.applyMatrix(m1);\n      return this;\n    };\n  }(),\n  scale: function () {\n    // scale geometry\n    var m1;\n    return function scale(x, y, z) {\n      if (m1 === undefined) m1 = new THREE.Matrix4();\n      m1.makeScale(x, y, z);\n      this.applyMatrix(m1);\n      return this;\n    };\n  }(),\n  lookAt: function () {\n    var obj;\n    return function lookAt(vector) {\n      if (obj === undefined) obj = new THREE.Object3D();\n      obj.lookAt(vector);\n      obj.updateMatrix();\n      this.applyMatrix(obj.matrix);\n    };\n  }(),\n  fromBufferGeometry: function (geometry) {\n    var scope = this;\n    var indices = geometry.index !== null ? geometry.index.array : undefined;\n    var attributes = geometry.attributes;\n    var positions = attributes.position.array;\n    var normals = attributes.normal !== undefined ? attributes.normal.array : undefined;\n    var colors = attributes.color !== undefined ? attributes.color.array : undefined;\n    var uvs = attributes.uv !== undefined ? attributes.uv.array : undefined;\n    var uvs2 = attributes.uv2 !== undefined ? attributes.uv2.array : undefined;\n    if (uvs2 !== undefined) this.faceVertexUvs[1] = [];\n    var tempNormals = [];\n    var tempUVs = [];\n    var tempUVs2 = [];\n\n    for (var i = 0, j = 0; i < positions.length; i += 3, j += 2) {\n      scope.vertices.push(new THREE.Vector3(positions[i], positions[i + 1], positions[i + 2]));\n\n      if (normals !== undefined) {\n        tempNormals.push(new THREE.Vector3(normals[i], normals[i + 1], normals[i + 2]));\n      }\n\n      if (colors !== undefined) {\n        scope.colors.push(new THREE.Color(colors[i], colors[i + 1], colors[i + 2]));\n      }\n\n      if (uvs !== undefined) {\n        tempUVs.push(new THREE.Vector2(uvs[j], uvs[j + 1]));\n      }\n\n      if (uvs2 !== undefined) {\n        tempUVs2.push(new THREE.Vector2(uvs2[j], uvs2[j + 1]));\n      }\n    }\n\n    function addFace(a, b, c, materialIndex) {\n      var vertexNormals = normals !== undefined ? [tempNormals[a].clone(), tempNormals[b].clone(), tempNormals[c].clone()] : [];\n      var vertexColors = colors !== undefined ? [scope.colors[a].clone(), scope.colors[b].clone(), scope.colors[c].clone()] : [];\n      var face = new THREE.Face3(a, b, c, vertexNormals, vertexColors, materialIndex);\n      scope.faces.push(face);\n\n      if (uvs !== undefined) {\n        scope.faceVertexUvs[0].push([tempUVs[a].clone(), tempUVs[b].clone(), tempUVs[c].clone()]);\n      }\n\n      if (uvs2 !== undefined) {\n        scope.faceVertexUvs[1].push([tempUVs2[a].clone(), tempUVs2[b].clone(), tempUVs2[c].clone()]);\n      }\n    }\n\n    if (indices !== undefined) {\n      var groups = geometry.groups;\n\n      if (groups.length > 0) {\n        for (var i = 0; i < groups.length; i++) {\n          var group = groups[i];\n          var start = group.start;\n          var count = group.count;\n\n          for (var j = start, jl = start + count; j < jl; j += 3) {\n            addFace(indices[j], indices[j + 1], indices[j + 2], group.materialIndex);\n          }\n        }\n      } else {\n        for (var i = 0; i < indices.length; i += 3) {\n          addFace(indices[i], indices[i + 1], indices[i + 2]);\n        }\n      }\n    } else {\n      for (var i = 0; i < positions.length / 3; i += 3) {\n        addFace(i, i + 1, i + 2);\n      }\n    }\n\n    this.computeFaceNormals();\n\n    if (geometry.boundingBox !== null) {\n      this.boundingBox = geometry.boundingBox.clone();\n    }\n\n    if (geometry.boundingSphere !== null) {\n      this.boundingSphere = geometry.boundingSphere.clone();\n    }\n\n    return this;\n  },\n  center: function () {\n    this.computeBoundingBox();\n    var offset = this.boundingBox.center().negate();\n    this.translate(offset.x, offset.y, offset.z);\n    return offset;\n  },\n  normalize: function () {\n    this.computeBoundingSphere();\n    var center = this.boundingSphere.center;\n    var radius = this.boundingSphere.radius;\n    var s = radius === 0 ? 1 : 1.0 / radius;\n    var matrix = new THREE.Matrix4();\n    matrix.set(s, 0, 0, -s * center.x, 0, s, 0, -s * center.y, 0, 0, s, -s * center.z, 0, 0, 0, 1);\n    this.applyMatrix(matrix);\n    return this;\n  },\n  computeFaceNormals: function () {\n    var cb = new THREE.Vector3(),\n        ab = new THREE.Vector3();\n\n    for (var f = 0, fl = this.faces.length; f < fl; f++) {\n      var face = this.faces[f];\n      var vA = this.vertices[face.a];\n      var vB = this.vertices[face.b];\n      var vC = this.vertices[face.c];\n      cb.subVectors(vC, vB);\n      ab.subVectors(vA, vB);\n      cb.cross(ab);\n      cb.normalize();\n      face.normal.copy(cb);\n    }\n  },\n  computeVertexNormals: function (areaWeighted) {\n    if (areaWeighted === undefined) areaWeighted = true;\n    var v, vl, f, fl, face, vertices;\n    vertices = new Array(this.vertices.length);\n\n    for (v = 0, vl = this.vertices.length; v < vl; v++) {\n      vertices[v] = new THREE.Vector3();\n    }\n\n    if (areaWeighted) {\n      // vertex normals weighted by triangle areas\n      // http://www.iquilezles.org/www/articles/normals/normals.htm\n      var vA, vB, vC;\n      var cb = new THREE.Vector3(),\n          ab = new THREE.Vector3();\n\n      for (f = 0, fl = this.faces.length; f < fl; f++) {\n        face = this.faces[f];\n        vA = this.vertices[face.a];\n        vB = this.vertices[face.b];\n        vC = this.vertices[face.c];\n        cb.subVectors(vC, vB);\n        ab.subVectors(vA, vB);\n        cb.cross(ab);\n        vertices[face.a].add(cb);\n        vertices[face.b].add(cb);\n        vertices[face.c].add(cb);\n      }\n    } else {\n      for (f = 0, fl = this.faces.length; f < fl; f++) {\n        face = this.faces[f];\n        vertices[face.a].add(face.normal);\n        vertices[face.b].add(face.normal);\n        vertices[face.c].add(face.normal);\n      }\n    }\n\n    for (v = 0, vl = this.vertices.length; v < vl; v++) {\n      vertices[v].normalize();\n    }\n\n    for (f = 0, fl = this.faces.length; f < fl; f++) {\n      face = this.faces[f];\n      var vertexNormals = face.vertexNormals;\n\n      if (vertexNormals.length === 3) {\n        vertexNormals[0].copy(vertices[face.a]);\n        vertexNormals[1].copy(vertices[face.b]);\n        vertexNormals[2].copy(vertices[face.c]);\n      } else {\n        vertexNormals[0] = vertices[face.a].clone();\n        vertexNormals[1] = vertices[face.b].clone();\n        vertexNormals[2] = vertices[face.c].clone();\n      }\n    }\n\n    if (this.faces.length > 0) {\n      this.normalsNeedUpdate = true;\n    }\n  },\n  computeMorphNormals: function () {\n    var i, il, f, fl, face; // save original normals\n    // - create temp variables on first access\n    //   otherwise just copy (for faster repeated calls)\n\n    for (f = 0, fl = this.faces.length; f < fl; f++) {\n      face = this.faces[f];\n\n      if (!face.__originalFaceNormal) {\n        face.__originalFaceNormal = face.normal.clone();\n      } else {\n        face.__originalFaceNormal.copy(face.normal);\n      }\n\n      if (!face.__originalVertexNormals) face.__originalVertexNormals = [];\n\n      for (i = 0, il = face.vertexNormals.length; i < il; i++) {\n        if (!face.__originalVertexNormals[i]) {\n          face.__originalVertexNormals[i] = face.vertexNormals[i].clone();\n        } else {\n          face.__originalVertexNormals[i].copy(face.vertexNormals[i]);\n        }\n      }\n    } // use temp geometry to compute face and vertex normals for each morph\n\n\n    var tmpGeo = new THREE.Geometry();\n    tmpGeo.faces = this.faces;\n\n    for (i = 0, il = this.morphTargets.length; i < il; i++) {\n      // create on first access\n      if (!this.morphNormals[i]) {\n        this.morphNormals[i] = {};\n        this.morphNormals[i].faceNormals = [];\n        this.morphNormals[i].vertexNormals = [];\n        var dstNormalsFace = this.morphNormals[i].faceNormals;\n        var dstNormalsVertex = this.morphNormals[i].vertexNormals;\n        var faceNormal, vertexNormals;\n\n        for (f = 0, fl = this.faces.length; f < fl; f++) {\n          faceNormal = new THREE.Vector3();\n          vertexNormals = {\n            a: new THREE.Vector3(),\n            b: new THREE.Vector3(),\n            c: new THREE.Vector3()\n          };\n          dstNormalsFace.push(faceNormal);\n          dstNormalsVertex.push(vertexNormals);\n        }\n      }\n\n      var morphNormals = this.morphNormals[i]; // set vertices to morph target\n\n      tmpGeo.vertices = this.morphTargets[i].vertices; // compute morph normals\n\n      tmpGeo.computeFaceNormals();\n      tmpGeo.computeVertexNormals(); // store morph normals\n\n      var faceNormal, vertexNormals;\n\n      for (f = 0, fl = this.faces.length; f < fl; f++) {\n        face = this.faces[f];\n        faceNormal = morphNormals.faceNormals[f];\n        vertexNormals = morphNormals.vertexNormals[f];\n        faceNormal.copy(face.normal);\n        vertexNormals.a.copy(face.vertexNormals[0]);\n        vertexNormals.b.copy(face.vertexNormals[1]);\n        vertexNormals.c.copy(face.vertexNormals[2]);\n      }\n    } // restore original normals\n\n\n    for (f = 0, fl = this.faces.length; f < fl; f++) {\n      face = this.faces[f];\n      face.normal = face.__originalFaceNormal;\n      face.vertexNormals = face.__originalVertexNormals;\n    }\n  },\n  computeTangents: function () {},\n  computeLineDistances: function () {\n    var d = 0;\n    var vertices = this.vertices;\n\n    for (var i = 0, il = vertices.length; i < il; i++) {\n      if (i > 0) {\n        d += vertices[i].distanceTo(vertices[i - 1]);\n      }\n\n      this.lineDistances[i] = d;\n    }\n  },\n  computeBoundingBox: function () {\n    if (this.boundingBox === null) {\n      this.boundingBox = new THREE.Box3();\n    }\n\n    this.boundingBox.setFromPoints(this.vertices);\n  },\n  computeBoundingSphere: function () {\n    if (this.boundingSphere === null) {\n      this.boundingSphere = new THREE.Sphere();\n    }\n\n    this.boundingSphere.setFromPoints(this.vertices);\n  },\n  merge: function (geometry, matrix, materialIndexOffset) {\n    if (geometry instanceof THREE.Geometry === false) {\n      return;\n    }\n\n    var normalMatrix,\n        vertexOffset = this.vertices.length,\n        vertices1 = this.vertices,\n        vertices2 = geometry.vertices,\n        faces1 = this.faces,\n        faces2 = geometry.faces,\n        uvs1 = this.faceVertexUvs[0],\n        uvs2 = geometry.faceVertexUvs[0];\n    if (materialIndexOffset === undefined) materialIndexOffset = 0;\n\n    if (matrix !== undefined) {\n      normalMatrix = new THREE.Matrix3().getNormalMatrix(matrix);\n    } // vertices\n\n\n    for (var i = 0, il = vertices2.length; i < il; i++) {\n      var vertex = vertices2[i];\n      var vertexCopy = vertex.clone();\n      if (matrix !== undefined) vertexCopy.applyMatrix4(matrix);\n      vertices1.push(vertexCopy);\n    } // faces\n\n\n    for (i = 0, il = faces2.length; i < il; i++) {\n      var face = faces2[i],\n          faceCopy,\n          normal,\n          color,\n          faceVertexNormals = face.vertexNormals,\n          faceVertexColors = face.vertexColors;\n      faceCopy = new THREE.Face3(face.a + vertexOffset, face.b + vertexOffset, face.c + vertexOffset);\n      faceCopy.normal.copy(face.normal);\n\n      if (normalMatrix !== undefined) {\n        faceCopy.normal.applyMatrix3(normalMatrix).normalize();\n      }\n\n      for (var j = 0, jl = faceVertexNormals.length; j < jl; j++) {\n        normal = faceVertexNormals[j].clone();\n\n        if (normalMatrix !== undefined) {\n          normal.applyMatrix3(normalMatrix).normalize();\n        }\n\n        faceCopy.vertexNormals.push(normal);\n      }\n\n      faceCopy.color.copy(face.color);\n\n      for (var j = 0, jl = faceVertexColors.length; j < jl; j++) {\n        color = faceVertexColors[j];\n        faceCopy.vertexColors.push(color.clone());\n      }\n\n      faceCopy.materialIndex = face.materialIndex + materialIndexOffset;\n      faces1.push(faceCopy);\n    } // uvs\n\n\n    for (i = 0, il = uvs2.length; i < il; i++) {\n      var uv = uvs2[i],\n          uvCopy = [];\n\n      if (uv === undefined) {\n        continue;\n      }\n\n      for (var j = 0, jl = uv.length; j < jl; j++) {\n        uvCopy.push(uv[j].clone());\n      }\n\n      uvs1.push(uvCopy);\n    }\n  },\n  mergeMesh: function (mesh) {\n    if (mesh instanceof THREE.Mesh === false) {\n      return;\n    }\n\n    mesh.matrixAutoUpdate && mesh.updateMatrix();\n    this.merge(mesh.geometry, mesh.matrix);\n  },\n\n  /*\n   * Checks for duplicate vertices with hashmap.\n   * Duplicated vertices are removed\n   * and faces' vertices are updated.\n   */\n  mergeVertices: function () {\n    var verticesMap = {}; // Hashmap for looking up vertices by position coordinates (and making sure they are unique)\n\n    var unique = [],\n        changes = [];\n    var v, key;\n    var precisionPoints = 4; // number of decimal points, e.g. 4 for epsilon of 0.0001\n\n    var precision = Math.pow(10, precisionPoints);\n    var i, il, face;\n    var indices, j, jl;\n\n    for (i = 0, il = this.vertices.length; i < il; i++) {\n      v = this.vertices[i];\n      key = Math.round(v.x * precision) + '_' + Math.round(v.y * precision) + '_' + Math.round(v.z * precision);\n\n      if (verticesMap[key] === undefined) {\n        verticesMap[key] = i;\n        unique.push(this.vertices[i]);\n        changes[i] = unique.length - 1;\n      } else {\n        //console.log('Duplicate vertex found. ', i, ' could be using ', verticesMap[key]);\n        changes[i] = changes[verticesMap[key]];\n      }\n    } // if faces are completely degenerate after merging vertices, we\n    // have to remove them from the geometry.\n\n\n    var faceIndicesToRemove = [];\n\n    for (i = 0, il = this.faces.length; i < il; i++) {\n      face = this.faces[i];\n      face.a = changes[face.a];\n      face.b = changes[face.b];\n      face.c = changes[face.c];\n      indices = [face.a, face.b, face.c]; // we have to remove the face as nothing can be saved\n\n      for (var n = 0; n < 3; n++) {\n        if (indices[n] === indices[(n + 1) % 3]) {\n          faceIndicesToRemove.push(i);\n          break;\n        }\n      }\n    }\n\n    for (i = faceIndicesToRemove.length - 1; i >= 0; i--) {\n      var idx = faceIndicesToRemove[i];\n      this.faces.splice(idx, 1);\n\n      for (j = 0, jl = this.faceVertexUvs.length; j < jl; j++) {\n        this.faceVertexUvs[j].splice(idx, 1);\n      }\n    } // Use unique set of vertices\n\n\n    var diff = this.vertices.length - unique.length;\n    this.vertices = unique;\n    return diff;\n  },\n  sortFacesByMaterialIndex: function () {\n    var faces = this.faces;\n    var length = faces.length; // tag faces\n\n    for (var i = 0; i < length; i++) {\n      faces[i]._id = i;\n    } // sort faces\n\n\n    function materialIndexSort(a, b) {\n      return a.materialIndex - b.materialIndex;\n    }\n\n    faces.sort(materialIndexSort); // sort uvs\n\n    var uvs1 = this.faceVertexUvs[0];\n    var uvs2 = this.faceVertexUvs[1];\n    var newUvs1, newUvs2;\n    if (uvs1 && uvs1.length === length) newUvs1 = [];\n    if (uvs2 && uvs2.length === length) newUvs2 = [];\n\n    for (var i = 0; i < length; i++) {\n      var id = faces[i]._id;\n      if (newUvs1) newUvs1.push(uvs1[id]);\n      if (newUvs2) newUvs2.push(uvs2[id]);\n    }\n\n    if (newUvs1) this.faceVertexUvs[0] = newUvs1;\n    if (newUvs2) this.faceVertexUvs[1] = newUvs2;\n  },\n  toJSON: function () {\n    var data = {\n      metadata: {\n        version: 4.4,\n        type: 'Geometry',\n        generator: 'Geometry.toJSON'\n      }\n    }; // standard Geometry serialization\n\n    data.uuid = this.uuid;\n    data.type = this.type;\n    if (this.name !== '') data.name = this.name;\n\n    if (this.parameters !== undefined) {\n      var parameters = this.parameters;\n\n      for (var key in parameters) {\n        if (parameters[key] !== undefined) data[key] = parameters[key];\n      }\n\n      return data;\n    }\n\n    var vertices = [];\n\n    for (var i = 0; i < this.vertices.length; i++) {\n      var vertex = this.vertices[i];\n      vertices.push(vertex.x, vertex.y, vertex.z);\n    }\n\n    var faces = [];\n    var normals = [];\n    var normalsHash = {};\n    var colors = [];\n    var colorsHash = {};\n    var uvs = [];\n    var uvsHash = {};\n\n    for (var i = 0; i < this.faces.length; i++) {\n      var face = this.faces[i];\n      var hasMaterial = true;\n      var hasFaceUv = false; // deprecated\n\n      var hasFaceVertexUv = this.faceVertexUvs[0][i] !== undefined;\n      var hasFaceNormal = face.normal.length() > 0;\n      var hasFaceVertexNormal = face.vertexNormals.length > 0;\n      var hasFaceColor = face.color.r !== 1 || face.color.g !== 1 || face.color.b !== 1;\n      var hasFaceVertexColor = face.vertexColors.length > 0;\n      var faceType = 0;\n      faceType = setBit(faceType, 0, 0); // isQuad\n\n      faceType = setBit(faceType, 1, hasMaterial);\n      faceType = setBit(faceType, 2, hasFaceUv);\n      faceType = setBit(faceType, 3, hasFaceVertexUv);\n      faceType = setBit(faceType, 4, hasFaceNormal);\n      faceType = setBit(faceType, 5, hasFaceVertexNormal);\n      faceType = setBit(faceType, 6, hasFaceColor);\n      faceType = setBit(faceType, 7, hasFaceVertexColor);\n      faces.push(faceType);\n      faces.push(face.a, face.b, face.c);\n      faces.push(face.materialIndex);\n\n      if (hasFaceVertexUv) {\n        var faceVertexUvs = this.faceVertexUvs[0][i];\n        faces.push(getUvIndex(faceVertexUvs[0]), getUvIndex(faceVertexUvs[1]), getUvIndex(faceVertexUvs[2]));\n      }\n\n      if (hasFaceNormal) {\n        faces.push(getNormalIndex(face.normal));\n      }\n\n      if (hasFaceVertexNormal) {\n        var vertexNormals = face.vertexNormals;\n        faces.push(getNormalIndex(vertexNormals[0]), getNormalIndex(vertexNormals[1]), getNormalIndex(vertexNormals[2]));\n      }\n\n      if (hasFaceColor) {\n        faces.push(getColorIndex(face.color));\n      }\n\n      if (hasFaceVertexColor) {\n        var vertexColors = face.vertexColors;\n        faces.push(getColorIndex(vertexColors[0]), getColorIndex(vertexColors[1]), getColorIndex(vertexColors[2]));\n      }\n    }\n\n    function setBit(value, position, enabled) {\n      return enabled ? value | 1 << position : value & ~(1 << position);\n    }\n\n    function getNormalIndex(normal) {\n      var hash = normal.x.toString() + normal.y.toString() + normal.z.toString();\n\n      if (normalsHash[hash] !== undefined) {\n        return normalsHash[hash];\n      }\n\n      normalsHash[hash] = normals.length / 3;\n      normals.push(normal.x, normal.y, normal.z);\n      return normalsHash[hash];\n    }\n\n    function getColorIndex(color) {\n      var hash = color.r.toString() + color.g.toString() + color.b.toString();\n\n      if (colorsHash[hash] !== undefined) {\n        return colorsHash[hash];\n      }\n\n      colorsHash[hash] = colors.length;\n      colors.push(color.getHex());\n      return colorsHash[hash];\n    }\n\n    function getUvIndex(uv) {\n      var hash = uv.x.toString() + uv.y.toString();\n\n      if (uvsHash[hash] !== undefined) {\n        return uvsHash[hash];\n      }\n\n      uvsHash[hash] = uvs.length / 2;\n      uvs.push(uv.x, uv.y);\n      return uvsHash[hash];\n    }\n\n    data.data = {};\n    data.data.vertices = vertices;\n    data.data.normals = normals;\n    if (colors.length > 0) data.data.colors = colors;\n    if (uvs.length > 0) data.data.uvs = [uvs]; // temporal backward compatibility\n\n    data.data.faces = faces;\n    return data;\n  },\n  clone: function () {\n    /*\n    // Handle primitives\n    \tvar parameters = this.parameters;\n    \tif ( parameters !== undefined ) {\n    \t\tvar values = [];\n    \t\tfor ( var key in parameters ) {\n    \t\t\tvalues.push( parameters[ key ] );\n    \t\t}\n    \t\tvar geometry = Object.create( this.constructor.prototype );\n    \tthis.constructor.apply( geometry, values );\n    \treturn geometry;\n    \t}\n    \treturn new this.constructor().copy( this );\n    */\n    return new THREE.Geometry().copy(this);\n  },\n  copy: function (source) {\n    this.vertices = [];\n    this.faces = [];\n    this.faceVertexUvs = [[]];\n    var vertices = source.vertices;\n\n    for (var i = 0, il = vertices.length; i < il; i++) {\n      this.vertices.push(vertices[i].clone());\n    }\n\n    var faces = source.faces;\n\n    for (var i = 0, il = faces.length; i < il; i++) {\n      this.faces.push(faces[i].clone());\n    }\n\n    for (var i = 0, il = source.faceVertexUvs.length; i < il; i++) {\n      var faceVertexUvs = source.faceVertexUvs[i];\n\n      if (this.faceVertexUvs[i] === undefined) {\n        this.faceVertexUvs[i] = [];\n      }\n\n      for (var j = 0, jl = faceVertexUvs.length; j < jl; j++) {\n        var uvs = faceVertexUvs[j],\n            uvsCopy = [];\n\n        for (var k = 0, kl = uvs.length; k < kl; k++) {\n          var uv = uvs[k];\n          uvsCopy.push(uv.clone());\n        }\n\n        this.faceVertexUvs[i].push(uvsCopy);\n      }\n    }\n\n    return this;\n  },\n  dispose: function () {\n    this.dispatchEvent({\n      type: 'dispose'\n    });\n  }\n};\nTHREE.EventDispatcher.prototype.apply(THREE.Geometry.prototype);\nTHREE.GeometryIdCount = 0; // File:src/core/DirectGeometry.js\n\n/**\n * @author mrdoob / http://mrdoob.com/\n */\n\nTHREE.DirectGeometry = function () {\n  Object.defineProperty(this, 'id', {\n    value: THREE.GeometryIdCount++\n  });\n  this.uuid = THREE.Math.generateUUID();\n  this.name = '';\n  this.type = 'DirectGeometry';\n  this.indices = [];\n  this.vertices = [];\n  this.normals = [];\n  this.colors = [];\n  this.uvs = [];\n  this.uvs2 = [];\n  this.groups = [];\n  this.morphTargets = {};\n  this.skinWeights = [];\n  this.skinIndices = []; // this.lineDistances = [];\n\n  this.boundingBox = null;\n  this.boundingSphere = null; // update flags\n\n  this.verticesNeedUpdate = false;\n  this.normalsNeedUpdate = false;\n  this.colorsNeedUpdate = false;\n  this.uvsNeedUpdate = false;\n  this.groupsNeedUpdate = false;\n};\n\nTHREE.DirectGeometry.prototype = {\n  constructor: THREE.DirectGeometry,\n  computeBoundingBox: THREE.Geometry.prototype.computeBoundingBox,\n  computeBoundingSphere: THREE.Geometry.prototype.computeBoundingSphere,\n  computeFaceNormals: function () {},\n  computeVertexNormals: function () {},\n  computeGroups: function (geometry) {\n    var group;\n    var groups = [];\n    var materialIndex;\n    var faces = geometry.faces;\n\n    for (var i = 0; i < faces.length; i++) {\n      var face = faces[i]; // materials\n\n      if (face.materialIndex !== materialIndex) {\n        materialIndex = face.materialIndex;\n\n        if (group !== undefined) {\n          group.count = i * 3 - group.start;\n          groups.push(group);\n        }\n\n        group = {\n          start: i * 3,\n          materialIndex: materialIndex\n        };\n      }\n    }\n\n    if (group !== undefined) {\n      group.count = i * 3 - group.start;\n      groups.push(group);\n    }\n\n    this.groups = groups;\n  },\n  fromGeometry: function (geometry) {\n    var faces = geometry.faces;\n    var vertices = geometry.vertices;\n    var faceVertexUvs = geometry.faceVertexUvs;\n    var hasFaceVertexUv = faceVertexUvs[0] && faceVertexUvs[0].length > 0;\n    var hasFaceVertexUv2 = faceVertexUvs[1] && faceVertexUvs[1].length > 0; // morphs\n\n    var morphTargets = geometry.morphTargets;\n    var morphTargetsLength = morphTargets.length;\n    var morphTargetsPosition;\n\n    if (morphTargetsLength > 0) {\n      morphTargetsPosition = [];\n\n      for (var i = 0; i < morphTargetsLength; i++) {\n        morphTargetsPosition[i] = [];\n      }\n\n      this.morphTargets.position = morphTargetsPosition;\n    }\n\n    var morphNormals = geometry.morphNormals;\n    var morphNormalsLength = morphNormals.length;\n    var morphTargetsNormal;\n\n    if (morphNormalsLength > 0) {\n      morphTargetsNormal = [];\n\n      for (var i = 0; i < morphNormalsLength; i++) {\n        morphTargetsNormal[i] = [];\n      }\n\n      this.morphTargets.normal = morphTargetsNormal;\n    } // skins\n\n\n    var skinIndices = geometry.skinIndices;\n    var skinWeights = geometry.skinWeights;\n    var hasSkinIndices = skinIndices.length === vertices.length;\n    var hasSkinWeights = skinWeights.length === vertices.length; //\n\n    for (var i = 0; i < faces.length; i++) {\n      var face = faces[i];\n      this.vertices.push(vertices[face.a], vertices[face.b], vertices[face.c]);\n      var vertexNormals = face.vertexNormals;\n\n      if (vertexNormals.length === 3) {\n        this.normals.push(vertexNormals[0], vertexNormals[1], vertexNormals[2]);\n      } else {\n        var normal = face.normal;\n        this.normals.push(normal, normal, normal);\n      }\n\n      var vertexColors = face.vertexColors;\n\n      if (vertexColors.length === 3) {\n        this.colors.push(vertexColors[0], vertexColors[1], vertexColors[2]);\n      } else {\n        var color = face.color;\n        this.colors.push(color, color, color);\n      }\n\n      if (hasFaceVertexUv === true) {\n        var vertexUvs = faceVertexUvs[0][i];\n\n        if (vertexUvs !== undefined) {\n          this.uvs.push(vertexUvs[0], vertexUvs[1], vertexUvs[2]);\n        } else {\n          this.uvs.push(new THREE.Vector2(), new THREE.Vector2(), new THREE.Vector2());\n        }\n      }\n\n      if (hasFaceVertexUv2 === true) {\n        var vertexUvs = faceVertexUvs[1][i];\n\n        if (vertexUvs !== undefined) {\n          this.uvs2.push(vertexUvs[0], vertexUvs[1], vertexUvs[2]);\n        } else {\n          this.uvs2.push(new THREE.Vector2(), new THREE.Vector2(), new THREE.Vector2());\n        }\n      } // morphs\n\n\n      for (var j = 0; j < morphTargetsLength; j++) {\n        var morphTarget = morphTargets[j].vertices;\n        morphTargetsPosition[j].push(morphTarget[face.a], morphTarget[face.b], morphTarget[face.c]);\n      }\n\n      for (var j = 0; j < morphNormalsLength; j++) {\n        var morphNormal = morphNormals[j].vertexNormals[i];\n        morphTargetsNormal[j].push(morphNormal.a, morphNormal.b, morphNormal.c);\n      } // skins\n\n\n      if (hasSkinIndices) {\n        this.skinIndices.push(skinIndices[face.a], skinIndices[face.b], skinIndices[face.c]);\n      }\n\n      if (hasSkinWeights) {\n        this.skinWeights.push(skinWeights[face.a], skinWeights[face.b], skinWeights[face.c]);\n      }\n    }\n\n    this.computeGroups(geometry);\n    this.verticesNeedUpdate = geometry.verticesNeedUpdate;\n    this.normalsNeedUpdate = geometry.normalsNeedUpdate;\n    this.colorsNeedUpdate = geometry.colorsNeedUpdate;\n    this.uvsNeedUpdate = geometry.uvsNeedUpdate;\n    this.groupsNeedUpdate = geometry.groupsNeedUpdate;\n    return this;\n  },\n  dispose: function () {\n    this.dispatchEvent({\n      type: 'dispose'\n    });\n  }\n};\nTHREE.EventDispatcher.prototype.apply(THREE.DirectGeometry.prototype); // File:src/cameras/Camera.js\n\n/**\n * @author mrdoob / http://mrdoob.com/\n * @author mikael emtinger / http://gomo.se/\n * @author WestLangley / http://github.com/WestLangley\n*/\n\nTHREE.Camera = function () {\n  THREE.Object3D.call(this);\n  this.type = 'Camera';\n  this.matrixWorldInverse = new THREE.Matrix4();\n  this.projectionMatrix = new THREE.Matrix4();\n};\n\nTHREE.Camera.prototype = Object.create(THREE.Object3D.prototype);\nTHREE.Camera.prototype.constructor = THREE.Camera;\n\nTHREE.Camera.prototype.getWorldDirection = function () {\n  var quaternion = new THREE.Quaternion();\n  return function (optionalTarget) {\n    var result = optionalTarget || new THREE.Vector3();\n    this.getWorldQuaternion(quaternion);\n    return result.set(0, 0, -1).applyQuaternion(quaternion);\n  };\n}();\n\nTHREE.Camera.prototype.lookAt = function () {\n  // This routine does not support cameras with rotated and/or translated parent(s)\n  var m1 = new THREE.Matrix4();\n  return function (vector) {\n    m1.lookAt(this.position, vector, this.up);\n    this.quaternion.setFromRotationMatrix(m1);\n  };\n}();\n\nTHREE.Camera.prototype.clone = function () {\n  return new this.constructor().copy(this);\n};\n\nTHREE.Camera.prototype.copy = function (source) {\n  THREE.Object3D.prototype.copy.call(this, source);\n  this.matrixWorldInverse.copy(source.matrixWorldInverse);\n  this.projectionMatrix.copy(source.projectionMatrix);\n  return this;\n}; // File:src/cameras/PerspectiveCamera.js\n\n/**\n * @author mrdoob / http://mrdoob.com/\n * @author greggman / http://games.greggman.com/\n * @author zz85 / http://www.lab4games.net/zz85/blog\n */\n\n\nTHREE.PerspectiveCamera = function (fov, aspect, near, far) {\n  THREE.Camera.call(this);\n  this.type = 'PerspectiveCamera';\n  this.focalLength = 10;\n  this.zoom = 1;\n  this.fov = fov !== undefined ? fov : 50;\n  this.aspect = aspect !== undefined ? aspect : 1;\n  this.near = near !== undefined ? near : 0.1;\n  this.far = far !== undefined ? far : 2000;\n  this.updateProjectionMatrix();\n};\n\nTHREE.PerspectiveCamera.prototype = Object.create(THREE.Camera.prototype);\nTHREE.PerspectiveCamera.prototype.constructor = THREE.PerspectiveCamera;\n/**\n * Uses Focal Length (in mm) to estimate and set FOV\n * 35mm (full-frame) camera is used if frame size is not specified;\n * Formula based on http://www.bobatkins.com/photography/technical/field_of_view.html\n */\n\nTHREE.PerspectiveCamera.prototype.setLens = function (focalLength, frameHeight) {\n  if (frameHeight === undefined) frameHeight = 24;\n  this.fov = 2 * THREE.Math.radToDeg(Math.atan(frameHeight / (focalLength * 2)));\n  this.updateProjectionMatrix();\n};\n/**\n * Sets an offset in a larger frustum. This is useful for multi-window or\n * multi-monitor/multi-machine setups.\n *\n * For example, if you have 3x2 monitors and each monitor is 1920x1080 and\n * the monitors are in grid like this\n *\n *   +---+---+---+\n *   | A | B | C |\n *   +---+---+---+\n *   | D | E | F |\n *   +---+---+---+\n *\n * then for each monitor you would call it like this\n *\n *   var w = 1920;\n *   var h = 1080;\n *   var fullWidth = w * 3;\n *   var fullHeight = h * 2;\n *\n *   --A--\n *   camera.setOffset( fullWidth, fullHeight, w * 0, h * 0, w, h );\n *   --B--\n *   camera.setOffset( fullWidth, fullHeight, w * 1, h * 0, w, h );\n *   --C--\n *   camera.setOffset( fullWidth, fullHeight, w * 2, h * 0, w, h );\n *   --D--\n *   camera.setOffset( fullWidth, fullHeight, w * 0, h * 1, w, h );\n *   --E--\n *   camera.setOffset( fullWidth, fullHeight, w * 1, h * 1, w, h );\n *   --F--\n *   camera.setOffset( fullWidth, fullHeight, w * 2, h * 1, w, h );\n *\n *   Note there is no reason monitors have to be the same size or in a grid.\n */\n\n\nTHREE.PerspectiveCamera.prototype.setViewOffset = function (fullWidth, fullHeight, x, y, width, height) {\n  this.fullWidth = fullWidth;\n  this.fullHeight = fullHeight;\n  this.x = x;\n  this.y = y;\n  this.width = width;\n  this.height = height;\n  this.updateProjectionMatrix();\n};\n\nTHREE.PerspectiveCamera.prototype.updateProjectionMatrix = function () {\n  var fov = THREE.Math.radToDeg(2 * Math.atan(Math.tan(THREE.Math.degToRad(this.fov) * 0.5) / this.zoom));\n\n  if (this.fullWidth) {\n    var aspect = this.fullWidth / this.fullHeight;\n    var top = Math.tan(THREE.Math.degToRad(fov * 0.5)) * this.near;\n    var bottom = -top;\n    var left = aspect * bottom;\n    var right = aspect * top;\n    var width = Math.abs(right - left);\n    var height = Math.abs(top - bottom);\n    this.projectionMatrix.makeFrustum(left + this.x * width / this.fullWidth, left + (this.x + this.width) * width / this.fullWidth, top - (this.y + this.height) * height / this.fullHeight, top - this.y * height / this.fullHeight, this.near, this.far);\n  } else {\n    this.projectionMatrix.makePerspective(fov, this.aspect, this.near, this.far);\n  }\n};\n\nTHREE.PerspectiveCamera.prototype.copy = function (source) {\n  THREE.Camera.prototype.copy.call(this, source);\n  this.focalLength = source.focalLength;\n  this.zoom = source.zoom;\n  this.fov = source.fov;\n  this.aspect = source.aspect;\n  this.near = source.near;\n  this.far = source.far;\n  return this;\n};\n\nTHREE.PerspectiveCamera.prototype.toJSON = function (meta) {\n  var data = THREE.Object3D.prototype.toJSON.call(this, meta);\n  data.object.focalLength = this.focalLength;\n  data.object.zoom = this.zoom;\n  data.object.fov = this.fov;\n  data.object.aspect = this.aspect;\n  data.object.near = this.near;\n  data.object.far = this.far;\n  return data;\n}; // File:src/lights/Light.js\n\n/**\n * @author mrdoob / http://mrdoob.com/\n * @author alteredq / http://alteredqualia.com/\n */\n\n\nTHREE.Light = function (color, intensity) {\n  THREE.Object3D.call(this);\n  this.type = 'Light';\n  this.color = new THREE.Color(color);\n  this.intensity = intensity !== undefined ? intensity : 1;\n  this.receiveShadow = undefined;\n};\n\nTHREE.Light.prototype = Object.create(THREE.Object3D.prototype);\nTHREE.Light.prototype.constructor = THREE.Light;\n\nTHREE.Light.prototype.copy = function (source) {\n  THREE.Object3D.prototype.copy.call(this, source);\n  this.color.copy(source.color);\n  this.intensity = source.intensity;\n  return this;\n};\n\nTHREE.Light.prototype.toJSON = function (meta) {\n  var data = THREE.Object3D.prototype.toJSON.call(this, meta);\n  data.object.color = this.color.getHex();\n  data.object.intensity = this.intensity;\n  if (this.groundColor !== undefined) data.object.groundColor = this.groundColor.getHex();\n  if (this.distance !== undefined) data.object.distance = this.distance;\n  if (this.angle !== undefined) data.object.angle = this.angle;\n  if (this.decay !== undefined) data.object.decay = this.decay;\n  if (this.penumbra !== undefined) data.object.penumbra = this.penumbra;\n  return data;\n}; // File:src/scenes/Scene.js\n\n/**\n * @author mrdoob / http://mrdoob.com/\n */\n\n\nTHREE.Scene = function () {\n  THREE.Object3D.call(this);\n  this.type = 'Scene';\n  this.fog = null;\n  this.overrideMaterial = null;\n  this.autoUpdate = true; // checked by the renderer\n};\n\nTHREE.Scene.prototype = Object.create(THREE.Object3D.prototype);\nTHREE.Scene.prototype.constructor = THREE.Scene;\n\nTHREE.Scene.prototype.copy = function (source, recursive) {\n  THREE.Object3D.prototype.copy.call(this, source, recursive);\n  if (source.fog !== null) this.fog = source.fog.clone();\n  if (source.overrideMaterial !== null) this.overrideMaterial = source.overrideMaterial.clone();\n  this.autoUpdate = source.autoUpdate;\n  this.matrixAutoUpdate = source.matrixAutoUpdate;\n  return this;\n}; // File:src/scenes/FogExp2.js\n\n/**\n * @author mrdoob / http://mrdoob.com/\n * @author alteredq / http://alteredqualia.com/\n */\n\n\nTHREE.FogExp2 = function (color, density) {\n  this.name = '';\n  this.color = new THREE.Color(color);\n  this.density = density !== undefined ? density : 0.00025;\n};\n\nTHREE.FogExp2.prototype.clone = function () {\n  return new THREE.FogExp2(this.color.getHex(), this.density);\n}; // File:src/extras/objects/ImmediateRenderObject.js\n\n/**\n * @author alteredq / http://alteredqualia.com/\n */\n\n\nTHREE.ImmediateRenderObject = function (material) {\n  THREE.Object3D.call(this);\n  this.material = material;\n\n  this.render = function (renderCallback) {};\n};\n\nTHREE.ImmediateRenderObject.prototype = Object.create(THREE.Object3D.prototype);\nTHREE.ImmediateRenderObject.prototype.constructor = THREE.ImmediateRenderObject; // File:src/extras/geometries/SphereBufferGeometry.js\n\n/**\n * @author benaadams / https://twitter.com/ben_a_adams\n * based on THREE.SphereGeometry\n */\n\nTHREE.SphereBufferGeometry = function (radius, widthSegments, heightSegments, phiStart, phiLength, thetaStart, thetaLength) {\n  THREE.BufferGeometry.call(this);\n  this.type = 'SphereBufferGeometry';\n  this.parameters = {\n    radius: radius,\n    widthSegments: widthSegments,\n    heightSegments: heightSegments,\n    phiStart: phiStart,\n    phiLength: phiLength,\n    thetaStart: thetaStart,\n    thetaLength: thetaLength\n  };\n  radius = radius || 50;\n  widthSegments = Math.max(3, Math.floor(widthSegments) || 8);\n  heightSegments = Math.max(2, Math.floor(heightSegments) || 6);\n  phiStart = phiStart !== undefined ? phiStart : 0;\n  phiLength = phiLength !== undefined ? phiLength : Math.PI * 2;\n  thetaStart = thetaStart !== undefined ? thetaStart : 0;\n  thetaLength = thetaLength !== undefined ? thetaLength : Math.PI;\n  var thetaEnd = thetaStart + thetaLength;\n  var vertexCount = (widthSegments + 1) * (heightSegments + 1);\n  var positions = new THREE.BufferAttribute(new Float32Array(vertexCount * 3), 3);\n  var normals = new THREE.BufferAttribute(new Float32Array(vertexCount * 3), 3);\n  var uvs = new THREE.BufferAttribute(new Float32Array(vertexCount * 2), 2);\n  var index = 0,\n      vertices = [],\n      normal = new THREE.Vector3();\n\n  for (var y = 0; y <= heightSegments; y++) {\n    var verticesRow = [];\n    var v = y / heightSegments;\n\n    for (var x = 0; x <= widthSegments; x++) {\n      var u = x / widthSegments;\n      var px = -radius * Math.cos(phiStart + u * phiLength) * Math.sin(thetaStart + v * thetaLength);\n      var py = radius * Math.cos(thetaStart + v * thetaLength);\n      var pz = radius * Math.sin(phiStart + u * phiLength) * Math.sin(thetaStart + v * thetaLength);\n      normal.set(px, py, pz).normalize();\n      positions.setXYZ(index, px, py, pz);\n      normals.setXYZ(index, normal.x, normal.y, normal.z);\n      uvs.setXY(index, u, 1 - v);\n      verticesRow.push(index);\n      index++;\n    }\n\n    vertices.push(verticesRow);\n  }\n\n  var indices = [];\n\n  for (var y = 0; y < heightSegments; y++) {\n    for (var x = 0; x < widthSegments; x++) {\n      var v1 = vertices[y][x + 1];\n      var v2 = vertices[y][x];\n      var v3 = vertices[y + 1][x];\n      var v4 = vertices[y + 1][x + 1];\n      if (y !== 0 || thetaStart > 0) indices.push(v1, v2, v4);\n      if (y !== heightSegments - 1 || thetaEnd < Math.PI) indices.push(v2, v3, v4);\n    }\n  }\n\n  this.setIndex(new (positions.count > 65535 ? THREE.Uint32Attribute : THREE.Uint16Attribute)(indices, 1));\n  this.addAttribute('position', positions);\n  this.addAttribute('normal', normals);\n  this.addAttribute('uv', uvs);\n  this.boundingSphere = new THREE.Sphere(new THREE.Vector3(), radius);\n};\n\nTHREE.SphereBufferGeometry.prototype = Object.create(THREE.BufferGeometry.prototype);\nTHREE.SphereBufferGeometry.prototype.constructor = THREE.SphereBufferGeometry; // File:src/extras/geometries/SphereGeometry.js\n\n/**\n * @author mrdoob / http://mrdoob.com/\n */\n\nTHREE.SphereGeometry = function (radius, widthSegments, heightSegments, phiStart, phiLength, thetaStart, thetaLength) {\n  THREE.Geometry.call(this);\n  this.type = 'SphereGeometry';\n  this.parameters = {\n    radius: radius,\n    widthSegments: widthSegments,\n    heightSegments: heightSegments,\n    phiStart: phiStart,\n    phiLength: phiLength,\n    thetaStart: thetaStart,\n    thetaLength: thetaLength\n  };\n  this.fromBufferGeometry(new THREE.SphereBufferGeometry(radius, widthSegments, heightSegments, phiStart, phiLength, thetaStart, thetaLength));\n};\n\nTHREE.SphereGeometry.prototype = Object.create(THREE.Geometry.prototype);\nTHREE.SphereGeometry.prototype.constructor = THREE.SphereGeometry; // File:src/materials/Material.js\n\n/**\n * @author mrdoob / http://mrdoob.com/\n * @author alteredq / http://alteredqualia.com/\n */\n\nTHREE.Material = function () {\n  Object.defineProperty(this, 'id', {\n    value: THREE.MaterialIdCount++\n  });\n  this.uuid = THREE.Math.generateUUID();\n  this.name = '';\n  this.type = 'Material';\n  this.side = THREE.FrontSide;\n  this.opacity = 1;\n  this.transparent = false;\n  this.blending = THREE.NormalBlending;\n  this.blendSrc = THREE.SrcAlphaFactor;\n  this.blendDst = THREE.OneMinusSrcAlphaFactor;\n  this.blendEquation = THREE.AddEquation;\n  this.blendSrcAlpha = null;\n  this.blendDstAlpha = null;\n  this.blendEquationAlpha = null;\n  this.depthFunc = THREE.LessEqualDepth;\n  this.depthTest = true;\n  this.depthWrite = true;\n  this.colorWrite = true;\n  this.precision = null; // override the renderer's default precision for this material\n\n  this.polygonOffset = false;\n  this.polygonOffsetFactor = 0;\n  this.polygonOffsetUnits = 0;\n  this.alphaTest = 0;\n  this.premultipliedAlpha = false;\n  this.overdraw = 0; // Overdrawn pixels (typically between 0 and 1) for fixing antialiasing gaps in CanvasRenderer\n\n  this.visible = true;\n  this._needsUpdate = true;\n};\n\nTHREE.Material.prototype = {\n  constructor: THREE.Material,\n\n  get needsUpdate() {\n    return this._needsUpdate;\n  },\n\n  set needsUpdate(value) {\n    if (value === true) this.update();\n    this._needsUpdate = value;\n  },\n\n  setValues: function (values) {\n    if (values === undefined) return;\n\n    for (var key in values) {\n      var newValue = values[key];\n\n      if (newValue === undefined) {\n        continue;\n      }\n\n      var currentValue = this[key];\n\n      if (currentValue === undefined) {\n        continue;\n      }\n\n      if (currentValue instanceof THREE.Color) {\n        currentValue.set(newValue);\n      } else if (currentValue instanceof THREE.Vector3 && newValue instanceof THREE.Vector3) {\n        currentValue.copy(newValue);\n      } else if (key === 'overdraw') {\n        // ensure overdraw is backwards-compatible with legacy boolean type\n        this[key] = Number(newValue);\n      } else {\n        this[key] = newValue;\n      }\n    }\n  },\n  toJSON: function (meta) {\n    var isRoot = meta === undefined;\n\n    if (isRoot) {\n      meta = {\n        textures: {},\n        images: {}\n      };\n    }\n\n    var data = {\n      metadata: {\n        version: 4.4,\n        type: 'Material',\n        generator: 'Material.toJSON'\n      }\n    }; // standard Material serialization\n\n    data.uuid = this.uuid;\n    data.type = this.type;\n    if (this.name !== '') data.name = this.name;\n    if (this.color instanceof THREE.Color) data.color = this.color.getHex();\n    if (this.roughness !== 0.5) data.roughness = this.roughness;\n    if (this.metalness !== 0.5) data.metalness = this.metalness;\n    if (this.emissive instanceof THREE.Color) data.emissive = this.emissive.getHex();\n    if (this.specular instanceof THREE.Color) data.specular = this.specular.getHex();\n    if (this.shininess !== undefined) data.shininess = this.shininess;\n    if (this.map instanceof THREE.Texture) data.map = this.map.toJSON(meta).uuid;\n    if (this.alphaMap instanceof THREE.Texture) data.alphaMap = this.alphaMap.toJSON(meta).uuid;\n    if (this.lightMap instanceof THREE.Texture) data.lightMap = this.lightMap.toJSON(meta).uuid;\n\n    if (this.bumpMap instanceof THREE.Texture) {\n      data.bumpMap = this.bumpMap.toJSON(meta).uuid;\n      data.bumpScale = this.bumpScale;\n    }\n\n    if (this.normalMap instanceof THREE.Texture) {\n      data.normalMap = this.normalMap.toJSON(meta).uuid;\n      data.normalScale = this.normalScale.toArray();\n    }\n\n    if (this.displacementMap instanceof THREE.Texture) {\n      data.displacementMap = this.displacementMap.toJSON(meta).uuid;\n      data.displacementScale = this.displacementScale;\n      data.displacementBias = this.displacementBias;\n    }\n\n    if (this.roughnessMap instanceof THREE.Texture) data.roughnessMap = this.roughnessMap.toJSON(meta).uuid;\n    if (this.metalnessMap instanceof THREE.Texture) data.metalnessMap = this.metalnessMap.toJSON(meta).uuid;\n    if (this.emissiveMap instanceof THREE.Texture) data.emissiveMap = this.emissiveMap.toJSON(meta).uuid;\n    if (this.specularMap instanceof THREE.Texture) data.specularMap = this.specularMap.toJSON(meta).uuid;\n\n    if (this.envMap instanceof THREE.Texture) {\n      data.envMap = this.envMap.toJSON(meta).uuid;\n      data.reflectivity = this.reflectivity; // Scale behind envMap\n    }\n\n    if (this.size !== undefined) data.size = this.size;\n    if (this.sizeAttenuation !== undefined) data.sizeAttenuation = this.sizeAttenuation;\n    if (this.vertexColors !== undefined && this.vertexColors !== THREE.NoColors) data.vertexColors = this.vertexColors;\n    if (this.shading !== undefined && this.shading !== THREE.SmoothShading) data.shading = this.shading;\n    if (this.blending !== undefined && this.blending !== THREE.NormalBlending) data.blending = this.blending;\n    if (this.side !== undefined && this.side !== THREE.FrontSide) data.side = this.side;\n    if (this.opacity < 1) data.opacity = this.opacity;\n    if (this.transparent === true) data.transparent = this.transparent;\n    if (this.alphaTest > 0) data.alphaTest = this.alphaTest;\n    if (this.premultipliedAlpha === true) data.premultipliedAlpha = this.premultipliedAlpha;\n    if (this.wireframe === true) data.wireframe = this.wireframe;\n    if (this.wireframeLinewidth > 1) data.wireframeLinewidth = this.wireframeLinewidth; // TODO: Copied from Object3D.toJSON\n\n    function extractFromCache(cache) {\n      var values = [];\n\n      for (var key in cache) {\n        var data = cache[key];\n        delete data.metadata;\n        values.push(data);\n      }\n\n      return values;\n    }\n\n    if (isRoot) {\n      var textures = extractFromCache(meta.textures);\n      var images = extractFromCache(meta.images);\n      if (textures.length > 0) data.textures = textures;\n      if (images.length > 0) data.images = images;\n    }\n\n    return data;\n  },\n  clone: function () {\n    return new this.constructor().copy(this);\n  },\n  copy: function (source) {\n    this.name = source.name;\n    this.side = source.side;\n    this.opacity = source.opacity;\n    this.transparent = source.transparent;\n    this.blending = source.blending;\n    this.blendSrc = source.blendSrc;\n    this.blendDst = source.blendDst;\n    this.blendEquation = source.blendEquation;\n    this.blendSrcAlpha = source.blendSrcAlpha;\n    this.blendDstAlpha = source.blendDstAlpha;\n    this.blendEquationAlpha = source.blendEquationAlpha;\n    this.depthFunc = source.depthFunc;\n    this.depthTest = source.depthTest;\n    this.depthWrite = source.depthWrite;\n    this.colorWrite = source.colorWrite;\n    this.precision = source.precision;\n    this.polygonOffset = source.polygonOffset;\n    this.polygonOffsetFactor = source.polygonOffsetFactor;\n    this.polygonOffsetUnits = source.polygonOffsetUnits;\n    this.alphaTest = source.alphaTest;\n    this.premultipliedAlpha = source.premultipliedAlpha;\n    this.overdraw = source.overdraw;\n    this.visible = source.visible;\n    return this;\n  },\n  update: function () {\n    this.dispatchEvent({\n      type: 'update'\n    });\n  },\n  dispose: function () {\n    this.dispatchEvent({\n      type: 'dispose'\n    });\n  }\n};\nTHREE.EventDispatcher.prototype.apply(THREE.Material.prototype);\nTHREE.MaterialIdCount = 0; // File:src/materials/LineBasicMaterial.js\n\n/**\n * @author mrdoob / http://mrdoob.com/\n * @author alteredq / http://alteredqualia.com/\n *\n * parameters = {\n *  color: <hex>,\n *  opacity: <float>,\n *\n *  linewidth: <float>,\n *  linecap: \"round\",\n *  linejoin: \"round\",\n *\n *  blending: THREE.NormalBlending,\n *  depthTest: <bool>,\n *  depthWrite: <bool>,\n *\n *  vertexColors: <bool>\n *\n *  fog: <bool>\n * }\n */\n\nTHREE.LineBasicMaterial = function (parameters) {\n  THREE.Material.call(this);\n  this.type = 'LineBasicMaterial';\n  this.color = new THREE.Color(0xffffff);\n  this.linewidth = 1;\n  this.linecap = 'round';\n  this.linejoin = 'round';\n  this.blending = THREE.NormalBlending;\n  this.vertexColors = THREE.NoColors;\n  this.fog = true;\n  this.setValues(parameters);\n};\n\nTHREE.LineBasicMaterial.prototype = Object.create(THREE.Material.prototype);\nTHREE.LineBasicMaterial.prototype.constructor = THREE.LineBasicMaterial;\n\nTHREE.LineBasicMaterial.prototype.copy = function (source) {\n  THREE.Material.prototype.copy.call(this, source);\n  this.color.copy(source.color);\n  this.linewidth = source.linewidth;\n  this.linecap = source.linecap;\n  this.linejoin = source.linejoin;\n  this.vertexColors = source.vertexColors;\n  this.fog = source.fog;\n  return this;\n}; // File:src/materials/LineDashedMaterial.js\n\n/**\n * @author alteredq / http://alteredqualia.com/\n *\n * parameters = {\n *  color: <hex>,\n *  opacity: <float>,\n *\n *  linewidth: <float>,\n *\n *  scale: <float>,\n *  dashSize: <float>,\n *  gapSize: <float>,\n *\n *  blending: THREE.NormalBlending,\n *  depthTest: <bool>,\n *  depthWrite: <bool>,\n *\n *  vertexColors: THREE.NoColors / THREE.FaceColors / THREE.VertexColors\n *\n *  fog: <bool>\n * }\n */\n\n\nTHREE.LineDashedMaterial = function (parameters) {\n  THREE.Material.call(this);\n  this.type = 'LineDashedMaterial';\n  this.color = new THREE.Color(0xffffff);\n  this.linewidth = 1;\n  this.scale = 1;\n  this.dashSize = 3;\n  this.gapSize = 1;\n  this.blending = THREE.NormalBlending;\n  this.vertexColors = THREE.NoColors;\n  this.fog = true;\n  this.setValues(parameters);\n};\n\nTHREE.LineDashedMaterial.prototype = Object.create(THREE.Material.prototype);\nTHREE.LineDashedMaterial.prototype.constructor = THREE.LineDashedMaterial;\n\nTHREE.LineDashedMaterial.prototype.copy = function (source) {\n  THREE.Material.prototype.copy.call(this, source);\n  this.color.copy(source.color);\n  this.linewidth = source.linewidth;\n  this.scale = source.scale;\n  this.dashSize = source.dashSize;\n  this.gapSize = source.gapSize;\n  this.vertexColors = source.vertexColors;\n  this.fog = source.fog;\n  return this;\n}; // File:src/materials/PointsMaterial.js\n\n/**\n * @author mrdoob / http://mrdoob.com/\n * @author alteredq / http://alteredqualia.com/\n *\n * parameters = {\n *  color: <hex>,\n *  opacity: <float>,\n *  map: new THREE.Texture( <Image> ),\n *\n *  size: <float>,\n *  sizeAttenuation: <bool>,\n *\n *  blending: THREE.NormalBlending,\n *  depthTest: <bool>,\n *  depthWrite: <bool>,\n *\n *  vertexColors: <bool>,\n *\n *  fog: <bool>\n * }\n */\n\n\nTHREE.PointsMaterial = function (parameters) {\n  THREE.Material.call(this);\n  this.type = 'PointsMaterial';\n  this.color = new THREE.Color(0xffffff);\n  this.map = null;\n  this.size = 1;\n  this.sizeAttenuation = true;\n  this.blending = THREE.NormalBlending;\n  this.vertexColors = THREE.NoColors;\n  this.fog = true;\n  this.setValues(parameters);\n};\n\nTHREE.PointsMaterial.prototype = Object.create(THREE.Material.prototype);\nTHREE.PointsMaterial.prototype.constructor = THREE.PointsMaterial;\n\nTHREE.PointsMaterial.prototype.copy = function (source) {\n  THREE.Material.prototype.copy.call(this, source);\n  this.color.copy(source.color);\n  this.map = source.map;\n  this.size = source.size;\n  this.sizeAttenuation = source.sizeAttenuation;\n  this.vertexColors = source.vertexColors;\n  this.fog = source.fog;\n  return this;\n}; // File:src/materials/MeshDepthMaterial.js\n\n/**\n * @author mrdoob / http://mrdoob.com/\n * @author alteredq / http://alteredqualia.com/\n *\n * parameters = {\n *  opacity: <float>,\n *\n *  wireframe: <boolean>,\n *  wireframeLinewidth: <float>\n * }\n */\n\n\nTHREE.MeshDepthMaterial = function (parameters) {\n  THREE.Material.call(this);\n  this.type = 'MeshDepthMaterial';\n  this.morphTargets = false;\n  this.wireframe = false;\n  this.wireframeLinewidth = 1;\n  this.setValues(parameters);\n};\n\nTHREE.MeshDepthMaterial.prototype = Object.create(THREE.Material.prototype);\nTHREE.MeshDepthMaterial.prototype.constructor = THREE.MeshDepthMaterial;\n\nTHREE.MeshDepthMaterial.prototype.copy = function (source) {\n  THREE.Material.prototype.copy.call(this, source);\n  this.wireframe = source.wireframe;\n  this.wireframeLinewidth = source.wireframeLinewidth;\n  return this;\n}; // File:src/materials/MeshNormalMaterial.js\n\n/**\n * @author mrdoob / http://mrdoob.com/\n *\n * parameters = {\n *  opacity: <float>,\n *\n *  wireframe: <boolean>,\n *  wireframeLinewidth: <float>\n * }\n */\n\n\nTHREE.MeshNormalMaterial = function (parameters) {\n  THREE.Material.call(this, parameters);\n  this.type = 'MeshNormalMaterial';\n  this.wireframe = false;\n  this.wireframeLinewidth = 1;\n  this.morphTargets = false;\n  this.setValues(parameters);\n};\n\nTHREE.MeshNormalMaterial.prototype = Object.create(THREE.Material.prototype);\nTHREE.MeshNormalMaterial.prototype.constructor = THREE.MeshNormalMaterial;\n\nTHREE.MeshNormalMaterial.prototype.copy = function (source) {\n  THREE.Material.prototype.copy.call(this, source);\n  this.wireframe = source.wireframe;\n  this.wireframeLinewidth = source.wireframeLinewidth;\n  return this;\n}; // File:src/materials/ShaderMaterial.js\n\n/**\n * @author alteredq / http://alteredqualia.com/\n *\n * parameters = {\n *  defines: { \"label\" : \"value\" },\n *  uniforms: { \"parameter1\": { type: \"f\", value: 1.0 }, \"parameter2\": { type: \"i\" value2: 2 } },\n *\n *  fragmentShader: <string>,\n *  vertexShader: <string>,\n *\n *  shading: THREE.SmoothShading,\n *\n *  wireframe: <boolean>,\n *  wireframeLinewidth: <float>,\n *\n *  lights: <bool>,\n *\n *  vertexColors: THREE.NoColors / THREE.VertexColors / THREE.FaceColors,\n *\n *  skinning: <bool>,\n *  morphTargets: <bool>,\n *  morphNormals: <bool>,\n *\n *\tfog: <bool>\n * }\n */\n\n\nTHREE.ShaderMaterial = function (parameters) {\n  THREE.Material.call(this);\n  this.type = 'ShaderMaterial';\n  this.defines = {};\n  this.uniforms = {};\n  this.vertexShader = 'void main() {\\n\\tgl_Position = projectionMatrix * modelViewMatrix * vec4( position, 1.0 );\\n}';\n  this.fragmentShader = 'void main() {\\n\\tgl_FragColor = vec4( 1.0, 0.0, 0.0, 1.0 );\\n}';\n  this.shading = THREE.SmoothShading;\n  this.linewidth = 1;\n  this.wireframe = false;\n  this.wireframeLinewidth = 1;\n  this.fog = false; // set to use scene fog\n\n  this.lights = false; // set to use scene lights\n\n  this.vertexColors = THREE.NoColors; // set to use \"color\" attribute stream\n\n  this.skinning = false; // set to use skinning attribute streams\n\n  this.morphTargets = false; // set to use morph targets\n\n  this.morphNormals = false; // set to use morph normals\n\n  this.extensions = {\n    derivatives: false,\n    // set to use derivatives\n    fragDepth: false,\n    // set to use fragment depth values\n    drawBuffers: false,\n    // set to use draw buffers\n    shaderTextureLOD: false // set to use shader texture LOD\n\n  }; // When rendered geometry doesn't include these attributes but the material does,\n  // use these default values in WebGL. This avoids errors when buffer data is missing.\n\n  this.defaultAttributeValues = {\n    'color': [1, 1, 1],\n    'uv': [0, 0],\n    'uv2': [0, 0]\n  };\n  this.index0AttributeName = undefined;\n\n  if (parameters !== undefined) {\n    if (parameters.attributes !== undefined) ;\n    this.setValues(parameters);\n  }\n};\n\nTHREE.ShaderMaterial.prototype = Object.create(THREE.Material.prototype);\nTHREE.ShaderMaterial.prototype.constructor = THREE.ShaderMaterial;\n\nTHREE.ShaderMaterial.prototype.copy = function (source) {\n  THREE.Material.prototype.copy.call(this, source);\n  this.fragmentShader = source.fragmentShader;\n  this.vertexShader = source.vertexShader;\n  this.uniforms = THREE.UniformsUtils.clone(source.uniforms);\n  this.defines = source.defines;\n  this.shading = source.shading;\n  this.wireframe = source.wireframe;\n  this.wireframeLinewidth = source.wireframeLinewidth;\n  this.fog = source.fog;\n  this.lights = source.lights;\n  this.vertexColors = source.vertexColors;\n  this.skinning = source.skinning;\n  this.morphTargets = source.morphTargets;\n  this.morphNormals = source.morphNormals;\n  this.extensions = source.extensions;\n  return this;\n};\n\nTHREE.ShaderMaterial.prototype.toJSON = function (meta) {\n  var data = THREE.Material.prototype.toJSON.call(this, meta);\n  data.uniforms = this.uniforms;\n  data.vertexShader = this.vertexShader;\n  data.fragmentShader = this.fragmentShader;\n  return data;\n}; // File:src/materials/MeshBasicMaterial.js\n\n/**\n * @author mrdoob / http://mrdoob.com/\n * @author alteredq / http://alteredqualia.com/\n *\n * parameters = {\n *  color: <hex>,\n *  opacity: <float>,\n *  map: new THREE.Texture( <Image> ),\n *\n *  aoMap: new THREE.Texture( <Image> ),\n *  aoMapIntensity: <float>\n *\n *  specularMap: new THREE.Texture( <Image> ),\n *\n *  alphaMap: new THREE.Texture( <Image> ),\n *\n *  envMap: new THREE.TextureCube( [posx, negx, posy, negy, posz, negz] ),\n *  combine: THREE.Multiply,\n *  reflectivity: <float>,\n *  refractionRatio: <float>,\n *\n *  shading: THREE.SmoothShading,\n *  blending: THREE.NormalBlending,\n *  depthTest: <bool>,\n *  depthWrite: <bool>,\n *\n *  wireframe: <boolean>,\n *  wireframeLinewidth: <float>,\n *\n *  vertexColors: THREE.NoColors / THREE.VertexColors / THREE.FaceColors,\n *\n *  skinning: <bool>,\n *  morphTargets: <bool>,\n *\n *  fog: <bool>\n * }\n */\n\n\nTHREE.MeshBasicMaterial = function (parameters) {\n  THREE.Material.call(this);\n  this.type = 'MeshBasicMaterial';\n  this.color = new THREE.Color(0xffffff); // emissive\n\n  this.map = null;\n  this.aoMap = null;\n  this.aoMapIntensity = 1.0;\n  this.specularMap = null;\n  this.alphaMap = null;\n  this.envMap = null;\n  this.combine = THREE.MultiplyOperation;\n  this.reflectivity = 1;\n  this.refractionRatio = 0.98;\n  this.fog = true;\n  this.shading = THREE.SmoothShading;\n  this.blending = THREE.NormalBlending;\n  this.wireframe = false;\n  this.wireframeLinewidth = 1;\n  this.wireframeLinecap = 'round';\n  this.wireframeLinejoin = 'round';\n  this.vertexColors = THREE.NoColors;\n  this.skinning = false;\n  this.morphTargets = false;\n  this.setValues(parameters);\n};\n\nTHREE.MeshBasicMaterial.prototype = Object.create(THREE.Material.prototype);\nTHREE.MeshBasicMaterial.prototype.constructor = THREE.MeshBasicMaterial;\n\nTHREE.MeshBasicMaterial.prototype.copy = function (source) {\n  THREE.Material.prototype.copy.call(this, source);\n  this.color.copy(source.color);\n  this.map = source.map;\n  this.aoMap = source.aoMap;\n  this.aoMapIntensity = source.aoMapIntensity;\n  this.specularMap = source.specularMap;\n  this.alphaMap = source.alphaMap;\n  this.envMap = source.envMap;\n  this.combine = source.combine;\n  this.reflectivity = source.reflectivity;\n  this.refractionRatio = source.refractionRatio;\n  this.fog = source.fog;\n  this.shading = source.shading;\n  this.wireframe = source.wireframe;\n  this.wireframeLinewidth = source.wireframeLinewidth;\n  this.wireframeLinecap = source.wireframeLinecap;\n  this.wireframeLinejoin = source.wireframeLinejoin;\n  this.vertexColors = source.vertexColors;\n  this.skinning = source.skinning;\n  this.morphTargets = source.morphTargets;\n  return this;\n}; // File:src/materials/MeshLambertMaterial.js\n\n/**\n * @author mrdoob / http://mrdoob.com/\n * @author alteredq / http://alteredqualia.com/\n *\n * parameters = {\n *  color: <hex>,\n *  opacity: <float>,\n *\n *  map: new THREE.Texture( <Image> ),\n *\n *  lightMap: new THREE.Texture( <Image> ),\n *  lightMapIntensity: <float>\n *\n *  aoMap: new THREE.Texture( <Image> ),\n *  aoMapIntensity: <float>\n *\n *  emissive: <hex>,\n *  emissiveIntensity: <float>\n *  emissiveMap: new THREE.Texture( <Image> ),\n *\n *  specularMap: new THREE.Texture( <Image> ),\n *\n *  alphaMap: new THREE.Texture( <Image> ),\n *\n *  envMap: new THREE.TextureCube( [posx, negx, posy, negy, posz, negz] ),\n *  combine: THREE.Multiply,\n *  reflectivity: <float>,\n *  refractionRatio: <float>,\n *\n *  blending: THREE.NormalBlending,\n *  depthTest: <bool>,\n *  depthWrite: <bool>,\n *\n *  wireframe: <boolean>,\n *  wireframeLinewidth: <float>,\n *\n *  vertexColors: THREE.NoColors / THREE.VertexColors / THREE.FaceColors,\n *\n *  skinning: <bool>,\n *  morphTargets: <bool>,\n *  morphNormals: <bool>,\n *\n *\tfog: <bool>\n * }\n */\n\n\nTHREE.MeshLambertMaterial = function (parameters) {\n  THREE.Material.call(this);\n  this.type = 'MeshLambertMaterial';\n  this.color = new THREE.Color(0xffffff); // diffuse\n\n  this.map = null;\n  this.lightMap = null;\n  this.lightMapIntensity = 1.0;\n  this.aoMap = null;\n  this.aoMapIntensity = 1.0;\n  this.emissive = new THREE.Color(0x000000);\n  this.emissiveIntensity = 1.0;\n  this.emissiveMap = null;\n  this.specularMap = null;\n  this.alphaMap = null;\n  this.envMap = null;\n  this.combine = THREE.MultiplyOperation;\n  this.reflectivity = 1;\n  this.refractionRatio = 0.98;\n  this.fog = true;\n  this.blending = THREE.NormalBlending;\n  this.wireframe = false;\n  this.wireframeLinewidth = 1;\n  this.wireframeLinecap = 'round';\n  this.wireframeLinejoin = 'round';\n  this.vertexColors = THREE.NoColors;\n  this.skinning = false;\n  this.morphTargets = false;\n  this.morphNormals = false;\n  this.setValues(parameters);\n};\n\nTHREE.MeshLambertMaterial.prototype = Object.create(THREE.Material.prototype);\nTHREE.MeshLambertMaterial.prototype.constructor = THREE.MeshLambertMaterial;\n\nTHREE.MeshLambertMaterial.prototype.copy = function (source) {\n  THREE.Material.prototype.copy.call(this, source);\n  this.color.copy(source.color);\n  this.map = source.map;\n  this.lightMap = source.lightMap;\n  this.lightMapIntensity = source.lightMapIntensity;\n  this.aoMap = source.aoMap;\n  this.aoMapIntensity = source.aoMapIntensity;\n  this.emissive.copy(source.emissive);\n  this.emissiveMap = source.emissiveMap;\n  this.emissiveIntensity = source.emissiveIntensity;\n  this.specularMap = source.specularMap;\n  this.alphaMap = source.alphaMap;\n  this.envMap = source.envMap;\n  this.combine = source.combine;\n  this.reflectivity = source.reflectivity;\n  this.refractionRatio = source.refractionRatio;\n  this.fog = source.fog;\n  this.wireframe = source.wireframe;\n  this.wireframeLinewidth = source.wireframeLinewidth;\n  this.wireframeLinecap = source.wireframeLinecap;\n  this.wireframeLinejoin = source.wireframeLinejoin;\n  this.vertexColors = source.vertexColors;\n  this.skinning = source.skinning;\n  this.morphTargets = source.morphTargets;\n  this.morphNormals = source.morphNormals;\n  return this;\n}; // File:src/materials/MeshStandardMaterial.js\n\n/**\n * @author WestLangley / http://github.com/WestLangley\n *\n * parameters = {\n *  color: <hex>,\n *  roughness: <float>,\n *  metalness: <float>,\n *  opacity: <float>,\n *\n *  map: new THREE.Texture( <Image> ),\n *\n *  lightMap: new THREE.Texture( <Image> ),\n *  lightMapIntensity: <float>\n *\n *  aoMap: new THREE.Texture( <Image> ),\n *  aoMapIntensity: <float>\n *\n *  emissive: <hex>,\n *  emissiveIntensity: <float>\n *  emissiveMap: new THREE.Texture( <Image> ),\n *\n *  bumpMap: new THREE.Texture( <Image> ),\n *  bumpScale: <float>,\n *\n *  normalMap: new THREE.Texture( <Image> ),\n *  normalScale: <Vector2>,\n *\n *  displacementMap: new THREE.Texture( <Image> ),\n *  displacementScale: <float>,\n *  displacementBias: <float>,\n *\n *  roughnessMap: new THREE.Texture( <Image> ),\n *\n *  metalnessMap: new THREE.Texture( <Image> ),\n *\n *  alphaMap: new THREE.Texture( <Image> ),\n *\n *  envMap: new THREE.CubeTexture( [posx, negx, posy, negy, posz, negz] ),\n *  envMapIntensity: <float>\n *\n *  refractionRatio: <float>,\n *\n *  shading: THREE.SmoothShading,\n *  blending: THREE.NormalBlending,\n *  depthTest: <bool>,\n *  depthWrite: <bool>,\n *\n *  wireframe: <boolean>,\n *  wireframeLinewidth: <float>,\n *\n *  vertexColors: THREE.NoColors / THREE.VertexColors / THREE.FaceColors,\n *\n *  skinning: <bool>,\n *  morphTargets: <bool>,\n *  morphNormals: <bool>,\n *\n *\tfog: <bool>\n * }\n */\n\n\nTHREE.MeshStandardMaterial = function (parameters) {\n  THREE.Material.call(this);\n  this.type = 'MeshStandardMaterial';\n  this.color = new THREE.Color(0xffffff); // diffuse\n\n  this.roughness = 0.5;\n  this.metalness = 0.5;\n  this.map = null;\n  this.lightMap = null;\n  this.lightMapIntensity = 1.0;\n  this.aoMap = null;\n  this.aoMapIntensity = 1.0;\n  this.emissive = new THREE.Color(0x000000);\n  this.emissiveIntensity = 1.0;\n  this.emissiveMap = null;\n  this.bumpMap = null;\n  this.bumpScale = 1;\n  this.normalMap = null;\n  this.normalScale = new THREE.Vector2(1, 1);\n  this.displacementMap = null;\n  this.displacementScale = 1;\n  this.displacementBias = 0;\n  this.roughnessMap = null;\n  this.metalnessMap = null;\n  this.alphaMap = null;\n  this.envMap = null;\n  this.envMapIntensity = 1.0;\n  this.refractionRatio = 0.98;\n  this.fog = true;\n  this.shading = THREE.SmoothShading;\n  this.blending = THREE.NormalBlending;\n  this.wireframe = false;\n  this.wireframeLinewidth = 1;\n  this.wireframeLinecap = 'round';\n  this.wireframeLinejoin = 'round';\n  this.vertexColors = THREE.NoColors;\n  this.skinning = false;\n  this.morphTargets = false;\n  this.morphNormals = false;\n  this.setValues(parameters);\n};\n\nTHREE.MeshStandardMaterial.prototype = Object.create(THREE.Material.prototype);\nTHREE.MeshStandardMaterial.prototype.constructor = THREE.MeshStandardMaterial;\n\nTHREE.MeshStandardMaterial.prototype.copy = function (source) {\n  THREE.Material.prototype.copy.call(this, source);\n  this.color.copy(source.color);\n  this.roughness = source.roughness;\n  this.metalness = source.metalness;\n  this.map = source.map;\n  this.lightMap = source.lightMap;\n  this.lightMapIntensity = source.lightMapIntensity;\n  this.aoMap = source.aoMap;\n  this.aoMapIntensity = source.aoMapIntensity;\n  this.emissive.copy(source.emissive);\n  this.emissiveMap = source.emissiveMap;\n  this.emissiveIntensity = source.emissiveIntensity;\n  this.bumpMap = source.bumpMap;\n  this.bumpScale = source.bumpScale;\n  this.normalMap = source.normalMap;\n  this.normalScale.copy(source.normalScale);\n  this.displacementMap = source.displacementMap;\n  this.displacementScale = source.displacementScale;\n  this.displacementBias = source.displacementBias;\n  this.roughnessMap = source.roughnessMap;\n  this.metalnessMap = source.metalnessMap;\n  this.alphaMap = source.alphaMap;\n  this.envMap = source.envMap;\n  this.envMapIntensity = source.envMapIntensity;\n  this.refractionRatio = source.refractionRatio;\n  this.fog = source.fog;\n  this.shading = source.shading;\n  this.wireframe = source.wireframe;\n  this.wireframeLinewidth = source.wireframeLinewidth;\n  this.wireframeLinecap = source.wireframeLinecap;\n  this.wireframeLinejoin = source.wireframeLinejoin;\n  this.vertexColors = source.vertexColors;\n  this.skinning = source.skinning;\n  this.morphTargets = source.morphTargets;\n  this.morphNormals = source.morphNormals;\n  return this;\n}; // File:src/materials/MeshPhongMaterial.js\n\n/**\n * @author mrdoob / http://mrdoob.com/\n * @author alteredq / http://alteredqualia.com/\n *\n * parameters = {\n *  color: <hex>,\n *  specular: <hex>,\n *  shininess: <float>,\n *  opacity: <float>,\n *\n *  map: new THREE.Texture( <Image> ),\n *\n *  lightMap: new THREE.Texture( <Image> ),\n *  lightMapIntensity: <float>\n *\n *  aoMap: new THREE.Texture( <Image> ),\n *  aoMapIntensity: <float>\n *\n *  emissive: <hex>,\n *  emissiveIntensity: <float>\n *  emissiveMap: new THREE.Texture( <Image> ),\n *\n *  bumpMap: new THREE.Texture( <Image> ),\n *  bumpScale: <float>,\n *\n *  normalMap: new THREE.Texture( <Image> ),\n *  normalScale: <Vector2>,\n *\n *  displacementMap: new THREE.Texture( <Image> ),\n *  displacementScale: <float>,\n *  displacementBias: <float>,\n *\n *  specularMap: new THREE.Texture( <Image> ),\n *\n *  alphaMap: new THREE.Texture( <Image> ),\n *\n *  envMap: new THREE.TextureCube( [posx, negx, posy, negy, posz, negz] ),\n *  combine: THREE.Multiply,\n *  reflectivity: <float>,\n *  refractionRatio: <float>,\n *\n *  shading: THREE.SmoothShading,\n *  blending: THREE.NormalBlending,\n *  depthTest: <bool>,\n *  depthWrite: <bool>,\n *\n *  wireframe: <boolean>,\n *  wireframeLinewidth: <float>,\n *\n *  vertexColors: THREE.NoColors / THREE.VertexColors / THREE.FaceColors,\n *\n *  skinning: <bool>,\n *  morphTargets: <bool>,\n *  morphNormals: <bool>,\n *\n *\tfog: <bool>\n * }\n */\n\n\nTHREE.MeshPhongMaterial = function (parameters) {\n  THREE.Material.call(this);\n  this.type = 'MeshPhongMaterial';\n  this.color = new THREE.Color(0xffffff); // diffuse\n\n  this.specular = new THREE.Color(0x111111);\n  this.shininess = 30;\n  this.map = null;\n  this.lightMap = null;\n  this.lightMapIntensity = 1.0;\n  this.aoMap = null;\n  this.aoMapIntensity = 1.0;\n  this.emissive = new THREE.Color(0x000000);\n  this.emissiveIntensity = 1.0;\n  this.emissiveMap = null;\n  this.bumpMap = null;\n  this.bumpScale = 1;\n  this.normalMap = null;\n  this.normalScale = new THREE.Vector2(1, 1);\n  this.displacementMap = null;\n  this.displacementScale = 1;\n  this.displacementBias = 0;\n  this.specularMap = null;\n  this.alphaMap = null;\n  this.envMap = null;\n  this.combine = THREE.MultiplyOperation;\n  this.reflectivity = 1;\n  this.refractionRatio = 0.98;\n  this.fog = true;\n  this.shading = THREE.SmoothShading;\n  this.blending = THREE.NormalBlending;\n  this.wireframe = false;\n  this.wireframeLinewidth = 1;\n  this.wireframeLinecap = 'round';\n  this.wireframeLinejoin = 'round';\n  this.vertexColors = THREE.NoColors;\n  this.skinning = false;\n  this.morphTargets = false;\n  this.morphNormals = false;\n  this.setValues(parameters);\n};\n\nTHREE.MeshPhongMaterial.prototype = Object.create(THREE.Material.prototype);\nTHREE.MeshPhongMaterial.prototype.constructor = THREE.MeshPhongMaterial;\n\nTHREE.MeshPhongMaterial.prototype.copy = function (source) {\n  THREE.Material.prototype.copy.call(this, source);\n  this.color.copy(source.color);\n  this.specular.copy(source.specular);\n  this.shininess = source.shininess;\n  this.map = source.map;\n  this.lightMap = source.lightMap;\n  this.lightMapIntensity = source.lightMapIntensity;\n  this.aoMap = source.aoMap;\n  this.aoMapIntensity = source.aoMapIntensity;\n  this.emissive.copy(source.emissive);\n  this.emissiveMap = source.emissiveMap;\n  this.emissiveIntensity = source.emissiveIntensity;\n  this.bumpMap = source.bumpMap;\n  this.bumpScale = source.bumpScale;\n  this.normalMap = source.normalMap;\n  this.normalScale.copy(source.normalScale);\n  this.displacementMap = source.displacementMap;\n  this.displacementScale = source.displacementScale;\n  this.displacementBias = source.displacementBias;\n  this.specularMap = source.specularMap;\n  this.alphaMap = source.alphaMap;\n  this.envMap = source.envMap;\n  this.combine = source.combine;\n  this.reflectivity = source.reflectivity;\n  this.refractionRatio = source.refractionRatio;\n  this.fog = source.fog;\n  this.shading = source.shading;\n  this.wireframe = source.wireframe;\n  this.wireframeLinewidth = source.wireframeLinewidth;\n  this.wireframeLinecap = source.wireframeLinecap;\n  this.wireframeLinejoin = source.wireframeLinejoin;\n  this.vertexColors = source.vertexColors;\n  this.skinning = source.skinning;\n  this.morphTargets = source.morphTargets;\n  this.morphNormals = source.morphNormals;\n  return this;\n}; // File:src/materials/MultiMaterial.js\n\n/**\n * @author mrdoob / http://mrdoob.com/\n */\n\n\nTHREE.MultiMaterial = function (materials) {\n  this.uuid = THREE.Math.generateUUID();\n  this.type = 'MultiMaterial';\n  this.materials = materials instanceof Array ? materials : [];\n  this.visible = true;\n};\n\nTHREE.MultiMaterial.prototype = {\n  constructor: THREE.MultiMaterial,\n  toJSON: function (meta) {\n    var output = {\n      metadata: {\n        version: 4.2,\n        type: 'material',\n        generator: 'MaterialExporter'\n      },\n      uuid: this.uuid,\n      type: this.type,\n      materials: []\n    };\n    var materials = this.materials;\n\n    for (var i = 0, l = materials.length; i < l; i++) {\n      var material = materials[i].toJSON(meta);\n      delete material.metadata;\n      output.materials.push(material);\n    }\n\n    output.visible = this.visible;\n    return output;\n  },\n  clone: function () {\n    var material = new this.constructor();\n\n    for (var i = 0; i < this.materials.length; i++) {\n      material.materials.push(this.materials[i].clone());\n    }\n\n    material.visible = this.visible;\n    return material;\n  }\n}; // File:src/materials/RawShaderMaterial.js\n\n/**\n * @author mrdoob / http://mrdoob.com/\n */\n\nTHREE.RawShaderMaterial = function (parameters) {\n  THREE.ShaderMaterial.call(this, parameters);\n  this.type = 'RawShaderMaterial';\n};\n\nTHREE.RawShaderMaterial.prototype = Object.create(THREE.ShaderMaterial.prototype);\nTHREE.RawShaderMaterial.prototype.constructor = THREE.RawShaderMaterial; // File:src/textures/Texture.js\n\n/**\n * @author mrdoob / http://mrdoob.com/\n * @author alteredq / http://alteredqualia.com/\n * @author szimek / https://github.com/szimek/\n */\n\nTHREE.Texture = function (image, mapping, wrapS, wrapT, magFilter, minFilter, format, type, anisotropy) {\n  Object.defineProperty(this, 'id', {\n    value: THREE.TextureIdCount++\n  });\n  this.uuid = THREE.Math.generateUUID();\n  this.name = '';\n  this.sourceFile = '';\n  this.image = image !== undefined ? image : THREE.Texture.DEFAULT_IMAGE;\n  this.mipmaps = [];\n  this.mapping = mapping !== undefined ? mapping : THREE.Texture.DEFAULT_MAPPING;\n  this.wrapS = wrapS !== undefined ? wrapS : THREE.ClampToEdgeWrapping;\n  this.wrapT = wrapT !== undefined ? wrapT : THREE.ClampToEdgeWrapping;\n  this.magFilter = magFilter !== undefined ? magFilter : THREE.LinearFilter;\n  this.minFilter = minFilter !== undefined ? minFilter : THREE.LinearMipMapLinearFilter;\n  this.anisotropy = anisotropy !== undefined ? anisotropy : 1;\n  this.format = format !== undefined ? format : THREE.RGBAFormat;\n  this.type = type !== undefined ? type : THREE.UnsignedByteType;\n  this.offset = new THREE.Vector2(0, 0);\n  this.repeat = new THREE.Vector2(1, 1);\n  this.generateMipmaps = true;\n  this.premultiplyAlpha = false;\n  this.flipY = true;\n  this.unpackAlignment = 4; // valid values: 1, 2, 4, 8 (see http://www.khronos.org/opengles/sdk/docs/man/xhtml/glPixelStorei.xml)\n  // Values of encoding !== THREE.LinearEncoding only supported on map, envMap and emissiveMap.\n  //\n  // Also changing the encoding after already used by a Material will not automatically make the Material\n  // update.  You need to explicitly call Material.needsUpdate to trigger it to recompile.\n\n  this.encoding = THREE.LinearEncoding;\n  this.version = 0;\n  this.onUpdate = null;\n};\n\nTHREE.Texture.DEFAULT_IMAGE = undefined;\nTHREE.Texture.DEFAULT_MAPPING = THREE.UVMapping;\nTHREE.Texture.prototype = {\n  constructor: THREE.Texture,\n\n  set needsUpdate(value) {\n    if (value === true) this.version++;\n  },\n\n  clone: function () {\n    return new this.constructor().copy(this);\n  },\n  copy: function (source) {\n    this.image = source.image;\n    this.mipmaps = source.mipmaps.slice(0);\n    this.mapping = source.mapping;\n    this.wrapS = source.wrapS;\n    this.wrapT = source.wrapT;\n    this.magFilter = source.magFilter;\n    this.minFilter = source.minFilter;\n    this.anisotropy = source.anisotropy;\n    this.format = source.format;\n    this.type = source.type;\n    this.offset.copy(source.offset);\n    this.repeat.copy(source.repeat);\n    this.generateMipmaps = source.generateMipmaps;\n    this.premultiplyAlpha = source.premultiplyAlpha;\n    this.flipY = source.flipY;\n    this.unpackAlignment = source.unpackAlignment;\n    this.encoding = source.encoding;\n    return this;\n  },\n  toJSON: function (meta) {\n    if (meta.textures[this.uuid] !== undefined) {\n      return meta.textures[this.uuid];\n    }\n\n    function getDataURL(image) {\n      var canvas;\n\n      if (image.toDataURL !== undefined) {\n        canvas = image;\n      } else {\n        canvas = document.createElement('canvas');\n        canvas.width = image.width;\n        canvas.height = image.height;\n        canvas.getContext('2d').drawImage(image, 0, 0, image.width, image.height);\n      }\n\n      if (canvas.width > 2048 || canvas.height > 2048) {\n        return canvas.toDataURL('image/jpeg', 0.6);\n      } else {\n        return canvas.toDataURL('image/png');\n      }\n    }\n\n    var output = {\n      metadata: {\n        version: 4.4,\n        type: 'Texture',\n        generator: 'Texture.toJSON'\n      },\n      uuid: this.uuid,\n      name: this.name,\n      mapping: this.mapping,\n      repeat: [this.repeat.x, this.repeat.y],\n      offset: [this.offset.x, this.offset.y],\n      wrap: [this.wrapS, this.wrapT],\n      minFilter: this.minFilter,\n      magFilter: this.magFilter,\n      anisotropy: this.anisotropy\n    };\n\n    if (this.image !== undefined) {\n      // TODO: Move to THREE.Image\n      var image = this.image;\n\n      if (image.uuid === undefined) {\n        image.uuid = THREE.Math.generateUUID(); // UGH\n      }\n\n      if (meta.images[image.uuid] === undefined) {\n        meta.images[image.uuid] = {\n          uuid: image.uuid,\n          url: getDataURL(image)\n        };\n      }\n\n      output.image = image.uuid;\n    }\n\n    meta.textures[this.uuid] = output;\n    return output;\n  },\n  dispose: function () {\n    this.dispatchEvent({\n      type: 'dispose'\n    });\n  },\n  transformUv: function (uv) {\n    if (this.mapping !== THREE.UVMapping) return;\n    uv.multiply(this.repeat);\n    uv.add(this.offset);\n\n    if (uv.x < 0 || uv.x > 1) {\n      switch (this.wrapS) {\n        case THREE.RepeatWrapping:\n          uv.x = uv.x - Math.floor(uv.x);\n          break;\n\n        case THREE.ClampToEdgeWrapping:\n          uv.x = uv.x < 0 ? 0 : 1;\n          break;\n\n        case THREE.MirroredRepeatWrapping:\n          if (Math.abs(Math.floor(uv.x) % 2) === 1) {\n            uv.x = Math.ceil(uv.x) - uv.x;\n          } else {\n            uv.x = uv.x - Math.floor(uv.x);\n          }\n\n          break;\n      }\n    }\n\n    if (uv.y < 0 || uv.y > 1) {\n      switch (this.wrapT) {\n        case THREE.RepeatWrapping:\n          uv.y = uv.y - Math.floor(uv.y);\n          break;\n\n        case THREE.ClampToEdgeWrapping:\n          uv.y = uv.y < 0 ? 0 : 1;\n          break;\n\n        case THREE.MirroredRepeatWrapping:\n          if (Math.abs(Math.floor(uv.y) % 2) === 1) {\n            uv.y = Math.ceil(uv.y) - uv.y;\n          } else {\n            uv.y = uv.y - Math.floor(uv.y);\n          }\n\n          break;\n      }\n    }\n\n    if (this.flipY) {\n      uv.y = 1 - uv.y;\n    }\n  }\n};\nTHREE.EventDispatcher.prototype.apply(THREE.Texture.prototype);\nTHREE.TextureIdCount = 0; // File:src/textures/DataTexture.js\n\n/**\n * @author alteredq / http://alteredqualia.com/\n */\n\nTHREE.DataTexture = function (data, width, height, format, type, mapping, wrapS, wrapT, magFilter, minFilter, anisotropy) {\n  THREE.Texture.call(this, null, mapping, wrapS, wrapT, magFilter, minFilter, format, type, anisotropy);\n  this.image = {\n    data: data,\n    width: width,\n    height: height\n  };\n  this.magFilter = magFilter !== undefined ? magFilter : THREE.NearestFilter;\n  this.minFilter = minFilter !== undefined ? minFilter : THREE.NearestFilter;\n  this.flipY = false;\n  this.generateMipmaps = false;\n};\n\nTHREE.DataTexture.prototype = Object.create(THREE.Texture.prototype);\nTHREE.DataTexture.prototype.constructor = THREE.DataTexture; // File:src/textures/CompressedTexture.js\n\n/**\n * @author alteredq / http://alteredqualia.com/\n */\n\nTHREE.CompressedTexture = function (mipmaps, width, height, format, type, mapping, wrapS, wrapT, magFilter, minFilter, anisotropy) {\n  THREE.Texture.call(this, null, mapping, wrapS, wrapT, magFilter, minFilter, format, type, anisotropy);\n  this.image = {\n    width: width,\n    height: height\n  };\n  this.mipmaps = mipmaps; // no flipping for cube textures\n  // (also flipping doesn't work for compressed textures )\n\n  this.flipY = false; // can't generate mipmaps for compressed textures\n  // mips must be embedded in DDS files\n\n  this.generateMipmaps = false;\n};\n\nTHREE.CompressedTexture.prototype = Object.create(THREE.Texture.prototype);\nTHREE.CompressedTexture.prototype.constructor = THREE.CompressedTexture; // File:src/textures/CubeTexture.js\n\n/**\n * @author mrdoob / http://mrdoob.com/\n */\n\nTHREE.CubeTexture = function (images, mapping, wrapS, wrapT, magFilter, minFilter, format, type, anisotropy) {\n  images = images !== undefined ? images : [];\n  mapping = mapping !== undefined ? mapping : THREE.CubeReflectionMapping;\n  THREE.Texture.call(this, images, mapping, wrapS, wrapT, magFilter, minFilter, format, type, anisotropy);\n  this.flipY = false;\n};\n\nTHREE.CubeTexture.prototype = Object.create(THREE.Texture.prototype);\nTHREE.CubeTexture.prototype.constructor = THREE.CubeTexture;\nObject.defineProperty(THREE.CubeTexture.prototype, 'images', {\n  get: function () {\n    return this.image;\n  },\n  set: function (value) {\n    this.image = value;\n  }\n}); // File:src/textures/VideoTexture.js\n\n/**\n * @author mrdoob / http://mrdoob.com/\n */\n\nTHREE.VideoTexture = function (video, mapping, wrapS, wrapT, magFilter, minFilter, format, type, anisotropy) {\n  THREE.Texture.call(this, video, mapping, wrapS, wrapT, magFilter, minFilter, format, type, anisotropy);\n  this.generateMipmaps = false;\n  var scope = this;\n\n  function update() {\n    requestAnimationFrame(update);\n\n    if (video.readyState >= video.HAVE_CURRENT_DATA) {\n      scope.needsUpdate = true;\n    }\n  }\n\n  update();\n};\n\nTHREE.VideoTexture.prototype = Object.create(THREE.Texture.prototype);\nTHREE.VideoTexture.prototype.constructor = THREE.VideoTexture; // File:src/objects/Sprite.js\n\n/**\n * @author mikael emtinger / http://gomo.se/\n * @author alteredq / http://alteredqualia.com/\n */\n\nTHREE.Sprite = function () {\n  var indices = new Uint16Array([0, 1, 2, 0, 2, 3]);\n  var vertices = new Float32Array([-0.5, -0.5, 0, 0.5, -0.5, 0, 0.5, 0.5, 0, -0.5, 0.5, 0]);\n  var uvs = new Float32Array([0, 0, 1, 0, 1, 1, 0, 1]);\n  var geometry = new THREE.BufferGeometry();\n  geometry.setIndex(new THREE.BufferAttribute(indices, 1));\n  geometry.addAttribute('position', new THREE.BufferAttribute(vertices, 3));\n  geometry.addAttribute('uv', new THREE.BufferAttribute(uvs, 2));\n  return function Sprite(material) {\n    THREE.Object3D.call(this);\n    this.type = 'Sprite';\n    this.geometry = geometry;\n    this.material = material !== undefined ? material : new THREE.SpriteMaterial();\n  };\n}();\n\nTHREE.Sprite.prototype = Object.create(THREE.Object3D.prototype);\nTHREE.Sprite.prototype.constructor = THREE.Sprite;\n\nTHREE.Sprite.prototype.raycast = function () {\n  var matrixPosition = new THREE.Vector3();\n  return function raycast(raycaster, intersects) {\n    matrixPosition.setFromMatrixPosition(this.matrixWorld);\n    var distanceSq = raycaster.ray.distanceSqToPoint(matrixPosition);\n    var guessSizeSq = this.scale.x * this.scale.y;\n\n    if (distanceSq > guessSizeSq) {\n      return;\n    }\n\n    intersects.push({\n      distance: Math.sqrt(distanceSq),\n      point: this.position,\n      face: null,\n      object: this\n    });\n  };\n}();\n\nTHREE.Sprite.prototype.clone = function () {\n  return new this.constructor(this.material).copy(this);\n}; // Backwards compatibility\n\n\nTHREE.Particle = THREE.Sprite; // File:src/objects/LensFlare.js\n\n/**\n * @author mikael emtinger / http://gomo.se/\n * @author alteredq / http://alteredqualia.com/\n */\n\nTHREE.LensFlare = function (texture, size, distance, blending, color) {\n  THREE.Object3D.call(this);\n  this.lensFlares = [];\n  this.positionScreen = new THREE.Vector3();\n  this.customUpdateCallback = undefined;\n\n  if (texture !== undefined) {\n    this.add(texture, size, distance, blending, color);\n  }\n};\n\nTHREE.LensFlare.prototype = Object.create(THREE.Object3D.prototype);\nTHREE.LensFlare.prototype.constructor = THREE.LensFlare;\n/*\n * Add: adds another flare\n */\n\nTHREE.LensFlare.prototype.add = function (texture, size, distance, blending, color, opacity) {\n  if (size === undefined) size = -1;\n  if (distance === undefined) distance = 0;\n  if (opacity === undefined) opacity = 1;\n  if (color === undefined) color = new THREE.Color(0xffffff);\n  if (blending === undefined) blending = THREE.NormalBlending;\n  distance = Math.min(distance, Math.max(0, distance));\n  this.lensFlares.push({\n    texture: texture,\n    // THREE.Texture\n    size: size,\n    // size in pixels (-1 = use texture.width)\n    distance: distance,\n    // distance (0-1) from light source (0=at light source)\n    x: 0,\n    y: 0,\n    z: 0,\n    // screen position (-1 => 1) z = 0 is in front z = 1 is back\n    scale: 1,\n    // scale\n    rotation: 0,\n    // rotation\n    opacity: opacity,\n    // opacity\n    color: color,\n    // color\n    blending: blending // blending\n\n  });\n};\n/*\n * Update lens flares update positions on all flares based on the screen position\n * Set myLensFlare.customUpdateCallback to alter the flares in your project specific way.\n */\n\n\nTHREE.LensFlare.prototype.updateLensFlares = function () {\n  var f,\n      fl = this.lensFlares.length;\n  var flare;\n  var vecX = -this.positionScreen.x * 2;\n  var vecY = -this.positionScreen.y * 2;\n\n  for (f = 0; f < fl; f++) {\n    flare = this.lensFlares[f];\n    flare.x = this.positionScreen.x + vecX * flare.distance;\n    flare.y = this.positionScreen.y + vecY * flare.distance;\n    flare.wantedRotation = flare.x * Math.PI * 0.25;\n    flare.rotation += (flare.wantedRotation - flare.rotation) * 0.25;\n  }\n};\n\nTHREE.LensFlare.prototype.copy = function (source) {\n  THREE.Object3D.prototype.copy.call(this, source);\n  this.positionScreen.copy(source.positionScreen);\n  this.customUpdateCallback = source.customUpdateCallback;\n\n  for (var i = 0, l = source.lensFlares.length; i < l; i++) {\n    this.lensFlares.push(source.lensFlares[i]);\n  }\n\n  return this;\n}; // File:src/objects/Line.js\n\n/**\n * @author mrdoob / http://mrdoob.com/\n */\n\n\nTHREE.Line = function (geometry, material, mode) {\n  if (mode === 1) {\n    return new THREE.LineSegments(geometry, material);\n  }\n\n  THREE.Object3D.call(this);\n  this.type = 'Line';\n  this.geometry = geometry !== undefined ? geometry : new THREE.Geometry();\n  this.material = material !== undefined ? material : new THREE.LineBasicMaterial({\n    color: Math.random() * 0xffffff\n  });\n};\n\nTHREE.Line.prototype = Object.create(THREE.Object3D.prototype);\nTHREE.Line.prototype.constructor = THREE.Line;\n\nTHREE.Line.prototype.raycast = function () {\n  var inverseMatrix = new THREE.Matrix4();\n  var ray = new THREE.Ray();\n  var sphere = new THREE.Sphere();\n  return function raycast(raycaster, intersects) {\n    var precision = raycaster.linePrecision;\n    var precisionSq = precision * precision;\n    var geometry = this.geometry;\n    var matrixWorld = this.matrixWorld; // Checking boundingSphere distance to ray\n\n    if (geometry.boundingSphere === null) geometry.computeBoundingSphere();\n    sphere.copy(geometry.boundingSphere);\n    sphere.applyMatrix4(matrixWorld);\n    if (raycaster.ray.intersectsSphere(sphere) === false) return; //\n\n    inverseMatrix.getInverse(matrixWorld);\n    ray.copy(raycaster.ray).applyMatrix4(inverseMatrix);\n    var vStart = new THREE.Vector3();\n    var vEnd = new THREE.Vector3();\n    var interSegment = new THREE.Vector3();\n    var interRay = new THREE.Vector3();\n    var step = this instanceof THREE.LineSegments ? 2 : 1;\n\n    if (geometry instanceof THREE.BufferGeometry) {\n      var index = geometry.index;\n      var attributes = geometry.attributes;\n      var positions = attributes.position.array;\n\n      if (index !== null) {\n        var indices = index.array;\n\n        for (var i = 0, l = indices.length - 1; i < l; i += step) {\n          var a = indices[i];\n          var b = indices[i + 1];\n          vStart.fromArray(positions, a * 3);\n          vEnd.fromArray(positions, b * 3);\n          var distSq = ray.distanceSqToSegment(vStart, vEnd, interRay, interSegment);\n          if (distSq > precisionSq) continue;\n          interRay.applyMatrix4(this.matrixWorld); //Move back to world space for distance calculation\n\n          var distance = raycaster.ray.origin.distanceTo(interRay);\n          if (distance < raycaster.near || distance > raycaster.far) continue;\n          intersects.push({\n            distance: distance,\n            // What do we want? intersection point on the ray or on the segment??\n            // point: raycaster.ray.at( distance ),\n            point: interSegment.clone().applyMatrix4(this.matrixWorld),\n            index: i,\n            face: null,\n            faceIndex: null,\n            object: this\n          });\n        }\n      } else {\n        for (var i = 0, l = positions.length / 3 - 1; i < l; i += step) {\n          vStart.fromArray(positions, 3 * i);\n          vEnd.fromArray(positions, 3 * i + 3);\n          var distSq = ray.distanceSqToSegment(vStart, vEnd, interRay, interSegment);\n          if (distSq > precisionSq) continue;\n          interRay.applyMatrix4(this.matrixWorld); //Move back to world space for distance calculation\n\n          var distance = raycaster.ray.origin.distanceTo(interRay);\n          if (distance < raycaster.near || distance > raycaster.far) continue;\n          intersects.push({\n            distance: distance,\n            // What do we want? intersection point on the ray or on the segment??\n            // point: raycaster.ray.at( distance ),\n            point: interSegment.clone().applyMatrix4(this.matrixWorld),\n            index: i,\n            face: null,\n            faceIndex: null,\n            object: this\n          });\n        }\n      }\n    } else if (geometry instanceof THREE.Geometry) {\n      var vertices = geometry.vertices;\n      var nbVertices = vertices.length;\n\n      for (var i = 0; i < nbVertices - 1; i += step) {\n        var distSq = ray.distanceSqToSegment(vertices[i], vertices[i + 1], interRay, interSegment);\n        if (distSq > precisionSq) continue;\n        interRay.applyMatrix4(this.matrixWorld); //Move back to world space for distance calculation\n\n        var distance = raycaster.ray.origin.distanceTo(interRay);\n        if (distance < raycaster.near || distance > raycaster.far) continue;\n        intersects.push({\n          distance: distance,\n          // What do we want? intersection point on the ray or on the segment??\n          // point: raycaster.ray.at( distance ),\n          point: interSegment.clone().applyMatrix4(this.matrixWorld),\n          index: i,\n          face: null,\n          faceIndex: null,\n          object: this\n        });\n      }\n    }\n  };\n}();\n\nTHREE.Line.prototype.clone = function () {\n  return new this.constructor(this.geometry, this.material).copy(this);\n}; // DEPRECATED\n\n\nTHREE.LineStrip = 0;\nTHREE.LinePieces = 1; // File:src/objects/LineSegments.js\n\n/**\n * @author mrdoob / http://mrdoob.com/\n */\n\nTHREE.LineSegments = function (geometry, material) {\n  THREE.Line.call(this, geometry, material);\n  this.type = 'LineSegments';\n};\n\nTHREE.LineSegments.prototype = Object.create(THREE.Line.prototype);\nTHREE.LineSegments.prototype.constructor = THREE.LineSegments; // File:src/objects/Mesh.js\n\n/**\n * @author mrdoob / http://mrdoob.com/\n * @author alteredq / http://alteredqualia.com/\n * @author mikael emtinger / http://gomo.se/\n * @author jonobr1 / http://jonobr1.com/\n */\n\nTHREE.Mesh = function (geometry, material) {\n  THREE.Object3D.call(this);\n  this.type = 'Mesh';\n  this.geometry = geometry !== undefined ? geometry : new THREE.Geometry();\n  this.material = material !== undefined ? material : new THREE.MeshBasicMaterial({\n    color: Math.random() * 0xffffff\n  });\n  this.drawMode = THREE.TrianglesDrawMode;\n  this.updateMorphTargets();\n};\n\nTHREE.Mesh.prototype = Object.create(THREE.Object3D.prototype);\nTHREE.Mesh.prototype.constructor = THREE.Mesh;\n\nTHREE.Mesh.prototype.setDrawMode = function (value) {\n  this.drawMode = value;\n};\n\nTHREE.Mesh.prototype.updateMorphTargets = function () {\n  if (this.geometry.morphTargets !== undefined && this.geometry.morphTargets.length > 0) {\n    this.morphTargetBase = -1;\n    this.morphTargetInfluences = [];\n    this.morphTargetDictionary = {};\n\n    for (var m = 0, ml = this.geometry.morphTargets.length; m < ml; m++) {\n      this.morphTargetInfluences.push(0);\n      this.morphTargetDictionary[this.geometry.morphTargets[m].name] = m;\n    }\n  }\n};\n\nTHREE.Mesh.prototype.getMorphTargetIndexByName = function (name) {\n  if (this.morphTargetDictionary[name] !== undefined) {\n    return this.morphTargetDictionary[name];\n  }\n\n  return 0;\n};\n\nTHREE.Mesh.prototype.raycast = function () {\n  var inverseMatrix = new THREE.Matrix4();\n  var ray = new THREE.Ray();\n  var sphere = new THREE.Sphere();\n  var vA = new THREE.Vector3();\n  var vB = new THREE.Vector3();\n  var vC = new THREE.Vector3();\n  var tempA = new THREE.Vector3();\n  var tempB = new THREE.Vector3();\n  var tempC = new THREE.Vector3();\n  var uvA = new THREE.Vector2();\n  var uvB = new THREE.Vector2();\n  var uvC = new THREE.Vector2();\n  var barycoord = new THREE.Vector3();\n  var intersectionPoint = new THREE.Vector3();\n  var intersectionPointWorld = new THREE.Vector3();\n\n  function uvIntersection(point, p1, p2, p3, uv1, uv2, uv3) {\n    THREE.Triangle.barycoordFromPoint(point, p1, p2, p3, barycoord);\n    uv1.multiplyScalar(barycoord.x);\n    uv2.multiplyScalar(barycoord.y);\n    uv3.multiplyScalar(barycoord.z);\n    uv1.add(uv2).add(uv3);\n    return uv1.clone();\n  }\n\n  function checkIntersection(object, raycaster, ray, pA, pB, pC, point) {\n    var intersect;\n    var material = object.material;\n\n    if (material.side === THREE.BackSide) {\n      intersect = ray.intersectTriangle(pC, pB, pA, true, point);\n    } else {\n      intersect = ray.intersectTriangle(pA, pB, pC, material.side !== THREE.DoubleSide, point);\n    }\n\n    if (intersect === null) return null;\n    intersectionPointWorld.copy(point);\n    intersectionPointWorld.applyMatrix4(object.matrixWorld);\n    var distance = raycaster.ray.origin.distanceTo(intersectionPointWorld);\n    if (distance < raycaster.near || distance > raycaster.far) return null;\n    return {\n      distance: distance,\n      point: intersectionPointWorld.clone(),\n      object: object\n    };\n  }\n\n  function checkBufferGeometryIntersection(object, raycaster, ray, positions, uvs, a, b, c) {\n    vA.fromArray(positions, a * 3);\n    vB.fromArray(positions, b * 3);\n    vC.fromArray(positions, c * 3);\n    var intersection = checkIntersection(object, raycaster, ray, vA, vB, vC, intersectionPoint);\n\n    if (intersection) {\n      if (uvs) {\n        uvA.fromArray(uvs, a * 2);\n        uvB.fromArray(uvs, b * 2);\n        uvC.fromArray(uvs, c * 2);\n        intersection.uv = uvIntersection(intersectionPoint, vA, vB, vC, uvA, uvB, uvC);\n      }\n\n      intersection.face = new THREE.Face3(a, b, c, THREE.Triangle.normal(vA, vB, vC));\n      intersection.faceIndex = a;\n    }\n\n    return intersection;\n  }\n\n  return function raycast(raycaster, intersects) {\n    var geometry = this.geometry;\n    var material = this.material;\n    var matrixWorld = this.matrixWorld;\n    if (material === undefined) return; // Checking boundingSphere distance to ray\n\n    if (geometry.boundingSphere === null) geometry.computeBoundingSphere();\n    sphere.copy(geometry.boundingSphere);\n    sphere.applyMatrix4(matrixWorld);\n    if (raycaster.ray.intersectsSphere(sphere) === false) return; //\n\n    inverseMatrix.getInverse(matrixWorld);\n    ray.copy(raycaster.ray).applyMatrix4(inverseMatrix); // Check boundingBox before continuing\n\n    if (geometry.boundingBox !== null) {\n      if (ray.intersectsBox(geometry.boundingBox) === false) return;\n    }\n\n    var uvs, intersection;\n\n    if (geometry instanceof THREE.BufferGeometry) {\n      var a, b, c;\n      var index = geometry.index;\n      var attributes = geometry.attributes;\n      var positions = attributes.position.array;\n\n      if (attributes.uv !== undefined) {\n        uvs = attributes.uv.array;\n      }\n\n      if (index !== null) {\n        var indices = index.array;\n\n        for (var i = 0, l = indices.length; i < l; i += 3) {\n          a = indices[i];\n          b = indices[i + 1];\n          c = indices[i + 2];\n          intersection = checkBufferGeometryIntersection(this, raycaster, ray, positions, uvs, a, b, c);\n\n          if (intersection) {\n            intersection.faceIndex = Math.floor(i / 3); // triangle number in indices buffer semantics\n\n            intersects.push(intersection);\n          }\n        }\n      } else {\n        for (var i = 0, l = positions.length; i < l; i += 9) {\n          a = i / 3;\n          b = a + 1;\n          c = a + 2;\n          intersection = checkBufferGeometryIntersection(this, raycaster, ray, positions, uvs, a, b, c);\n\n          if (intersection) {\n            intersection.index = a; // triangle number in positions buffer semantics\n\n            intersects.push(intersection);\n          }\n        }\n      }\n    } else if (geometry instanceof THREE.Geometry) {\n      var fvA, fvB, fvC;\n      var isFaceMaterial = material instanceof THREE.MultiMaterial;\n      var materials = isFaceMaterial === true ? material.materials : null;\n      var vertices = geometry.vertices;\n      var faces = geometry.faces;\n      var faceVertexUvs = geometry.faceVertexUvs[0];\n      if (faceVertexUvs.length > 0) uvs = faceVertexUvs;\n\n      for (var f = 0, fl = faces.length; f < fl; f++) {\n        var face = faces[f];\n        var faceMaterial = isFaceMaterial === true ? materials[face.materialIndex] : material;\n        if (faceMaterial === undefined) continue;\n        fvA = vertices[face.a];\n        fvB = vertices[face.b];\n        fvC = vertices[face.c];\n\n        if (faceMaterial.morphTargets === true) {\n          var morphTargets = geometry.morphTargets;\n          var morphInfluences = this.morphTargetInfluences;\n          vA.set(0, 0, 0);\n          vB.set(0, 0, 0);\n          vC.set(0, 0, 0);\n\n          for (var t = 0, tl = morphTargets.length; t < tl; t++) {\n            var influence = morphInfluences[t];\n            if (influence === 0) continue;\n            var targets = morphTargets[t].vertices;\n            vA.addScaledVector(tempA.subVectors(targets[face.a], fvA), influence);\n            vB.addScaledVector(tempB.subVectors(targets[face.b], fvB), influence);\n            vC.addScaledVector(tempC.subVectors(targets[face.c], fvC), influence);\n          }\n\n          vA.add(fvA);\n          vB.add(fvB);\n          vC.add(fvC);\n          fvA = vA;\n          fvB = vB;\n          fvC = vC;\n        }\n\n        intersection = checkIntersection(this, raycaster, ray, fvA, fvB, fvC, intersectionPoint);\n\n        if (intersection) {\n          if (uvs) {\n            var uvs_f = uvs[f];\n            uvA.copy(uvs_f[0]);\n            uvB.copy(uvs_f[1]);\n            uvC.copy(uvs_f[2]);\n            intersection.uv = uvIntersection(intersectionPoint, fvA, fvB, fvC, uvA, uvB, uvC);\n          }\n\n          intersection.face = face;\n          intersection.faceIndex = f;\n          intersects.push(intersection);\n        }\n      }\n    }\n  };\n}();\n\nTHREE.Mesh.prototype.clone = function () {\n  return new this.constructor(this.geometry, this.material).copy(this);\n}; // File:src/objects/SkinnedMesh.js\n\n/**\n * @author mikael emtinger / http://gomo.se/\n * @author alteredq / http://alteredqualia.com/\n * @author ikerr / http://verold.com\n */\n\n\nTHREE.SkinnedMesh = function (geometry, material, useVertexTexture) {\n  THREE.Mesh.call(this, geometry, material);\n  this.type = 'SkinnedMesh';\n  this.bindMode = \"attached\";\n  this.bindMatrix = new THREE.Matrix4();\n  this.bindMatrixInverse = new THREE.Matrix4(); // init bones\n  // TODO: remove bone creation as there is no reason (other than\n  // convenience) for THREE.SkinnedMesh to do this.\n\n  var bones = [];\n\n  if (this.geometry && this.geometry.bones !== undefined) {\n    var bone, gbone;\n\n    for (var b = 0, bl = this.geometry.bones.length; b < bl; ++b) {\n      gbone = this.geometry.bones[b];\n      bone = new THREE.Bone(this);\n      bones.push(bone);\n      bone.name = gbone.name;\n      bone.position.fromArray(gbone.pos);\n      bone.quaternion.fromArray(gbone.rotq);\n      if (gbone.scl !== undefined) bone.scale.fromArray(gbone.scl);\n    }\n\n    for (var b = 0, bl = this.geometry.bones.length; b < bl; ++b) {\n      gbone = this.geometry.bones[b];\n\n      if (gbone.parent !== -1 && gbone.parent !== null) {\n        bones[gbone.parent].add(bones[b]);\n      } else {\n        this.add(bones[b]);\n      }\n    }\n  }\n\n  this.normalizeSkinWeights();\n  this.updateMatrixWorld(true);\n  this.bind(new THREE.Skeleton(bones, undefined, useVertexTexture), this.matrixWorld);\n};\n\nTHREE.SkinnedMesh.prototype = Object.create(THREE.Mesh.prototype);\nTHREE.SkinnedMesh.prototype.constructor = THREE.SkinnedMesh;\n\nTHREE.SkinnedMesh.prototype.bind = function (skeleton, bindMatrix) {\n  this.skeleton = skeleton;\n\n  if (bindMatrix === undefined) {\n    this.updateMatrixWorld(true);\n    this.skeleton.calculateInverses();\n    bindMatrix = this.matrixWorld;\n  }\n\n  this.bindMatrix.copy(bindMatrix);\n  this.bindMatrixInverse.getInverse(bindMatrix);\n};\n\nTHREE.SkinnedMesh.prototype.pose = function () {\n  this.skeleton.pose();\n};\n\nTHREE.SkinnedMesh.prototype.normalizeSkinWeights = function () {\n  if (this.geometry instanceof THREE.Geometry) {\n    for (var i = 0; i < this.geometry.skinWeights.length; i++) {\n      var sw = this.geometry.skinWeights[i];\n      var scale = 1.0 / sw.lengthManhattan();\n\n      if (scale !== Infinity) {\n        sw.multiplyScalar(scale);\n      } else {\n        sw.set(1, 0, 0, 0); // do something reasonable\n      }\n    }\n  } else if (this.geometry instanceof THREE.BufferGeometry) {\n    var vec = new THREE.Vector4();\n    var skinWeight = this.geometry.attributes.skinWeight;\n\n    for (var i = 0; i < skinWeight.count; i++) {\n      vec.x = skinWeight.getX(i);\n      vec.y = skinWeight.getY(i);\n      vec.z = skinWeight.getZ(i);\n      vec.w = skinWeight.getW(i);\n      var scale = 1.0 / vec.lengthManhattan();\n\n      if (scale !== Infinity) {\n        vec.multiplyScalar(scale);\n      } else {\n        vec.set(1, 0, 0, 0); // do something reasonable\n      }\n\n      skinWeight.setXYZW(i, vec.x, vec.y, vec.z, vec.w);\n    }\n  }\n};\n\nTHREE.SkinnedMesh.prototype.updateMatrixWorld = function (force) {\n  THREE.Mesh.prototype.updateMatrixWorld.call(this, true);\n\n  if (this.bindMode === \"attached\") {\n    this.bindMatrixInverse.getInverse(this.matrixWorld);\n  } else if (this.bindMode === \"detached\") {\n    this.bindMatrixInverse.getInverse(this.bindMatrix);\n  }\n};\n\nTHREE.SkinnedMesh.prototype.clone = function () {\n  return new this.constructor(this.geometry, this.material, this.useVertexTexture).copy(this);\n}; // File:src/objects/Points.js\n\n/**\n * @author alteredq / http://alteredqualia.com/\n */\n\n\nTHREE.Points = function (geometry, material) {\n  THREE.Object3D.call(this);\n  this.type = 'Points';\n  this.geometry = geometry !== undefined ? geometry : new THREE.Geometry();\n  this.material = material !== undefined ? material : new THREE.PointsMaterial({\n    color: Math.random() * 0xffffff\n  });\n};\n\nTHREE.Points.prototype = Object.create(THREE.Object3D.prototype);\nTHREE.Points.prototype.constructor = THREE.Points;\n\nTHREE.Points.prototype.raycast = function () {\n  var inverseMatrix = new THREE.Matrix4();\n  var ray = new THREE.Ray();\n  var sphere = new THREE.Sphere();\n  return function raycast(raycaster, intersects) {\n    var object = this;\n    var geometry = this.geometry;\n    var matrixWorld = this.matrixWorld;\n    var threshold = raycaster.params.Points.threshold; // Checking boundingSphere distance to ray\n\n    if (geometry.boundingSphere === null) geometry.computeBoundingSphere();\n    sphere.copy(geometry.boundingSphere);\n    sphere.applyMatrix4(matrixWorld);\n    if (raycaster.ray.intersectsSphere(sphere) === false) return; //\n\n    inverseMatrix.getInverse(matrixWorld);\n    ray.copy(raycaster.ray).applyMatrix4(inverseMatrix);\n    var localThreshold = threshold / ((this.scale.x + this.scale.y + this.scale.z) / 3);\n    var localThresholdSq = localThreshold * localThreshold;\n    var position = new THREE.Vector3();\n\n    function testPoint(point, index) {\n      var rayPointDistanceSq = ray.distanceSqToPoint(point);\n\n      if (rayPointDistanceSq < localThresholdSq) {\n        var intersectPoint = ray.closestPointToPoint(point);\n        intersectPoint.applyMatrix4(matrixWorld);\n        var distance = raycaster.ray.origin.distanceTo(intersectPoint);\n        if (distance < raycaster.near || distance > raycaster.far) return;\n        intersects.push({\n          distance: distance,\n          distanceToRay: Math.sqrt(rayPointDistanceSq),\n          point: intersectPoint.clone(),\n          index: index,\n          face: null,\n          object: object\n        });\n      }\n    }\n\n    if (geometry instanceof THREE.BufferGeometry) {\n      var index = geometry.index;\n      var attributes = geometry.attributes;\n      var positions = attributes.position.array;\n\n      if (index !== null) {\n        var indices = index.array;\n\n        for (var i = 0, il = indices.length; i < il; i++) {\n          var a = indices[i];\n          position.fromArray(positions, a * 3);\n          testPoint(position, a);\n        }\n      } else {\n        for (var i = 0, l = positions.length / 3; i < l; i++) {\n          position.fromArray(positions, i * 3);\n          testPoint(position, i);\n        }\n      }\n    } else {\n      var vertices = geometry.vertices;\n\n      for (var i = 0, l = vertices.length; i < l; i++) {\n        testPoint(vertices[i], i);\n      }\n    }\n  };\n}();\n\nTHREE.Points.prototype.clone = function () {\n  return new this.constructor(this.geometry, this.material).copy(this);\n}; // File:src/lights/Light.js\n\n/**\n * @author mrdoob / http://mrdoob.com/\n * @author alteredq / http://alteredqualia.com/\n */\n\n\nTHREE.Light = function (color, intensity) {\n  THREE.Object3D.call(this);\n  this.type = 'Light';\n  this.color = new THREE.Color(color);\n  this.intensity = intensity !== undefined ? intensity : 1;\n  this.receiveShadow = undefined;\n};\n\nTHREE.Light.prototype = Object.create(THREE.Object3D.prototype);\nTHREE.Light.prototype.constructor = THREE.Light;\n\nTHREE.Light.prototype.copy = function (source) {\n  THREE.Object3D.prototype.copy.call(this, source);\n  this.color.copy(source.color);\n  this.intensity = source.intensity;\n  return this;\n};\n\nTHREE.Light.prototype.toJSON = function (meta) {\n  var data = THREE.Object3D.prototype.toJSON.call(this, meta);\n  data.object.color = this.color.getHex();\n  data.object.intensity = this.intensity;\n  if (this.groundColor !== undefined) data.object.groundColor = this.groundColor.getHex();\n  if (this.distance !== undefined) data.object.distance = this.distance;\n  if (this.angle !== undefined) data.object.angle = this.angle;\n  if (this.decay !== undefined) data.object.decay = this.decay;\n  if (this.penumbra !== undefined) data.object.penumbra = this.penumbra;\n  return data;\n}; // File:src/renderers/shaders/ShaderChunk.js\n\n\nTHREE.ShaderChunk = {}; // File:src/renderers/shaders/ShaderChunk/alphamap_fragment.glsl\n\nTHREE.ShaderChunk['alphamap_fragment'] = \"#ifdef USE_ALPHAMAP\\n\\n\\tdiffuseColor.a *= texture2D( alphaMap, vUv ).g;\\n\\n#endif\\n\"; // File:src/renderers/shaders/ShaderChunk/alphamap_pars_fragment.glsl\n\nTHREE.ShaderChunk['alphamap_pars_fragment'] = \"#ifdef USE_ALPHAMAP\\n\\n\\tuniform sampler2D alphaMap;\\n\\n#endif\\n\"; // File:src/renderers/shaders/ShaderChunk/alphatest_fragment.glsl\n\nTHREE.ShaderChunk['alphatest_fragment'] = \"#ifdef ALPHATEST\\n\\n\\tif ( diffuseColor.a < ALPHATEST ) discard;\\n\\n#endif\\n\"; // File:src/renderers/shaders/ShaderChunk/aomap_fragment.glsl\n\nTHREE.ShaderChunk['aomap_fragment'] = \"#ifdef USE_AOMAP\\n\\n\\tfloat ambientOcclusion = ( texture2D( aoMap, vUv2 ).r - 1.0 ) * aoMapIntensity + 1.0;\\n\\n\\treflectedLight.indirectDiffuse *= ambientOcclusion;\\n\\n\\t#if defined( USE_ENVMAP ) && defined( STANDARD )\\n\\n\\t\\tfloat dotNV = saturate( dot( geometry.normal, geometry.viewDir ) );\\n\\n\\t\\treflectedLight.indirectSpecular *= computeSpecularOcclusion( dotNV, ambientOcclusion, material.specularRoughness );\\n\\n\\t#endif\\n\\n#endif\\n\"; // File:src/renderers/shaders/ShaderChunk/aomap_pars_fragment.glsl\n\nTHREE.ShaderChunk['aomap_pars_fragment'] = \"#ifdef USE_AOMAP\\n\\n\\tuniform sampler2D aoMap;\\n\\tuniform float aoMapIntensity;\\n\\n#endif\"; // File:src/renderers/shaders/ShaderChunk/begin_vertex.glsl\n\nTHREE.ShaderChunk['begin_vertex'] = \"\\nvec3 transformed = vec3( position );\\n\"; // File:src/renderers/shaders/ShaderChunk/beginnormal_vertex.glsl\n\nTHREE.ShaderChunk['beginnormal_vertex'] = \"\\nvec3 objectNormal = vec3( normal );\\n\"; // File:src/renderers/shaders/ShaderChunk/color_fragment.glsl\n\nTHREE.ShaderChunk['color_fragment'] = \"#ifdef USE_COLOR\\n\\n\\tdiffuseColor.rgb *= vColor;\\n\\n#endif\"; // File:src/renderers/shaders/ShaderChunk/color_pars_fragment.glsl\n\nTHREE.ShaderChunk['color_pars_fragment'] = \"#ifdef USE_COLOR\\n\\n\\tvarying vec3 vColor;\\n\\n#endif\\n\"; // File:src/renderers/shaders/ShaderChunk/color_pars_vertex.glsl\n\nTHREE.ShaderChunk['color_pars_vertex'] = \"#ifdef USE_COLOR\\n\\n\\tvarying vec3 vColor;\\n\\n#endif\"; // File:src/renderers/shaders/ShaderChunk/color_vertex.glsl\n\nTHREE.ShaderChunk['color_vertex'] = \"#ifdef USE_COLOR\\n\\n\\tvColor.xyz = color.xyz;\\n\\n#endif\"; // File:src/renderers/shaders/ShaderChunk/common.glsl\n\nTHREE.ShaderChunk['common'] = \"#define PI 3.14159\\n#define PI2 6.28318\\n#define RECIPROCAL_PI 0.31830988618\\n#define RECIPROCAL_PI2 0.15915494\\n#define LOG2 1.442695\\n#define EPSILON 1e-6\\n\\n#define saturate(a) clamp( a, 0.0, 1.0 )\\n#define whiteCompliment(a) ( 1.0 - saturate( a ) )\\n\\nfloat pow2( const in float x ) { return x*x; }\\nfloat pow3( const in float x ) { return x*x*x; }\\nfloat pow4( const in float x ) { float x2 = x*x; return x2*x2; }\\nfloat average( const in vec3 color ) { return dot( color, vec3( 0.3333 ) ); }\\n\\n\\nstruct IncidentLight {\\n\\tvec3 color;\\n\\tvec3 direction;\\n\\tbool visible;\\n};\\n\\nstruct ReflectedLight {\\n\\tvec3 directDiffuse;\\n\\tvec3 directSpecular;\\n\\tvec3 indirectDiffuse;\\n\\tvec3 indirectSpecular;\\n};\\n\\nstruct GeometricContext {\\n\\tvec3 position;\\n\\tvec3 normal;\\n\\tvec3 viewDir;\\n};\\n\\n\\nvec3 transformDirection( in vec3 dir, in mat4 matrix ) {\\n\\n\\treturn normalize( ( matrix * vec4( dir, 0.0 ) ).xyz );\\n\\n}\\n\\n// http://en.wikibooks.org/wiki/GLSL_Programming/Applying_Matrix_Transformations\\nvec3 inverseTransformDirection( in vec3 dir, in mat4 matrix ) {\\n\\n\\treturn normalize( ( vec4( dir, 0.0 ) * matrix ).xyz );\\n\\n}\\n\\nvec3 projectOnPlane(in vec3 point, in vec3 pointOnPlane, in vec3 planeNormal ) {\\n\\n\\tfloat distance = dot( planeNormal, point - pointOnPlane );\\n\\n\\treturn - distance * planeNormal + point;\\n\\n}\\n\\nfloat sideOfPlane( in vec3 point, in vec3 pointOnPlane, in vec3 planeNormal ) {\\n\\n\\treturn sign( dot( point - pointOnPlane, planeNormal ) );\\n\\n}\\n\\nvec3 linePlaneIntersect( in vec3 pointOnLine, in vec3 lineDirection, in vec3 pointOnPlane, in vec3 planeNormal ) {\\n\\n\\treturn lineDirection * ( dot( planeNormal, pointOnPlane - pointOnLine ) / dot( planeNormal, lineDirection ) ) + pointOnLine;\\n\\n}\\n\"; // File:src/renderers/shaders/ShaderChunk/defaultnormal_vertex.glsl\n\nTHREE.ShaderChunk['defaultnormal_vertex'] = \"#ifdef FLIP_SIDED\\n\\n\\tobjectNormal = -objectNormal;\\n\\n#endif\\n\\nvec3 transformedNormal = normalMatrix * objectNormal;\\n\"; // File:src/renderers/shaders/ShaderChunk/encodings_fragment.glsl\n\nTHREE.ShaderChunk['encodings_fragment'] = \"  gl_FragColor = linearToOutputTexel( gl_FragColor );\\n\"; // File:src/renderers/shaders/ShaderChunk/encodings_pars_fragment.glsl\n\nTHREE.ShaderChunk['encodings_pars_fragment'] = \"// For a discussion of what this is, please read this: http://lousodrome.net/blog/light/2013/05/26/gamma-correct-and-hdr-rendering-in-a-32-bits-buffer/\\n\\nvec4 LinearToLinear( in vec4 value ) {\\n  return value;\\n}\\n\\nvec4 GammaToLinear( in vec4 value, in float gammaFactor ) {\\n  return vec4( pow( value.xyz, vec3( gammaFactor ) ), value.w );\\n}\\nvec4 LinearToGamma( in vec4 value, in float gammaFactor ) {\\n  return vec4( pow( value.xyz, vec3( 1.0 / gammaFactor ) ), value.w );\\n}\\n\\nvec4 sRGBToLinear( in vec4 value ) {\\n  return vec4( mix( pow( value.rgb * 0.9478672986 + vec3( 0.0521327014 ), vec3( 2.4 ) ), value.rgb * 0.0773993808, vec3( lessThanEqual( value.rgb, vec3( 0.04045 ) ) ) ), value.w );\\n}\\nvec4 LinearTosRGB( in vec4 value ) {\\n  return vec4( mix( pow( value.rgb, vec3( 0.41666 ) ) * 1.055 - vec3( 0.055 ), value.rgb * 12.92, vec3( lessThanEqual( value.rgb, vec3( 0.0031308 ) ) ) ), value.w );\\n}\\n\\nvec4 RGBEToLinear( in vec4 value ) {\\n  return vec4( value.rgb * exp2( value.a * 255.0 - 128.0 ), 1.0 );\\n}\\nvec4 LinearToRGBE( in vec4 value ) {\\n  float maxComponent = max( max( value.r, value.g ), value.b );\\n  float fExp = clamp( ceil( log2( maxComponent ) ), -128.0, 127.0 );\\n  return vec4( value.rgb / exp2( fExp ), ( fExp + 128.0 ) / 255.0 );\\n//  return vec4( value.brg, ( 3.0 + 128.0 ) / 256.0 );\\n}\\n\\n// reference: http://iwasbeingirony.blogspot.ca/2010/06/difference-between-rgbm-and-rgbd.html\\nvec4 RGBMToLinear( in vec4 value, in float maxRange ) {\\n  return vec4( value.xyz * value.w * maxRange, 1.0 );\\n}\\nvec4 LinearToRGBM( in vec4 value, in float maxRange ) {\\n  float maxRGB = max( value.x, max( value.g, value.b ) );\\n  float M      = clamp( maxRGB / maxRange, 0.0, 1.0 );\\n  M            = ceil( M * 255.0 ) / 255.0;\\n  return vec4( value.rgb / ( M * maxRange ), M );\\n}\\n\\n// reference: http://iwasbeingirony.blogspot.ca/2010/06/difference-between-rgbm-and-rgbd.html\\nvec4 RGBDToLinear( in vec4 value, in float maxRange ) {\\n    return vec4( value.rgb * ( ( maxRange / 255.0 ) / value.a ), 1.0 );\\n}\\nvec4 LinearToRGBD( in vec4 value, in float maxRange ) {\\n    float maxRGB = max( value.x, max( value.g, value.b ) );\\n    float D      = max( maxRange / maxRGB, 1.0 );\\n    D            = min( floor( D ) / 255.0, 1.0 );\\n    return vec4( value.rgb * ( D * ( 255.0 / maxRange ) ), D );\\n}\\n\\n// LogLuv reference: http://graphicrants.blogspot.ca/2009/04/rgbm-color-encoding.html\\n\\n// M matrix, for encoding\\nconst mat3 cLogLuvM = mat3( 0.2209, 0.3390, 0.4184, 0.1138, 0.6780, 0.7319, 0.0102, 0.1130, 0.2969 );\\nvec4 LinearToLogLuv( in vec4 value )  {\\n  vec3 Xp_Y_XYZp = value.rgb * cLogLuvM;\\n  Xp_Y_XYZp = max(Xp_Y_XYZp, vec3(1e-6, 1e-6, 1e-6));\\n  vec4 vResult;\\n  vResult.xy = Xp_Y_XYZp.xy / Xp_Y_XYZp.z;\\n  float Le = 2.0 * log2(Xp_Y_XYZp.y) + 127.0;\\n  vResult.w = fract(Le);\\n  vResult.z = (Le - (floor(vResult.w*255.0))/255.0)/255.0;\\n  return vResult;\\n}\\n\\n// Inverse M matrix, for decoding\\nconst mat3 cLogLuvInverseM = mat3( 6.0014, -2.7008, -1.7996, -1.3320, 3.1029, -5.7721, 0.3008, -1.0882, 5.6268 );\\nvec4 LogLuvToLinear( in vec4 value ) {\\n  float Le = value.z * 255.0 + value.w;\\n  vec3 Xp_Y_XYZp;\\n  Xp_Y_XYZp.y = exp2((Le - 127.0) / 2.0);\\n  Xp_Y_XYZp.z = Xp_Y_XYZp.y / value.y;\\n  Xp_Y_XYZp.x = value.x * Xp_Y_XYZp.z;\\n  vec3 vRGB = Xp_Y_XYZp.rgb * cLogLuvInverseM;\\n  return vec4( max(vRGB, 0.0), 1.0 );\\n}\\n\"; // File:src/renderers/shaders/ShaderChunk/envmap_fragment.glsl\n\nTHREE.ShaderChunk['envmap_fragment'] = \"#ifdef USE_ENVMAP\\n\\n\\t#if defined( USE_BUMPMAP ) || defined( USE_NORMALMAP ) || defined( PHONG )\\n\\n\\t\\tvec3 cameraToVertex = normalize( vWorldPosition - cameraPosition );\\n\\n\\t\\t// Transforming Normal Vectors with the Inverse Transformation\\n\\t\\tvec3 worldNormal = inverseTransformDirection( normal, viewMatrix );\\n\\n\\t\\t#ifdef ENVMAP_MODE_REFLECTION\\n\\n\\t\\t\\tvec3 reflectVec = reflect( cameraToVertex, worldNormal );\\n\\n\\t\\t#else\\n\\n\\t\\t\\tvec3 reflectVec = refract( cameraToVertex, worldNormal, refractionRatio );\\n\\n\\t\\t#endif\\n\\n\\t#else\\n\\n\\t\\tvec3 reflectVec = vReflect;\\n\\n\\t#endif\\n\\n\\t#ifdef DOUBLE_SIDED\\n\\t\\tfloat flipNormal = ( float( gl_FrontFacing ) * 2.0 - 1.0 );\\n\\t#else\\n\\t\\tfloat flipNormal = 1.0;\\n\\t#endif\\n\\n\\t#ifdef ENVMAP_TYPE_CUBE\\n\\n\\t\\tvec4 envColor = textureCube( envMap, flipNormal * vec3( flipEnvMap * reflectVec.x, reflectVec.yz ) );\\n\\n\\t#elif defined( ENVMAP_TYPE_EQUIREC )\\n\\n\\t\\tvec2 sampleUV;\\n\\t\\tsampleUV.y = saturate( flipNormal * reflectVec.y * 0.5 + 0.5 );\\n\\t\\tsampleUV.x = atan( flipNormal * reflectVec.z, flipNormal * reflectVec.x ) * RECIPROCAL_PI2 + 0.5;\\n\\t\\tvec4 envColor = texture2D( envMap, sampleUV );\\n\\n\\t#elif defined( ENVMAP_TYPE_SPHERE )\\n\\n\\t\\tvec3 reflectView = flipNormal * normalize((viewMatrix * vec4( reflectVec, 0.0 )).xyz + vec3(0.0,0.0,1.0));\\n\\t\\tvec4 envColor = texture2D( envMap, reflectView.xy * 0.5 + 0.5 );\\n\\n\\t#endif\\n\\n\\tenvColor = envMapTexelToLinear( envColor );\\n\\n\\t#ifdef ENVMAP_BLENDING_MULTIPLY\\n\\n\\t\\toutgoingLight = mix( outgoingLight, outgoingLight * envColor.xyz, specularStrength * reflectivity );\\n\\n\\t#elif defined( ENVMAP_BLENDING_MIX )\\n\\n\\t\\toutgoingLight = mix( outgoingLight, envColor.xyz, specularStrength * reflectivity );\\n\\n\\t#elif defined( ENVMAP_BLENDING_ADD )\\n\\n\\t\\toutgoingLight += envColor.xyz * specularStrength * reflectivity;\\n\\n\\t#endif\\n\\n#endif\\n\"; // File:src/renderers/shaders/ShaderChunk/envmap_pars_fragment.glsl\n\nTHREE.ShaderChunk['envmap_pars_fragment'] = \"#if defined( USE_ENVMAP ) || defined( STANDARD )\\n\\tuniform float reflectivity;\\n\\tuniform float envMapIntenstiy;\\n#endif\\n\\n#ifdef USE_ENVMAP\\n\\t#ifdef ENVMAP_TYPE_CUBE\\n\\t\\tuniform samplerCube envMap;\\n\\t#else\\n\\t\\tuniform sampler2D envMap;\\n\\t#endif\\n\\tuniform float flipEnvMap;\\n\\n\\t#if defined( USE_BUMPMAP ) || defined( USE_NORMALMAP ) || defined( PHONG ) || defined( STANDARD )\\n\\n\\t\\tuniform float refractionRatio;\\n\\n\\t#else\\n\\n\\t\\tvarying vec3 vReflect;\\n\\n\\t#endif\\n\\n#endif\\n\"; // File:src/renderers/shaders/ShaderChunk/envmap_pars_vertex.glsl\n\nTHREE.ShaderChunk['envmap_pars_vertex'] = \"#if defined( USE_ENVMAP ) && ! defined( USE_BUMPMAP ) && ! defined( USE_NORMALMAP ) && ! defined( PHONG ) && ! defined( STANDARD )\\n\\n\\tvarying vec3 vReflect;\\n\\n\\tuniform float refractionRatio;\\n\\n#endif\\n\"; // File:src/renderers/shaders/ShaderChunk/envmap_vertex.glsl\n\nTHREE.ShaderChunk['envmap_vertex'] = \"#if defined( USE_ENVMAP ) && ! defined( USE_BUMPMAP ) && ! defined( USE_NORMALMAP ) && ! defined( PHONG ) && ! defined( STANDARD )\\n\\n\\tvec3 cameraToVertex = normalize( worldPosition.xyz - cameraPosition );\\n\\n\\tvec3 worldNormal = inverseTransformDirection( transformedNormal, viewMatrix );\\n\\n\\t#ifdef ENVMAP_MODE_REFLECTION\\n\\n\\t\\tvReflect = reflect( cameraToVertex, worldNormal );\\n\\n\\t#else\\n\\n\\t\\tvReflect = refract( cameraToVertex, worldNormal, refractionRatio );\\n\\n\\t#endif\\n\\n#endif\\n\"; // File:src/renderers/shaders/ShaderChunk/fog_fragment.glsl\n\nTHREE.ShaderChunk['fog_fragment'] = \"#ifdef USE_FOG\\n\\n\\t#ifdef USE_LOGDEPTHBUF_EXT\\n\\n\\t\\tfloat depth = gl_FragDepthEXT / gl_FragCoord.w;\\n\\n\\t#else\\n\\n\\t\\tfloat depth = gl_FragCoord.z / gl_FragCoord.w;\\n\\n\\t#endif\\n\\n\\t#ifdef FOG_EXP2\\n\\n\\t\\tfloat fogFactor = whiteCompliment( exp2( - fogDensity * fogDensity * depth * depth * LOG2 ) );\\n\\n\\t#else\\n\\n\\t\\tfloat fogFactor = smoothstep( fogNear, fogFar, depth );\\n\\n\\t#endif\\n\\n\\tgl_FragColor.rgb = mix( gl_FragColor.rgb, fogColor, fogFactor );\\n\\n#endif\\n\"; // File:src/renderers/shaders/ShaderChunk/fog_pars_fragment.glsl\n\nTHREE.ShaderChunk['fog_pars_fragment'] = \"#ifdef USE_FOG\\n\\n\\tuniform vec3 fogColor;\\n\\n\\t#ifdef FOG_EXP2\\n\\n\\t\\tuniform float fogDensity;\\n\\n\\t#else\\n\\n\\t\\tuniform float fogNear;\\n\\t\\tuniform float fogFar;\\n\\t#endif\\n\\n#endif\"; // File:src/renderers/shaders/ShaderChunk/logdepthbuf_fragment.glsl\n\nTHREE.ShaderChunk['logdepthbuf_fragment'] = \"#if defined(USE_LOGDEPTHBUF) && defined(USE_LOGDEPTHBUF_EXT)\\n\\n\\tgl_FragDepthEXT = log2(vFragDepth) * logDepthBufFC * 0.5;\\n\\n#endif\"; // File:src/renderers/shaders/ShaderChunk/logdepthbuf_pars_fragment.glsl\n\nTHREE.ShaderChunk['logdepthbuf_pars_fragment'] = \"#ifdef USE_LOGDEPTHBUF\\n\\n\\tuniform float logDepthBufFC;\\n\\n\\t#ifdef USE_LOGDEPTHBUF_EXT\\n\\n\\t\\tvarying float vFragDepth;\\n\\n\\t#endif\\n\\n#endif\\n\"; // File:src/renderers/shaders/ShaderChunk/logdepthbuf_pars_vertex.glsl\n\nTHREE.ShaderChunk['logdepthbuf_pars_vertex'] = \"#ifdef USE_LOGDEPTHBUF\\n\\n\\t#ifdef USE_LOGDEPTHBUF_EXT\\n\\n\\t\\tvarying float vFragDepth;\\n\\n\\t#endif\\n\\n\\tuniform float logDepthBufFC;\\n\\n#endif\"; // File:src/renderers/shaders/ShaderChunk/logdepthbuf_vertex.glsl\n\nTHREE.ShaderChunk['logdepthbuf_vertex'] = \"#ifdef USE_LOGDEPTHBUF\\n\\n\\tgl_Position.z = log2(max( EPSILON, gl_Position.w + 1.0 )) * logDepthBufFC;\\n\\n\\t#ifdef USE_LOGDEPTHBUF_EXT\\n\\n\\t\\tvFragDepth = 1.0 + gl_Position.w;\\n\\n\\t#else\\n\\n\\t\\tgl_Position.z = (gl_Position.z - 1.0) * gl_Position.w;\\n\\n\\t#endif\\n\\n#endif\\n\"; // File:src/renderers/shaders/ShaderChunk/map_fragment.glsl\n\nTHREE.ShaderChunk['map_fragment'] = \"#ifdef USE_MAP\\n\\n\\tvec4 texelColor = texture2D( map, vUv );\\n\\n\\ttexelColor = mapTexelToLinear( texelColor );\\n\\tdiffuseColor *= texelColor;\\n\\n#endif\\n\"; // File:src/renderers/shaders/ShaderChunk/map_pars_fragment.glsl\n\nTHREE.ShaderChunk['map_pars_fragment'] = \"#ifdef USE_MAP\\n\\n\\tuniform sampler2D map;\\n\\n#endif\\n\"; // File:src/renderers/shaders/ShaderChunk/morphnormal_vertex.glsl\n\nTHREE.ShaderChunk['morphnormal_vertex'] = \"#ifdef USE_MORPHNORMALS\\n\\n\\tobjectNormal += ( morphNormal0 - normal ) * morphTargetInfluences[ 0 ];\\n\\tobjectNormal += ( morphNormal1 - normal ) * morphTargetInfluences[ 1 ];\\n\\tobjectNormal += ( morphNormal2 - normal ) * morphTargetInfluences[ 2 ];\\n\\tobjectNormal += ( morphNormal3 - normal ) * morphTargetInfluences[ 3 ];\\n\\n#endif\\n\"; // File:src/renderers/shaders/ShaderChunk/morphtarget_pars_vertex.glsl\n\nTHREE.ShaderChunk['morphtarget_pars_vertex'] = \"#ifdef USE_MORPHTARGETS\\n\\n\\t#ifndef USE_MORPHNORMALS\\n\\n\\tuniform float morphTargetInfluences[ 8 ];\\n\\n\\t#else\\n\\n\\tuniform float morphTargetInfluences[ 4 ];\\n\\n\\t#endif\\n\\n#endif\"; // File:src/renderers/shaders/ShaderChunk/morphtarget_vertex.glsl\n\nTHREE.ShaderChunk['morphtarget_vertex'] = \"#ifdef USE_MORPHTARGETS\\n\\n\\ttransformed += ( morphTarget0 - position ) * morphTargetInfluences[ 0 ];\\n\\ttransformed += ( morphTarget1 - position ) * morphTargetInfluences[ 1 ];\\n\\ttransformed += ( morphTarget2 - position ) * morphTargetInfluences[ 2 ];\\n\\ttransformed += ( morphTarget3 - position ) * morphTargetInfluences[ 3 ];\\n\\n\\t#ifndef USE_MORPHNORMALS\\n\\n\\ttransformed += ( morphTarget4 - position ) * morphTargetInfluences[ 4 ];\\n\\ttransformed += ( morphTarget5 - position ) * morphTargetInfluences[ 5 ];\\n\\ttransformed += ( morphTarget6 - position ) * morphTargetInfluences[ 6 ];\\n\\ttransformed += ( morphTarget7 - position ) * morphTargetInfluences[ 7 ];\\n\\n\\t#endif\\n\\n#endif\\n\"; // File:src/renderers/shaders/ShaderChunk/premultiplied_alpha_fragment.glsl\n\nTHREE.ShaderChunk['premultiplied_alpha_fragment'] = \"#ifdef PREMULTIPLIED_ALPHA\\n\\n\\t// Get get normal blending with premultipled, use with CustomBlending, OneFactor, OneMinusSrcAlphaFactor, AddEquation.\\n\\tgl_FragColor.rgb *= gl_FragColor.a;\\n\\n#endif\\n\"; // File:src/renderers/shaders/ShaderChunk/project_vertex.glsl\n\nTHREE.ShaderChunk['project_vertex'] = \"#ifdef USE_SKINNING\\n\\n\\tvec4 mvPosition = modelViewMatrix * skinned;\\n\\n#else\\n\\n\\tvec4 mvPosition = modelViewMatrix * vec4( transformed, 1.0 );\\n\\n#endif\\n\\ngl_Position = projectionMatrix * mvPosition;\\n\"; // File:src/renderers/shaders/ShaderChunk/skinbase_vertex.glsl\n\nTHREE.ShaderChunk['skinbase_vertex'] = \"#ifdef USE_SKINNING\\n\\n\\tmat4 boneMatX = getBoneMatrix( skinIndex.x );\\n\\tmat4 boneMatY = getBoneMatrix( skinIndex.y );\\n\\tmat4 boneMatZ = getBoneMatrix( skinIndex.z );\\n\\tmat4 boneMatW = getBoneMatrix( skinIndex.w );\\n\\n#endif\"; // File:src/renderers/shaders/ShaderChunk/skinning_pars_vertex.glsl\n\nTHREE.ShaderChunk['skinning_pars_vertex'] = \"#ifdef USE_SKINNING\\n\\n\\tuniform mat4 bindMatrix;\\n\\tuniform mat4 bindMatrixInverse;\\n\\n\\t#ifdef BONE_TEXTURE\\n\\n\\t\\tuniform sampler2D boneTexture;\\n\\t\\tuniform int boneTextureWidth;\\n\\t\\tuniform int boneTextureHeight;\\n\\n\\t\\tmat4 getBoneMatrix( const in float i ) {\\n\\n\\t\\t\\tfloat j = i * 4.0;\\n\\t\\t\\tfloat x = mod( j, float( boneTextureWidth ) );\\n\\t\\t\\tfloat y = floor( j / float( boneTextureWidth ) );\\n\\n\\t\\t\\tfloat dx = 1.0 / float( boneTextureWidth );\\n\\t\\t\\tfloat dy = 1.0 / float( boneTextureHeight );\\n\\n\\t\\t\\ty = dy * ( y + 0.5 );\\n\\n\\t\\t\\tvec4 v1 = texture2D( boneTexture, vec2( dx * ( x + 0.5 ), y ) );\\n\\t\\t\\tvec4 v2 = texture2D( boneTexture, vec2( dx * ( x + 1.5 ), y ) );\\n\\t\\t\\tvec4 v3 = texture2D( boneTexture, vec2( dx * ( x + 2.5 ), y ) );\\n\\t\\t\\tvec4 v4 = texture2D( boneTexture, vec2( dx * ( x + 3.5 ), y ) );\\n\\n\\t\\t\\tmat4 bone = mat4( v1, v2, v3, v4 );\\n\\n\\t\\t\\treturn bone;\\n\\n\\t\\t}\\n\\n\\t#else\\n\\n\\t\\tuniform mat4 boneGlobalMatrices[ MAX_BONES ];\\n\\n\\t\\tmat4 getBoneMatrix( const in float i ) {\\n\\n\\t\\t\\tmat4 bone = boneGlobalMatrices[ int(i) ];\\n\\t\\t\\treturn bone;\\n\\n\\t\\t}\\n\\n\\t#endif\\n\\n#endif\\n\"; // File:src/renderers/shaders/ShaderChunk/skinning_vertex.glsl\n\nTHREE.ShaderChunk['skinning_vertex'] = \"#ifdef USE_SKINNING\\n\\n\\tvec4 skinVertex = bindMatrix * vec4( transformed, 1.0 );\\n\\n\\tvec4 skinned = vec4( 0.0 );\\n\\tskinned += boneMatX * skinVertex * skinWeight.x;\\n\\tskinned += boneMatY * skinVertex * skinWeight.y;\\n\\tskinned += boneMatZ * skinVertex * skinWeight.z;\\n\\tskinned += boneMatW * skinVertex * skinWeight.w;\\n\\tskinned  = bindMatrixInverse * skinned;\\n\\n#endif\\n\"; // File:src/renderers/shaders/ShaderChunk/skinnormal_vertex.glsl\n\nTHREE.ShaderChunk['skinnormal_vertex'] = \"#ifdef USE_SKINNING\\n\\n\\tmat4 skinMatrix = mat4( 0.0 );\\n\\tskinMatrix += skinWeight.x * boneMatX;\\n\\tskinMatrix += skinWeight.y * boneMatY;\\n\\tskinMatrix += skinWeight.z * boneMatZ;\\n\\tskinMatrix += skinWeight.w * boneMatW;\\n\\tskinMatrix  = bindMatrixInverse * skinMatrix * bindMatrix;\\n\\n\\tobjectNormal = vec4( skinMatrix * vec4( objectNormal, 0.0 ) ).xyz;\\n\\n#endif\\n\"; // File:src/renderers/shaders/ShaderChunk/specularmap_fragment.glsl\n\nTHREE.ShaderChunk['specularmap_fragment'] = \"float specularStrength;\\n\\n#ifdef USE_SPECULARMAP\\n\\n\\tvec4 texelSpecular = texture2D( specularMap, vUv );\\n\\tspecularStrength = texelSpecular.r;\\n\\n#else\\n\\n\\tspecularStrength = 1.0;\\n\\n#endif\"; // File:src/renderers/shaders/ShaderChunk/specularmap_pars_fragment.glsl\n\nTHREE.ShaderChunk['specularmap_pars_fragment'] = \"#ifdef USE_SPECULARMAP\\n\\n\\tuniform sampler2D specularMap;\\n\\n#endif\"; // File:src/renderers/shaders/ShaderChunk/tonemapping_fragment.glsl\n\nTHREE.ShaderChunk['tonemapping_fragment'] = \"#if defined( TONE_MAPPING )\\n\\n  gl_FragColor.rgb = toneMapping( gl_FragColor.rgb );\\n\\n#endif\\n\"; // File:src/renderers/shaders/ShaderChunk/tonemapping_pars_fragment.glsl\n\nTHREE.ShaderChunk['tonemapping_pars_fragment'] = \"#define saturate(a) clamp( a, 0.0, 1.0 )\\n\\nuniform float toneMappingExposure;\\nuniform float toneMappingWhitePoint;\\n\\n// exposure only\\nvec3 LinearToneMapping( vec3 color ) {\\n\\n  return toneMappingExposure * color;\\n\\n}\\n\\n// source: https://www.cs.utah.edu/~reinhard/cdrom/\\nvec3 ReinhardToneMapping( vec3 color ) {\\n\\n  color *= toneMappingExposure;\\n  return saturate( color / ( vec3( 1.0 ) + color ) );\\n\\n}\\n\\n// source: http://filmicgames.com/archives/75\\n#define Uncharted2Helper( x ) max( ( ( x * ( 0.15 * x + 0.10 * 0.50 ) + 0.20 * 0.02 ) / ( x * ( 0.15 * x + 0.50 ) + 0.20 * 0.30 ) ) - 0.02 / 0.30, vec3( 0.0 ) )\\nvec3 Uncharted2ToneMapping( vec3 color ) {\\n\\n  // John Hable's filmic operator from Uncharted 2 video game\\n  color *= toneMappingExposure;\\n  return saturate( Uncharted2Helper( color ) / Uncharted2Helper( vec3( toneMappingWhitePoint ) ) );\\n\\n}\\n\\n// source: http://filmicgames.com/archives/75\\nvec3 OptimizedCineonToneMapping( vec3 color ) {\\n\\n  // optimized filmic operator by Jim Hejl and Richard Burgess-Dawson\\n  color *= toneMappingExposure;\\n  color = max( vec3( 0.0 ), color - 0.004 );\\n  return pow( ( color * ( 6.2 * color + 0.5 ) ) / ( color * ( 6.2 * color + 1.7 ) + 0.06 ), vec3( 2.2 ) );\\n\\n}\\n\"; // File:src/renderers/shaders/ShaderChunk/uv2_pars_fragment.glsl\n\nTHREE.ShaderChunk['uv2_pars_fragment'] = \"#if defined( USE_LIGHTMAP ) || defined( USE_AOMAP )\\n\\n\\tvarying vec2 vUv2;\\n\\n#endif\"; // File:src/renderers/shaders/ShaderChunk/uv2_pars_vertex.glsl\n\nTHREE.ShaderChunk['uv2_pars_vertex'] = \"#if defined( USE_LIGHTMAP ) || defined( USE_AOMAP )\\n\\n\\tattribute vec2 uv2;\\n\\tvarying vec2 vUv2;\\n\\n#endif\"; // File:src/renderers/shaders/ShaderChunk/uv2_vertex.glsl\n\nTHREE.ShaderChunk['uv2_vertex'] = \"#if defined( USE_LIGHTMAP ) || defined( USE_AOMAP )\\n\\n\\tvUv2 = uv2;\\n\\n#endif\"; // File:src/renderers/shaders/ShaderChunk/uv_pars_fragment.glsl\n\nTHREE.ShaderChunk['uv_pars_fragment'] = \"#if defined( USE_MAP ) || defined( USE_BUMPMAP ) || defined( USE_NORMALMAP ) || defined( USE_SPECULARMAP ) || defined( USE_ALPHAMAP ) || defined( USE_EMISSIVEMAP ) || defined( USE_ROUGHNESSMAP ) || defined( USE_METALNESSMAP )\\n\\n\\tvarying vec2 vUv;\\n\\n#endif\"; // File:src/renderers/shaders/ShaderChunk/uv_pars_vertex.glsl\n\nTHREE.ShaderChunk['uv_pars_vertex'] = \"#if defined( USE_MAP ) || defined( USE_BUMPMAP ) || defined( USE_NORMALMAP ) || defined( USE_SPECULARMAP ) || defined( USE_ALPHAMAP ) || defined( USE_EMISSIVEMAP ) || defined( USE_ROUGHNESSMAP ) || defined( USE_METALNESSMAP )\\n\\n\\tvarying vec2 vUv;\\n\\tuniform vec4 offsetRepeat;\\n\\n#endif\\n\"; // File:src/renderers/shaders/ShaderChunk/uv_vertex.glsl\n\nTHREE.ShaderChunk['uv_vertex'] = \"#if defined( USE_MAP ) || defined( USE_BUMPMAP ) || defined( USE_NORMALMAP ) || defined( USE_SPECULARMAP ) || defined( USE_ALPHAMAP ) || defined( USE_EMISSIVEMAP ) || defined( USE_ROUGHNESSMAP ) || defined( USE_METALNESSMAP )\\n\\n\\tvUv = uv * offsetRepeat.zw + offsetRepeat.xy;\\n\\n#endif\"; // File:src/renderers/shaders/ShaderChunk/worldpos_vertex.glsl\n\nTHREE.ShaderChunk['worldpos_vertex'] = \"#if defined( USE_ENVMAP ) || defined( PHONG ) || defined( STANDARD ) || defined( LAMBERT ) || defined ( USE_SHADOWMAP )\\n\\n\\t#ifdef USE_SKINNING\\n\\n\\t\\tvec4 worldPosition = modelMatrix * skinned;\\n\\n\\t#else\\n\\n\\t\\tvec4 worldPosition = modelMatrix * vec4( transformed, 1.0 );\\n\\n\\t#endif\\n\\n#endif\\n\"; // File:src/renderers/shaders/ShaderLib/meshbasic_frag.glsl\n\nTHREE.ShaderChunk['meshbasic_frag'] = \"uniform vec3 diffuse;\\nuniform float opacity;\\n\\n#ifndef FLAT_SHADED\\n\\n\\tvarying vec3 vNormal;\\n\\n#endif\\n\\n#include <common>\\n#include <color_pars_fragment>\\n#include <uv_pars_fragment>\\n#include <uv2_pars_fragment>\\n#include <map_pars_fragment>\\n#include <alphamap_pars_fragment>\\n#include <aomap_pars_fragment>\\n#include <envmap_pars_fragment>\\n#include <fog_pars_fragment>\\n#include <specularmap_pars_fragment>\\n#include <logdepthbuf_pars_fragment>\\n\\nvoid main() {\\n\\n\\tvec4 diffuseColor = vec4( diffuse, opacity );\\n\\n\\t#include <logdepthbuf_fragment>\\n\\t#include <map_fragment>\\n\\t#include <color_fragment>\\n\\t#include <alphamap_fragment>\\n\\t#include <alphatest_fragment>\\n\\t#include <specularmap_fragment>\\n\\n\\tReflectedLight reflectedLight;\\n\\treflectedLight.directDiffuse = vec3( 0.0 );\\n\\treflectedLight.directSpecular = vec3( 0.0 );\\n\\treflectedLight.indirectDiffuse = diffuseColor.rgb;\\n\\treflectedLight.indirectSpecular = vec3( 0.0 );\\n\\n\\t#include <aomap_fragment>\\n\\n\\tvec3 outgoingLight = reflectedLight.indirectDiffuse;\\n\\n\\t#include <envmap_fragment>\\n\\n\\tgl_FragColor = vec4( outgoingLight, diffuseColor.a );\\n\\n\\t#include <premultiplied_alpha_fragment>\\n\\t#include <tonemapping_fragment>\\n\\t#include <encodings_fragment>\\n\\t#include <fog_fragment>\\n\\n}\\n\"; // File:src/renderers/shaders/ShaderLib/meshbasic_vert.glsl\n\nTHREE.ShaderChunk['meshbasic_vert'] = \"#include <common>\\n#include <uv_pars_vertex>\\n#include <uv2_pars_vertex>\\n#include <envmap_pars_vertex>\\n#include <color_pars_vertex>\\n#include <morphtarget_pars_vertex>\\n#include <skinning_pars_vertex>\\n#include <logdepthbuf_pars_vertex>\\n\\nvoid main() {\\n\\n\\t#include <uv_vertex>\\n\\t#include <uv2_vertex>\\n\\t#include <color_vertex>\\n\\t#include <skinbase_vertex>\\n\\n\\t#ifdef USE_ENVMAP\\n\\n\\t#include <beginnormal_vertex>\\n\\t#include <morphnormal_vertex>\\n\\t#include <skinnormal_vertex>\\n\\t#include <defaultnormal_vertex>\\n\\n\\t#endif\\n\\n\\t#include <begin_vertex>\\n\\t#include <morphtarget_vertex>\\n\\t#include <skinning_vertex>\\n\\t#include <project_vertex>\\n\\t#include <logdepthbuf_vertex>\\n\\n\\t#include <worldpos_vertex>\\n\\t#include <envmap_vertex>\\n\\n}\\n\"; // File:src/renderers/shaders/UniformsUtils.js\n\n/**\n * Uniform Utilities\n */\n\nTHREE.UniformsUtils = {\n  merge: function (uniforms) {\n    var merged = {};\n\n    for (var u = 0; u < uniforms.length; u++) {\n      var tmp = this.clone(uniforms[u]);\n\n      for (var p in tmp) {\n        merged[p] = tmp[p];\n      }\n    }\n\n    return merged;\n  },\n  clone: function (uniforms_src) {\n    var uniforms_dst = {};\n\n    for (var u in uniforms_src) {\n      uniforms_dst[u] = {};\n\n      for (var p in uniforms_src[u]) {\n        var parameter_src = uniforms_src[u][p];\n\n        if (parameter_src instanceof THREE.Color || parameter_src instanceof THREE.Vector2 || parameter_src instanceof THREE.Vector3 || parameter_src instanceof THREE.Vector4 || parameter_src instanceof THREE.Matrix3 || parameter_src instanceof THREE.Matrix4 || parameter_src instanceof THREE.Texture) {\n          uniforms_dst[u][p] = parameter_src.clone();\n        } else if (Array.isArray(parameter_src)) {\n          uniforms_dst[u][p] = parameter_src.slice();\n        } else {\n          uniforms_dst[u][p] = parameter_src;\n        }\n      }\n    }\n\n    return uniforms_dst;\n  }\n}; // File:src/renderers/shaders/UniformsLib.js\n\n/**\n * Uniforms library for shared webgl shaders\n */\n\nTHREE.UniformsLib = {\n  common: {\n    \"diffuse\": {\n      type: \"c\",\n      value: new THREE.Color(0xeeeeee)\n    },\n    \"opacity\": {\n      type: \"f\",\n      value: 1.0\n    },\n    \"map\": {\n      type: \"t\",\n      value: null\n    },\n    \"offsetRepeat\": {\n      type: \"v4\",\n      value: new THREE.Vector4(0, 0, 1, 1)\n    },\n    \"specularMap\": {\n      type: \"t\",\n      value: null\n    },\n    \"alphaMap\": {\n      type: \"t\",\n      value: null\n    },\n    \"envMap\": {\n      type: \"t\",\n      value: null\n    },\n    \"flipEnvMap\": {\n      type: \"f\",\n      value: -1\n    },\n    \"reflectivity\": {\n      type: \"f\",\n      value: 1.0\n    },\n    \"refractionRatio\": {\n      type: \"f\",\n      value: 0.98\n    }\n  },\n  aomap: {\n    \"aoMap\": {\n      type: \"t\",\n      value: null\n    },\n    \"aoMapIntensity\": {\n      type: \"f\",\n      value: 1\n    }\n  },\n  lightmap: {\n    \"lightMap\": {\n      type: \"t\",\n      value: null\n    },\n    \"lightMapIntensity\": {\n      type: \"f\",\n      value: 1\n    }\n  },\n  emissivemap: {\n    \"emissiveMap\": {\n      type: \"t\",\n      value: null\n    }\n  },\n  bumpmap: {\n    \"bumpMap\": {\n      type: \"t\",\n      value: null\n    },\n    \"bumpScale\": {\n      type: \"f\",\n      value: 1\n    }\n  },\n  normalmap: {\n    \"normalMap\": {\n      type: \"t\",\n      value: null\n    },\n    \"normalScale\": {\n      type: \"v2\",\n      value: new THREE.Vector2(1, 1)\n    }\n  },\n  displacementmap: {\n    \"displacementMap\": {\n      type: \"t\",\n      value: null\n    },\n    \"displacementScale\": {\n      type: \"f\",\n      value: 1\n    },\n    \"displacementBias\": {\n      type: \"f\",\n      value: 0\n    }\n  },\n  roughnessmap: {\n    \"roughnessMap\": {\n      type: \"t\",\n      value: null\n    }\n  },\n  metalnessmap: {\n    \"metalnessMap\": {\n      type: \"t\",\n      value: null\n    }\n  },\n  fog: {\n    \"fogDensity\": {\n      type: \"f\",\n      value: 0.00025\n    },\n    \"fogNear\": {\n      type: \"f\",\n      value: 1\n    },\n    \"fogFar\": {\n      type: \"f\",\n      value: 2000\n    },\n    \"fogColor\": {\n      type: \"c\",\n      value: new THREE.Color(0xffffff)\n    }\n  },\n  lights: {\n    \"ambientLightColor\": {\n      type: \"fv\",\n      value: []\n    },\n    \"directionalLights\": {\n      type: \"sa\",\n      value: [],\n      properties: {\n        \"direction\": {\n          type: \"v3\"\n        },\n        \"color\": {\n          type: \"c\"\n        },\n        \"shadow\": {\n          type: \"i\"\n        },\n        \"shadowBias\": {\n          type: \"f\"\n        },\n        \"shadowRadius\": {\n          type: \"f\"\n        },\n        \"shadowMapSize\": {\n          type: \"v2\"\n        }\n      }\n    },\n    \"directionalShadowMap\": {\n      type: \"tv\",\n      value: []\n    },\n    \"directionalShadowMatrix\": {\n      type: \"m4v\",\n      value: []\n    },\n    \"spotLights\": {\n      type: \"sa\",\n      value: [],\n      properties: {\n        \"color\": {\n          type: \"c\"\n        },\n        \"position\": {\n          type: \"v3\"\n        },\n        \"direction\": {\n          type: \"v3\"\n        },\n        \"distance\": {\n          type: \"f\"\n        },\n        \"coneCos\": {\n          type: \"f\"\n        },\n        \"penumbraCos\": {\n          type: \"f\"\n        },\n        \"decay\": {\n          type: \"f\"\n        },\n        \"shadow\": {\n          type: \"i\"\n        },\n        \"shadowBias\": {\n          type: \"f\"\n        },\n        \"shadowRadius\": {\n          type: \"f\"\n        },\n        \"shadowMapSize\": {\n          type: \"v2\"\n        }\n      }\n    },\n    \"spotShadowMap\": {\n      type: \"tv\",\n      value: []\n    },\n    \"spotShadowMatrix\": {\n      type: \"m4v\",\n      value: []\n    },\n    \"pointLights\": {\n      type: \"sa\",\n      value: [],\n      properties: {\n        \"color\": {\n          type: \"c\"\n        },\n        \"position\": {\n          type: \"v3\"\n        },\n        \"decay\": {\n          type: \"f\"\n        },\n        \"distance\": {\n          type: \"f\"\n        },\n        \"shadow\": {\n          type: \"i\"\n        },\n        \"shadowBias\": {\n          type: \"f\"\n        },\n        \"shadowRadius\": {\n          type: \"f\"\n        },\n        \"shadowMapSize\": {\n          type: \"v2\"\n        }\n      }\n    },\n    \"pointShadowMap\": {\n      type: \"tv\",\n      value: []\n    },\n    \"pointShadowMatrix\": {\n      type: \"m4v\",\n      value: []\n    },\n    \"hemisphereLights\": {\n      type: \"sa\",\n      value: [],\n      properties: {\n        \"direction\": {\n          type: \"v3\"\n        },\n        \"skyColor\": {\n          type: \"c\"\n        },\n        \"groundColor\": {\n          type: \"c\"\n        }\n      }\n    }\n  },\n  points: {\n    \"diffuse\": {\n      type: \"c\",\n      value: new THREE.Color(0xeeeeee)\n    },\n    \"opacity\": {\n      type: \"f\",\n      value: 1.0\n    },\n    \"size\": {\n      type: \"f\",\n      value: 1.0\n    },\n    \"scale\": {\n      type: \"f\",\n      value: 1.0\n    },\n    \"map\": {\n      type: \"t\",\n      value: null\n    },\n    \"offsetRepeat\": {\n      type: \"v4\",\n      value: new THREE.Vector4(0, 0, 1, 1)\n    }\n  }\n}; // File:src/renderers/shaders/ShaderLib.js\n\n/**\n * Webgl Shader Library for three.js\n *\n * @author alteredq / http://alteredqualia.com/\n * @author mrdoob / http://mrdoob.com/\n * @author mikael emtinger / http://gomo.se/\n */\n\nTHREE.ShaderLib = {\n  'basic': {\n    uniforms: THREE.UniformsUtils.merge([THREE.UniformsLib[\"common\"], THREE.UniformsLib[\"aomap\"], THREE.UniformsLib[\"fog\"]]),\n    vertexShader: THREE.ShaderChunk['meshbasic_vert'],\n    fragmentShader: THREE.ShaderChunk['meshbasic_frag']\n  },\n  'lambert': {\n    uniforms: THREE.UniformsUtils.merge([THREE.UniformsLib[\"common\"], THREE.UniformsLib[\"aomap\"], THREE.UniformsLib[\"lightmap\"], THREE.UniformsLib[\"emissivemap\"], THREE.UniformsLib[\"fog\"], THREE.UniformsLib[\"lights\"], {\n      \"emissive\": {\n        type: \"c\",\n        value: new THREE.Color(0x000000)\n      }\n    }]),\n    vertexShader: THREE.ShaderChunk['meshlambert_vert'],\n    fragmentShader: THREE.ShaderChunk['meshlambert_frag']\n  },\n  'phong': {\n    uniforms: THREE.UniformsUtils.merge([THREE.UniformsLib[\"common\"], THREE.UniformsLib[\"aomap\"], THREE.UniformsLib[\"lightmap\"], THREE.UniformsLib[\"emissivemap\"], THREE.UniformsLib[\"bumpmap\"], THREE.UniformsLib[\"normalmap\"], THREE.UniformsLib[\"displacementmap\"], THREE.UniformsLib[\"fog\"], THREE.UniformsLib[\"lights\"], {\n      \"emissive\": {\n        type: \"c\",\n        value: new THREE.Color(0x000000)\n      },\n      \"specular\": {\n        type: \"c\",\n        value: new THREE.Color(0x111111)\n      },\n      \"shininess\": {\n        type: \"f\",\n        value: 30\n      }\n    }]),\n    vertexShader: THREE.ShaderChunk['meshphong_vert'],\n    fragmentShader: THREE.ShaderChunk['meshphong_frag']\n  },\n  'standard': {\n    uniforms: THREE.UniformsUtils.merge([THREE.UniformsLib[\"common\"], THREE.UniformsLib[\"aomap\"], THREE.UniformsLib[\"lightmap\"], THREE.UniformsLib[\"emissivemap\"], THREE.UniformsLib[\"bumpmap\"], THREE.UniformsLib[\"normalmap\"], THREE.UniformsLib[\"displacementmap\"], THREE.UniformsLib[\"roughnessmap\"], THREE.UniformsLib[\"metalnessmap\"], THREE.UniformsLib[\"fog\"], THREE.UniformsLib[\"lights\"], {\n      \"emissive\": {\n        type: \"c\",\n        value: new THREE.Color(0x000000)\n      },\n      \"roughness\": {\n        type: \"f\",\n        value: 0.5\n      },\n      \"metalness\": {\n        type: \"f\",\n        value: 0\n      },\n      \"envMapIntensity\": {\n        type: \"f\",\n        value: 1 // temporary\n\n      }\n    }]),\n    vertexShader: THREE.ShaderChunk['meshstandard_vert'],\n    fragmentShader: THREE.ShaderChunk['meshstandard_frag']\n  },\n  'points': {\n    uniforms: THREE.UniformsUtils.merge([THREE.UniformsLib[\"points\"], THREE.UniformsLib[\"fog\"]]),\n    vertexShader: THREE.ShaderChunk['points_vert'],\n    fragmentShader: THREE.ShaderChunk['points_frag']\n  },\n  'dashed': {\n    uniforms: THREE.UniformsUtils.merge([THREE.UniformsLib[\"common\"], THREE.UniformsLib[\"fog\"], {\n      \"scale\": {\n        type: \"f\",\n        value: 1\n      },\n      \"dashSize\": {\n        type: \"f\",\n        value: 1\n      },\n      \"totalSize\": {\n        type: \"f\",\n        value: 2\n      }\n    }]),\n    vertexShader: THREE.ShaderChunk['linedashed_vert'],\n    fragmentShader: THREE.ShaderChunk['linedashed_frag']\n  },\n  'depth': {\n    uniforms: {\n      \"mNear\": {\n        type: \"f\",\n        value: 1.0\n      },\n      \"mFar\": {\n        type: \"f\",\n        value: 2000.0\n      },\n      \"opacity\": {\n        type: \"f\",\n        value: 1.0\n      }\n    },\n    vertexShader: THREE.ShaderChunk['depth_vert'],\n    fragmentShader: THREE.ShaderChunk['depth_frag']\n  },\n  'normal': {\n    uniforms: {\n      \"opacity\": {\n        type: \"f\",\n        value: 1.0\n      }\n    },\n    vertexShader: THREE.ShaderChunk['normal_vert'],\n    fragmentShader: THREE.ShaderChunk['normal_frag']\n  },\n\n  /* -------------------------------------------------------------------------\n  //\tCube map shader\n   ------------------------------------------------------------------------- */\n  'cube': {\n    uniforms: {\n      \"tCube\": {\n        type: \"t\",\n        value: null\n      },\n      \"tFlip\": {\n        type: \"f\",\n        value: -1\n      }\n    },\n    vertexShader: THREE.ShaderChunk['cube_vert'],\n    fragmentShader: THREE.ShaderChunk['cube_frag']\n  },\n\n  /* -------------------------------------------------------------------------\n  //\tCube map shader\n   ------------------------------------------------------------------------- */\n  'equirect': {\n    uniforms: {\n      \"tEquirect\": {\n        type: \"t\",\n        value: null\n      },\n      \"tFlip\": {\n        type: \"f\",\n        value: -1\n      }\n    },\n    vertexShader: THREE.ShaderChunk['equirect_vert'],\n    fragmentShader: THREE.ShaderChunk['equirect_frag']\n  },\n\n  /* Depth encoding into RGBA texture\n   *\n   * based on SpiderGL shadow map example\n   * http://spidergl.org/example.php?id=6\n   *\n   * originally from\n   * http://www.gamedev.net/topic/442138-packing-a-float-into-a-a8r8g8b8-texture-shader/page__whichpage__1%25EF%25BF%25BD\n   *\n   * see also\n   * http://aras-p.info/blog/2009/07/30/encoding-floats-to-rgba-the-final/\n   */\n  'depthRGBA': {\n    uniforms: {},\n    vertexShader: THREE.ShaderChunk['depthRGBA_vert'],\n    fragmentShader: THREE.ShaderChunk['depthRGBA_frag']\n  },\n  'distanceRGBA': {\n    uniforms: {\n      \"lightPos\": {\n        type: \"v3\",\n        value: new THREE.Vector3(0, 0, 0)\n      }\n    },\n    vertexShader: THREE.ShaderChunk['distanceRGBA_vert'],\n    fragmentShader: THREE.ShaderChunk['distanceRGBA_frag']\n  }\n}; // File:src/renderers/WebGLRenderer.js\n\n/**\n * @author supereggbert / http://www.paulbrunt.co.uk/\n * @author mrdoob / http://mrdoob.com/\n * @author alteredq / http://alteredqualia.com/\n * @author szimek / https://github.com/szimek/\n */\n\nTHREE.WebGLRenderer = function (parameters) {\n  parameters = parameters || {};\n\n  var _canvas = parameters.canvas !== undefined ? parameters.canvas : document.createElement('canvas'),\n      _context = parameters.context !== undefined ? parameters.context : null,\n      _alpha = parameters.alpha !== undefined ? parameters.alpha : false,\n      _depth = parameters.depth !== undefined ? parameters.depth : true,\n      _stencil = parameters.stencil !== undefined ? parameters.stencil : true,\n      _antialias = parameters.antialias !== undefined ? parameters.antialias : false,\n      _premultipliedAlpha = parameters.premultipliedAlpha !== undefined ? parameters.premultipliedAlpha : true,\n      _preserveDrawingBuffer = parameters.preserveDrawingBuffer !== undefined ? parameters.preserveDrawingBuffer : false;\n\n  var lights = [];\n  var opaqueObjects = [];\n  var opaqueObjectsLastIndex = -1;\n  var transparentObjects = [];\n  var transparentObjectsLastIndex = -1;\n  var morphInfluences = new Float32Array(8);\n  var sprites = [];\n  var lensFlares = []; // public properties\n\n  this.domElement = _canvas;\n  this.context = null; // clearing\n\n  this.autoClear = true;\n  this.autoClearColor = true;\n  this.autoClearDepth = true;\n  this.autoClearStencil = true; // scene graph\n\n  this.sortObjects = true; // physically based shading\n\n  this.gammaFactor = 2.0; // for backwards compatibility\n\n  this.gammaInput = false;\n  this.gammaOutput = false; // physical lights\n\n  this.physicallyCorrectLights = false; // tone mapping\n\n  this.toneMapping = THREE.LinearToneMapping;\n  this.toneMappingExposure = 1.0;\n  this.toneMappingWhitePoint = 1.0; // morphs\n\n  this.maxMorphTargets = 8;\n  this.maxMorphNormals = 4; // flags\n\n  this.autoScaleCubemaps = true; // internal properties\n\n  var _this = this,\n      // internal state cache\n  _currentProgram = null,\n      _currentRenderTarget = null,\n      _currentFramebuffer = null,\n      _currentMaterialId = -1,\n      _currentGeometryProgram = '',\n      _currentCamera = null,\n      _currentScissor = new THREE.Vector4(),\n      _currentScissorTest = null,\n      _currentViewport = new THREE.Vector4(),\n      //\n  _usedTextureUnits = 0,\n      //\n  _clearColor = new THREE.Color(0x000000),\n      _clearAlpha = 0,\n      _width = _canvas.width,\n      _height = _canvas.height,\n      _pixelRatio = 1,\n      _scissor = new THREE.Vector4(0, 0, _width, _height),\n      _scissorTest = false,\n      _viewport = new THREE.Vector4(0, 0, _width, _height),\n      // frustum\n  _frustum = new THREE.Frustum(),\n      // camera matrices cache\n  _projScreenMatrix = new THREE.Matrix4(),\n      _vector3 = new THREE.Vector3(),\n      // light arrays cache\n  _lights = {\n    hash: '',\n    ambient: [0, 0, 0],\n    directional: [],\n    directionalShadowMap: [],\n    directionalShadowMatrix: [],\n    spot: [],\n    spotShadowMap: [],\n    spotShadowMatrix: [],\n    point: [],\n    pointShadowMap: [],\n    pointShadowMatrix: [],\n    hemi: [],\n    shadows: [],\n    shadowsPointLight: 0\n  },\n      // info\n  _infoMemory = {\n    geometries: 0,\n    textures: 0\n  },\n      _infoRender = {\n    calls: 0,\n    vertices: 0,\n    faces: 0,\n    points: 0\n  };\n\n  this.info = {\n    render: _infoRender,\n    memory: _infoMemory,\n    programs: null\n  }; // initialize\n\n  var _gl;\n\n  try {\n    var attributes = {\n      alpha: _alpha,\n      depth: _depth,\n      stencil: _stencil,\n      antialias: _antialias,\n      premultipliedAlpha: _premultipliedAlpha,\n      preserveDrawingBuffer: _preserveDrawingBuffer\n    };\n    _gl = _context || _canvas.getContext('webgl', attributes) || _canvas.getContext('experimental-webgl', attributes);\n\n    if (_gl === null) {\n      if (_canvas.getContext('webgl') !== null) {\n        throw 'Error creating WebGL context with your selected attributes.';\n      } else {\n        throw 'Error creating WebGL context.';\n      }\n    } // Some experimental-webgl implementations do not have getShaderPrecisionFormat\n\n\n    if (_gl.getShaderPrecisionFormat === undefined) {\n      _gl.getShaderPrecisionFormat = function () {\n        return {\n          'rangeMin': 1,\n          'rangeMax': 1,\n          'precision': 1\n        };\n      };\n    }\n\n    _canvas.addEventListener('webglcontextlost', onContextLost, false);\n  } catch (error) {}\n\n  var extensions = new THREE.WebGLExtensions(_gl);\n  extensions.get('OES_texture_float');\n  extensions.get('OES_texture_float_linear');\n  extensions.get('OES_texture_half_float');\n  extensions.get('OES_texture_half_float_linear');\n  extensions.get('OES_standard_derivatives');\n  extensions.get('ANGLE_instanced_arrays');\n\n  if (extensions.get('OES_element_index_uint')) {\n    THREE.BufferGeometry.MaxIndex = 4294967296;\n  }\n\n  var capabilities = new THREE.WebGLCapabilities(_gl, extensions, parameters);\n  var state = new THREE.WebGLState(_gl, extensions, paramThreeToGL);\n  var properties = new THREE.WebGLProperties();\n  var objects = new THREE.WebGLObjects(_gl, properties, this.info);\n  var programCache = new THREE.WebGLPrograms(this, capabilities);\n  var lightCache = new THREE.WebGLLights();\n  this.info.programs = programCache.programs;\n  var bufferRenderer = new THREE.WebGLBufferRenderer(_gl, extensions, _infoRender);\n  var indexedBufferRenderer = new THREE.WebGLIndexedBufferRenderer(_gl, extensions, _infoRender); //\n\n  function getTargetPixelRatio() {\n    return _currentRenderTarget === null ? _pixelRatio : 1;\n  }\n\n  function glClearColor(r, g, b, a) {\n    if (_premultipliedAlpha === true) {\n      r *= a;\n      g *= a;\n      b *= a;\n    }\n\n    state.clearColor(r, g, b, a);\n  }\n\n  function setDefaultGLState() {\n    state.init();\n    state.scissor(_currentScissor.copy(_scissor).multiplyScalar(_pixelRatio));\n    state.viewport(_currentViewport.copy(_viewport).multiplyScalar(_pixelRatio));\n    glClearColor(_clearColor.r, _clearColor.g, _clearColor.b, _clearAlpha);\n  }\n\n  function resetGLState() {\n    _currentProgram = null;\n    _currentCamera = null;\n    _currentGeometryProgram = '';\n    _currentMaterialId = -1;\n    state.reset();\n  }\n\n  setDefaultGLState();\n  this.context = _gl;\n  this.capabilities = capabilities;\n  this.extensions = extensions;\n  this.properties = properties;\n  this.state = state; // shadow map\n\n  var shadowMap = new THREE.WebGLShadowMap(this, _lights, objects);\n  this.shadowMap = shadowMap; // Plugins\n\n  var spritePlugin = new THREE.SpritePlugin(this, sprites);\n  var lensFlarePlugin = new THREE.LensFlarePlugin(this, lensFlares); // API\n\n  this.getContext = function () {\n    return _gl;\n  };\n\n  this.getContextAttributes = function () {\n    return _gl.getContextAttributes();\n  };\n\n  this.forceContextLoss = function () {\n    extensions.get('WEBGL_lose_context').loseContext();\n  };\n\n  this.getMaxAnisotropy = function () {\n    var value;\n    return function getMaxAnisotropy() {\n      if (value !== undefined) return value;\n      var extension = extensions.get('EXT_texture_filter_anisotropic');\n\n      if (extension !== null) {\n        value = _gl.getParameter(extension.MAX_TEXTURE_MAX_ANISOTROPY_EXT);\n      } else {\n        value = 0;\n      }\n\n      return value;\n    };\n  }();\n\n  this.getPrecision = function () {\n    return capabilities.precision;\n  };\n\n  this.getPixelRatio = function () {\n    return _pixelRatio;\n  };\n\n  this.setPixelRatio = function (value) {\n    if (value === undefined) return;\n    _pixelRatio = value;\n    this.setSize(_viewport.z, _viewport.w, false);\n  };\n\n  this.getSize = function () {\n    return {\n      width: _width,\n      height: _height\n    };\n  };\n\n  this.setSize = function (width, height, updateStyle) {\n    _width = width;\n    _height = height;\n    _canvas.width = width * _pixelRatio;\n    _canvas.height = height * _pixelRatio;\n\n    if (updateStyle !== false) {\n      _canvas.style.width = width + 'px';\n      _canvas.style.height = height + 'px';\n    }\n\n    this.setViewport(0, 0, width, height);\n  };\n\n  this.setViewport = function (x, y, width, height) {\n    state.viewport(_viewport.set(x, y, width, height));\n  };\n\n  this.setScissor = function (x, y, width, height) {\n    state.scissor(_scissor.set(x, y, width, height));\n  };\n\n  this.setScissorTest = function (boolean) {\n    state.setScissorTest(_scissorTest = boolean);\n  }; // Clearing\n\n\n  this.getClearColor = function () {\n    return _clearColor;\n  };\n\n  this.setClearColor = function (color, alpha) {\n    _clearColor.set(color);\n\n    _clearAlpha = alpha !== undefined ? alpha : 1;\n    glClearColor(_clearColor.r, _clearColor.g, _clearColor.b, _clearAlpha);\n  };\n\n  this.getClearAlpha = function () {\n    return _clearAlpha;\n  };\n\n  this.setClearAlpha = function (alpha) {\n    _clearAlpha = alpha;\n    glClearColor(_clearColor.r, _clearColor.g, _clearColor.b, _clearAlpha);\n  };\n\n  this.clear = function (color, depth, stencil) {\n    var bits = 0;\n    if (color === undefined || color) bits |= _gl.COLOR_BUFFER_BIT;\n    if (depth === undefined || depth) bits |= _gl.DEPTH_BUFFER_BIT;\n    if (stencil === undefined || stencil) bits |= _gl.STENCIL_BUFFER_BIT;\n\n    _gl.clear(bits);\n  };\n\n  this.clearColor = function () {\n    this.clear(true, false, false);\n  };\n\n  this.clearDepth = function () {\n    this.clear(false, true, false);\n  };\n\n  this.clearStencil = function () {\n    this.clear(false, false, true);\n  };\n\n  this.clearTarget = function (renderTarget, color, depth, stencil) {\n    this.setRenderTarget(renderTarget);\n    this.clear(color, depth, stencil);\n  }; // Reset\n\n\n  this.resetGLState = resetGLState;\n\n  this.dispose = function () {\n    _canvas.removeEventListener('webglcontextlost', onContextLost, false);\n  }; // Events\n\n\n  function onContextLost(event) {\n    event.preventDefault();\n    resetGLState();\n    setDefaultGLState();\n    properties.clear();\n  }\n\n  function onTextureDispose(event) {\n    var texture = event.target;\n    texture.removeEventListener('dispose', onTextureDispose);\n    deallocateTexture(texture);\n    _infoMemory.textures--;\n  }\n\n  function onRenderTargetDispose(event) {\n    var renderTarget = event.target;\n    renderTarget.removeEventListener('dispose', onRenderTargetDispose);\n    deallocateRenderTarget(renderTarget);\n    _infoMemory.textures--;\n  }\n\n  function onMaterialDispose(event) {\n    var material = event.target;\n    material.removeEventListener('dispose', onMaterialDispose);\n    deallocateMaterial(material);\n  } // Buffer deallocation\n\n\n  function deallocateTexture(texture) {\n    var textureProperties = properties.get(texture);\n\n    if (texture.image && textureProperties.__image__webglTextureCube) {\n      // cube texture\n      _gl.deleteTexture(textureProperties.__image__webglTextureCube);\n    } else {\n      // 2D texture\n      if (textureProperties.__webglInit === undefined) return;\n\n      _gl.deleteTexture(textureProperties.__webglTexture);\n    } // remove all webgl properties\n\n\n    properties.delete(texture);\n  }\n\n  function deallocateRenderTarget(renderTarget) {\n    var renderTargetProperties = properties.get(renderTarget);\n    var textureProperties = properties.get(renderTarget.texture);\n    if (!renderTarget || textureProperties.__webglTexture === undefined) return;\n\n    _gl.deleteTexture(textureProperties.__webglTexture);\n\n    if (renderTarget instanceof THREE.WebGLRenderTargetCube) {\n      for (var i = 0; i < 6; i++) {\n        _gl.deleteFramebuffer(renderTargetProperties.__webglFramebuffer[i]);\n\n        _gl.deleteRenderbuffer(renderTargetProperties.__webglDepthbuffer[i]);\n      }\n    } else {\n      _gl.deleteFramebuffer(renderTargetProperties.__webglFramebuffer);\n\n      _gl.deleteRenderbuffer(renderTargetProperties.__webglDepthbuffer);\n    }\n\n    properties.delete(renderTarget.texture);\n    properties.delete(renderTarget);\n  }\n\n  function deallocateMaterial(material) {\n    releaseMaterialProgramReference(material);\n    properties.delete(material);\n  }\n\n  function releaseMaterialProgramReference(material) {\n    var programInfo = properties.get(material).program;\n    material.program = undefined;\n\n    if (programInfo !== undefined) {\n      programCache.releaseProgram(programInfo);\n    }\n  } // Buffer rendering\n\n\n  this.renderBufferImmediate = function (object, program, material) {\n    state.initAttributes();\n    var buffers = properties.get(object);\n    if (object.hasPositions && !buffers.position) buffers.position = _gl.createBuffer();\n    if (object.hasNormals && !buffers.normal) buffers.normal = _gl.createBuffer();\n    if (object.hasUvs && !buffers.uv) buffers.uv = _gl.createBuffer();\n    if (object.hasColors && !buffers.color) buffers.color = _gl.createBuffer();\n    var attributes = program.getAttributes();\n\n    if (object.hasPositions) {\n      _gl.bindBuffer(_gl.ARRAY_BUFFER, buffers.position);\n\n      _gl.bufferData(_gl.ARRAY_BUFFER, object.positionArray, _gl.DYNAMIC_DRAW);\n\n      state.enableAttribute(attributes.position);\n\n      _gl.vertexAttribPointer(attributes.position, 3, _gl.FLOAT, false, 0, 0);\n    }\n\n    if (object.hasNormals) {\n      _gl.bindBuffer(_gl.ARRAY_BUFFER, buffers.normal);\n\n      if (material.type !== 'MeshPhongMaterial' && material.type !== 'MeshStandardMaterial' && material.shading === THREE.FlatShading) {\n        for (var i = 0, l = object.count * 3; i < l; i += 9) {\n          var array = object.normalArray;\n          var nx = (array[i + 0] + array[i + 3] + array[i + 6]) / 3;\n          var ny = (array[i + 1] + array[i + 4] + array[i + 7]) / 3;\n          var nz = (array[i + 2] + array[i + 5] + array[i + 8]) / 3;\n          array[i + 0] = nx;\n          array[i + 1] = ny;\n          array[i + 2] = nz;\n          array[i + 3] = nx;\n          array[i + 4] = ny;\n          array[i + 5] = nz;\n          array[i + 6] = nx;\n          array[i + 7] = ny;\n          array[i + 8] = nz;\n        }\n      }\n\n      _gl.bufferData(_gl.ARRAY_BUFFER, object.normalArray, _gl.DYNAMIC_DRAW);\n\n      state.enableAttribute(attributes.normal);\n\n      _gl.vertexAttribPointer(attributes.normal, 3, _gl.FLOAT, false, 0, 0);\n    }\n\n    if (object.hasUvs && material.map) {\n      _gl.bindBuffer(_gl.ARRAY_BUFFER, buffers.uv);\n\n      _gl.bufferData(_gl.ARRAY_BUFFER, object.uvArray, _gl.DYNAMIC_DRAW);\n\n      state.enableAttribute(attributes.uv);\n\n      _gl.vertexAttribPointer(attributes.uv, 2, _gl.FLOAT, false, 0, 0);\n    }\n\n    if (object.hasColors && material.vertexColors !== THREE.NoColors) {\n      _gl.bindBuffer(_gl.ARRAY_BUFFER, buffers.color);\n\n      _gl.bufferData(_gl.ARRAY_BUFFER, object.colorArray, _gl.DYNAMIC_DRAW);\n\n      state.enableAttribute(attributes.color);\n\n      _gl.vertexAttribPointer(attributes.color, 3, _gl.FLOAT, false, 0, 0);\n    }\n\n    state.disableUnusedAttributes();\n\n    _gl.drawArrays(_gl.TRIANGLES, 0, object.count);\n\n    object.count = 0;\n  };\n\n  this.renderBufferDirect = function (camera, fog, geometry, material, object, group) {\n    setMaterial(material);\n    var program = setProgram(camera, fog, material, object);\n    var updateBuffers = false;\n    var geometryProgram = geometry.id + '_' + program.id + '_' + material.wireframe;\n\n    if (geometryProgram !== _currentGeometryProgram) {\n      _currentGeometryProgram = geometryProgram;\n      updateBuffers = true;\n    } // morph targets\n\n\n    var morphTargetInfluences = object.morphTargetInfluences;\n\n    if (morphTargetInfluences !== undefined) {\n      var activeInfluences = [];\n\n      for (var i = 0, l = morphTargetInfluences.length; i < l; i++) {\n        var influence = morphTargetInfluences[i];\n        activeInfluences.push([influence, i]);\n      }\n\n      activeInfluences.sort(absNumericalSort);\n\n      if (activeInfluences.length > 8) {\n        activeInfluences.length = 8;\n      }\n\n      var morphAttributes = geometry.morphAttributes;\n\n      for (var i = 0, l = activeInfluences.length; i < l; i++) {\n        var influence = activeInfluences[i];\n        morphInfluences[i] = influence[0];\n\n        if (influence[0] !== 0) {\n          var index = influence[1];\n          if (material.morphTargets === true && morphAttributes.position) geometry.addAttribute('morphTarget' + i, morphAttributes.position[index]);\n          if (material.morphNormals === true && morphAttributes.normal) geometry.addAttribute('morphNormal' + i, morphAttributes.normal[index]);\n        } else {\n          if (material.morphTargets === true) geometry.removeAttribute('morphTarget' + i);\n          if (material.morphNormals === true) geometry.removeAttribute('morphNormal' + i);\n        }\n      }\n\n      var uniforms = program.getUniforms();\n\n      if (uniforms.morphTargetInfluences !== null) {\n        _gl.uniform1fv(uniforms.morphTargetInfluences, morphInfluences);\n      }\n\n      updateBuffers = true;\n    } //\n\n\n    var index = geometry.index;\n    var position = geometry.attributes.position;\n\n    if (material.wireframe === true) {\n      index = objects.getWireframeAttribute(geometry);\n    }\n\n    var renderer;\n\n    if (index !== null) {\n      renderer = indexedBufferRenderer;\n      renderer.setIndex(index);\n    } else {\n      renderer = bufferRenderer;\n    }\n\n    if (updateBuffers) {\n      setupVertexAttributes(material, program, geometry);\n\n      if (index !== null) {\n        _gl.bindBuffer(_gl.ELEMENT_ARRAY_BUFFER, objects.getAttributeBuffer(index));\n      }\n    } //\n\n\n    var dataStart = 0;\n    var dataCount = Infinity;\n\n    if (index !== null) {\n      dataCount = index.count;\n    } else if (position !== undefined) {\n      dataCount = position.count;\n    }\n\n    var rangeStart = geometry.drawRange.start;\n    var rangeCount = geometry.drawRange.count;\n    var groupStart = group !== null ? group.start : 0;\n    var groupCount = group !== null ? group.count : Infinity;\n    var drawStart = Math.max(dataStart, rangeStart, groupStart);\n    var drawEnd = Math.min(dataStart + dataCount, rangeStart + rangeCount, groupStart + groupCount) - 1;\n    var drawCount = Math.max(0, drawEnd - drawStart + 1); //\n\n    if (object instanceof THREE.Mesh) {\n      if (material.wireframe === true) {\n        state.setLineWidth(material.wireframeLinewidth * getTargetPixelRatio());\n        renderer.setMode(_gl.LINES);\n      } else {\n        switch (object.drawMode) {\n          case THREE.TrianglesDrawMode:\n            renderer.setMode(_gl.TRIANGLES);\n            break;\n\n          case THREE.TriangleStripDrawMode:\n            renderer.setMode(_gl.TRIANGLE_STRIP);\n            break;\n\n          case THREE.TriangleFanDrawMode:\n            renderer.setMode(_gl.TRIANGLE_FAN);\n            break;\n        }\n      }\n    } else if (object instanceof THREE.Line) {\n      var lineWidth = material.linewidth;\n      if (lineWidth === undefined) lineWidth = 1; // Not using Line*Material\n\n      state.setLineWidth(lineWidth * getTargetPixelRatio());\n\n      if (object instanceof THREE.LineSegments) {\n        renderer.setMode(_gl.LINES);\n      } else {\n        renderer.setMode(_gl.LINE_STRIP);\n      }\n    } else if (object instanceof THREE.Points) {\n      renderer.setMode(_gl.POINTS);\n    }\n\n    if (geometry instanceof THREE.InstancedBufferGeometry) {\n      if (geometry.maxInstancedCount > 0) {\n        renderer.renderInstances(geometry, drawStart, drawCount);\n      }\n    } else {\n      renderer.render(drawStart, drawCount);\n    }\n  };\n\n  function setupVertexAttributes(material, program, geometry, startIndex) {\n    var extension;\n\n    if (geometry instanceof THREE.InstancedBufferGeometry) {\n      extension = extensions.get('ANGLE_instanced_arrays');\n\n      if (extension === null) {\n        return;\n      }\n    }\n\n    if (startIndex === undefined) startIndex = 0;\n    state.initAttributes();\n    var geometryAttributes = geometry.attributes;\n    var programAttributes = program.getAttributes();\n    var materialDefaultAttributeValues = material.defaultAttributeValues;\n\n    for (var name in programAttributes) {\n      var programAttribute = programAttributes[name];\n\n      if (programAttribute >= 0) {\n        var geometryAttribute = geometryAttributes[name];\n\n        if (geometryAttribute !== undefined) {\n          var size = geometryAttribute.itemSize;\n          var buffer = objects.getAttributeBuffer(geometryAttribute);\n\n          if (geometryAttribute instanceof THREE.InterleavedBufferAttribute) {\n            var data = geometryAttribute.data;\n            var stride = data.stride;\n            var offset = geometryAttribute.offset;\n\n            if (data instanceof THREE.InstancedInterleavedBuffer) {\n              state.enableAttributeAndDivisor(programAttribute, data.meshPerAttribute, extension);\n\n              if (geometry.maxInstancedCount === undefined) {\n                geometry.maxInstancedCount = data.meshPerAttribute * data.count;\n              }\n            } else {\n              state.enableAttribute(programAttribute);\n            }\n\n            _gl.bindBuffer(_gl.ARRAY_BUFFER, buffer);\n\n            _gl.vertexAttribPointer(programAttribute, size, _gl.FLOAT, false, stride * data.array.BYTES_PER_ELEMENT, (startIndex * stride + offset) * data.array.BYTES_PER_ELEMENT);\n          } else {\n            if (geometryAttribute instanceof THREE.InstancedBufferAttribute) {\n              state.enableAttributeAndDivisor(programAttribute, geometryAttribute.meshPerAttribute, extension);\n\n              if (geometry.maxInstancedCount === undefined) {\n                geometry.maxInstancedCount = geometryAttribute.meshPerAttribute * geometryAttribute.count;\n              }\n            } else {\n              state.enableAttribute(programAttribute);\n            }\n\n            _gl.bindBuffer(_gl.ARRAY_BUFFER, buffer);\n\n            _gl.vertexAttribPointer(programAttribute, size, _gl.FLOAT, false, 0, startIndex * size * 4); // 4 bytes per Float32\n\n          }\n        } else if (materialDefaultAttributeValues !== undefined) {\n          var value = materialDefaultAttributeValues[name];\n\n          if (value !== undefined) {\n            switch (value.length) {\n              case 2:\n                _gl.vertexAttrib2fv(programAttribute, value);\n\n                break;\n\n              case 3:\n                _gl.vertexAttrib3fv(programAttribute, value);\n\n                break;\n\n              case 4:\n                _gl.vertexAttrib4fv(programAttribute, value);\n\n                break;\n\n              default:\n                _gl.vertexAttrib1fv(programAttribute, value);\n\n            }\n          }\n        }\n      }\n    }\n\n    state.disableUnusedAttributes();\n  } // Sorting\n\n\n  function absNumericalSort(a, b) {\n    return Math.abs(b[0]) - Math.abs(a[0]);\n  }\n\n  function painterSortStable(a, b) {\n    if (a.object.renderOrder !== b.object.renderOrder) {\n      return a.object.renderOrder - b.object.renderOrder;\n    } else if (a.material.id !== b.material.id) {\n      return a.material.id - b.material.id;\n    } else if (a.z !== b.z) {\n      return a.z - b.z;\n    } else {\n      return a.id - b.id;\n    }\n  }\n\n  function reversePainterSortStable(a, b) {\n    if (a.object.renderOrder !== b.object.renderOrder) {\n      return a.object.renderOrder - b.object.renderOrder;\n    }\n\n    if (a.z !== b.z) {\n      return b.z - a.z;\n    } else {\n      return a.id - b.id;\n    }\n  } // Rendering\n\n\n  this.render = function (scene, camera, renderTarget, forceClear) {\n    if (camera instanceof THREE.Camera === false) {\n      return;\n    }\n\n    var fog = scene.fog; // reset caching for this frame\n\n    _currentGeometryProgram = '';\n    _currentMaterialId = -1;\n    _currentCamera = null; // update scene graph\n\n    if (scene.autoUpdate === true) scene.updateMatrixWorld(); // update camera matrices and frustum\n\n    if (camera.parent === null) camera.updateMatrixWorld();\n    camera.matrixWorldInverse.getInverse(camera.matrixWorld);\n\n    _projScreenMatrix.multiplyMatrices(camera.projectionMatrix, camera.matrixWorldInverse);\n\n    _frustum.setFromMatrix(_projScreenMatrix);\n\n    lights.length = 0;\n    opaqueObjectsLastIndex = -1;\n    transparentObjectsLastIndex = -1;\n    sprites.length = 0;\n    lensFlares.length = 0;\n    projectObject(scene, camera);\n    opaqueObjects.length = opaqueObjectsLastIndex + 1;\n    transparentObjects.length = transparentObjectsLastIndex + 1;\n\n    if (_this.sortObjects === true) {\n      opaqueObjects.sort(painterSortStable);\n      transparentObjects.sort(reversePainterSortStable);\n    }\n\n    setupLights(lights, camera); //\n\n    shadowMap.render(scene, camera); //\n\n    _infoRender.calls = 0;\n    _infoRender.vertices = 0;\n    _infoRender.faces = 0;\n    _infoRender.points = 0;\n\n    if (renderTarget === undefined) {\n      renderTarget = null;\n    }\n\n    this.setRenderTarget(renderTarget);\n\n    if (this.autoClear || forceClear) {\n      this.clear(this.autoClearColor, this.autoClearDepth, this.autoClearStencil);\n    } //\n\n\n    if (scene.overrideMaterial) {\n      var overrideMaterial = scene.overrideMaterial;\n      renderObjects(opaqueObjects, camera, fog, overrideMaterial);\n      renderObjects(transparentObjects, camera, fog, overrideMaterial);\n    } else {\n      // opaque pass (front-to-back order)\n      state.setBlending(THREE.NoBlending);\n      renderObjects(opaqueObjects, camera, fog); // transparent pass (back-to-front order)\n\n      renderObjects(transparentObjects, camera, fog);\n    } // custom render plugins (post pass)\n\n\n    spritePlugin.render(scene, camera);\n    lensFlarePlugin.render(scene, camera, _currentViewport); // Generate mipmap if we're using any kind of mipmap filtering\n\n    if (renderTarget) {\n      var texture = renderTarget.texture;\n\n      if (texture.generateMipmaps && isPowerOfTwo(renderTarget) && texture.minFilter !== THREE.NearestFilter && texture.minFilter !== THREE.LinearFilter) {\n        updateRenderTargetMipmap(renderTarget);\n      }\n    } // Ensure depth buffer writing is enabled so it can be cleared on next render\n\n\n    state.setDepthTest(true);\n    state.setDepthWrite(true);\n    state.setColorWrite(true); // _gl.finish();\n  };\n\n  function pushRenderItem(object, geometry, material, z, group) {\n    var array, index; // allocate the next position in the appropriate array\n\n    if (material.transparent) {\n      array = transparentObjects;\n      index = ++transparentObjectsLastIndex;\n    } else {\n      array = opaqueObjects;\n      index = ++opaqueObjectsLastIndex;\n    } // recycle existing render item or grow the array\n\n\n    var renderItem = array[index];\n\n    if (renderItem !== undefined) {\n      renderItem.id = object.id;\n      renderItem.object = object;\n      renderItem.geometry = geometry;\n      renderItem.material = material;\n      renderItem.z = _vector3.z;\n      renderItem.group = group;\n    } else {\n      renderItem = {\n        id: object.id,\n        object: object,\n        geometry: geometry,\n        material: material,\n        z: _vector3.z,\n        group: group\n      }; // assert( index === array.length );\n\n      array.push(renderItem);\n    }\n  }\n\n  function projectObject(object, camera) {\n    if (object.visible === false) return;\n\n    if (object.layers.test(camera.layers)) {\n      if (object instanceof THREE.Light) {\n        lights.push(object);\n      } else if (object instanceof THREE.Sprite) {\n        if (object.frustumCulled === false || _frustum.intersectsObject(object) === true) {\n          sprites.push(object);\n        }\n      } else if (object instanceof THREE.LensFlare) {\n        lensFlares.push(object);\n      } else if (object instanceof THREE.ImmediateRenderObject) {\n        if (_this.sortObjects === true) {\n          _vector3.setFromMatrixPosition(object.matrixWorld);\n\n          _vector3.applyProjection(_projScreenMatrix);\n        }\n\n        pushRenderItem(object, null, object.material, _vector3.z, null);\n      } else if (object instanceof THREE.Mesh || object instanceof THREE.Line || object instanceof THREE.Points) {\n        if (object instanceof THREE.SkinnedMesh) {\n          object.skeleton.update();\n        }\n\n        if (object.frustumCulled === false || _frustum.intersectsObject(object) === true) {\n          var material = object.material;\n\n          if (material.visible === true) {\n            if (_this.sortObjects === true) {\n              _vector3.setFromMatrixPosition(object.matrixWorld);\n\n              _vector3.applyProjection(_projScreenMatrix);\n            }\n\n            var geometry = objects.update(object);\n\n            if (material instanceof THREE.MultiMaterial) {\n              var groups = geometry.groups;\n              var materials = material.materials;\n\n              for (var i = 0, l = groups.length; i < l; i++) {\n                var group = groups[i];\n                var groupMaterial = materials[group.materialIndex];\n\n                if (groupMaterial.visible === true) {\n                  pushRenderItem(object, geometry, groupMaterial, _vector3.z, group);\n                }\n              }\n            } else {\n              pushRenderItem(object, geometry, material, _vector3.z, null);\n            }\n          }\n        }\n      }\n    }\n\n    var children = object.children;\n\n    for (var i = 0, l = children.length; i < l; i++) {\n      projectObject(children[i], camera);\n    }\n  }\n\n  function renderObjects(renderList, camera, fog, overrideMaterial) {\n    for (var i = 0, l = renderList.length; i < l; i++) {\n      var renderItem = renderList[i];\n      var object = renderItem.object;\n      var geometry = renderItem.geometry;\n      var material = overrideMaterial === undefined ? renderItem.material : overrideMaterial;\n      var group = renderItem.group;\n      object.modelViewMatrix.multiplyMatrices(camera.matrixWorldInverse, object.matrixWorld);\n      object.normalMatrix.getNormalMatrix(object.modelViewMatrix);\n\n      if (object instanceof THREE.ImmediateRenderObject) {\n        setMaterial(material);\n        var program = setProgram(camera, fog, material, object);\n        _currentGeometryProgram = '';\n        object.render(function (object) {\n          _this.renderBufferImmediate(object, program, material);\n        });\n      } else {\n        _this.renderBufferDirect(camera, fog, geometry, material, object, group);\n      }\n    }\n  }\n\n  function initMaterial(material, fog, object) {\n    var materialProperties = properties.get(material);\n    var parameters = programCache.getParameters(material, _lights, fog, object);\n    var code = programCache.getProgramCode(material, parameters);\n    var program = materialProperties.program;\n    var programChange = true;\n\n    if (program === undefined) {\n      // new material\n      material.addEventListener('dispose', onMaterialDispose);\n    } else if (program.code !== code) {\n      // changed glsl or parameters\n      releaseMaterialProgramReference(material);\n    } else if (parameters.shaderID !== undefined) {\n      // same glsl and uniform list\n      return;\n    } else {\n      // only rebuild uniform list\n      programChange = false;\n    }\n\n    if (programChange) {\n      if (parameters.shaderID) {\n        var shader = THREE.ShaderLib[parameters.shaderID];\n        materialProperties.__webglShader = {\n          name: material.type,\n          uniforms: THREE.UniformsUtils.clone(shader.uniforms),\n          vertexShader: shader.vertexShader,\n          fragmentShader: shader.fragmentShader\n        };\n      } else {\n        materialProperties.__webglShader = {\n          name: material.type,\n          uniforms: material.uniforms,\n          vertexShader: material.vertexShader,\n          fragmentShader: material.fragmentShader\n        };\n      }\n\n      material.__webglShader = materialProperties.__webglShader;\n      program = programCache.acquireProgram(material, parameters, code);\n      materialProperties.program = program;\n      material.program = program;\n    }\n\n    var attributes = program.getAttributes();\n\n    if (material.morphTargets) {\n      material.numSupportedMorphTargets = 0;\n\n      for (var i = 0; i < _this.maxMorphTargets; i++) {\n        if (attributes['morphTarget' + i] >= 0) {\n          material.numSupportedMorphTargets++;\n        }\n      }\n    }\n\n    if (material.morphNormals) {\n      material.numSupportedMorphNormals = 0;\n\n      for (var i = 0; i < _this.maxMorphNormals; i++) {\n        if (attributes['morphNormal' + i] >= 0) {\n          material.numSupportedMorphNormals++;\n        }\n      }\n    }\n\n    materialProperties.uniformsList = [];\n    var uniforms = materialProperties.__webglShader.uniforms,\n        uniformLocations = materialProperties.program.getUniforms();\n\n    for (var u in uniforms) {\n      var location = uniformLocations[u];\n\n      if (location) {\n        materialProperties.uniformsList.push([materialProperties.__webglShader.uniforms[u], location]);\n      }\n    }\n\n    if (material instanceof THREE.MeshPhongMaterial || material instanceof THREE.MeshLambertMaterial || material instanceof THREE.MeshStandardMaterial || material.lights) {\n      // store the light setup it was created for\n      materialProperties.lightsHash = _lights.hash; // wire up the material to this renderer's lighting state\n\n      uniforms.ambientLightColor.value = _lights.ambient;\n      uniforms.directionalLights.value = _lights.directional;\n      uniforms.spotLights.value = _lights.spot;\n      uniforms.pointLights.value = _lights.point;\n      uniforms.hemisphereLights.value = _lights.hemi;\n      uniforms.directionalShadowMap.value = _lights.directionalShadowMap;\n      uniforms.directionalShadowMatrix.value = _lights.directionalShadowMatrix;\n      uniforms.spotShadowMap.value = _lights.spotShadowMap;\n      uniforms.spotShadowMatrix.value = _lights.spotShadowMatrix;\n      uniforms.pointShadowMap.value = _lights.pointShadowMap;\n      uniforms.pointShadowMatrix.value = _lights.pointShadowMatrix;\n    } // detect dynamic uniforms\n\n\n    materialProperties.hasDynamicUniforms = false;\n\n    for (var j = 0, jl = materialProperties.uniformsList.length; j < jl; j++) {\n      var uniform = materialProperties.uniformsList[j][0];\n\n      if (uniform.dynamic === true) {\n        materialProperties.hasDynamicUniforms = true;\n        break;\n      }\n    }\n  }\n\n  function setMaterial(material) {\n    setMaterialFaces(material);\n\n    if (material.transparent === true) {\n      state.setBlending(material.blending, material.blendEquation, material.blendSrc, material.blendDst, material.blendEquationAlpha, material.blendSrcAlpha, material.blendDstAlpha, material.premultipliedAlpha);\n    } else {\n      state.setBlending(THREE.NoBlending);\n    }\n\n    state.setDepthFunc(material.depthFunc);\n    state.setDepthTest(material.depthTest);\n    state.setDepthWrite(material.depthWrite);\n    state.setColorWrite(material.colorWrite);\n    state.setPolygonOffset(material.polygonOffset, material.polygonOffsetFactor, material.polygonOffsetUnits);\n  }\n\n  function setMaterialFaces(material) {\n    material.side !== THREE.DoubleSide ? state.enable(_gl.CULL_FACE) : state.disable(_gl.CULL_FACE);\n    state.setFlipSided(material.side === THREE.BackSide);\n  }\n\n  function setProgram(camera, fog, material, object) {\n    _usedTextureUnits = 0;\n    var materialProperties = properties.get(material);\n\n    if (materialProperties.program === undefined) {\n      material.needsUpdate = true;\n    }\n\n    if (materialProperties.lightsHash !== undefined && materialProperties.lightsHash !== _lights.hash) {\n      material.needsUpdate = true;\n    }\n\n    if (material.needsUpdate) {\n      initMaterial(material, fog, object);\n      material.needsUpdate = false;\n    }\n\n    var refreshProgram = false;\n    var refreshMaterial = false;\n    var refreshLights = false;\n    var program = materialProperties.program,\n        p_uniforms = program.getUniforms(),\n        m_uniforms = materialProperties.__webglShader.uniforms;\n\n    if (program.id !== _currentProgram) {\n      _gl.useProgram(program.program);\n\n      _currentProgram = program.id;\n      refreshProgram = true;\n      refreshMaterial = true;\n      refreshLights = true;\n    }\n\n    if (material.id !== _currentMaterialId) {\n      _currentMaterialId = material.id;\n      refreshMaterial = true;\n    }\n\n    if (refreshProgram || camera !== _currentCamera) {\n      _gl.uniformMatrix4fv(p_uniforms.projectionMatrix, false, camera.projectionMatrix.elements);\n\n      if (capabilities.logarithmicDepthBuffer) {\n        _gl.uniform1f(p_uniforms.logDepthBufFC, 2.0 / (Math.log(camera.far + 1.0) / Math.LN2));\n      }\n\n      if (camera !== _currentCamera) {\n        _currentCamera = camera; // lighting uniforms depend on the camera so enforce an update\n        // now, in case this material supports lights - or later, when\n        // the next material that does gets activated:\n\n        refreshMaterial = true; // set to true on material change\n\n        refreshLights = true; // remains set until update done\n      } // load material specific uniforms\n      // (shader material also gets them for the sake of genericity)\n\n\n      if (material instanceof THREE.ShaderMaterial || material instanceof THREE.MeshPhongMaterial || material instanceof THREE.MeshStandardMaterial || material.envMap) {\n        if (p_uniforms.cameraPosition !== undefined) {\n          _vector3.setFromMatrixPosition(camera.matrixWorld);\n\n          _gl.uniform3f(p_uniforms.cameraPosition, _vector3.x, _vector3.y, _vector3.z);\n        }\n      }\n\n      if (material instanceof THREE.MeshPhongMaterial || material instanceof THREE.MeshLambertMaterial || material instanceof THREE.MeshBasicMaterial || material instanceof THREE.MeshStandardMaterial || material instanceof THREE.ShaderMaterial || material.skinning) {\n        if (p_uniforms.viewMatrix !== undefined) {\n          _gl.uniformMatrix4fv(p_uniforms.viewMatrix, false, camera.matrixWorldInverse.elements);\n        }\n      }\n\n      if (p_uniforms.toneMappingExposure !== undefined) {\n        _gl.uniform1f(p_uniforms.toneMappingExposure, _this.toneMappingExposure);\n      }\n\n      if (p_uniforms.toneMappingWhitePoint !== undefined) {\n        _gl.uniform1f(p_uniforms.toneMappingWhitePoint, _this.toneMappingWhitePoint);\n      }\n    } // skinning uniforms must be set even if material didn't change\n    // auto-setting of texture unit for bone texture must go before other textures\n    // not sure why, but otherwise weird things happen\n\n\n    if (material.skinning) {\n      if (object.bindMatrix && p_uniforms.bindMatrix !== undefined) {\n        _gl.uniformMatrix4fv(p_uniforms.bindMatrix, false, object.bindMatrix.elements);\n      }\n\n      if (object.bindMatrixInverse && p_uniforms.bindMatrixInverse !== undefined) {\n        _gl.uniformMatrix4fv(p_uniforms.bindMatrixInverse, false, object.bindMatrixInverse.elements);\n      }\n\n      if (capabilities.floatVertexTextures && object.skeleton && object.skeleton.useVertexTexture) {\n        if (p_uniforms.boneTexture !== undefined) {\n          var textureUnit = getTextureUnit();\n\n          _gl.uniform1i(p_uniforms.boneTexture, textureUnit);\n\n          _this.setTexture(object.skeleton.boneTexture, textureUnit);\n        }\n\n        if (p_uniforms.boneTextureWidth !== undefined) {\n          _gl.uniform1i(p_uniforms.boneTextureWidth, object.skeleton.boneTextureWidth);\n        }\n\n        if (p_uniforms.boneTextureHeight !== undefined) {\n          _gl.uniform1i(p_uniforms.boneTextureHeight, object.skeleton.boneTextureHeight);\n        }\n      } else if (object.skeleton && object.skeleton.boneMatrices) {\n        if (p_uniforms.boneGlobalMatrices !== undefined) {\n          _gl.uniformMatrix4fv(p_uniforms.boneGlobalMatrices, false, object.skeleton.boneMatrices);\n        }\n      }\n    }\n\n    if (refreshMaterial) {\n      if (material instanceof THREE.MeshPhongMaterial || material instanceof THREE.MeshLambertMaterial || material instanceof THREE.MeshStandardMaterial || material.lights) {\n        // the current material requires lighting info\n        // note: all lighting uniforms are always set correctly\n        // they simply reference the renderer's state for their\n        // values\n        //\n        // use the current material's .needsUpdate flags to set\n        // the GL state when required\n        markUniformsLightsNeedsUpdate(m_uniforms, refreshLights);\n      } // refresh uniforms common to several materials\n\n\n      if (fog && material.fog) {\n        refreshUniformsFog(m_uniforms, fog);\n      }\n\n      if (material instanceof THREE.MeshBasicMaterial || material instanceof THREE.MeshLambertMaterial || material instanceof THREE.MeshPhongMaterial || material instanceof THREE.MeshStandardMaterial) {\n        refreshUniformsCommon(m_uniforms, material);\n      } // refresh single material specific uniforms\n\n\n      if (material instanceof THREE.LineBasicMaterial) {\n        refreshUniformsLine(m_uniforms, material);\n      } else if (material instanceof THREE.LineDashedMaterial) {\n        refreshUniformsLine(m_uniforms, material);\n        refreshUniformsDash(m_uniforms, material);\n      } else if (material instanceof THREE.PointsMaterial) {\n        refreshUniformsPoints(m_uniforms, material);\n      } else if (material instanceof THREE.MeshLambertMaterial) {\n        refreshUniformsLambert(m_uniforms, material);\n      } else if (material instanceof THREE.MeshPhongMaterial) {\n        refreshUniformsPhong(m_uniforms, material);\n      } else if (material instanceof THREE.MeshStandardMaterial) {\n        refreshUniformsStandard(m_uniforms, material);\n      } else if (material instanceof THREE.MeshDepthMaterial) {\n        m_uniforms.mNear.value = camera.near;\n        m_uniforms.mFar.value = camera.far;\n        m_uniforms.opacity.value = material.opacity;\n      } else if (material instanceof THREE.MeshNormalMaterial) {\n        m_uniforms.opacity.value = material.opacity;\n      } // load common uniforms\n\n\n      loadUniformsGeneric(materialProperties.uniformsList);\n    }\n\n    loadUniformsMatrices(p_uniforms, object);\n\n    if (p_uniforms.modelMatrix !== undefined) {\n      _gl.uniformMatrix4fv(p_uniforms.modelMatrix, false, object.matrixWorld.elements);\n    }\n\n    if (materialProperties.hasDynamicUniforms === true) {\n      updateDynamicUniforms(materialProperties.uniformsList, object, camera);\n    }\n\n    return program;\n  }\n\n  function updateDynamicUniforms(uniforms, object, camera) {\n    var dynamicUniforms = [];\n\n    for (var j = 0, jl = uniforms.length; j < jl; j++) {\n      var uniform = uniforms[j][0];\n      var onUpdateCallback = uniform.onUpdateCallback;\n\n      if (onUpdateCallback !== undefined) {\n        onUpdateCallback.bind(uniform)(object, camera);\n        dynamicUniforms.push(uniforms[j]);\n      }\n    }\n\n    loadUniformsGeneric(dynamicUniforms);\n  } // Uniforms (refresh uniforms objects)\n\n\n  function refreshUniformsCommon(uniforms, material) {\n    uniforms.opacity.value = material.opacity;\n    uniforms.diffuse.value = material.color;\n\n    if (material.emissive) {\n      uniforms.emissive.value.copy(material.emissive).multiplyScalar(material.emissiveIntensity);\n    }\n\n    uniforms.map.value = material.map;\n    uniforms.specularMap.value = material.specularMap;\n    uniforms.alphaMap.value = material.alphaMap;\n\n    if (material.aoMap) {\n      uniforms.aoMap.value = material.aoMap;\n      uniforms.aoMapIntensity.value = material.aoMapIntensity;\n    } // uv repeat and offset setting priorities\n    // 1. color map\n    // 2. specular map\n    // 3. normal map\n    // 4. bump map\n    // 5. alpha map\n    // 6. emissive map\n\n\n    var uvScaleMap;\n\n    if (material.map) {\n      uvScaleMap = material.map;\n    } else if (material.specularMap) {\n      uvScaleMap = material.specularMap;\n    } else if (material.displacementMap) {\n      uvScaleMap = material.displacementMap;\n    } else if (material.normalMap) {\n      uvScaleMap = material.normalMap;\n    } else if (material.bumpMap) {\n      uvScaleMap = material.bumpMap;\n    } else if (material.roughnessMap) {\n      uvScaleMap = material.roughnessMap;\n    } else if (material.metalnessMap) {\n      uvScaleMap = material.metalnessMap;\n    } else if (material.alphaMap) {\n      uvScaleMap = material.alphaMap;\n    } else if (material.emissiveMap) {\n      uvScaleMap = material.emissiveMap;\n    }\n\n    if (uvScaleMap !== undefined) {\n      if (uvScaleMap instanceof THREE.WebGLRenderTarget) {\n        uvScaleMap = uvScaleMap.texture;\n      }\n\n      var offset = uvScaleMap.offset;\n      var repeat = uvScaleMap.repeat;\n      uniforms.offsetRepeat.value.set(offset.x, offset.y, repeat.x, repeat.y);\n    }\n\n    uniforms.envMap.value = material.envMap;\n    uniforms.flipEnvMap.value = material.envMap instanceof THREE.WebGLRenderTargetCube ? 1 : -1;\n    uniforms.reflectivity.value = material.reflectivity;\n    uniforms.refractionRatio.value = material.refractionRatio;\n  }\n\n  function refreshUniformsLine(uniforms, material) {\n    uniforms.diffuse.value = material.color;\n    uniforms.opacity.value = material.opacity;\n  }\n\n  function refreshUniformsDash(uniforms, material) {\n    uniforms.dashSize.value = material.dashSize;\n    uniforms.totalSize.value = material.dashSize + material.gapSize;\n    uniforms.scale.value = material.scale;\n  }\n\n  function refreshUniformsPoints(uniforms, material) {\n    uniforms.diffuse.value = material.color;\n    uniforms.opacity.value = material.opacity;\n    uniforms.size.value = material.size * _pixelRatio;\n    uniforms.scale.value = _canvas.clientHeight / 2.0; // TODO: Cache this.\n\n    uniforms.map.value = material.map;\n\n    if (material.map !== null) {\n      var offset = material.map.offset;\n      var repeat = material.map.repeat;\n      uniforms.offsetRepeat.value.set(offset.x, offset.y, repeat.x, repeat.y);\n    }\n  }\n\n  function refreshUniformsFog(uniforms, fog) {\n    uniforms.fogColor.value = fog.color;\n\n    if (fog instanceof THREE.Fog) {\n      uniforms.fogNear.value = fog.near;\n      uniforms.fogFar.value = fog.far;\n    } else if (fog instanceof THREE.FogExp2) {\n      uniforms.fogDensity.value = fog.density;\n    }\n  }\n\n  function refreshUniformsLambert(uniforms, material) {\n    if (material.lightMap) {\n      uniforms.lightMap.value = material.lightMap;\n      uniforms.lightMapIntensity.value = material.lightMapIntensity;\n    }\n\n    if (material.emissiveMap) {\n      uniforms.emissiveMap.value = material.emissiveMap;\n    }\n  }\n\n  function refreshUniformsPhong(uniforms, material) {\n    uniforms.specular.value = material.specular;\n    uniforms.shininess.value = Math.max(material.shininess, 1e-4); // to prevent pow( 0.0, 0.0 )\n\n    if (material.lightMap) {\n      uniforms.lightMap.value = material.lightMap;\n      uniforms.lightMapIntensity.value = material.lightMapIntensity;\n    }\n\n    if (material.emissiveMap) {\n      uniforms.emissiveMap.value = material.emissiveMap;\n    }\n\n    if (material.bumpMap) {\n      uniforms.bumpMap.value = material.bumpMap;\n      uniforms.bumpScale.value = material.bumpScale;\n    }\n\n    if (material.normalMap) {\n      uniforms.normalMap.value = material.normalMap;\n      uniforms.normalScale.value.copy(material.normalScale);\n    }\n\n    if (material.displacementMap) {\n      uniforms.displacementMap.value = material.displacementMap;\n      uniforms.displacementScale.value = material.displacementScale;\n      uniforms.displacementBias.value = material.displacementBias;\n    }\n  }\n\n  function refreshUniformsStandard(uniforms, material) {\n    uniforms.roughness.value = material.roughness;\n    uniforms.metalness.value = material.metalness;\n\n    if (material.roughnessMap) {\n      uniforms.roughnessMap.value = material.roughnessMap;\n    }\n\n    if (material.metalnessMap) {\n      uniforms.metalnessMap.value = material.metalnessMap;\n    }\n\n    if (material.lightMap) {\n      uniforms.lightMap.value = material.lightMap;\n      uniforms.lightMapIntensity.value = material.lightMapIntensity;\n    }\n\n    if (material.emissiveMap) {\n      uniforms.emissiveMap.value = material.emissiveMap;\n    }\n\n    if (material.bumpMap) {\n      uniforms.bumpMap.value = material.bumpMap;\n      uniforms.bumpScale.value = material.bumpScale;\n    }\n\n    if (material.normalMap) {\n      uniforms.normalMap.value = material.normalMap;\n      uniforms.normalScale.value.copy(material.normalScale);\n    }\n\n    if (material.displacementMap) {\n      uniforms.displacementMap.value = material.displacementMap;\n      uniforms.displacementScale.value = material.displacementScale;\n      uniforms.displacementBias.value = material.displacementBias;\n    }\n\n    if (material.envMap) {\n      //uniforms.envMap.value = material.envMap; // part of uniforms common\n      uniforms.envMapIntensity.value = material.envMapIntensity;\n    }\n  } // If uniforms are marked as clean, they don't need to be loaded to the GPU.\n\n\n  function markUniformsLightsNeedsUpdate(uniforms, value) {\n    uniforms.ambientLightColor.needsUpdate = value;\n    uniforms.directionalLights.needsUpdate = value;\n    uniforms.pointLights.needsUpdate = value;\n    uniforms.spotLights.needsUpdate = value;\n    uniforms.hemisphereLights.needsUpdate = value;\n  } // Uniforms (load to GPU)\n\n\n  function loadUniformsMatrices(uniforms, object) {\n    _gl.uniformMatrix4fv(uniforms.modelViewMatrix, false, object.modelViewMatrix.elements);\n\n    if (uniforms.normalMatrix) {\n      _gl.uniformMatrix3fv(uniforms.normalMatrix, false, object.normalMatrix.elements);\n    }\n  }\n\n  function getTextureUnit() {\n    var textureUnit = _usedTextureUnits;\n    _usedTextureUnits += 1;\n    return textureUnit;\n  }\n\n  function loadUniform(uniform, type, location, value) {\n    var texture, textureUnit;\n\n    if (type === '1i') {\n      _gl.uniform1i(location, value);\n    } else if (type === '1f') {\n      _gl.uniform1f(location, value);\n    } else if (type === '2f') {\n      _gl.uniform2f(location, value[0], value[1]);\n    } else if (type === '3f') {\n      _gl.uniform3f(location, value[0], value[1], value[2]);\n    } else if (type === '4f') {\n      _gl.uniform4f(location, value[0], value[1], value[2], value[3]);\n    } else if (type === '1iv') {\n      _gl.uniform1iv(location, value);\n    } else if (type === '3iv') {\n      _gl.uniform3iv(location, value);\n    } else if (type === '1fv') {\n      _gl.uniform1fv(location, value);\n    } else if (type === '2fv') {\n      _gl.uniform2fv(location, value);\n    } else if (type === '3fv') {\n      _gl.uniform3fv(location, value);\n    } else if (type === '4fv') {\n      _gl.uniform4fv(location, value);\n    } else if (type === 'Matrix2fv') {\n      _gl.uniformMatrix2fv(location, false, value);\n    } else if (type === 'Matrix3fv') {\n      _gl.uniformMatrix3fv(location, false, value);\n    } else if (type === 'Matrix4fv') {\n      _gl.uniformMatrix4fv(location, false, value); //\n\n    } else if (type === 'i') {\n      // single integer\n      _gl.uniform1i(location, value);\n    } else if (type === 'f') {\n      // single float\n      _gl.uniform1f(location, value);\n    } else if (type === 'v2') {\n      // single THREE.Vector2\n      _gl.uniform2f(location, value.x, value.y);\n    } else if (type === 'v3') {\n      // single THREE.Vector3\n      _gl.uniform3f(location, value.x, value.y, value.z);\n    } else if (type === 'v4') {\n      // single THREE.Vector4\n      _gl.uniform4f(location, value.x, value.y, value.z, value.w);\n    } else if (type === 'c') {\n      // single THREE.Color\n      _gl.uniform3f(location, value.r, value.g, value.b);\n    } else if (type === 's') {\n      // TODO: Optimize this\n      var properties = uniform.properties;\n\n      for (var name in properties) {\n        var property = properties[name];\n        var locationProperty = location[name];\n        var valueProperty = value[name];\n        loadUniform(property, property.type, locationProperty, valueProperty);\n      }\n    } else if (type === 'sa') {\n      // TODO: Optimize this\n      var properties = uniform.properties;\n\n      for (var i = 0, l = value.length; i < l; i++) {\n        for (var name in properties) {\n          var property = properties[name];\n          var locationProperty = location[i][name];\n          var valueProperty = value[i][name];\n          loadUniform(property, property.type, locationProperty, valueProperty);\n        }\n      }\n    } else if (type === 'iv1') {\n      // flat array of integers (JS or typed array)\n      _gl.uniform1iv(location, value);\n    } else if (type === 'iv') {\n      // flat array of integers with 3 x N size (JS or typed array)\n      _gl.uniform3iv(location, value);\n    } else if (type === 'fv1') {\n      // flat array of floats (JS or typed array)\n      _gl.uniform1fv(location, value);\n    } else if (type === 'fv') {\n      // flat array of floats with 3 x N size (JS or typed array)\n      _gl.uniform3fv(location, value);\n    } else if (type === 'v2v') {\n      // array of THREE.Vector2\n      if (uniform._array === undefined) {\n        uniform._array = new Float32Array(2 * value.length);\n      }\n\n      for (var i = 0, i2 = 0, il = value.length; i < il; i++, i2 += 2) {\n        uniform._array[i2 + 0] = value[i].x;\n        uniform._array[i2 + 1] = value[i].y;\n      }\n\n      _gl.uniform2fv(location, uniform._array);\n    } else if (type === 'v3v') {\n      // array of THREE.Vector3\n      if (uniform._array === undefined) {\n        uniform._array = new Float32Array(3 * value.length);\n      }\n\n      for (var i = 0, i3 = 0, il = value.length; i < il; i++, i3 += 3) {\n        uniform._array[i3 + 0] = value[i].x;\n        uniform._array[i3 + 1] = value[i].y;\n        uniform._array[i3 + 2] = value[i].z;\n      }\n\n      _gl.uniform3fv(location, uniform._array);\n    } else if (type === 'v4v') {\n      // array of THREE.Vector4\n      if (uniform._array === undefined) {\n        uniform._array = new Float32Array(4 * value.length);\n      }\n\n      for (var i = 0, i4 = 0, il = value.length; i < il; i++, i4 += 4) {\n        uniform._array[i4 + 0] = value[i].x;\n        uniform._array[i4 + 1] = value[i].y;\n        uniform._array[i4 + 2] = value[i].z;\n        uniform._array[i4 + 3] = value[i].w;\n      }\n\n      _gl.uniform4fv(location, uniform._array);\n    } else if (type === 'm2') {\n      // single THREE.Matrix2\n      _gl.uniformMatrix2fv(location, false, value.elements);\n    } else if (type === 'm3') {\n      // single THREE.Matrix3\n      _gl.uniformMatrix3fv(location, false, value.elements);\n    } else if (type === 'm3v') {\n      // array of THREE.Matrix3\n      if (uniform._array === undefined) {\n        uniform._array = new Float32Array(9 * value.length);\n      }\n\n      for (var i = 0, il = value.length; i < il; i++) {\n        value[i].flattenToArrayOffset(uniform._array, i * 9);\n      }\n\n      _gl.uniformMatrix3fv(location, false, uniform._array);\n    } else if (type === 'm4') {\n      // single THREE.Matrix4\n      _gl.uniformMatrix4fv(location, false, value.elements);\n    } else if (type === 'm4v') {\n      // array of THREE.Matrix4\n      if (uniform._array === undefined) {\n        uniform._array = new Float32Array(16 * value.length);\n      }\n\n      for (var i = 0, il = value.length; i < il; i++) {\n        value[i].flattenToArrayOffset(uniform._array, i * 16);\n      }\n\n      _gl.uniformMatrix4fv(location, false, uniform._array);\n    } else if (type === 't') {\n      // single THREE.Texture (2d or cube)\n      texture = value;\n      textureUnit = getTextureUnit();\n\n      _gl.uniform1i(location, textureUnit);\n\n      if (!texture) return;\n\n      if (texture instanceof THREE.CubeTexture || Array.isArray(texture.image) && texture.image.length === 6) {\n        // CompressedTexture can have Array in image :/\n        setCubeTexture(texture, textureUnit);\n      } else if (texture instanceof THREE.WebGLRenderTargetCube) {\n        setCubeTextureDynamic(texture.texture, textureUnit);\n      } else if (texture instanceof THREE.WebGLRenderTarget) {\n        _this.setTexture(texture.texture, textureUnit);\n      } else {\n        _this.setTexture(texture, textureUnit);\n      }\n    } else if (type === 'tv') {\n      // array of THREE.Texture (2d or cube)\n      if (uniform._array === undefined) {\n        uniform._array = [];\n      }\n\n      for (var i = 0, il = uniform.value.length; i < il; i++) {\n        uniform._array[i] = getTextureUnit();\n      }\n\n      _gl.uniform1iv(location, uniform._array);\n\n      for (var i = 0, il = uniform.value.length; i < il; i++) {\n        texture = uniform.value[i];\n        textureUnit = uniform._array[i];\n        if (!texture) continue;\n\n        if (texture instanceof THREE.CubeTexture || texture.image instanceof Array && texture.image.length === 6) {\n          // CompressedTexture can have Array in image :/\n          setCubeTexture(texture, textureUnit);\n        } else if (texture instanceof THREE.WebGLRenderTarget) {\n          _this.setTexture(texture.texture, textureUnit);\n        } else if (texture instanceof THREE.WebGLRenderTargetCube) {\n          setCubeTextureDynamic(texture.texture, textureUnit);\n        } else {\n          _this.setTexture(texture, textureUnit);\n        }\n      }\n    }\n  }\n\n  function loadUniformsGeneric(uniforms) {\n    for (var i = 0, l = uniforms.length; i < l; i++) {\n      var uniform = uniforms[i][0]; // needsUpdate property is not added to all uniforms.\n\n      if (uniform.needsUpdate === false) continue;\n      var type = uniform.type;\n      var location = uniforms[i][1];\n      var value = uniform.value;\n      loadUniform(uniform, type, location, value);\n    }\n  }\n\n  function setupLights(lights, camera) {\n    var l,\n        ll,\n        light,\n        r = 0,\n        g = 0,\n        b = 0,\n        color,\n        intensity,\n        distance,\n        viewMatrix = camera.matrixWorldInverse,\n        directionalLength = 0,\n        pointLength = 0,\n        spotLength = 0,\n        hemiLength = 0,\n        shadowsLength = 0;\n    _lights.shadowsPointLight = 0;\n\n    for (l = 0, ll = lights.length; l < ll; l++) {\n      light = lights[l];\n      color = light.color;\n      intensity = light.intensity;\n      distance = light.distance;\n\n      if (light instanceof THREE.AmbientLight) {\n        r += color.r * intensity;\n        g += color.g * intensity;\n        b += color.b * intensity;\n      } else if (light instanceof THREE.DirectionalLight) {\n        var uniforms = lightCache.get(light);\n        uniforms.color.copy(light.color).multiplyScalar(light.intensity);\n        uniforms.direction.setFromMatrixPosition(light.matrixWorld);\n\n        _vector3.setFromMatrixPosition(light.target.matrixWorld);\n\n        uniforms.direction.sub(_vector3);\n        uniforms.direction.transformDirection(viewMatrix);\n        uniforms.shadow = light.castShadow;\n\n        if (light.castShadow) {\n          uniforms.shadowBias = light.shadow.bias;\n          uniforms.shadowRadius = light.shadow.radius;\n          uniforms.shadowMapSize = light.shadow.mapSize;\n          _lights.shadows[shadowsLength++] = light;\n        }\n\n        _lights.directionalShadowMap[directionalLength] = light.shadow.map;\n        _lights.directionalShadowMatrix[directionalLength] = light.shadow.matrix;\n        _lights.directional[directionalLength++] = uniforms;\n      } else if (light instanceof THREE.SpotLight) {\n        var uniforms = lightCache.get(light);\n        uniforms.position.setFromMatrixPosition(light.matrixWorld);\n        uniforms.position.applyMatrix4(viewMatrix);\n        uniforms.color.copy(color).multiplyScalar(intensity);\n        uniforms.distance = distance;\n        uniforms.direction.setFromMatrixPosition(light.matrixWorld);\n\n        _vector3.setFromMatrixPosition(light.target.matrixWorld);\n\n        uniforms.direction.sub(_vector3);\n        uniforms.direction.transformDirection(viewMatrix);\n        uniforms.coneCos = Math.cos(light.angle);\n        uniforms.penumbraCos = Math.cos(light.angle * (1 - light.penumbra));\n        uniforms.decay = light.distance === 0 ? 0.0 : light.decay;\n        uniforms.shadow = light.castShadow;\n\n        if (light.castShadow) {\n          uniforms.shadowBias = light.shadow.bias;\n          uniforms.shadowRadius = light.shadow.radius;\n          uniforms.shadowMapSize = light.shadow.mapSize;\n          _lights.shadows[shadowsLength++] = light;\n        }\n\n        _lights.spotShadowMap[spotLength] = light.shadow.map;\n        _lights.spotShadowMatrix[spotLength] = light.shadow.matrix;\n        _lights.spot[spotLength++] = uniforms;\n      } else if (light instanceof THREE.PointLight) {\n        var uniforms = lightCache.get(light);\n        uniforms.position.setFromMatrixPosition(light.matrixWorld);\n        uniforms.position.applyMatrix4(viewMatrix);\n        uniforms.color.copy(light.color).multiplyScalar(light.intensity);\n        uniforms.distance = light.distance;\n        uniforms.decay = light.distance === 0 ? 0.0 : light.decay;\n        uniforms.shadow = light.castShadow;\n\n        if (light.castShadow) {\n          uniforms.shadowBias = light.shadow.bias;\n          uniforms.shadowRadius = light.shadow.radius;\n          uniforms.shadowMapSize = light.shadow.mapSize;\n          _lights.shadows[shadowsLength++] = light;\n        }\n\n        _lights.pointShadowMap[pointLength] = light.shadow.map;\n\n        if (_lights.pointShadowMatrix[pointLength] === undefined) {\n          _lights.pointShadowMatrix[pointLength] = new THREE.Matrix4();\n        } // for point lights we set the shadow matrix to be a translation-only matrix\n        // equal to inverse of the light's position\n\n\n        _vector3.setFromMatrixPosition(light.matrixWorld).negate();\n\n        _lights.pointShadowMatrix[pointLength].identity().setPosition(_vector3);\n\n        _lights.point[pointLength++] = uniforms;\n      } else if (light instanceof THREE.HemisphereLight) {\n        var uniforms = lightCache.get(light);\n        uniforms.direction.setFromMatrixPosition(light.matrixWorld);\n        uniforms.direction.transformDirection(viewMatrix);\n        uniforms.direction.normalize();\n        uniforms.skyColor.copy(light.color).multiplyScalar(intensity);\n        uniforms.groundColor.copy(light.groundColor).multiplyScalar(intensity);\n        _lights.hemi[hemiLength++] = uniforms;\n      }\n    }\n\n    _lights.ambient[0] = r;\n    _lights.ambient[1] = g;\n    _lights.ambient[2] = b;\n    _lights.directional.length = directionalLength;\n    _lights.spot.length = spotLength;\n    _lights.point.length = pointLength;\n    _lights.hemi.length = hemiLength;\n    _lights.shadows.length = shadowsLength;\n    _lights.hash = directionalLength + ',' + pointLength + ',' + spotLength + ',' + hemiLength + ',' + shadowsLength;\n  } // GL state setting\n\n\n  this.setFaceCulling = function (cullFace, frontFaceDirection) {\n    if (cullFace === THREE.CullFaceNone) {\n      state.disable(_gl.CULL_FACE);\n    } else {\n      if (frontFaceDirection === THREE.FrontFaceDirectionCW) {\n        _gl.frontFace(_gl.CW);\n      } else {\n        _gl.frontFace(_gl.CCW);\n      }\n\n      if (cullFace === THREE.CullFaceBack) {\n        _gl.cullFace(_gl.BACK);\n      } else if (cullFace === THREE.CullFaceFront) {\n        _gl.cullFace(_gl.FRONT);\n      } else {\n        _gl.cullFace(_gl.FRONT_AND_BACK);\n      }\n\n      state.enable(_gl.CULL_FACE);\n    }\n  }; // Textures\n\n\n  function setTextureParameters(textureType, texture, isPowerOfTwoImage) {\n    var extension;\n\n    if (isPowerOfTwoImage) {\n      _gl.texParameteri(textureType, _gl.TEXTURE_WRAP_S, paramThreeToGL(texture.wrapS));\n\n      _gl.texParameteri(textureType, _gl.TEXTURE_WRAP_T, paramThreeToGL(texture.wrapT));\n\n      _gl.texParameteri(textureType, _gl.TEXTURE_MAG_FILTER, paramThreeToGL(texture.magFilter));\n\n      _gl.texParameteri(textureType, _gl.TEXTURE_MIN_FILTER, paramThreeToGL(texture.minFilter));\n    } else {\n      _gl.texParameteri(textureType, _gl.TEXTURE_WRAP_S, _gl.CLAMP_TO_EDGE);\n\n      _gl.texParameteri(textureType, _gl.TEXTURE_WRAP_T, _gl.CLAMP_TO_EDGE);\n\n      if (texture.wrapS !== THREE.ClampToEdgeWrapping || texture.wrapT !== THREE.ClampToEdgeWrapping) ;\n\n      _gl.texParameteri(textureType, _gl.TEXTURE_MAG_FILTER, filterFallback(texture.magFilter));\n\n      _gl.texParameteri(textureType, _gl.TEXTURE_MIN_FILTER, filterFallback(texture.minFilter));\n\n      if (texture.minFilter !== THREE.NearestFilter && texture.minFilter !== THREE.LinearFilter) ;\n    }\n\n    extension = extensions.get('EXT_texture_filter_anisotropic');\n\n    if (extension) {\n      if (texture.type === THREE.FloatType && extensions.get('OES_texture_float_linear') === null) return;\n      if (texture.type === THREE.HalfFloatType && extensions.get('OES_texture_half_float_linear') === null) return;\n\n      if (texture.anisotropy > 1 || properties.get(texture).__currentAnisotropy) {\n        _gl.texParameterf(textureType, extension.TEXTURE_MAX_ANISOTROPY_EXT, Math.min(texture.anisotropy, _this.getMaxAnisotropy()));\n\n        properties.get(texture).__currentAnisotropy = texture.anisotropy;\n      }\n    }\n  }\n\n  function uploadTexture(textureProperties, texture, slot) {\n    if (textureProperties.__webglInit === undefined) {\n      textureProperties.__webglInit = true;\n      texture.addEventListener('dispose', onTextureDispose);\n      textureProperties.__webglTexture = _gl.createTexture();\n      _infoMemory.textures++;\n    }\n\n    state.activeTexture(_gl.TEXTURE0 + slot);\n    state.bindTexture(_gl.TEXTURE_2D, textureProperties.__webglTexture);\n\n    _gl.pixelStorei(_gl.UNPACK_FLIP_Y_WEBGL, texture.flipY);\n\n    _gl.pixelStorei(_gl.UNPACK_PREMULTIPLY_ALPHA_WEBGL, texture.premultiplyAlpha);\n\n    _gl.pixelStorei(_gl.UNPACK_ALIGNMENT, texture.unpackAlignment);\n\n    var image = clampToMaxSize(texture.image, capabilities.maxTextureSize);\n\n    if (textureNeedsPowerOfTwo(texture) && isPowerOfTwo(image) === false) {\n      image = makePowerOfTwo(image);\n    }\n\n    var isPowerOfTwoImage = isPowerOfTwo(image),\n        glFormat = paramThreeToGL(texture.format),\n        glType = paramThreeToGL(texture.type);\n    setTextureParameters(_gl.TEXTURE_2D, texture, isPowerOfTwoImage);\n    var mipmap,\n        mipmaps = texture.mipmaps;\n\n    if (texture instanceof THREE.DataTexture) {\n      // use manually created mipmaps if available\n      // if there are no manual mipmaps\n      // set 0 level mipmap and then use GL to generate other mipmap levels\n      if (mipmaps.length > 0 && isPowerOfTwoImage) {\n        for (var i = 0, il = mipmaps.length; i < il; i++) {\n          mipmap = mipmaps[i];\n          state.texImage2D(_gl.TEXTURE_2D, i, glFormat, mipmap.width, mipmap.height, 0, glFormat, glType, mipmap.data);\n        }\n\n        texture.generateMipmaps = false;\n      } else {\n        state.texImage2D(_gl.TEXTURE_2D, 0, glFormat, image.width, image.height, 0, glFormat, glType, image.data);\n      }\n    } else if (texture instanceof THREE.CompressedTexture) {\n      for (var i = 0, il = mipmaps.length; i < il; i++) {\n        mipmap = mipmaps[i];\n\n        if (texture.format !== THREE.RGBAFormat && texture.format !== THREE.RGBFormat) {\n          if (state.getCompressedTextureFormats().indexOf(glFormat) > -1) {\n            state.compressedTexImage2D(_gl.TEXTURE_2D, i, glFormat, mipmap.width, mipmap.height, 0, mipmap.data);\n          }\n        } else {\n          state.texImage2D(_gl.TEXTURE_2D, i, glFormat, mipmap.width, mipmap.height, 0, glFormat, glType, mipmap.data);\n        }\n      }\n    } else {\n      // regular Texture (image, video, canvas)\n      // use manually created mipmaps if available\n      // if there are no manual mipmaps\n      // set 0 level mipmap and then use GL to generate other mipmap levels\n      if (mipmaps.length > 0 && isPowerOfTwoImage) {\n        for (var i = 0, il = mipmaps.length; i < il; i++) {\n          mipmap = mipmaps[i];\n          state.texImage2D(_gl.TEXTURE_2D, i, glFormat, glFormat, glType, mipmap);\n        }\n\n        texture.generateMipmaps = false;\n      } else {\n        state.texImage2D(_gl.TEXTURE_2D, 0, glFormat, glFormat, glType, image);\n      }\n    }\n\n    if (texture.generateMipmaps && isPowerOfTwoImage) _gl.generateMipmap(_gl.TEXTURE_2D);\n    textureProperties.__version = texture.version;\n    if (texture.onUpdate) texture.onUpdate(texture);\n  }\n\n  this.setTexture = function (texture, slot) {\n    var textureProperties = properties.get(texture);\n\n    if (texture.version > 0 && textureProperties.__version !== texture.version) {\n      var image = texture.image;\n\n      if (image === undefined) {\n        return;\n      }\n\n      if (image.complete === false) {\n        return;\n      }\n\n      uploadTexture(textureProperties, texture, slot);\n      return;\n    }\n\n    state.activeTexture(_gl.TEXTURE0 + slot);\n    state.bindTexture(_gl.TEXTURE_2D, textureProperties.__webglTexture);\n  };\n\n  function clampToMaxSize(image, maxSize) {\n    if (image.width > maxSize || image.height > maxSize) {\n      // Warning: Scaling through the canvas will only work with images that use\n      // premultiplied alpha.\n      var scale = maxSize / Math.max(image.width, image.height);\n      var canvas = document.createElement('canvas');\n      canvas.width = Math.floor(image.width * scale);\n      canvas.height = Math.floor(image.height * scale);\n      var context = canvas.getContext('2d');\n      context.drawImage(image, 0, 0, image.width, image.height, 0, 0, canvas.width, canvas.height);\n      return canvas;\n    }\n\n    return image;\n  }\n\n  function isPowerOfTwo(image) {\n    return THREE.Math.isPowerOfTwo(image.width) && THREE.Math.isPowerOfTwo(image.height);\n  }\n\n  function textureNeedsPowerOfTwo(texture) {\n    if (texture.wrapS !== THREE.ClampToEdgeWrapping || texture.wrapT !== THREE.ClampToEdgeWrapping) return true;\n    if (texture.minFilter !== THREE.NearestFilter && texture.minFilter !== THREE.LinearFilter) return true;\n    return false;\n  }\n\n  function makePowerOfTwo(image) {\n    if (image instanceof HTMLImageElement || image instanceof HTMLCanvasElement) {\n      var canvas = document.createElement('canvas');\n      canvas.width = THREE.Math.nearestPowerOfTwo(image.width);\n      canvas.height = THREE.Math.nearestPowerOfTwo(image.height);\n      var context = canvas.getContext('2d');\n      context.drawImage(image, 0, 0, canvas.width, canvas.height);\n      return canvas;\n    }\n\n    return image;\n  }\n\n  function setCubeTexture(texture, slot) {\n    var textureProperties = properties.get(texture);\n\n    if (texture.image.length === 6) {\n      if (texture.version > 0 && textureProperties.__version !== texture.version) {\n        if (!textureProperties.__image__webglTextureCube) {\n          texture.addEventListener('dispose', onTextureDispose);\n          textureProperties.__image__webglTextureCube = _gl.createTexture();\n          _infoMemory.textures++;\n        }\n\n        state.activeTexture(_gl.TEXTURE0 + slot);\n        state.bindTexture(_gl.TEXTURE_CUBE_MAP, textureProperties.__image__webglTextureCube);\n\n        _gl.pixelStorei(_gl.UNPACK_FLIP_Y_WEBGL, texture.flipY);\n\n        var isCompressed = texture instanceof THREE.CompressedTexture;\n        var isDataTexture = texture.image[0] instanceof THREE.DataTexture;\n        var cubeImage = [];\n\n        for (var i = 0; i < 6; i++) {\n          if (_this.autoScaleCubemaps && !isCompressed && !isDataTexture) {\n            cubeImage[i] = clampToMaxSize(texture.image[i], capabilities.maxCubemapSize);\n          } else {\n            cubeImage[i] = isDataTexture ? texture.image[i].image : texture.image[i];\n          }\n        }\n\n        var image = cubeImage[0],\n            isPowerOfTwoImage = isPowerOfTwo(image),\n            glFormat = paramThreeToGL(texture.format),\n            glType = paramThreeToGL(texture.type);\n        setTextureParameters(_gl.TEXTURE_CUBE_MAP, texture, isPowerOfTwoImage);\n\n        for (var i = 0; i < 6; i++) {\n          if (!isCompressed) {\n            if (isDataTexture) {\n              state.texImage2D(_gl.TEXTURE_CUBE_MAP_POSITIVE_X + i, 0, glFormat, cubeImage[i].width, cubeImage[i].height, 0, glFormat, glType, cubeImage[i].data);\n            } else {\n              state.texImage2D(_gl.TEXTURE_CUBE_MAP_POSITIVE_X + i, 0, glFormat, glFormat, glType, cubeImage[i]);\n            }\n          } else {\n            var mipmap,\n                mipmaps = cubeImage[i].mipmaps;\n\n            for (var j = 0, jl = mipmaps.length; j < jl; j++) {\n              mipmap = mipmaps[j];\n\n              if (texture.format !== THREE.RGBAFormat && texture.format !== THREE.RGBFormat) {\n                if (state.getCompressedTextureFormats().indexOf(glFormat) > -1) {\n                  state.compressedTexImage2D(_gl.TEXTURE_CUBE_MAP_POSITIVE_X + i, j, glFormat, mipmap.width, mipmap.height, 0, mipmap.data);\n                }\n              } else {\n                state.texImage2D(_gl.TEXTURE_CUBE_MAP_POSITIVE_X + i, j, glFormat, mipmap.width, mipmap.height, 0, glFormat, glType, mipmap.data);\n              }\n            }\n          }\n        }\n\n        if (texture.generateMipmaps && isPowerOfTwoImage) {\n          _gl.generateMipmap(_gl.TEXTURE_CUBE_MAP);\n        }\n\n        textureProperties.__version = texture.version;\n        if (texture.onUpdate) texture.onUpdate(texture);\n      } else {\n        state.activeTexture(_gl.TEXTURE0 + slot);\n        state.bindTexture(_gl.TEXTURE_CUBE_MAP, textureProperties.__image__webglTextureCube);\n      }\n    }\n  }\n\n  function setCubeTextureDynamic(texture, slot) {\n    state.activeTexture(_gl.TEXTURE0 + slot);\n    state.bindTexture(_gl.TEXTURE_CUBE_MAP, properties.get(texture).__webglTexture);\n  } // Render targets\n  // Setup storage for target texture and bind it to correct framebuffer\n\n\n  function setupFrameBufferTexture(framebuffer, renderTarget, attachment, textureTarget) {\n    var glFormat = paramThreeToGL(renderTarget.texture.format);\n    var glType = paramThreeToGL(renderTarget.texture.type);\n    state.texImage2D(textureTarget, 0, glFormat, renderTarget.width, renderTarget.height, 0, glFormat, glType, null);\n\n    _gl.bindFramebuffer(_gl.FRAMEBUFFER, framebuffer);\n\n    _gl.framebufferTexture2D(_gl.FRAMEBUFFER, attachment, textureTarget, properties.get(renderTarget.texture).__webglTexture, 0);\n\n    _gl.bindFramebuffer(_gl.FRAMEBUFFER, null);\n  } // Setup storage for internal depth/stencil buffers and bind to correct framebuffer\n\n\n  function setupRenderBufferStorage(renderbuffer, renderTarget) {\n    _gl.bindRenderbuffer(_gl.RENDERBUFFER, renderbuffer);\n\n    if (renderTarget.depthBuffer && !renderTarget.stencilBuffer) {\n      _gl.renderbufferStorage(_gl.RENDERBUFFER, _gl.DEPTH_COMPONENT16, renderTarget.width, renderTarget.height);\n\n      _gl.framebufferRenderbuffer(_gl.FRAMEBUFFER, _gl.DEPTH_ATTACHMENT, _gl.RENDERBUFFER, renderbuffer);\n    } else if (renderTarget.depthBuffer && renderTarget.stencilBuffer) {\n      _gl.renderbufferStorage(_gl.RENDERBUFFER, _gl.DEPTH_STENCIL, renderTarget.width, renderTarget.height);\n\n      _gl.framebufferRenderbuffer(_gl.FRAMEBUFFER, _gl.DEPTH_STENCIL_ATTACHMENT, _gl.RENDERBUFFER, renderbuffer);\n    } else {\n      // FIXME: We don't support !depth !stencil\n      _gl.renderbufferStorage(_gl.RENDERBUFFER, _gl.RGBA4, renderTarget.width, renderTarget.height);\n    }\n\n    _gl.bindRenderbuffer(_gl.RENDERBUFFER, null);\n  } // Setup GL resources for a non-texture depth buffer\n\n\n  function setupDepthRenderbuffer(renderTarget) {\n    var renderTargetProperties = properties.get(renderTarget);\n    var isCube = renderTarget instanceof THREE.WebGLRenderTargetCube;\n\n    if (isCube) {\n      renderTargetProperties.__webglDepthbuffer = [];\n\n      for (var i = 0; i < 6; i++) {\n        _gl.bindFramebuffer(_gl.FRAMEBUFFER, renderTargetProperties.__webglFramebuffer[i]);\n\n        renderTargetProperties.__webglDepthbuffer[i] = _gl.createRenderbuffer();\n        setupRenderBufferStorage(renderTargetProperties.__webglDepthbuffer[i], renderTarget);\n      }\n    } else {\n      _gl.bindFramebuffer(_gl.FRAMEBUFFER, renderTargetProperties.__webglFramebuffer);\n\n      renderTargetProperties.__webglDepthbuffer = _gl.createRenderbuffer();\n      setupRenderBufferStorage(renderTargetProperties.__webglDepthbuffer, renderTarget);\n    }\n\n    _gl.bindFramebuffer(_gl.FRAMEBUFFER, null);\n  } // Set up GL resources for the render target\n\n\n  function setupRenderTarget(renderTarget) {\n    var renderTargetProperties = properties.get(renderTarget);\n    var textureProperties = properties.get(renderTarget.texture);\n    renderTarget.addEventListener('dispose', onRenderTargetDispose);\n    textureProperties.__webglTexture = _gl.createTexture();\n    _infoMemory.textures++;\n    var isCube = renderTarget instanceof THREE.WebGLRenderTargetCube;\n    var isTargetPowerOfTwo = THREE.Math.isPowerOfTwo(renderTarget.width) && THREE.Math.isPowerOfTwo(renderTarget.height); // Setup framebuffer\n\n    if (isCube) {\n      renderTargetProperties.__webglFramebuffer = [];\n\n      for (var i = 0; i < 6; i++) {\n        renderTargetProperties.__webglFramebuffer[i] = _gl.createFramebuffer();\n      }\n    } else {\n      renderTargetProperties.__webglFramebuffer = _gl.createFramebuffer();\n    } // Setup color buffer\n\n\n    if (isCube) {\n      state.bindTexture(_gl.TEXTURE_CUBE_MAP, textureProperties.__webglTexture);\n      setTextureParameters(_gl.TEXTURE_CUBE_MAP, renderTarget.texture, isTargetPowerOfTwo);\n\n      for (var i = 0; i < 6; i++) {\n        setupFrameBufferTexture(renderTargetProperties.__webglFramebuffer[i], renderTarget, _gl.COLOR_ATTACHMENT0, _gl.TEXTURE_CUBE_MAP_POSITIVE_X + i);\n      }\n\n      if (renderTarget.texture.generateMipmaps && isTargetPowerOfTwo) _gl.generateMipmap(_gl.TEXTURE_CUBE_MAP);\n      state.bindTexture(_gl.TEXTURE_CUBE_MAP, null);\n    } else {\n      state.bindTexture(_gl.TEXTURE_2D, textureProperties.__webglTexture);\n      setTextureParameters(_gl.TEXTURE_2D, renderTarget.texture, isTargetPowerOfTwo);\n      setupFrameBufferTexture(renderTargetProperties.__webglFramebuffer, renderTarget, _gl.COLOR_ATTACHMENT0, _gl.TEXTURE_2D);\n      if (renderTarget.texture.generateMipmaps && isTargetPowerOfTwo) _gl.generateMipmap(_gl.TEXTURE_2D);\n      state.bindTexture(_gl.TEXTURE_2D, null);\n    } // Setup depth and stencil buffers\n\n\n    if (renderTarget.depthBuffer) {\n      setupDepthRenderbuffer(renderTarget);\n    }\n  }\n\n  this.getCurrentRenderTarget = function () {\n    return _currentRenderTarget;\n  };\n\n  this.setRenderTarget = function (renderTarget) {\n    _currentRenderTarget = renderTarget;\n\n    if (renderTarget && properties.get(renderTarget).__webglFramebuffer === undefined) {\n      setupRenderTarget(renderTarget);\n    }\n\n    var isCube = renderTarget instanceof THREE.WebGLRenderTargetCube;\n    var framebuffer;\n\n    if (renderTarget) {\n      var renderTargetProperties = properties.get(renderTarget);\n\n      if (isCube) {\n        framebuffer = renderTargetProperties.__webglFramebuffer[renderTarget.activeCubeFace];\n      } else {\n        framebuffer = renderTargetProperties.__webglFramebuffer;\n      }\n\n      _currentScissor.copy(renderTarget.scissor);\n\n      _currentScissorTest = renderTarget.scissorTest;\n\n      _currentViewport.copy(renderTarget.viewport);\n    } else {\n      framebuffer = null;\n\n      _currentScissor.copy(_scissor).multiplyScalar(_pixelRatio);\n\n      _currentScissorTest = _scissorTest;\n\n      _currentViewport.copy(_viewport).multiplyScalar(_pixelRatio);\n    }\n\n    if (_currentFramebuffer !== framebuffer) {\n      _gl.bindFramebuffer(_gl.FRAMEBUFFER, framebuffer);\n\n      _currentFramebuffer = framebuffer;\n    }\n\n    state.scissor(_currentScissor);\n    state.setScissorTest(_currentScissorTest);\n    state.viewport(_currentViewport);\n\n    if (isCube) {\n      var textureProperties = properties.get(renderTarget.texture);\n\n      _gl.framebufferTexture2D(_gl.FRAMEBUFFER, _gl.COLOR_ATTACHMENT0, _gl.TEXTURE_CUBE_MAP_POSITIVE_X + renderTarget.activeCubeFace, textureProperties.__webglTexture, renderTarget.activeMipMapLevel);\n    }\n  };\n\n  this.readRenderTargetPixels = function (renderTarget, x, y, width, height, buffer) {\n    if (renderTarget instanceof THREE.WebGLRenderTarget === false) {\n      return;\n    }\n\n    var framebuffer = properties.get(renderTarget).__webglFramebuffer;\n\n    if (framebuffer) {\n      var restore = false;\n\n      if (framebuffer !== _currentFramebuffer) {\n        _gl.bindFramebuffer(_gl.FRAMEBUFFER, framebuffer);\n\n        restore = true;\n      }\n\n      try {\n        var texture = renderTarget.texture;\n\n        if (texture.format !== THREE.RGBAFormat && paramThreeToGL(texture.format) !== _gl.getParameter(_gl.IMPLEMENTATION_COLOR_READ_FORMAT)) {\n          return;\n        }\n\n        if (texture.type !== THREE.UnsignedByteType && paramThreeToGL(texture.type) !== _gl.getParameter(_gl.IMPLEMENTATION_COLOR_READ_TYPE) && !(texture.type === THREE.FloatType && extensions.get('WEBGL_color_buffer_float')) && !(texture.type === THREE.HalfFloatType && extensions.get('EXT_color_buffer_half_float'))) {\n          return;\n        }\n\n        if (_gl.checkFramebufferStatus(_gl.FRAMEBUFFER) === _gl.FRAMEBUFFER_COMPLETE) {\n          _gl.readPixels(x, y, width, height, paramThreeToGL(texture.format), paramThreeToGL(texture.type), buffer);\n        }\n      } finally {\n        if (restore) {\n          _gl.bindFramebuffer(_gl.FRAMEBUFFER, _currentFramebuffer);\n        }\n      }\n    }\n  };\n\n  function updateRenderTargetMipmap(renderTarget) {\n    var target = renderTarget instanceof THREE.WebGLRenderTargetCube ? _gl.TEXTURE_CUBE_MAP : _gl.TEXTURE_2D;\n\n    var texture = properties.get(renderTarget.texture).__webglTexture;\n\n    state.bindTexture(target, texture);\n\n    _gl.generateMipmap(target);\n\n    state.bindTexture(target, null);\n  } // Fallback filters for non-power-of-2 textures\n\n\n  function filterFallback(f) {\n    if (f === THREE.NearestFilter || f === THREE.NearestMipMapNearestFilter || f === THREE.NearestMipMapLinearFilter) {\n      return _gl.NEAREST;\n    }\n\n    return _gl.LINEAR;\n  } // Map three.js constants to WebGL constants\n\n\n  function paramThreeToGL(p) {\n    var extension;\n    if (p === THREE.RepeatWrapping) return _gl.REPEAT;\n    if (p === THREE.ClampToEdgeWrapping) return _gl.CLAMP_TO_EDGE;\n    if (p === THREE.MirroredRepeatWrapping) return _gl.MIRRORED_REPEAT;\n    if (p === THREE.NearestFilter) return _gl.NEAREST;\n    if (p === THREE.NearestMipMapNearestFilter) return _gl.NEAREST_MIPMAP_NEAREST;\n    if (p === THREE.NearestMipMapLinearFilter) return _gl.NEAREST_MIPMAP_LINEAR;\n    if (p === THREE.LinearFilter) return _gl.LINEAR;\n    if (p === THREE.LinearMipMapNearestFilter) return _gl.LINEAR_MIPMAP_NEAREST;\n    if (p === THREE.LinearMipMapLinearFilter) return _gl.LINEAR_MIPMAP_LINEAR;\n    if (p === THREE.UnsignedByteType) return _gl.UNSIGNED_BYTE;\n    if (p === THREE.UnsignedShort4444Type) return _gl.UNSIGNED_SHORT_4_4_4_4;\n    if (p === THREE.UnsignedShort5551Type) return _gl.UNSIGNED_SHORT_5_5_5_1;\n    if (p === THREE.UnsignedShort565Type) return _gl.UNSIGNED_SHORT_5_6_5;\n    if (p === THREE.ByteType) return _gl.BYTE;\n    if (p === THREE.ShortType) return _gl.SHORT;\n    if (p === THREE.UnsignedShortType) return _gl.UNSIGNED_SHORT;\n    if (p === THREE.IntType) return _gl.INT;\n    if (p === THREE.UnsignedIntType) return _gl.UNSIGNED_INT;\n    if (p === THREE.FloatType) return _gl.FLOAT;\n    extension = extensions.get('OES_texture_half_float');\n\n    if (extension !== null) {\n      if (p === THREE.HalfFloatType) return extension.HALF_FLOAT_OES;\n    }\n\n    if (p === THREE.AlphaFormat) return _gl.ALPHA;\n    if (p === THREE.RGBFormat) return _gl.RGB;\n    if (p === THREE.RGBAFormat) return _gl.RGBA;\n    if (p === THREE.LuminanceFormat) return _gl.LUMINANCE;\n    if (p === THREE.LuminanceAlphaFormat) return _gl.LUMINANCE_ALPHA;\n    if (p === THREE.AddEquation) return _gl.FUNC_ADD;\n    if (p === THREE.SubtractEquation) return _gl.FUNC_SUBTRACT;\n    if (p === THREE.ReverseSubtractEquation) return _gl.FUNC_REVERSE_SUBTRACT;\n    if (p === THREE.ZeroFactor) return _gl.ZERO;\n    if (p === THREE.OneFactor) return _gl.ONE;\n    if (p === THREE.SrcColorFactor) return _gl.SRC_COLOR;\n    if (p === THREE.OneMinusSrcColorFactor) return _gl.ONE_MINUS_SRC_COLOR;\n    if (p === THREE.SrcAlphaFactor) return _gl.SRC_ALPHA;\n    if (p === THREE.OneMinusSrcAlphaFactor) return _gl.ONE_MINUS_SRC_ALPHA;\n    if (p === THREE.DstAlphaFactor) return _gl.DST_ALPHA;\n    if (p === THREE.OneMinusDstAlphaFactor) return _gl.ONE_MINUS_DST_ALPHA;\n    if (p === THREE.DstColorFactor) return _gl.DST_COLOR;\n    if (p === THREE.OneMinusDstColorFactor) return _gl.ONE_MINUS_DST_COLOR;\n    if (p === THREE.SrcAlphaSaturateFactor) return _gl.SRC_ALPHA_SATURATE;\n    extension = extensions.get('WEBGL_compressed_texture_s3tc');\n\n    if (extension !== null) {\n      if (p === THREE.RGB_S3TC_DXT1_Format) return extension.COMPRESSED_RGB_S3TC_DXT1_EXT;\n      if (p === THREE.RGBA_S3TC_DXT1_Format) return extension.COMPRESSED_RGBA_S3TC_DXT1_EXT;\n      if (p === THREE.RGBA_S3TC_DXT3_Format) return extension.COMPRESSED_RGBA_S3TC_DXT3_EXT;\n      if (p === THREE.RGBA_S3TC_DXT5_Format) return extension.COMPRESSED_RGBA_S3TC_DXT5_EXT;\n    }\n\n    extension = extensions.get('WEBGL_compressed_texture_pvrtc');\n\n    if (extension !== null) {\n      if (p === THREE.RGB_PVRTC_4BPPV1_Format) return extension.COMPRESSED_RGB_PVRTC_4BPPV1_IMG;\n      if (p === THREE.RGB_PVRTC_2BPPV1_Format) return extension.COMPRESSED_RGB_PVRTC_2BPPV1_IMG;\n      if (p === THREE.RGBA_PVRTC_4BPPV1_Format) return extension.COMPRESSED_RGBA_PVRTC_4BPPV1_IMG;\n      if (p === THREE.RGBA_PVRTC_2BPPV1_Format) return extension.COMPRESSED_RGBA_PVRTC_2BPPV1_IMG;\n    }\n\n    extension = extensions.get('WEBGL_compressed_texture_etc1');\n\n    if (extension !== null) {\n      if (p === THREE.RGB_ETC1_Format) return extension.COMPRESSED_RGB_ETC1_WEBGL;\n    }\n\n    extension = extensions.get('EXT_blend_minmax');\n\n    if (extension !== null) {\n      if (p === THREE.MinEquation) return extension.MIN_EXT;\n      if (p === THREE.MaxEquation) return extension.MAX_EXT;\n    }\n\n    return 0;\n  }\n}; // File:src/renderers/webgl/WebGLExtensions.js\n\n/**\n* @author mrdoob / http://mrdoob.com/\n*/\n\n\nTHREE.WebGLExtensions = function (gl) {\n  var extensions = {};\n\n  this.get = function (name) {\n    if (extensions[name] !== undefined) {\n      return extensions[name];\n    }\n\n    var extension;\n\n    switch (name) {\n      case 'EXT_texture_filter_anisotropic':\n        extension = gl.getExtension('EXT_texture_filter_anisotropic') || gl.getExtension('MOZ_EXT_texture_filter_anisotropic') || gl.getExtension('WEBKIT_EXT_texture_filter_anisotropic');\n        break;\n\n      case 'WEBGL_compressed_texture_s3tc':\n        extension = gl.getExtension('WEBGL_compressed_texture_s3tc') || gl.getExtension('MOZ_WEBGL_compressed_texture_s3tc') || gl.getExtension('WEBKIT_WEBGL_compressed_texture_s3tc');\n        break;\n\n      case 'WEBGL_compressed_texture_pvrtc':\n        extension = gl.getExtension('WEBGL_compressed_texture_pvrtc') || gl.getExtension('WEBKIT_WEBGL_compressed_texture_pvrtc');\n        break;\n\n      case 'WEBGL_compressed_texture_etc1':\n        extension = gl.getExtension('WEBGL_compressed_texture_etc1');\n        break;\n\n      default:\n        extension = gl.getExtension(name);\n    }\n\n    extensions[name] = extension;\n    return extension;\n  };\n}; // File:src/renderers/webgl/WebGLCapabilities.js\n\n\nTHREE.WebGLCapabilities = function (gl, extensions, parameters) {\n  function getMaxPrecision(precision) {\n    if (precision === 'highp') {\n      if (gl.getShaderPrecisionFormat(gl.VERTEX_SHADER, gl.HIGH_FLOAT).precision > 0 && gl.getShaderPrecisionFormat(gl.FRAGMENT_SHADER, gl.HIGH_FLOAT).precision > 0) {\n        return 'highp';\n      }\n\n      precision = 'mediump';\n    }\n\n    if (precision === 'mediump') {\n      if (gl.getShaderPrecisionFormat(gl.VERTEX_SHADER, gl.MEDIUM_FLOAT).precision > 0 && gl.getShaderPrecisionFormat(gl.FRAGMENT_SHADER, gl.MEDIUM_FLOAT).precision > 0) {\n        return 'mediump';\n      }\n    }\n\n    return 'lowp';\n  }\n\n  this.getMaxPrecision = getMaxPrecision;\n  this.precision = parameters.precision !== undefined ? parameters.precision : 'highp', this.logarithmicDepthBuffer = parameters.logarithmicDepthBuffer !== undefined ? parameters.logarithmicDepthBuffer : false;\n  this.maxTextures = gl.getParameter(gl.MAX_TEXTURE_IMAGE_UNITS);\n  this.maxVertexTextures = gl.getParameter(gl.MAX_VERTEX_TEXTURE_IMAGE_UNITS);\n  this.maxTextureSize = gl.getParameter(gl.MAX_TEXTURE_SIZE);\n  this.maxCubemapSize = gl.getParameter(gl.MAX_CUBE_MAP_TEXTURE_SIZE);\n  this.maxAttributes = gl.getParameter(gl.MAX_VERTEX_ATTRIBS);\n  this.maxVertexUniforms = gl.getParameter(gl.MAX_VERTEX_UNIFORM_VECTORS);\n  this.maxVaryings = gl.getParameter(gl.MAX_VARYING_VECTORS);\n  this.maxFragmentUniforms = gl.getParameter(gl.MAX_FRAGMENT_UNIFORM_VECTORS);\n  this.vertexTextures = this.maxVertexTextures > 0;\n  this.floatFragmentTextures = !!extensions.get('OES_texture_float');\n  this.floatVertexTextures = this.vertexTextures && this.floatFragmentTextures;\n\n  var _maxPrecision = getMaxPrecision(this.precision);\n\n  if (_maxPrecision !== this.precision) {\n    this.precision = _maxPrecision;\n  }\n\n  if (this.logarithmicDepthBuffer) {\n    this.logarithmicDepthBuffer = !!extensions.get('EXT_frag_depth');\n  }\n}; // File:src/renderers/webgl/WebGLProperties.js\n\n/**\n* @author fordacious / fordacious.github.io\n*/\n\n\nTHREE.WebGLProperties = function () {\n  var properties = {};\n\n  this.get = function (object) {\n    var uuid = object.uuid;\n    var map = properties[uuid];\n\n    if (map === undefined) {\n      map = {};\n      properties[uuid] = map;\n    }\n\n    return map;\n  };\n\n  this.delete = function (object) {\n    delete properties[object.uuid];\n  };\n\n  this.clear = function () {\n    properties = {};\n  };\n}; // File:src/renderers/webgl/WebGLLights.js\n\n/**\n* @author mrdoob / http://mrdoob.com/\n*/\n\n\nTHREE.WebGLLights = function () {\n  var lights = {};\n\n  this.get = function (light) {\n    if (lights[light.id] !== undefined) {\n      return lights[light.id];\n    }\n\n    var uniforms;\n\n    switch (light.type) {\n      case 'DirectionalLight':\n        uniforms = {\n          direction: new THREE.Vector3(),\n          color: new THREE.Color(),\n          shadow: false,\n          shadowBias: 0,\n          shadowRadius: 1,\n          shadowMapSize: new THREE.Vector2()\n        };\n        break;\n\n      case 'SpotLight':\n        uniforms = {\n          position: new THREE.Vector3(),\n          direction: new THREE.Vector3(),\n          color: new THREE.Color(),\n          distance: 0,\n          coneCos: 0,\n          penumbraCos: 0,\n          decay: 0,\n          shadow: false,\n          shadowBias: 0,\n          shadowRadius: 1,\n          shadowMapSize: new THREE.Vector2()\n        };\n        break;\n\n      case 'PointLight':\n        uniforms = {\n          position: new THREE.Vector3(),\n          color: new THREE.Color(),\n          distance: 0,\n          decay: 0,\n          shadow: false,\n          shadowBias: 0,\n          shadowRadius: 1,\n          shadowMapSize: new THREE.Vector2()\n        };\n        break;\n\n      case 'HemisphereLight':\n        uniforms = {\n          direction: new THREE.Vector3(),\n          skyColor: new THREE.Color(),\n          groundColor: new THREE.Color()\n        };\n        break;\n    }\n\n    lights[light.id] = uniforms;\n    return uniforms;\n  };\n}; // File:src/renderers/webgl/WebGLState.js\n\n/**\n* @author mrdoob / http://mrdoob.com/\n*/\n\n\nTHREE.WebGLState = function (gl, extensions, paramThreeToGL) {\n  var _this = this;\n\n  var color = new THREE.Vector4();\n  var newAttributes = new Uint8Array(16);\n  var enabledAttributes = new Uint8Array(16);\n  var attributeDivisors = new Uint8Array(16);\n  var capabilities = {};\n  var compressedTextureFormats = null;\n  var currentBlending = null;\n  var currentBlendEquation = null;\n  var currentBlendSrc = null;\n  var currentBlendDst = null;\n  var currentBlendEquationAlpha = null;\n  var currentBlendSrcAlpha = null;\n  var currentBlendDstAlpha = null;\n  var currentPremultipledAlpha = false;\n  var currentDepthFunc = null;\n  var currentDepthWrite = null;\n  var currentColorWrite = null;\n  var currentStencilWrite = null;\n  var currentStencilFunc = null;\n  var currentStencilRef = null;\n  var currentStencilMask = null;\n  var currentStencilFail = null;\n  var currentStencilZFail = null;\n  var currentStencilZPass = null;\n  var currentFlipSided = null;\n  var currentLineWidth = null;\n  var currentPolygonOffsetFactor = null;\n  var currentPolygonOffsetUnits = null;\n  var currentScissorTest = null;\n  var maxTextures = gl.getParameter(gl.MAX_TEXTURE_IMAGE_UNITS);\n  var currentTextureSlot = undefined;\n  var currentBoundTextures = {};\n  var currentClearColor = new THREE.Vector4();\n  var currentClearDepth = null;\n  var currentClearStencil = null;\n  var currentScissor = new THREE.Vector4();\n  var currentViewport = new THREE.Vector4();\n  var emptyTexture = gl.createTexture();\n  gl.bindTexture(gl.TEXTURE_2D, emptyTexture);\n  gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_MIN_FILTER, gl.LINEAR);\n  gl.texImage2D(gl.TEXTURE_2D, 0, gl.RGB, 1, 1, 0, gl.RGB, gl.UNSIGNED_BYTE, new Uint8Array(3));\n\n  this.init = function () {\n    this.clearColor(0, 0, 0, 1);\n    this.clearDepth(1);\n    this.clearStencil(0);\n    this.enable(gl.DEPTH_TEST);\n    gl.depthFunc(gl.LEQUAL);\n    gl.frontFace(gl.CCW);\n    gl.cullFace(gl.BACK);\n    this.enable(gl.CULL_FACE);\n    this.enable(gl.BLEND);\n    gl.blendEquation(gl.FUNC_ADD);\n    gl.blendFunc(gl.SRC_ALPHA, gl.ONE_MINUS_SRC_ALPHA);\n  };\n\n  this.initAttributes = function () {\n    for (var i = 0, l = newAttributes.length; i < l; i++) {\n      newAttributes[i] = 0;\n    }\n  };\n\n  this.enableAttribute = function (attribute) {\n    newAttributes[attribute] = 1;\n\n    if (enabledAttributes[attribute] === 0) {\n      gl.enableVertexAttribArray(attribute);\n      enabledAttributes[attribute] = 1;\n    }\n\n    if (attributeDivisors[attribute] !== 0) {\n      var extension = extensions.get('ANGLE_instanced_arrays');\n      extension.vertexAttribDivisorANGLE(attribute, 0);\n      attributeDivisors[attribute] = 0;\n    }\n  };\n\n  this.enableAttributeAndDivisor = function (attribute, meshPerAttribute, extension) {\n    newAttributes[attribute] = 1;\n\n    if (enabledAttributes[attribute] === 0) {\n      gl.enableVertexAttribArray(attribute);\n      enabledAttributes[attribute] = 1;\n    }\n\n    if (attributeDivisors[attribute] !== meshPerAttribute) {\n      extension.vertexAttribDivisorANGLE(attribute, meshPerAttribute);\n      attributeDivisors[attribute] = meshPerAttribute;\n    }\n  };\n\n  this.disableUnusedAttributes = function () {\n    for (var i = 0, l = enabledAttributes.length; i < l; i++) {\n      if (enabledAttributes[i] !== newAttributes[i]) {\n        gl.disableVertexAttribArray(i);\n        enabledAttributes[i] = 0;\n      }\n    }\n  };\n\n  this.enable = function (id) {\n    if (capabilities[id] !== true) {\n      gl.enable(id);\n      capabilities[id] = true;\n    }\n  };\n\n  this.disable = function (id) {\n    if (capabilities[id] !== false) {\n      gl.disable(id);\n      capabilities[id] = false;\n    }\n  };\n\n  this.getCompressedTextureFormats = function () {\n    if (compressedTextureFormats === null) {\n      compressedTextureFormats = [];\n\n      if (extensions.get('WEBGL_compressed_texture_pvrtc') || extensions.get('WEBGL_compressed_texture_s3tc') || extensions.get('WEBGL_compressed_texture_etc1')) {\n        var formats = gl.getParameter(gl.COMPRESSED_TEXTURE_FORMATS);\n\n        for (var i = 0; i < formats.length; i++) {\n          compressedTextureFormats.push(formats[i]);\n        }\n      }\n    }\n\n    return compressedTextureFormats;\n  };\n\n  this.setBlending = function (blending, blendEquation, blendSrc, blendDst, blendEquationAlpha, blendSrcAlpha, blendDstAlpha, premultipliedAlpha) {\n    if (blending === THREE.NoBlending) {\n      this.disable(gl.BLEND);\n    } else {\n      this.enable(gl.BLEND);\n    }\n\n    if (blending !== currentBlending || premultipliedAlpha !== currentPremultipledAlpha) {\n      if (blending === THREE.AdditiveBlending) {\n        if (premultipliedAlpha) {\n          gl.blendEquationSeparate(gl.FUNC_ADD, gl.FUNC_ADD);\n          gl.blendFuncSeparate(gl.ONE, gl.ONE, gl.ONE, gl.ONE);\n        } else {\n          gl.blendEquation(gl.FUNC_ADD);\n          gl.blendFunc(gl.SRC_ALPHA, gl.ONE);\n        }\n      } else if (blending === THREE.SubtractiveBlending) {\n        if (premultipliedAlpha) {\n          gl.blendEquationSeparate(gl.FUNC_ADD, gl.FUNC_ADD);\n          gl.blendFuncSeparate(gl.ZERO, gl.ZERO, gl.ONE_MINUS_SRC_COLOR, gl.ONE_MINUS_SRC_ALPHA);\n        } else {\n          gl.blendEquation(gl.FUNC_ADD);\n          gl.blendFunc(gl.ZERO, gl.ONE_MINUS_SRC_COLOR);\n        }\n      } else if (blending === THREE.MultiplyBlending) {\n        if (premultipliedAlpha) {\n          gl.blendEquationSeparate(gl.FUNC_ADD, gl.FUNC_ADD);\n          gl.blendFuncSeparate(gl.ZERO, gl.ZERO, gl.SRC_COLOR, gl.SRC_ALPHA);\n        } else {\n          gl.blendEquation(gl.FUNC_ADD);\n          gl.blendFunc(gl.ZERO, gl.SRC_COLOR);\n        }\n      } else {\n        if (premultipliedAlpha) {\n          gl.blendEquationSeparate(gl.FUNC_ADD, gl.FUNC_ADD);\n          gl.blendFuncSeparate(gl.ONE, gl.ONE_MINUS_SRC_ALPHA, gl.ONE, gl.ONE_MINUS_SRC_ALPHA);\n        } else {\n          gl.blendEquationSeparate(gl.FUNC_ADD, gl.FUNC_ADD);\n          gl.blendFuncSeparate(gl.SRC_ALPHA, gl.ONE_MINUS_SRC_ALPHA, gl.ONE, gl.ONE_MINUS_SRC_ALPHA);\n        }\n      }\n\n      currentBlending = blending;\n      currentPremultipledAlpha = premultipliedAlpha;\n    }\n\n    if (blending === THREE.CustomBlending) {\n      blendEquationAlpha = blendEquationAlpha || blendEquation;\n      blendSrcAlpha = blendSrcAlpha || blendSrc;\n      blendDstAlpha = blendDstAlpha || blendDst;\n\n      if (blendEquation !== currentBlendEquation || blendEquationAlpha !== currentBlendEquationAlpha) {\n        gl.blendEquationSeparate(paramThreeToGL(blendEquation), paramThreeToGL(blendEquationAlpha));\n        currentBlendEquation = blendEquation;\n        currentBlendEquationAlpha = blendEquationAlpha;\n      }\n\n      if (blendSrc !== currentBlendSrc || blendDst !== currentBlendDst || blendSrcAlpha !== currentBlendSrcAlpha || blendDstAlpha !== currentBlendDstAlpha) {\n        gl.blendFuncSeparate(paramThreeToGL(blendSrc), paramThreeToGL(blendDst), paramThreeToGL(blendSrcAlpha), paramThreeToGL(blendDstAlpha));\n        currentBlendSrc = blendSrc;\n        currentBlendDst = blendDst;\n        currentBlendSrcAlpha = blendSrcAlpha;\n        currentBlendDstAlpha = blendDstAlpha;\n      }\n    } else {\n      currentBlendEquation = null;\n      currentBlendSrc = null;\n      currentBlendDst = null;\n      currentBlendEquationAlpha = null;\n      currentBlendSrcAlpha = null;\n      currentBlendDstAlpha = null;\n    }\n  };\n\n  this.setDepthFunc = function (depthFunc) {\n    if (currentDepthFunc !== depthFunc) {\n      if (depthFunc) {\n        switch (depthFunc) {\n          case THREE.NeverDepth:\n            gl.depthFunc(gl.NEVER);\n            break;\n\n          case THREE.AlwaysDepth:\n            gl.depthFunc(gl.ALWAYS);\n            break;\n\n          case THREE.LessDepth:\n            gl.depthFunc(gl.LESS);\n            break;\n\n          case THREE.LessEqualDepth:\n            gl.depthFunc(gl.LEQUAL);\n            break;\n\n          case THREE.EqualDepth:\n            gl.depthFunc(gl.EQUAL);\n            break;\n\n          case THREE.GreaterEqualDepth:\n            gl.depthFunc(gl.GEQUAL);\n            break;\n\n          case THREE.GreaterDepth:\n            gl.depthFunc(gl.GREATER);\n            break;\n\n          case THREE.NotEqualDepth:\n            gl.depthFunc(gl.NOTEQUAL);\n            break;\n\n          default:\n            gl.depthFunc(gl.LEQUAL);\n        }\n      } else {\n        gl.depthFunc(gl.LEQUAL);\n      }\n\n      currentDepthFunc = depthFunc;\n    }\n  };\n\n  this.setDepthTest = function (depthTest) {\n    if (depthTest) {\n      this.enable(gl.DEPTH_TEST);\n    } else {\n      this.disable(gl.DEPTH_TEST);\n    }\n  };\n\n  this.setDepthWrite = function (depthWrite) {\n    // TODO: Rename to setDepthMask\n    if (currentDepthWrite !== depthWrite) {\n      gl.depthMask(depthWrite);\n      currentDepthWrite = depthWrite;\n    }\n  };\n\n  this.setColorWrite = function (colorWrite) {\n    // TODO: Rename to setColorMask\n    if (currentColorWrite !== colorWrite) {\n      gl.colorMask(colorWrite, colorWrite, colorWrite, colorWrite);\n      currentColorWrite = colorWrite;\n    }\n  };\n\n  this.setStencilFunc = function (stencilFunc, stencilRef, stencilMask) {\n    if (currentStencilFunc !== stencilFunc || currentStencilRef !== stencilRef || currentStencilMask !== stencilMask) {\n      gl.stencilFunc(stencilFunc, stencilRef, stencilMask);\n      currentStencilFunc = stencilFunc;\n      currentStencilRef = stencilRef;\n      currentStencilMask = stencilMask;\n    }\n  };\n\n  this.setStencilOp = function (stencilFail, stencilZFail, stencilZPass) {\n    if (currentStencilFail !== stencilFail || currentStencilZFail !== stencilZFail || currentStencilZPass !== stencilZPass) {\n      gl.stencilOp(stencilFail, stencilZFail, stencilZPass);\n      currentStencilFail = stencilFail;\n      currentStencilZFail = stencilZFail;\n      currentStencilZPass = stencilZPass;\n    }\n  };\n\n  this.setStencilTest = function (stencilTest) {\n    if (stencilTest) {\n      this.enable(gl.STENCIL_TEST);\n    } else {\n      this.disable(gl.STENCIL_TEST);\n    }\n  };\n\n  this.setStencilWrite = function (stencilWrite) {\n    // TODO: Rename to setStencilMask\n    if (currentStencilWrite !== stencilWrite) {\n      gl.stencilMask(stencilWrite);\n      currentStencilWrite = stencilWrite;\n    }\n  };\n\n  this.setFlipSided = function (flipSided) {\n    if (currentFlipSided !== flipSided) {\n      if (flipSided) {\n        gl.frontFace(gl.CW);\n      } else {\n        gl.frontFace(gl.CCW);\n      }\n\n      currentFlipSided = flipSided;\n    }\n  };\n\n  this.setLineWidth = function (width) {\n    if (width !== currentLineWidth) {\n      gl.lineWidth(width);\n      currentLineWidth = width;\n    }\n  };\n\n  this.setPolygonOffset = function (polygonOffset, factor, units) {\n    if (polygonOffset) {\n      this.enable(gl.POLYGON_OFFSET_FILL);\n    } else {\n      this.disable(gl.POLYGON_OFFSET_FILL);\n    }\n\n    if (polygonOffset && (currentPolygonOffsetFactor !== factor || currentPolygonOffsetUnits !== units)) {\n      gl.polygonOffset(factor, units);\n      currentPolygonOffsetFactor = factor;\n      currentPolygonOffsetUnits = units;\n    }\n  };\n\n  this.getScissorTest = function () {\n    return currentScissorTest;\n  };\n\n  this.setScissorTest = function (scissorTest) {\n    currentScissorTest = scissorTest;\n\n    if (scissorTest) {\n      this.enable(gl.SCISSOR_TEST);\n    } else {\n      this.disable(gl.SCISSOR_TEST);\n    }\n  }; // texture\n\n\n  this.activeTexture = function (webglSlot) {\n    if (webglSlot === undefined) webglSlot = gl.TEXTURE0 + maxTextures - 1;\n\n    if (currentTextureSlot !== webglSlot) {\n      gl.activeTexture(webglSlot);\n      currentTextureSlot = webglSlot;\n    }\n  };\n\n  this.bindTexture = function (webglType, webglTexture) {\n    if (currentTextureSlot === undefined) {\n      _this.activeTexture();\n    }\n\n    var boundTexture = currentBoundTextures[currentTextureSlot];\n\n    if (boundTexture === undefined) {\n      boundTexture = {\n        type: undefined,\n        texture: undefined\n      };\n      currentBoundTextures[currentTextureSlot] = boundTexture;\n    }\n\n    if (boundTexture.type !== webglType || boundTexture.texture !== webglTexture) {\n      gl.bindTexture(webglType, webglTexture || emptyTexture);\n      boundTexture.type = webglType;\n      boundTexture.texture = webglTexture;\n    }\n  };\n\n  this.compressedTexImage2D = function () {\n    try {\n      gl.compressedTexImage2D.apply(gl, arguments);\n    } catch (error) {}\n  };\n\n  this.texImage2D = function () {\n    try {\n      gl.texImage2D.apply(gl, arguments);\n    } catch (error) {}\n  }; // clear values\n\n\n  this.clearColor = function (r, g, b, a) {\n    color.set(r, g, b, a);\n\n    if (currentClearColor.equals(color) === false) {\n      gl.clearColor(r, g, b, a);\n      currentClearColor.copy(color);\n    }\n  };\n\n  this.clearDepth = function (depth) {\n    if (currentClearDepth !== depth) {\n      gl.clearDepth(depth);\n      currentClearDepth = depth;\n    }\n  };\n\n  this.clearStencil = function (stencil) {\n    if (currentClearStencil !== stencil) {\n      gl.clearStencil(stencil);\n      currentClearStencil = stencil;\n    }\n  }; //\n\n\n  this.scissor = function (scissor) {\n    if (currentScissor.equals(scissor) === false) {\n      gl.scissor(scissor.x, scissor.y, scissor.z, scissor.w);\n      currentScissor.copy(scissor);\n    }\n  };\n\n  this.viewport = function (viewport) {\n    if (currentViewport.equals(viewport) === false) {\n      gl.viewport(viewport.x, viewport.y, viewport.z, viewport.w);\n      currentViewport.copy(viewport);\n    }\n  }; //\n\n\n  this.reset = function () {\n    for (var i = 0; i < enabledAttributes.length; i++) {\n      if (enabledAttributes[i] === 1) {\n        gl.disableVertexAttribArray(i);\n        enabledAttributes[i] = 0;\n      }\n    }\n\n    capabilities = {};\n    compressedTextureFormats = null;\n    currentTextureSlot = undefined;\n    currentBoundTextures = {};\n    currentBlending = null;\n    currentColorWrite = null;\n    currentDepthWrite = null;\n    currentStencilWrite = null;\n    currentFlipSided = null;\n  };\n}; // File:src/renderers/webgl/WebGLGeometries.js\n\n/**\n* @author mrdoob / http://mrdoob.com/\n*/\n\n\nTHREE.WebGLGeometries = function (gl, properties, info) {\n  var geometries = {};\n\n  function get(object) {\n    var geometry = object.geometry;\n\n    if (geometries[geometry.id] !== undefined) {\n      return geometries[geometry.id];\n    }\n\n    geometry.addEventListener('dispose', onGeometryDispose);\n    var buffergeometry;\n\n    if (geometry instanceof THREE.BufferGeometry) {\n      buffergeometry = geometry;\n    } else if (geometry instanceof THREE.Geometry) {\n      if (geometry._bufferGeometry === undefined) {\n        geometry._bufferGeometry = new THREE.BufferGeometry().setFromObject(object);\n      }\n\n      buffergeometry = geometry._bufferGeometry;\n    }\n\n    geometries[geometry.id] = buffergeometry;\n    info.memory.geometries++;\n    return buffergeometry;\n  }\n\n  function onGeometryDispose(event) {\n    var geometry = event.target;\n    var buffergeometry = geometries[geometry.id];\n\n    if (buffergeometry.index !== null) {\n      deleteAttribute(buffergeometry.index);\n    }\n\n    deleteAttributes(buffergeometry.attributes);\n    geometry.removeEventListener('dispose', onGeometryDispose);\n    delete geometries[geometry.id]; // TODO\n\n    var property = properties.get(geometry);\n\n    if (property.wireframe) {\n      deleteAttribute(property.wireframe);\n    }\n\n    properties.delete(geometry);\n    var bufferproperty = properties.get(buffergeometry);\n\n    if (bufferproperty.wireframe) {\n      deleteAttribute(bufferproperty.wireframe);\n    }\n\n    properties.delete(buffergeometry); //\n\n    info.memory.geometries--;\n  }\n\n  function getAttributeBuffer(attribute) {\n    if (attribute instanceof THREE.InterleavedBufferAttribute) {\n      return properties.get(attribute.data).__webglBuffer;\n    }\n\n    return properties.get(attribute).__webglBuffer;\n  }\n\n  function deleteAttribute(attribute) {\n    var buffer = getAttributeBuffer(attribute);\n\n    if (buffer !== undefined) {\n      gl.deleteBuffer(buffer);\n      removeAttributeBuffer(attribute);\n    }\n  }\n\n  function deleteAttributes(attributes) {\n    for (var name in attributes) {\n      deleteAttribute(attributes[name]);\n    }\n  }\n\n  function removeAttributeBuffer(attribute) {\n    if (attribute instanceof THREE.InterleavedBufferAttribute) {\n      properties.delete(attribute.data);\n    } else {\n      properties.delete(attribute);\n    }\n  }\n\n  this.get = get;\n}; // File:src/renderers/webgl/WebGLBufferRenderer.js\n\n/**\n* @author mrdoob / http://mrdoob.com/\n*/\n\n\nTHREE.WebGLBufferRenderer = function (_gl, extensions, _infoRender) {\n  var mode;\n\n  function setMode(value) {\n    mode = value;\n  }\n\n  function render(start, count) {\n    _gl.drawArrays(mode, start, count);\n\n    _infoRender.calls++;\n    _infoRender.vertices += count;\n    if (mode === _gl.TRIANGLES) _infoRender.faces += count / 3;\n  }\n\n  function renderInstances(geometry) {\n    var extension = extensions.get('ANGLE_instanced_arrays');\n\n    if (extension === null) {\n      return;\n    }\n\n    var position = geometry.attributes.position;\n    var count = 0;\n\n    if (position instanceof THREE.InterleavedBufferAttribute) {\n      count = position.data.count;\n      extension.drawArraysInstancedANGLE(mode, 0, count, geometry.maxInstancedCount);\n    } else {\n      count = position.count;\n      extension.drawArraysInstancedANGLE(mode, 0, count, geometry.maxInstancedCount);\n    }\n\n    _infoRender.calls++;\n    _infoRender.vertices += count * geometry.maxInstancedCount;\n    if (mode === _gl.TRIANGLES) _infoRender.faces += geometry.maxInstancedCount * count / 3;\n  }\n\n  this.setMode = setMode;\n  this.render = render;\n  this.renderInstances = renderInstances;\n}; // File:src/renderers/webgl/WebGLIndexedBufferRenderer.js\n\n/**\n* @author mrdoob / http://mrdoob.com/\n*/\n\n\nTHREE.WebGLIndexedBufferRenderer = function (_gl, extensions, _infoRender) {\n  var mode;\n\n  function setMode(value) {\n    mode = value;\n  }\n\n  var type, size;\n\n  function setIndex(index) {\n    if (index.array instanceof Uint32Array && extensions.get('OES_element_index_uint')) {\n      type = _gl.UNSIGNED_INT;\n      size = 4;\n    } else {\n      type = _gl.UNSIGNED_SHORT;\n      size = 2;\n    }\n  }\n\n  function render(start, count) {\n    _gl.drawElements(mode, count, type, start * size);\n\n    _infoRender.calls++;\n    _infoRender.vertices += count;\n    if (mode === _gl.TRIANGLES) _infoRender.faces += count / 3;\n  }\n\n  function renderInstances(geometry, start, count) {\n    var extension = extensions.get('ANGLE_instanced_arrays');\n\n    if (extension === null) {\n      return;\n    }\n\n    extension.drawElementsInstancedANGLE(mode, count, type, start * size, geometry.maxInstancedCount);\n    _infoRender.calls++;\n    _infoRender.vertices += count * geometry.maxInstancedCount;\n    if (mode === _gl.TRIANGLES) _infoRender.faces += geometry.maxInstancedCount * count / 3;\n  }\n\n  this.setMode = setMode;\n  this.setIndex = setIndex;\n  this.render = render;\n  this.renderInstances = renderInstances;\n}; // File:src/renderers/webgl/WebGLShader.js\n\n\nTHREE.WebGLShader = function () {\n  return function WebGLShader(gl, type, string) {\n    var shader = gl.createShader(type);\n    gl.shaderSource(shader, string);\n    gl.compileShader(shader);\n    if (gl.getShaderParameter(shader, gl.COMPILE_STATUS) === false) ;\n    if (gl.getShaderInfoLog(shader) !== '') ; // --enable-privileged-webgl-extension\n    // console.log( type, gl.getExtension( 'WEBGL_debug_shaders' ).getTranslatedShaderSource( shader ) );\n\n    return shader;\n  };\n}(); // File:src/renderers/webgl/WebGLShadowMap.js\n\n/**\n * @author alteredq / http://alteredqualia.com/\n * @author mrdoob / http://mrdoob.com/\n */\n\n\nTHREE.WebGLShadowMap = function (_renderer, _lights, _objects) {\n  var _gl = _renderer.context,\n      _state = _renderer.state,\n      _frustum = new THREE.Frustum(),\n      _projScreenMatrix = new THREE.Matrix4(),\n      _shadowMapSize = new THREE.Vector2(),\n      _lookTarget = new THREE.Vector3(),\n      _lightPositionWorld = new THREE.Vector3(),\n      _renderList = [],\n      _MorphingFlag = 1,\n      _SkinningFlag = 2,\n      _NumberOfMaterialVariants = (_MorphingFlag | _SkinningFlag) + 1,\n      _depthMaterials = new Array(_NumberOfMaterialVariants),\n      _distanceMaterials = new Array(_NumberOfMaterialVariants);\n\n  var cubeDirections = [new THREE.Vector3(1, 0, 0), new THREE.Vector3(-1, 0, 0), new THREE.Vector3(0, 0, 1), new THREE.Vector3(0, 0, -1), new THREE.Vector3(0, 1, 0), new THREE.Vector3(0, -1, 0)];\n  var cubeUps = [new THREE.Vector3(0, 1, 0), new THREE.Vector3(0, 1, 0), new THREE.Vector3(0, 1, 0), new THREE.Vector3(0, 1, 0), new THREE.Vector3(0, 0, 1), new THREE.Vector3(0, 0, -1)];\n  var cube2DViewPorts = [new THREE.Vector4(), new THREE.Vector4(), new THREE.Vector4(), new THREE.Vector4(), new THREE.Vector4(), new THREE.Vector4()]; // init\n\n  var depthShader = THREE.ShaderLib[\"depthRGBA\"];\n  var depthUniforms = THREE.UniformsUtils.clone(depthShader.uniforms);\n  var distanceShader = THREE.ShaderLib[\"distanceRGBA\"];\n  var distanceUniforms = THREE.UniformsUtils.clone(distanceShader.uniforms);\n\n  for (var i = 0; i !== _NumberOfMaterialVariants; ++i) {\n    var useMorphing = (i & _MorphingFlag) !== 0;\n    var useSkinning = (i & _SkinningFlag) !== 0;\n    var depthMaterial = new THREE.ShaderMaterial({\n      uniforms: depthUniforms,\n      vertexShader: depthShader.vertexShader,\n      fragmentShader: depthShader.fragmentShader,\n      morphTargets: useMorphing,\n      skinning: useSkinning\n    });\n    _depthMaterials[i] = depthMaterial;\n    var distanceMaterial = new THREE.ShaderMaterial({\n      defines: {\n        'USE_SHADOWMAP': ''\n      },\n      uniforms: distanceUniforms,\n      vertexShader: distanceShader.vertexShader,\n      fragmentShader: distanceShader.fragmentShader,\n      morphTargets: useMorphing,\n      skinning: useSkinning\n    });\n    _distanceMaterials[i] = distanceMaterial;\n  } //\n\n\n  var scope = this;\n  this.enabled = false;\n  this.autoUpdate = true;\n  this.needsUpdate = false;\n  this.type = THREE.PCFShadowMap;\n  this.cullFace = THREE.CullFaceFront;\n\n  this.render = function (scene, camera) {\n    var faceCount, isPointLight;\n    var shadows = _lights.shadows;\n    if (shadows.length === 0) return;\n    if (scope.enabled === false) return;\n    if (scope.autoUpdate === false && scope.needsUpdate === false) return; // Set GL state for depth map.\n\n    _state.clearColor(1, 1, 1, 1);\n\n    _state.disable(_gl.BLEND);\n\n    _state.enable(_gl.CULL_FACE);\n\n    _gl.frontFace(_gl.CCW);\n\n    _gl.cullFace(scope.cullFace === THREE.CullFaceFront ? _gl.FRONT : _gl.BACK);\n\n    _state.setDepthTest(true);\n\n    _state.setScissorTest(false); // render depth map\n\n\n    for (var i = 0, il = shadows.length; i < il; i++) {\n      var light = shadows[i];\n      var shadow = light.shadow;\n      var shadowCamera = shadow.camera;\n\n      _shadowMapSize.copy(shadow.mapSize);\n\n      if (light instanceof THREE.PointLight) {\n        faceCount = 6;\n        isPointLight = true;\n        var vpWidth = _shadowMapSize.x;\n        var vpHeight = _shadowMapSize.y; // These viewports map a cube-map onto a 2D texture with the\n        // following orientation:\n        //\n        //  xzXZ\n        //   y Y\n        //\n        // X - Positive x direction\n        // x - Negative x direction\n        // Y - Positive y direction\n        // y - Negative y direction\n        // Z - Positive z direction\n        // z - Negative z direction\n        // positive X\n\n        cube2DViewPorts[0].set(vpWidth * 2, vpHeight, vpWidth, vpHeight); // negative X\n\n        cube2DViewPorts[1].set(0, vpHeight, vpWidth, vpHeight); // positive Z\n\n        cube2DViewPorts[2].set(vpWidth * 3, vpHeight, vpWidth, vpHeight); // negative Z\n\n        cube2DViewPorts[3].set(vpWidth, vpHeight, vpWidth, vpHeight); // positive Y\n\n        cube2DViewPorts[4].set(vpWidth * 3, 0, vpWidth, vpHeight); // negative Y\n\n        cube2DViewPorts[5].set(vpWidth, 0, vpWidth, vpHeight);\n        _shadowMapSize.x *= 4.0;\n        _shadowMapSize.y *= 2.0;\n      } else {\n        faceCount = 1;\n        isPointLight = false;\n      }\n\n      if (shadow.map === null) {\n        var pars = {\n          minFilter: THREE.NearestFilter,\n          magFilter: THREE.NearestFilter,\n          format: THREE.RGBAFormat\n        };\n        shadow.map = new THREE.WebGLRenderTarget(_shadowMapSize.x, _shadowMapSize.y, pars); //\n\n        if (light instanceof THREE.SpotLight) {\n          shadowCamera.aspect = _shadowMapSize.x / _shadowMapSize.y;\n        }\n\n        shadowCamera.updateProjectionMatrix();\n      }\n\n      var shadowMap = shadow.map;\n      var shadowMatrix = shadow.matrix;\n\n      _lightPositionWorld.setFromMatrixPosition(light.matrixWorld);\n\n      shadowCamera.position.copy(_lightPositionWorld);\n\n      _renderer.setRenderTarget(shadowMap);\n\n      _renderer.clear(); // render shadow map for each cube face (if omni-directional) or\n      // run a single pass if not\n\n\n      for (var face = 0; face < faceCount; face++) {\n        if (isPointLight) {\n          _lookTarget.copy(shadowCamera.position);\n\n          _lookTarget.add(cubeDirections[face]);\n\n          shadowCamera.up.copy(cubeUps[face]);\n          shadowCamera.lookAt(_lookTarget);\n          var vpDimensions = cube2DViewPorts[face];\n\n          _state.viewport(vpDimensions);\n        } else {\n          _lookTarget.setFromMatrixPosition(light.target.matrixWorld);\n\n          shadowCamera.lookAt(_lookTarget);\n        }\n\n        shadowCamera.updateMatrixWorld();\n        shadowCamera.matrixWorldInverse.getInverse(shadowCamera.matrixWorld); // compute shadow matrix\n\n        shadowMatrix.set(0.5, 0.0, 0.0, 0.5, 0.0, 0.5, 0.0, 0.5, 0.0, 0.0, 0.5, 0.5, 0.0, 0.0, 0.0, 1.0);\n        shadowMatrix.multiply(shadowCamera.projectionMatrix);\n        shadowMatrix.multiply(shadowCamera.matrixWorldInverse); // update camera matrices and frustum\n\n        _projScreenMatrix.multiplyMatrices(shadowCamera.projectionMatrix, shadowCamera.matrixWorldInverse);\n\n        _frustum.setFromMatrix(_projScreenMatrix); // set object matrices & frustum culling\n\n\n        _renderList.length = 0;\n        projectObject(scene, camera, shadowCamera); // render shadow map\n        // render regular objects\n\n        for (var j = 0, jl = _renderList.length; j < jl; j++) {\n          var object = _renderList[j];\n\n          var geometry = _objects.update(object);\n\n          var material = object.material;\n\n          if (material instanceof THREE.MultiMaterial) {\n            var groups = geometry.groups;\n            var materials = material.materials;\n\n            for (var k = 0, kl = groups.length; k < kl; k++) {\n              var group = groups[k];\n              var groupMaterial = materials[group.materialIndex];\n\n              if (groupMaterial.visible === true) {\n                var depthMaterial = getDepthMaterial(object, groupMaterial, isPointLight, _lightPositionWorld);\n\n                _renderer.renderBufferDirect(shadowCamera, null, geometry, depthMaterial, object, group);\n              }\n            }\n          } else {\n            var depthMaterial = getDepthMaterial(object, material, isPointLight, _lightPositionWorld);\n\n            _renderer.renderBufferDirect(shadowCamera, null, geometry, depthMaterial, object, null);\n          }\n        }\n      }\n    } // Restore GL state.\n\n\n    var clearColor = _renderer.getClearColor(),\n        clearAlpha = _renderer.getClearAlpha();\n\n    _renderer.setClearColor(clearColor, clearAlpha);\n\n    _state.enable(_gl.BLEND);\n\n    if (scope.cullFace === THREE.CullFaceFront) {\n      _gl.cullFace(_gl.BACK);\n    }\n\n    scope.needsUpdate = false;\n  };\n\n  function getDepthMaterial(object, material, isPointLight, lightPositionWorld) {\n    var geometry = object.geometry;\n    var newMaterial = null;\n    var materialVariants = _depthMaterials;\n    var customMaterial = object.customDepthMaterial;\n\n    if (isPointLight) {\n      materialVariants = _distanceMaterials;\n      customMaterial = object.customDistanceMaterial;\n    }\n\n    if (!customMaterial) {\n      var useMorphing = geometry.morphTargets !== undefined && geometry.morphTargets.length > 0 && material.morphTargets;\n      var useSkinning = object instanceof THREE.SkinnedMesh && material.skinning;\n      var variantIndex = 0;\n      if (useMorphing) variantIndex |= _MorphingFlag;\n      if (useSkinning) variantIndex |= _SkinningFlag;\n      newMaterial = materialVariants[variantIndex];\n    } else {\n      newMaterial = customMaterial;\n    }\n\n    newMaterial.visible = material.visible;\n    newMaterial.wireframe = material.wireframe;\n    newMaterial.wireframeLinewidth = material.wireframeLinewidth;\n\n    if (isPointLight && newMaterial.uniforms.lightPos !== undefined) {\n      newMaterial.uniforms.lightPos.value.copy(lightPositionWorld);\n    }\n\n    return newMaterial;\n  }\n\n  function projectObject(object, camera, shadowCamera) {\n    if (object.visible === false) return;\n\n    if (object.layers.test(camera.layers) && (object instanceof THREE.Mesh || object instanceof THREE.Line || object instanceof THREE.Points)) {\n      if (object.castShadow && (object.frustumCulled === false || _frustum.intersectsObject(object) === true)) {\n        var material = object.material;\n\n        if (material.visible === true) {\n          object.modelViewMatrix.multiplyMatrices(shadowCamera.matrixWorldInverse, object.matrixWorld);\n\n          _renderList.push(object);\n        }\n      }\n    }\n\n    var children = object.children;\n\n    for (var i = 0, l = children.length; i < l; i++) {\n      projectObject(children[i], camera, shadowCamera);\n    }\n  }\n}; // File:src/renderers/webgl/plugins/SpritePlugin.js\n\n/**\n * @author mikael emtinger / http://gomo.se/\n * @author alteredq / http://alteredqualia.com/\n */\n\n\nTHREE.SpritePlugin = function (renderer, sprites) {\n  var gl = renderer.context;\n  var state = renderer.state;\n  var vertexBuffer, elementBuffer;\n  var program, attributes, uniforms;\n  var texture; // decompose matrixWorld\n\n  var spritePosition = new THREE.Vector3();\n  var spriteRotation = new THREE.Quaternion();\n  var spriteScale = new THREE.Vector3();\n\n  function init() {\n    var vertices = new Float32Array([-0.5, -0.5, 0, 0, 0.5, -0.5, 1, 0, 0.5, 0.5, 1, 1, -0.5, 0.5, 0, 1]);\n    var faces = new Uint16Array([0, 1, 2, 0, 2, 3]);\n    vertexBuffer = gl.createBuffer();\n    elementBuffer = gl.createBuffer();\n    gl.bindBuffer(gl.ARRAY_BUFFER, vertexBuffer);\n    gl.bufferData(gl.ARRAY_BUFFER, vertices, gl.STATIC_DRAW);\n    gl.bindBuffer(gl.ELEMENT_ARRAY_BUFFER, elementBuffer);\n    gl.bufferData(gl.ELEMENT_ARRAY_BUFFER, faces, gl.STATIC_DRAW);\n    program = createProgram();\n    attributes = {\n      position: gl.getAttribLocation(program, 'position'),\n      uv: gl.getAttribLocation(program, 'uv')\n    };\n    uniforms = {\n      uvOffset: gl.getUniformLocation(program, 'uvOffset'),\n      uvScale: gl.getUniformLocation(program, 'uvScale'),\n      rotation: gl.getUniformLocation(program, 'rotation'),\n      scale: gl.getUniformLocation(program, 'scale'),\n      color: gl.getUniformLocation(program, 'color'),\n      map: gl.getUniformLocation(program, 'map'),\n      opacity: gl.getUniformLocation(program, 'opacity'),\n      modelViewMatrix: gl.getUniformLocation(program, 'modelViewMatrix'),\n      projectionMatrix: gl.getUniformLocation(program, 'projectionMatrix'),\n      fogType: gl.getUniformLocation(program, 'fogType'),\n      fogDensity: gl.getUniformLocation(program, 'fogDensity'),\n      fogNear: gl.getUniformLocation(program, 'fogNear'),\n      fogFar: gl.getUniformLocation(program, 'fogFar'),\n      fogColor: gl.getUniformLocation(program, 'fogColor'),\n      alphaTest: gl.getUniformLocation(program, 'alphaTest')\n    };\n    var canvas = document.createElement('canvas');\n    canvas.width = 8;\n    canvas.height = 8;\n    var context = canvas.getContext('2d');\n    context.fillStyle = 'white';\n    context.fillRect(0, 0, 8, 8);\n    texture = new THREE.Texture(canvas);\n    texture.needsUpdate = true;\n  }\n\n  this.render = function (scene, camera) {\n    if (sprites.length === 0) return; // setup gl\n\n    if (program === undefined) {\n      init();\n    }\n\n    gl.useProgram(program);\n    state.initAttributes();\n    state.enableAttribute(attributes.position);\n    state.enableAttribute(attributes.uv);\n    state.disableUnusedAttributes();\n    state.disable(gl.CULL_FACE);\n    state.enable(gl.BLEND);\n    gl.bindBuffer(gl.ARRAY_BUFFER, vertexBuffer);\n    gl.vertexAttribPointer(attributes.position, 2, gl.FLOAT, false, 2 * 8, 0);\n    gl.vertexAttribPointer(attributes.uv, 2, gl.FLOAT, false, 2 * 8, 8);\n    gl.bindBuffer(gl.ELEMENT_ARRAY_BUFFER, elementBuffer);\n    gl.uniformMatrix4fv(uniforms.projectionMatrix, false, camera.projectionMatrix.elements);\n    state.activeTexture(gl.TEXTURE0);\n    gl.uniform1i(uniforms.map, 0);\n    var oldFogType = 0;\n    var sceneFogType = 0;\n    var fog = scene.fog;\n\n    if (fog) {\n      gl.uniform3f(uniforms.fogColor, fog.color.r, fog.color.g, fog.color.b);\n\n      if (fog instanceof THREE.Fog) {\n        gl.uniform1f(uniforms.fogNear, fog.near);\n        gl.uniform1f(uniforms.fogFar, fog.far);\n        gl.uniform1i(uniforms.fogType, 1);\n        oldFogType = 1;\n        sceneFogType = 1;\n      } else if (fog instanceof THREE.FogExp2) {\n        gl.uniform1f(uniforms.fogDensity, fog.density);\n        gl.uniform1i(uniforms.fogType, 2);\n        oldFogType = 2;\n        sceneFogType = 2;\n      }\n    } else {\n      gl.uniform1i(uniforms.fogType, 0);\n      oldFogType = 0;\n      sceneFogType = 0;\n    } // update positions and sort\n\n\n    for (var i = 0, l = sprites.length; i < l; i++) {\n      var sprite = sprites[i];\n      sprite.modelViewMatrix.multiplyMatrices(camera.matrixWorldInverse, sprite.matrixWorld);\n      sprite.z = -sprite.modelViewMatrix.elements[14];\n    }\n\n    sprites.sort(painterSortStable); // render all sprites\n\n    var scale = [];\n\n    for (var i = 0, l = sprites.length; i < l; i++) {\n      var sprite = sprites[i];\n      var material = sprite.material;\n      gl.uniform1f(uniforms.alphaTest, material.alphaTest);\n      gl.uniformMatrix4fv(uniforms.modelViewMatrix, false, sprite.modelViewMatrix.elements);\n      sprite.matrixWorld.decompose(spritePosition, spriteRotation, spriteScale);\n      scale[0] = spriteScale.x;\n      scale[1] = spriteScale.y;\n      var fogType = 0;\n\n      if (scene.fog && material.fog) {\n        fogType = sceneFogType;\n      }\n\n      if (oldFogType !== fogType) {\n        gl.uniform1i(uniforms.fogType, fogType);\n        oldFogType = fogType;\n      }\n\n      if (material.map !== null) {\n        gl.uniform2f(uniforms.uvOffset, material.map.offset.x, material.map.offset.y);\n        gl.uniform2f(uniforms.uvScale, material.map.repeat.x, material.map.repeat.y);\n      } else {\n        gl.uniform2f(uniforms.uvOffset, 0, 0);\n        gl.uniform2f(uniforms.uvScale, 1, 1);\n      }\n\n      gl.uniform1f(uniforms.opacity, material.opacity);\n      gl.uniform3f(uniforms.color, material.color.r, material.color.g, material.color.b);\n      gl.uniform1f(uniforms.rotation, material.rotation);\n      gl.uniform2fv(uniforms.scale, scale);\n      state.setBlending(material.blending, material.blendEquation, material.blendSrc, material.blendDst);\n      state.setDepthTest(material.depthTest);\n      state.setDepthWrite(material.depthWrite);\n\n      if (material.map && material.map.image && material.map.image.width) {\n        renderer.setTexture(material.map, 0);\n      } else {\n        renderer.setTexture(texture, 0);\n      }\n\n      gl.drawElements(gl.TRIANGLES, 6, gl.UNSIGNED_SHORT, 0);\n    } // restore gl\n\n\n    state.enable(gl.CULL_FACE);\n    renderer.resetGLState();\n  };\n\n  function createProgram() {\n    var program = gl.createProgram();\n    var vertexShader = gl.createShader(gl.VERTEX_SHADER);\n    var fragmentShader = gl.createShader(gl.FRAGMENT_SHADER);\n    gl.shaderSource(vertexShader, ['precision ' + renderer.getPrecision() + ' float;', 'uniform mat4 modelViewMatrix;', 'uniform mat4 projectionMatrix;', 'uniform float rotation;', 'uniform vec2 scale;', 'uniform vec2 uvOffset;', 'uniform vec2 uvScale;', 'attribute vec2 position;', 'attribute vec2 uv;', 'varying vec2 vUV;', 'void main() {', 'vUV = uvOffset + uv * uvScale;', 'vec2 alignedPosition = position * scale;', 'vec2 rotatedPosition;', 'rotatedPosition.x = cos( rotation ) * alignedPosition.x - sin( rotation ) * alignedPosition.y;', 'rotatedPosition.y = sin( rotation ) * alignedPosition.x + cos( rotation ) * alignedPosition.y;', 'vec4 finalPosition;', 'finalPosition = modelViewMatrix * vec4( 0.0, 0.0, 0.0, 1.0 );', 'finalPosition.xy += rotatedPosition;', 'finalPosition = projectionMatrix * finalPosition;', 'gl_Position = finalPosition;', '}'].join('\\n'));\n    gl.shaderSource(fragmentShader, ['precision ' + renderer.getPrecision() + ' float;', 'uniform vec3 color;', 'uniform sampler2D map;', 'uniform float opacity;', 'uniform int fogType;', 'uniform vec3 fogColor;', 'uniform float fogDensity;', 'uniform float fogNear;', 'uniform float fogFar;', 'uniform float alphaTest;', 'varying vec2 vUV;', 'void main() {', 'vec4 texture = texture2D( map, vUV );', 'if ( texture.a < alphaTest ) discard;', 'gl_FragColor = vec4( color * texture.xyz, texture.a * opacity );', 'if ( fogType > 0 ) {', 'float depth = gl_FragCoord.z / gl_FragCoord.w;', 'float fogFactor = 0.0;', 'if ( fogType == 1 ) {', 'fogFactor = smoothstep( fogNear, fogFar, depth );', '} else {', 'const float LOG2 = 1.442695;', 'fogFactor = exp2( - fogDensity * fogDensity * depth * depth * LOG2 );', 'fogFactor = 1.0 - clamp( fogFactor, 0.0, 1.0 );', '}', 'gl_FragColor = mix( gl_FragColor, vec4( fogColor, gl_FragColor.w ), fogFactor );', '}', '}'].join('\\n'));\n    gl.compileShader(vertexShader);\n    gl.compileShader(fragmentShader);\n    gl.attachShader(program, vertexShader);\n    gl.attachShader(program, fragmentShader);\n    gl.linkProgram(program);\n    return program;\n  }\n\n  function painterSortStable(a, b) {\n    if (a.renderOrder !== b.renderOrder) {\n      return a.renderOrder - b.renderOrder;\n    } else if (a.z !== b.z) {\n      return b.z - a.z;\n    } else {\n      return b.id - a.id;\n    }\n  }\n}; // File:src/renderers/webgl/plugins/LensFlarePlugin.js\n\n/**\n * @author mikael emtinger / http://gomo.se/\n * @author alteredq / http://alteredqualia.com/\n */\n\n\nTHREE.LensFlarePlugin = function (renderer, flares) {\n  var gl = renderer.context;\n  var state = renderer.state;\n  var vertexBuffer, elementBuffer;\n  var program, attributes, uniforms;\n  var hasVertexTexture;\n  var tempTexture, occlusionTexture;\n\n  function init() {\n    var vertices = new Float32Array([-1, -1, 0, 0, 1, -1, 1, 0, 1, 1, 1, 1, -1, 1, 0, 1]);\n    var faces = new Uint16Array([0, 1, 2, 0, 2, 3]); // buffers\n\n    vertexBuffer = gl.createBuffer();\n    elementBuffer = gl.createBuffer();\n    gl.bindBuffer(gl.ARRAY_BUFFER, vertexBuffer);\n    gl.bufferData(gl.ARRAY_BUFFER, vertices, gl.STATIC_DRAW);\n    gl.bindBuffer(gl.ELEMENT_ARRAY_BUFFER, elementBuffer);\n    gl.bufferData(gl.ELEMENT_ARRAY_BUFFER, faces, gl.STATIC_DRAW); // textures\n\n    tempTexture = gl.createTexture();\n    occlusionTexture = gl.createTexture();\n    state.bindTexture(gl.TEXTURE_2D, tempTexture);\n    gl.texImage2D(gl.TEXTURE_2D, 0, gl.RGB, 16, 16, 0, gl.RGB, gl.UNSIGNED_BYTE, null);\n    gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_WRAP_S, gl.CLAMP_TO_EDGE);\n    gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_WRAP_T, gl.CLAMP_TO_EDGE);\n    gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_MAG_FILTER, gl.NEAREST);\n    gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_MIN_FILTER, gl.NEAREST);\n    state.bindTexture(gl.TEXTURE_2D, occlusionTexture);\n    gl.texImage2D(gl.TEXTURE_2D, 0, gl.RGBA, 16, 16, 0, gl.RGBA, gl.UNSIGNED_BYTE, null);\n    gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_WRAP_S, gl.CLAMP_TO_EDGE);\n    gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_WRAP_T, gl.CLAMP_TO_EDGE);\n    gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_MAG_FILTER, gl.NEAREST);\n    gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_MIN_FILTER, gl.NEAREST);\n    hasVertexTexture = gl.getParameter(gl.MAX_VERTEX_TEXTURE_IMAGE_UNITS) > 0;\n    var shader;\n\n    if (hasVertexTexture) {\n      shader = {\n        vertexShader: [\"uniform lowp int renderType;\", \"uniform vec3 screenPosition;\", \"uniform vec2 scale;\", \"uniform float rotation;\", \"uniform sampler2D occlusionMap;\", \"attribute vec2 position;\", \"attribute vec2 uv;\", \"varying vec2 vUV;\", \"varying float vVisibility;\", \"void main() {\", \"vUV = uv;\", \"vec2 pos = position;\", \"if ( renderType == 2 ) {\", \"vec4 visibility = texture2D( occlusionMap, vec2( 0.1, 0.1 ) );\", \"visibility += texture2D( occlusionMap, vec2( 0.5, 0.1 ) );\", \"visibility += texture2D( occlusionMap, vec2( 0.9, 0.1 ) );\", \"visibility += texture2D( occlusionMap, vec2( 0.9, 0.5 ) );\", \"visibility += texture2D( occlusionMap, vec2( 0.9, 0.9 ) );\", \"visibility += texture2D( occlusionMap, vec2( 0.5, 0.9 ) );\", \"visibility += texture2D( occlusionMap, vec2( 0.1, 0.9 ) );\", \"visibility += texture2D( occlusionMap, vec2( 0.1, 0.5 ) );\", \"visibility += texture2D( occlusionMap, vec2( 0.5, 0.5 ) );\", \"vVisibility =        visibility.r / 9.0;\", \"vVisibility *= 1.0 - visibility.g / 9.0;\", \"vVisibility *=       visibility.b / 9.0;\", \"vVisibility *= 1.0 - visibility.a / 9.0;\", \"pos.x = cos( rotation ) * position.x - sin( rotation ) * position.y;\", \"pos.y = sin( rotation ) * position.x + cos( rotation ) * position.y;\", \"}\", \"gl_Position = vec4( ( pos * scale + screenPosition.xy ).xy, screenPosition.z, 1.0 );\", \"}\"].join(\"\\n\"),\n        fragmentShader: [\"uniform lowp int renderType;\", \"uniform sampler2D map;\", \"uniform float opacity;\", \"uniform vec3 color;\", \"varying vec2 vUV;\", \"varying float vVisibility;\", \"void main() {\", // pink square\n        \"if ( renderType == 0 ) {\", \"gl_FragColor = vec4( 1.0, 0.0, 1.0, 0.0 );\", // restore\n        \"} else if ( renderType == 1 ) {\", \"gl_FragColor = texture2D( map, vUV );\", // flare\n        \"} else {\", \"vec4 texture = texture2D( map, vUV );\", \"texture.a *= opacity * vVisibility;\", \"gl_FragColor = texture;\", \"gl_FragColor.rgb *= color;\", \"}\", \"}\"].join(\"\\n\")\n      };\n    } else {\n      shader = {\n        vertexShader: [\"uniform lowp int renderType;\", \"uniform vec3 screenPosition;\", \"uniform vec2 scale;\", \"uniform float rotation;\", \"attribute vec2 position;\", \"attribute vec2 uv;\", \"varying vec2 vUV;\", \"void main() {\", \"vUV = uv;\", \"vec2 pos = position;\", \"if ( renderType == 2 ) {\", \"pos.x = cos( rotation ) * position.x - sin( rotation ) * position.y;\", \"pos.y = sin( rotation ) * position.x + cos( rotation ) * position.y;\", \"}\", \"gl_Position = vec4( ( pos * scale + screenPosition.xy ).xy, screenPosition.z, 1.0 );\", \"}\"].join(\"\\n\"),\n        fragmentShader: [\"precision mediump float;\", \"uniform lowp int renderType;\", \"uniform sampler2D map;\", \"uniform sampler2D occlusionMap;\", \"uniform float opacity;\", \"uniform vec3 color;\", \"varying vec2 vUV;\", \"void main() {\", // pink square\n        \"if ( renderType == 0 ) {\", \"gl_FragColor = vec4( texture2D( map, vUV ).rgb, 0.0 );\", // restore\n        \"} else if ( renderType == 1 ) {\", \"gl_FragColor = texture2D( map, vUV );\", // flare\n        \"} else {\", \"float visibility = texture2D( occlusionMap, vec2( 0.5, 0.1 ) ).a;\", \"visibility += texture2D( occlusionMap, vec2( 0.9, 0.5 ) ).a;\", \"visibility += texture2D( occlusionMap, vec2( 0.5, 0.9 ) ).a;\", \"visibility += texture2D( occlusionMap, vec2( 0.1, 0.5 ) ).a;\", \"visibility = ( 1.0 - visibility / 4.0 );\", \"vec4 texture = texture2D( map, vUV );\", \"texture.a *= opacity * visibility;\", \"gl_FragColor = texture;\", \"gl_FragColor.rgb *= color;\", \"}\", \"}\"].join(\"\\n\")\n      };\n    }\n\n    program = createProgram(shader);\n    attributes = {\n      vertex: gl.getAttribLocation(program, \"position\"),\n      uv: gl.getAttribLocation(program, \"uv\")\n    };\n    uniforms = {\n      renderType: gl.getUniformLocation(program, \"renderType\"),\n      map: gl.getUniformLocation(program, \"map\"),\n      occlusionMap: gl.getUniformLocation(program, \"occlusionMap\"),\n      opacity: gl.getUniformLocation(program, \"opacity\"),\n      color: gl.getUniformLocation(program, \"color\"),\n      scale: gl.getUniformLocation(program, \"scale\"),\n      rotation: gl.getUniformLocation(program, \"rotation\"),\n      screenPosition: gl.getUniformLocation(program, \"screenPosition\")\n    };\n  }\n  /*\n   * Render lens flares\n   * Method: renders 16x16 0xff00ff-colored points scattered over the light source area,\n   *         reads these back and calculates occlusion.\n   */\n\n\n  this.render = function (scene, camera, viewport) {\n    if (flares.length === 0) return;\n    var tempPosition = new THREE.Vector3();\n    var invAspect = viewport.w / viewport.z,\n        halfViewportWidth = viewport.z * 0.5,\n        halfViewportHeight = viewport.w * 0.5;\n    var size = 16 / viewport.w,\n        scale = new THREE.Vector2(size * invAspect, size);\n    var screenPosition = new THREE.Vector3(1, 1, 0),\n        screenPositionPixels = new THREE.Vector2(1, 1);\n\n    if (program === undefined) {\n      init();\n    }\n\n    gl.useProgram(program);\n    state.initAttributes();\n    state.enableAttribute(attributes.vertex);\n    state.enableAttribute(attributes.uv);\n    state.disableUnusedAttributes(); // loop through all lens flares to update their occlusion and positions\n    // setup gl and common used attribs/uniforms\n\n    gl.uniform1i(uniforms.occlusionMap, 0);\n    gl.uniform1i(uniforms.map, 1);\n    gl.bindBuffer(gl.ARRAY_BUFFER, vertexBuffer);\n    gl.vertexAttribPointer(attributes.vertex, 2, gl.FLOAT, false, 2 * 8, 0);\n    gl.vertexAttribPointer(attributes.uv, 2, gl.FLOAT, false, 2 * 8, 8);\n    gl.bindBuffer(gl.ELEMENT_ARRAY_BUFFER, elementBuffer);\n    state.disable(gl.CULL_FACE);\n    state.setDepthWrite(false);\n\n    for (var i = 0, l = flares.length; i < l; i++) {\n      size = 16 / viewport.w;\n      scale.set(size * invAspect, size); // calc object screen position\n\n      var flare = flares[i];\n      tempPosition.set(flare.matrixWorld.elements[12], flare.matrixWorld.elements[13], flare.matrixWorld.elements[14]);\n      tempPosition.applyMatrix4(camera.matrixWorldInverse);\n      tempPosition.applyProjection(camera.projectionMatrix); // setup arrays for gl programs\n\n      screenPosition.copy(tempPosition);\n      screenPositionPixels.x = screenPosition.x * halfViewportWidth + halfViewportWidth;\n      screenPositionPixels.y = screenPosition.y * halfViewportHeight + halfViewportHeight; // screen cull\n\n      if (hasVertexTexture || screenPositionPixels.x > 0 && screenPositionPixels.x < viewport.z && screenPositionPixels.y > 0 && screenPositionPixels.y < viewport.w) {\n        // save current RGB to temp texture\n        state.activeTexture(gl.TEXTURE0);\n        state.bindTexture(gl.TEXTURE_2D, null);\n        state.activeTexture(gl.TEXTURE1);\n        state.bindTexture(gl.TEXTURE_2D, tempTexture);\n        gl.copyTexImage2D(gl.TEXTURE_2D, 0, gl.RGB, viewport.x + screenPositionPixels.x - 8, viewport.y + screenPositionPixels.y - 8, 16, 16, 0); // render pink quad\n\n        gl.uniform1i(uniforms.renderType, 0);\n        gl.uniform2f(uniforms.scale, scale.x, scale.y);\n        gl.uniform3f(uniforms.screenPosition, screenPosition.x, screenPosition.y, screenPosition.z);\n        state.disable(gl.BLEND);\n        state.enable(gl.DEPTH_TEST);\n        gl.drawElements(gl.TRIANGLES, 6, gl.UNSIGNED_SHORT, 0); // copy result to occlusionMap\n\n        state.activeTexture(gl.TEXTURE0);\n        state.bindTexture(gl.TEXTURE_2D, occlusionTexture);\n        gl.copyTexImage2D(gl.TEXTURE_2D, 0, gl.RGBA, viewport.x + screenPositionPixels.x - 8, viewport.y + screenPositionPixels.y - 8, 16, 16, 0); // restore graphics\n\n        gl.uniform1i(uniforms.renderType, 1);\n        state.disable(gl.DEPTH_TEST);\n        state.activeTexture(gl.TEXTURE1);\n        state.bindTexture(gl.TEXTURE_2D, tempTexture);\n        gl.drawElements(gl.TRIANGLES, 6, gl.UNSIGNED_SHORT, 0); // update object positions\n\n        flare.positionScreen.copy(screenPosition);\n\n        if (flare.customUpdateCallback) {\n          flare.customUpdateCallback(flare);\n        } else {\n          flare.updateLensFlares();\n        } // render flares\n\n\n        gl.uniform1i(uniforms.renderType, 2);\n        state.enable(gl.BLEND);\n\n        for (var j = 0, jl = flare.lensFlares.length; j < jl; j++) {\n          var sprite = flare.lensFlares[j];\n\n          if (sprite.opacity > 0.001 && sprite.scale > 0.001) {\n            screenPosition.x = sprite.x;\n            screenPosition.y = sprite.y;\n            screenPosition.z = sprite.z;\n            size = sprite.size * sprite.scale / viewport.w;\n            scale.x = size * invAspect;\n            scale.y = size;\n            gl.uniform3f(uniforms.screenPosition, screenPosition.x, screenPosition.y, screenPosition.z);\n            gl.uniform2f(uniforms.scale, scale.x, scale.y);\n            gl.uniform1f(uniforms.rotation, sprite.rotation);\n            gl.uniform1f(uniforms.opacity, sprite.opacity);\n            gl.uniform3f(uniforms.color, sprite.color.r, sprite.color.g, sprite.color.b);\n            state.setBlending(sprite.blending, sprite.blendEquation, sprite.blendSrc, sprite.blendDst);\n            renderer.setTexture(sprite.texture, 1);\n            gl.drawElements(gl.TRIANGLES, 6, gl.UNSIGNED_SHORT, 0);\n          }\n        }\n      }\n    } // restore gl\n\n\n    state.enable(gl.CULL_FACE);\n    state.enable(gl.DEPTH_TEST);\n    state.setDepthWrite(true);\n    renderer.resetGLState();\n  };\n\n  function createProgram(shader) {\n    var program = gl.createProgram();\n    var fragmentShader = gl.createShader(gl.FRAGMENT_SHADER);\n    var vertexShader = gl.createShader(gl.VERTEX_SHADER);\n    var prefix = \"precision \" + renderer.getPrecision() + \" float;\\n\";\n    gl.shaderSource(fragmentShader, prefix + shader.fragmentShader);\n    gl.shaderSource(vertexShader, prefix + shader.vertexShader);\n    gl.compileShader(fragmentShader);\n    gl.compileShader(vertexShader);\n    gl.attachShader(program, fragmentShader);\n    gl.attachShader(program, vertexShader);\n    gl.linkProgram(program);\n    return program;\n  }\n}; // File:src/renderers/webgl/WebGLObjects.js\n\n/**\n* @author mrdoob / http://mrdoob.com/\n*/\n\n\nTHREE.WebGLObjects = function (gl, properties, info) {\n  var geometries = new THREE.WebGLGeometries(gl, properties, info); //\n\n  function update(object) {\n    // TODO: Avoid updating twice (when using shadowMap). Maybe add frame counter.\n    var geometry = geometries.get(object);\n\n    if (object.geometry instanceof THREE.Geometry) {\n      geometry.updateFromObject(object);\n    }\n\n    var index = geometry.index;\n    var attributes = geometry.attributes;\n\n    if (index !== null) {\n      updateAttribute(index, gl.ELEMENT_ARRAY_BUFFER);\n    }\n\n    for (var name in attributes) {\n      updateAttribute(attributes[name], gl.ARRAY_BUFFER);\n    } // morph targets\n\n\n    var morphAttributes = geometry.morphAttributes;\n\n    for (var name in morphAttributes) {\n      var array = morphAttributes[name];\n\n      for (var i = 0, l = array.length; i < l; i++) {\n        updateAttribute(array[i], gl.ARRAY_BUFFER);\n      }\n    }\n\n    return geometry;\n  }\n\n  function updateAttribute(attribute, bufferType) {\n    var data = attribute instanceof THREE.InterleavedBufferAttribute ? attribute.data : attribute;\n    var attributeProperties = properties.get(data);\n\n    if (attributeProperties.__webglBuffer === undefined) {\n      createBuffer(attributeProperties, data, bufferType);\n    } else if (attributeProperties.version !== data.version) {\n      updateBuffer(attributeProperties, data, bufferType);\n    }\n  }\n\n  function createBuffer(attributeProperties, data, bufferType) {\n    attributeProperties.__webglBuffer = gl.createBuffer();\n    gl.bindBuffer(bufferType, attributeProperties.__webglBuffer);\n    var usage = data.dynamic ? gl.DYNAMIC_DRAW : gl.STATIC_DRAW;\n    gl.bufferData(bufferType, data.array, usage);\n    attributeProperties.version = data.version;\n  }\n\n  function updateBuffer(attributeProperties, data, bufferType) {\n    gl.bindBuffer(bufferType, attributeProperties.__webglBuffer);\n\n    if (data.dynamic === false || data.updateRange.count === -1) {\n      // Not using update ranges\n      gl.bufferSubData(bufferType, 0, data.array);\n    } else if (data.updateRange.count === 0) ;else {\n      gl.bufferSubData(bufferType, data.updateRange.offset * data.array.BYTES_PER_ELEMENT, data.array.subarray(data.updateRange.offset, data.updateRange.offset + data.updateRange.count));\n      data.updateRange.count = 0; // reset range\n    }\n\n    attributeProperties.version = data.version;\n  }\n\n  function getAttributeBuffer(attribute) {\n    if (attribute instanceof THREE.InterleavedBufferAttribute) {\n      return properties.get(attribute.data).__webglBuffer;\n    }\n\n    return properties.get(attribute).__webglBuffer;\n  }\n\n  function getWireframeAttribute(geometry) {\n    var property = properties.get(geometry);\n\n    if (property.wireframe !== undefined) {\n      return property.wireframe;\n    }\n\n    var indices = [];\n    var index = geometry.index;\n    var attributes = geometry.attributes;\n    var position = attributes.position; // console.time( 'wireframe' );\n\n    if (index !== null) {\n      var edges = {};\n      var array = index.array;\n\n      for (var i = 0, l = array.length; i < l; i += 3) {\n        var a = array[i + 0];\n        var b = array[i + 1];\n        var c = array[i + 2];\n        if (checkEdge(edges, a, b)) indices.push(a, b);\n        if (checkEdge(edges, b, c)) indices.push(b, c);\n        if (checkEdge(edges, c, a)) indices.push(c, a);\n      }\n    } else {\n      var array = attributes.position.array;\n\n      for (var i = 0, l = array.length / 3 - 1; i < l; i += 3) {\n        var a = i + 0;\n        var b = i + 1;\n        var c = i + 2;\n        indices.push(a, b, b, c, c, a);\n      }\n    } // console.timeEnd( 'wireframe' );\n\n\n    var TypeArray = position.count > 65535 ? Uint32Array : Uint16Array;\n    var attribute = new THREE.BufferAttribute(new TypeArray(indices), 1);\n    updateAttribute(attribute, gl.ELEMENT_ARRAY_BUFFER);\n    property.wireframe = attribute;\n    return attribute;\n  }\n\n  function checkEdge(edges, a, b) {\n    if (a > b) {\n      var tmp = a;\n      a = b;\n      b = tmp;\n    }\n\n    var list = edges[a];\n\n    if (list === undefined) {\n      edges[a] = [b];\n      return true;\n    } else if (list.indexOf(b) === -1) {\n      list.push(b);\n      return true;\n    }\n\n    return false;\n  }\n\n  this.getAttributeBuffer = getAttributeBuffer;\n  this.getWireframeAttribute = getWireframeAttribute;\n  this.update = update;\n}; // File:src/renderers/webgl/WebGLProgram.js\n\n\nTHREE.WebGLProgram = function () {\n  var programIdCount = 0; // TODO: Combine the regex\n\n  var structRe = /^([\\w\\d_]+)\\.([\\w\\d_]+)$/;\n  var arrayStructRe = /^([\\w\\d_]+)\\[(\\d+)\\]\\.([\\w\\d_]+)$/;\n  var arrayRe = /^([\\w\\d_]+)\\[0\\]$/;\n\n  function getEncodingComponents(encoding) {\n    switch (encoding) {\n      case THREE.LinearEncoding:\n        return ['Linear', '( value )'];\n\n      case THREE.sRGBEncoding:\n        return ['sRGB', '( value )'];\n\n      case THREE.RGBEEncoding:\n        return ['RGBE', '( value )'];\n\n      case THREE.RGBM7Encoding:\n        return ['RGBM', '( value, 7.0 )'];\n\n      case THREE.RGBM16Encoding:\n        return ['RGBM', '( value, 16.0 )'];\n\n      case THREE.RGBDEncoding:\n        return ['RGBD', '( value, 256.0 )'];\n\n      case THREE.GammaEncoding:\n        return ['Gamma', '( value, float( GAMMA_FACTOR ) )'];\n\n      default:\n        throw new Error('unsupported encoding: ' + encoding);\n    }\n  }\n\n  function getTexelDecodingFunction(functionName, encoding) {\n    var components = getEncodingComponents(encoding);\n    return \"vec4 \" + functionName + \"( vec4 value ) { return \" + components[0] + \"ToLinear\" + components[1] + \"; }\";\n  }\n\n  function getTexelEncodingFunction(functionName, encoding) {\n    var components = getEncodingComponents(encoding);\n    return \"vec4 \" + functionName + \"( vec4 value ) { return LinearTo\" + components[0] + components[1] + \"; }\";\n  }\n\n  function getToneMappingFunction(functionName, toneMapping) {\n    var toneMappingName;\n\n    switch (toneMapping) {\n      case THREE.LinearToneMapping:\n        toneMappingName = \"Linear\";\n        break;\n\n      case THREE.ReinhardToneMapping:\n        toneMappingName = \"Reinhard\";\n        break;\n\n      case THREE.Uncharted2ToneMapping:\n        toneMappingName = \"Uncharted2\";\n        break;\n\n      case THREE.CineonToneMapping:\n        toneMappingName = \"OptimizedCineon\";\n        break;\n\n      default:\n        throw new Error('unsupported toneMapping: ' + toneMapping);\n    }\n\n    return \"vec3 \" + functionName + \"( vec3 color ) { return \" + toneMappingName + \"ToneMapping( color ); }\";\n  }\n\n  function generateExtensions(extensions, parameters, rendererExtensions) {\n    extensions = extensions || {};\n    var chunks = [extensions.derivatives || parameters.envMapCubeUV || parameters.bumpMap || parameters.normalMap || parameters.flatShading ? '#extension GL_OES_standard_derivatives : enable' : '', (extensions.fragDepth || parameters.logarithmicDepthBuffer) && rendererExtensions.get('EXT_frag_depth') ? '#extension GL_EXT_frag_depth : enable' : '', extensions.drawBuffers && rendererExtensions.get('WEBGL_draw_buffers') ? '#extension GL_EXT_draw_buffers : require' : '', (extensions.shaderTextureLOD || parameters.envMap) && rendererExtensions.get('EXT_shader_texture_lod') ? '#extension GL_EXT_shader_texture_lod : enable' : ''];\n    return chunks.filter(filterEmptyLine).join('\\n');\n  }\n\n  function generateDefines(defines) {\n    var chunks = [];\n\n    for (var name in defines) {\n      var value = defines[name];\n      if (value === false) continue;\n      chunks.push('#define ' + name + ' ' + value);\n    }\n\n    return chunks.join('\\n');\n  }\n\n  function fetchUniformLocations(gl, program, identifiers) {\n    var uniforms = {};\n    var n = gl.getProgramParameter(program, gl.ACTIVE_UNIFORMS);\n\n    for (var i = 0; i < n; i++) {\n      var info = gl.getActiveUniform(program, i);\n      var name = info.name;\n      var location = gl.getUniformLocation(program, name); //console.log(\"THREE.WebGLProgram: ACTIVE UNIFORM:\", name);\n\n      var matches = structRe.exec(name);\n\n      if (matches) {\n        var structName = matches[1];\n        var structProperty = matches[2];\n        var uniformsStruct = uniforms[structName];\n\n        if (!uniformsStruct) {\n          uniformsStruct = uniforms[structName] = {};\n        }\n\n        uniformsStruct[structProperty] = location;\n        continue;\n      }\n\n      matches = arrayStructRe.exec(name);\n\n      if (matches) {\n        var arrayName = matches[1];\n        var arrayIndex = matches[2];\n        var arrayProperty = matches[3];\n        var uniformsArray = uniforms[arrayName];\n\n        if (!uniformsArray) {\n          uniformsArray = uniforms[arrayName] = [];\n        }\n\n        var uniformsArrayIndex = uniformsArray[arrayIndex];\n\n        if (!uniformsArrayIndex) {\n          uniformsArrayIndex = uniformsArray[arrayIndex] = {};\n        }\n\n        uniformsArrayIndex[arrayProperty] = location;\n        continue;\n      }\n\n      matches = arrayRe.exec(name);\n\n      if (matches) {\n        var arrayName = matches[1];\n        uniforms[arrayName] = location;\n        continue;\n      }\n\n      uniforms[name] = location;\n    }\n\n    return uniforms;\n  }\n\n  function fetchAttributeLocations(gl, program, identifiers) {\n    var attributes = {};\n    var n = gl.getProgramParameter(program, gl.ACTIVE_ATTRIBUTES);\n\n    for (var i = 0; i < n; i++) {\n      var info = gl.getActiveAttrib(program, i);\n      var name = info.name; // console.log(\"THREE.WebGLProgram: ACTIVE VERTEX ATTRIBUTE:\", name, i );\n\n      attributes[name] = gl.getAttribLocation(program, name);\n    }\n\n    return attributes;\n  }\n\n  function filterEmptyLine(string) {\n    return string !== '';\n  }\n\n  function replaceLightNums(string, parameters) {\n    return string.replace(/NUM_DIR_LIGHTS/g, parameters.numDirLights).replace(/NUM_SPOT_LIGHTS/g, parameters.numSpotLights).replace(/NUM_POINT_LIGHTS/g, parameters.numPointLights).replace(/NUM_HEMI_LIGHTS/g, parameters.numHemiLights);\n  }\n\n  function parseIncludes(string) {\n    var pattern = /#include +<([\\w\\d.]+)>/g;\n\n    function replace(match, include) {\n      var replace = THREE.ShaderChunk[include];\n\n      if (replace === undefined) {\n        throw new Error('Can not resolve #include <' + include + '>');\n      }\n\n      return parseIncludes(replace);\n    }\n\n    return string.replace(pattern, replace);\n  }\n\n  function unrollLoops(string) {\n    var pattern = /for \\( int i \\= (\\d+)\\; i < (\\d+)\\; i \\+\\+ \\) \\{([\\s\\S]+?)(?=\\})\\}/g;\n\n    function replace(match, start, end, snippet) {\n      var unroll = '';\n\n      for (var i = parseInt(start); i < parseInt(end); i++) {\n        unroll += snippet.replace(/\\[ i \\]/g, '[ ' + i + ' ]');\n      }\n\n      return unroll;\n    }\n\n    return string.replace(pattern, replace);\n  }\n\n  return function WebGLProgram(renderer, code, material, parameters) {\n    var gl = renderer.context;\n    var extensions = material.extensions;\n    var defines = material.defines;\n    var vertexShader = material.__webglShader.vertexShader;\n    var fragmentShader = material.__webglShader.fragmentShader;\n    var shadowMapTypeDefine = 'SHADOWMAP_TYPE_BASIC';\n\n    if (parameters.shadowMapType === THREE.PCFShadowMap) {\n      shadowMapTypeDefine = 'SHADOWMAP_TYPE_PCF';\n    } else if (parameters.shadowMapType === THREE.PCFSoftShadowMap) {\n      shadowMapTypeDefine = 'SHADOWMAP_TYPE_PCF_SOFT';\n    }\n\n    var envMapTypeDefine = 'ENVMAP_TYPE_CUBE';\n    var envMapModeDefine = 'ENVMAP_MODE_REFLECTION';\n    var envMapBlendingDefine = 'ENVMAP_BLENDING_MULTIPLY';\n\n    if (parameters.envMap) {\n      switch (material.envMap.mapping) {\n        case THREE.CubeReflectionMapping:\n        case THREE.CubeRefractionMapping:\n          envMapTypeDefine = 'ENVMAP_TYPE_CUBE';\n          break;\n\n        case THREE.CubeUVReflectionMapping:\n        case THREE.CubeUVRefractionMapping:\n          envMapTypeDefine = 'ENVMAP_TYPE_CUBE_UV';\n          break;\n\n        case THREE.EquirectangularReflectionMapping:\n        case THREE.EquirectangularRefractionMapping:\n          envMapTypeDefine = 'ENVMAP_TYPE_EQUIREC';\n          break;\n\n        case THREE.SphericalReflectionMapping:\n          envMapTypeDefine = 'ENVMAP_TYPE_SPHERE';\n          break;\n      }\n\n      switch (material.envMap.mapping) {\n        case THREE.CubeRefractionMapping:\n        case THREE.EquirectangularRefractionMapping:\n          envMapModeDefine = 'ENVMAP_MODE_REFRACTION';\n          break;\n      }\n\n      switch (material.combine) {\n        case THREE.MultiplyOperation:\n          envMapBlendingDefine = 'ENVMAP_BLENDING_MULTIPLY';\n          break;\n\n        case THREE.MixOperation:\n          envMapBlendingDefine = 'ENVMAP_BLENDING_MIX';\n          break;\n\n        case THREE.AddOperation:\n          envMapBlendingDefine = 'ENVMAP_BLENDING_ADD';\n          break;\n      }\n    }\n\n    var gammaFactorDefine = renderer.gammaFactor > 0 ? renderer.gammaFactor : 1.0; // console.log( 'building new program ' );\n    //\n\n    var customExtensions = generateExtensions(extensions, parameters, renderer.extensions);\n    var customDefines = generateDefines(defines); //\n\n    var program = gl.createProgram();\n    var prefixVertex, prefixFragment;\n\n    if (material instanceof THREE.RawShaderMaterial) {\n      prefixVertex = '';\n      prefixFragment = '';\n    } else {\n      prefixVertex = ['precision ' + parameters.precision + ' float;', 'precision ' + parameters.precision + ' int;', '#define SHADER_NAME ' + material.__webglShader.name, customDefines, parameters.supportsVertexTextures ? '#define VERTEX_TEXTURES' : '', '#define GAMMA_FACTOR ' + gammaFactorDefine, '#define MAX_BONES ' + parameters.maxBones, parameters.map ? '#define USE_MAP' : '', parameters.envMap ? '#define USE_ENVMAP' : '', parameters.envMap ? '#define ' + envMapModeDefine : '', parameters.lightMap ? '#define USE_LIGHTMAP' : '', parameters.aoMap ? '#define USE_AOMAP' : '', parameters.emissiveMap ? '#define USE_EMISSIVEMAP' : '', parameters.bumpMap ? '#define USE_BUMPMAP' : '', parameters.normalMap ? '#define USE_NORMALMAP' : '', parameters.displacementMap && parameters.supportsVertexTextures ? '#define USE_DISPLACEMENTMAP' : '', parameters.specularMap ? '#define USE_SPECULARMAP' : '', parameters.roughnessMap ? '#define USE_ROUGHNESSMAP' : '', parameters.metalnessMap ? '#define USE_METALNESSMAP' : '', parameters.alphaMap ? '#define USE_ALPHAMAP' : '', parameters.vertexColors ? '#define USE_COLOR' : '', parameters.flatShading ? '#define FLAT_SHADED' : '', parameters.skinning ? '#define USE_SKINNING' : '', parameters.useVertexTexture ? '#define BONE_TEXTURE' : '', parameters.morphTargets ? '#define USE_MORPHTARGETS' : '', parameters.morphNormals && parameters.flatShading === false ? '#define USE_MORPHNORMALS' : '', parameters.doubleSided ? '#define DOUBLE_SIDED' : '', parameters.flipSided ? '#define FLIP_SIDED' : '', parameters.shadowMapEnabled ? '#define USE_SHADOWMAP' : '', parameters.shadowMapEnabled ? '#define ' + shadowMapTypeDefine : '', parameters.pointLightShadows > 0 ? '#define POINT_LIGHT_SHADOWS' : '', parameters.sizeAttenuation ? '#define USE_SIZEATTENUATION' : '', parameters.logarithmicDepthBuffer ? '#define USE_LOGDEPTHBUF' : '', parameters.logarithmicDepthBuffer && renderer.extensions.get('EXT_frag_depth') ? '#define USE_LOGDEPTHBUF_EXT' : '', 'uniform mat4 modelMatrix;', 'uniform mat4 modelViewMatrix;', 'uniform mat4 projectionMatrix;', 'uniform mat4 viewMatrix;', 'uniform mat3 normalMatrix;', 'uniform vec3 cameraPosition;', 'attribute vec3 position;', 'attribute vec3 normal;', 'attribute vec2 uv;', '#ifdef USE_COLOR', '\tattribute vec3 color;', '#endif', '#ifdef USE_MORPHTARGETS', '\tattribute vec3 morphTarget0;', '\tattribute vec3 morphTarget1;', '\tattribute vec3 morphTarget2;', '\tattribute vec3 morphTarget3;', '\t#ifdef USE_MORPHNORMALS', '\t\tattribute vec3 morphNormal0;', '\t\tattribute vec3 morphNormal1;', '\t\tattribute vec3 morphNormal2;', '\t\tattribute vec3 morphNormal3;', '\t#else', '\t\tattribute vec3 morphTarget4;', '\t\tattribute vec3 morphTarget5;', '\t\tattribute vec3 morphTarget6;', '\t\tattribute vec3 morphTarget7;', '\t#endif', '#endif', '#ifdef USE_SKINNING', '\tattribute vec4 skinIndex;', '\tattribute vec4 skinWeight;', '#endif', '\\n'].filter(filterEmptyLine).join('\\n');\n      prefixFragment = [customExtensions, 'precision ' + parameters.precision + ' float;', 'precision ' + parameters.precision + ' int;', '#define SHADER_NAME ' + material.__webglShader.name, customDefines, parameters.alphaTest ? '#define ALPHATEST ' + parameters.alphaTest : '', '#define GAMMA_FACTOR ' + gammaFactorDefine, parameters.useFog && parameters.fog ? '#define USE_FOG' : '', parameters.useFog && parameters.fogExp ? '#define FOG_EXP2' : '', parameters.map ? '#define USE_MAP' : '', parameters.envMap ? '#define USE_ENVMAP' : '', parameters.envMap ? '#define ' + envMapTypeDefine : '', parameters.envMap ? '#define ' + envMapModeDefine : '', parameters.envMap ? '#define ' + envMapBlendingDefine : '', parameters.lightMap ? '#define USE_LIGHTMAP' : '', parameters.aoMap ? '#define USE_AOMAP' : '', parameters.emissiveMap ? '#define USE_EMISSIVEMAP' : '', parameters.bumpMap ? '#define USE_BUMPMAP' : '', parameters.normalMap ? '#define USE_NORMALMAP' : '', parameters.specularMap ? '#define USE_SPECULARMAP' : '', parameters.roughnessMap ? '#define USE_ROUGHNESSMAP' : '', parameters.metalnessMap ? '#define USE_METALNESSMAP' : '', parameters.alphaMap ? '#define USE_ALPHAMAP' : '', parameters.vertexColors ? '#define USE_COLOR' : '', parameters.flatShading ? '#define FLAT_SHADED' : '', parameters.doubleSided ? '#define DOUBLE_SIDED' : '', parameters.flipSided ? '#define FLIP_SIDED' : '', parameters.shadowMapEnabled ? '#define USE_SHADOWMAP' : '', parameters.shadowMapEnabled ? '#define ' + shadowMapTypeDefine : '', parameters.pointLightShadows > 0 ? '#define POINT_LIGHT_SHADOWS' : '', parameters.premultipliedAlpha ? \"#define PREMULTIPLIED_ALPHA\" : '', parameters.physicallyCorrectLights ? \"#define PHYSICALLY_CORRECT_LIGHTS\" : '', parameters.logarithmicDepthBuffer ? '#define USE_LOGDEPTHBUF' : '', parameters.logarithmicDepthBuffer && renderer.extensions.get('EXT_frag_depth') ? '#define USE_LOGDEPTHBUF_EXT' : '', parameters.envMap && renderer.extensions.get('EXT_shader_texture_lod') ? '#define TEXTURE_LOD_EXT' : '', 'uniform mat4 viewMatrix;', 'uniform vec3 cameraPosition;', parameters.toneMapping !== THREE.NoToneMapping ? \"#define TONE_MAPPING\" : '', parameters.toneMapping !== THREE.NoToneMapping ? THREE.ShaderChunk['tonemapping_pars_fragment'] : '', // this code is required here because it is used by the toneMapping() function defined below\n      parameters.toneMapping !== THREE.NoToneMapping ? getToneMappingFunction(\"toneMapping\", parameters.toneMapping) : '', parameters.outputEncoding || parameters.mapEncoding || parameters.envMapEncoding || parameters.emissiveMapEncoding ? THREE.ShaderChunk['encodings_pars_fragment'] : '', // this code is required here because it is used by the various encoding/decoding function defined below\n      parameters.mapEncoding ? getTexelDecodingFunction('mapTexelToLinear', parameters.mapEncoding) : '', parameters.envMapEncoding ? getTexelDecodingFunction('envMapTexelToLinear', parameters.envMapEncoding) : '', parameters.emissiveMapEncoding ? getTexelDecodingFunction('emissiveMapTexelToLinear', parameters.emissiveMapEncoding) : '', parameters.outputEncoding ? getTexelEncodingFunction(\"linearToOutputTexel\", parameters.outputEncoding) : '', '\\n'].filter(filterEmptyLine).join('\\n');\n    }\n\n    vertexShader = parseIncludes(vertexShader, parameters);\n    vertexShader = replaceLightNums(vertexShader, parameters);\n    fragmentShader = parseIncludes(fragmentShader, parameters);\n    fragmentShader = replaceLightNums(fragmentShader, parameters);\n\n    if (material instanceof THREE.ShaderMaterial === false) {\n      vertexShader = unrollLoops(vertexShader);\n      fragmentShader = unrollLoops(fragmentShader);\n    }\n\n    var vertexGlsl = prefixVertex + vertexShader;\n    var fragmentGlsl = prefixFragment + fragmentShader; // console.log( '*VERTEX*', vertexGlsl );\n    // console.log( '*FRAGMENT*', fragmentGlsl );\n\n    var glVertexShader = THREE.WebGLShader(gl, gl.VERTEX_SHADER, vertexGlsl);\n    var glFragmentShader = THREE.WebGLShader(gl, gl.FRAGMENT_SHADER, fragmentGlsl);\n    gl.attachShader(program, glVertexShader);\n    gl.attachShader(program, glFragmentShader); // Force a particular attribute to index 0.\n\n    if (material.index0AttributeName !== undefined) {\n      gl.bindAttribLocation(program, 0, material.index0AttributeName);\n    } else if (parameters.morphTargets === true) {\n      // programs with morphTargets displace position out of attribute 0\n      gl.bindAttribLocation(program, 0, 'position');\n    }\n\n    gl.linkProgram(program);\n    var programLog = gl.getProgramInfoLog(program);\n    var vertexLog = gl.getShaderInfoLog(glVertexShader);\n    var fragmentLog = gl.getShaderInfoLog(glFragmentShader);\n    var runnable = true;\n    var haveDiagnostics = true; // console.log( '**VERTEX**', gl.getExtension( 'WEBGL_debug_shaders' ).getTranslatedShaderSource( glVertexShader ) );\n    // console.log( '**FRAGMENT**', gl.getExtension( 'WEBGL_debug_shaders' ).getTranslatedShaderSource( glFragmentShader ) );\n\n    if (gl.getProgramParameter(program, gl.LINK_STATUS) === false) {\n      runnable = false;\n    } else if (programLog !== '') ;else if (vertexLog === '' || fragmentLog === '') {\n      haveDiagnostics = false;\n    }\n\n    if (haveDiagnostics) {\n      this.diagnostics = {\n        runnable: runnable,\n        material: material,\n        programLog: programLog,\n        vertexShader: {\n          log: vertexLog,\n          prefix: prefixVertex\n        },\n        fragmentShader: {\n          log: fragmentLog,\n          prefix: prefixFragment\n        }\n      };\n    } // clean up\n\n\n    gl.deleteShader(glVertexShader);\n    gl.deleteShader(glFragmentShader); // set up caching for uniform locations\n\n    var cachedUniforms;\n\n    this.getUniforms = function () {\n      if (cachedUniforms === undefined) {\n        cachedUniforms = fetchUniformLocations(gl, program);\n      }\n\n      return cachedUniforms;\n    }; // set up caching for attribute locations\n\n\n    var cachedAttributes;\n\n    this.getAttributes = function () {\n      if (cachedAttributes === undefined) {\n        cachedAttributes = fetchAttributeLocations(gl, program);\n      }\n\n      return cachedAttributes;\n    }; // free resource\n\n\n    this.destroy = function () {\n      gl.deleteProgram(program);\n      this.program = undefined;\n    }; // DEPRECATED\n\n\n    Object.defineProperties(this, {\n      uniforms: {\n        get: function () {\n          return this.getUniforms();\n        }\n      },\n      attributes: {\n        get: function () {\n          return this.getAttributes();\n        }\n      }\n    }); //\n\n    this.id = programIdCount++;\n    this.code = code;\n    this.usedTimes = 1;\n    this.program = program;\n    this.vertexShader = glVertexShader;\n    this.fragmentShader = glFragmentShader;\n    return this;\n  };\n}(); // File:src/renderers/WebGLRenderTarget.js\n\n/**\n * @author szimek / https://github.com/szimek/\n * @author alteredq / http://alteredqualia.com/\n * @author Marius Kintel / https://github.com/kintel\n */\n\n/*\n In options, we can specify:\n * Texture parameters for an auto-generated target texture\n * depthBuffer/stencilBuffer: Booleans to indicate if we should generate these buffers\n*/\n\n\nTHREE.WebGLRenderTarget = function (width, height, options) {\n  this.uuid = THREE.Math.generateUUID();\n  this.width = width;\n  this.height = height;\n  this.scissor = new THREE.Vector4(0, 0, width, height);\n  this.scissorTest = false;\n  this.viewport = new THREE.Vector4(0, 0, width, height);\n  options = options || {};\n  if (options.minFilter === undefined) options.minFilter = THREE.LinearFilter;\n  this.texture = new THREE.Texture(undefined, undefined, options.wrapS, options.wrapT, options.magFilter, options.minFilter, options.format, options.type, options.anisotropy);\n  this.depthBuffer = options.depthBuffer !== undefined ? options.depthBuffer : true;\n  this.stencilBuffer = options.stencilBuffer !== undefined ? options.stencilBuffer : true;\n};\n\nTHREE.WebGLRenderTarget.prototype = {\n  constructor: THREE.WebGLRenderTarget,\n  setSize: function (width, height) {\n    if (this.width !== width || this.height !== height) {\n      this.width = width;\n      this.height = height;\n      this.dispose();\n    }\n\n    this.viewport.set(0, 0, width, height);\n    this.scissor.set(0, 0, width, height);\n  },\n  clone: function () {\n    return new this.constructor().copy(this);\n  },\n  copy: function (source) {\n    this.width = source.width;\n    this.height = source.height;\n    this.viewport.copy(source.viewport);\n    this.texture = source.texture.clone();\n    this.depthBuffer = source.depthBuffer;\n    this.stencilBuffer = source.stencilBuffer;\n    return this;\n  },\n  dispose: function () {\n    this.dispatchEvent({\n      type: 'dispose'\n    });\n  }\n};\nTHREE.EventDispatcher.prototype.apply(THREE.WebGLRenderTarget.prototype); // File:src/renderers/WebGLRenderTargetCube.js\n\n/**\n * @author alteredq / http://alteredqualia.com\n */\n\nTHREE.WebGLRenderTargetCube = function (width, height, options) {\n  THREE.WebGLRenderTarget.call(this, width, height, options);\n  this.activeCubeFace = 0; // PX 0, NX 1, PY 2, NY 3, PZ 4, NZ 5\n\n  this.activeMipMapLevel = 0;\n};\n\nTHREE.WebGLRenderTargetCube.prototype = Object.create(THREE.WebGLRenderTarget.prototype);\nTHREE.WebGLRenderTargetCube.prototype.constructor = THREE.WebGLRenderTargetCube; // File:src/renderers/webgl/WebGLPrograms.js\n\nTHREE.WebGLPrograms = function (renderer, capabilities) {\n  var programs = [];\n  var shaderIDs = {\n    MeshDepthMaterial: 'depth',\n    MeshNormalMaterial: 'normal',\n    MeshBasicMaterial: 'basic',\n    MeshLambertMaterial: 'lambert',\n    MeshPhongMaterial: 'phong',\n    MeshStandardMaterial: 'standard',\n    LineBasicMaterial: 'basic',\n    LineDashedMaterial: 'dashed',\n    PointsMaterial: 'points'\n  };\n  var parameterNames = [\"precision\", \"supportsVertexTextures\", \"map\", \"mapEncoding\", \"envMap\", \"envMapMode\", \"envMapEncoding\", \"lightMap\", \"aoMap\", \"emissiveMap\", \"emissiveMapEncoding\", \"bumpMap\", \"normalMap\", \"displacementMap\", \"specularMap\", \"roughnessMap\", \"metalnessMap\", \"alphaMap\", \"combine\", \"vertexColors\", \"fog\", \"useFog\", \"fogExp\", \"flatShading\", \"sizeAttenuation\", \"logarithmicDepthBuffer\", \"skinning\", \"maxBones\", \"useVertexTexture\", \"morphTargets\", \"morphNormals\", \"maxMorphTargets\", \"maxMorphNormals\", \"premultipliedAlpha\", \"numDirLights\", \"numPointLights\", \"numSpotLights\", \"numHemiLights\", \"shadowMapEnabled\", \"pointLightShadows\", \"toneMapping\", 'physicallyCorrectLights', \"shadowMapType\", \"alphaTest\", \"doubleSided\", \"flipSided\"];\n\n  function allocateBones(object) {\n    if (capabilities.floatVertexTextures && object && object.skeleton && object.skeleton.useVertexTexture) {\n      return 1024;\n    } else {\n      // default for when object is not specified\n      // ( for example when prebuilding shader to be used with multiple objects )\n      //\n      //  - leave some extra space for other uniforms\n      //  - limit here is ANGLE's 254 max uniform vectors\n      //    (up to 54 should be safe)\n      var nVertexUniforms = capabilities.maxVertexUniforms;\n      var nVertexMatrices = Math.floor((nVertexUniforms - 20) / 4);\n      var maxBones = nVertexMatrices;\n\n      if (object !== undefined && object instanceof THREE.SkinnedMesh) {\n        maxBones = Math.min(object.skeleton.bones.length, maxBones);\n        if (maxBones < object.skeleton.bones.length) ;\n      }\n\n      return maxBones;\n    }\n  }\n\n  function getTextureEncodingFromMap(map, gammaOverrideLinear) {\n    var encoding;\n\n    if (!map) {\n      encoding = THREE.LinearEncoding;\n    } else if (map instanceof THREE.Texture) {\n      encoding = map.encoding;\n    } else if (map instanceof THREE.WebGLRenderTarget) {\n      encoding = map.texture.encoding;\n    } // add backwards compatibility for WebGLRenderer.gammaInput/gammaOutput parameter, should probably be removed at some point.\n\n\n    if (encoding === THREE.LinearEncoding && gammaOverrideLinear) {\n      encoding = THREE.GammaEncoding;\n    }\n\n    return encoding;\n  }\n\n  this.getParameters = function (material, lights, fog, object) {\n    var shaderID = shaderIDs[material.type]; // heuristics to create shader parameters according to lights in the scene\n    // (not to blow over maxLights budget)\n\n    var maxBones = allocateBones(object);\n    var precision = renderer.getPrecision();\n\n    if (material.precision !== null) {\n      precision = capabilities.getMaxPrecision(material.precision);\n      if (precision !== material.precision) ;\n    }\n\n    var parameters = {\n      shaderID: shaderID,\n      precision: precision,\n      supportsVertexTextures: capabilities.vertexTextures,\n      outputEncoding: getTextureEncodingFromMap(renderer.getCurrentRenderTarget(), renderer.gammaOutput),\n      map: !!material.map,\n      mapEncoding: getTextureEncodingFromMap(material.map, renderer.gammaInput),\n      envMap: !!material.envMap,\n      envMapMode: material.envMap && material.envMap.mapping,\n      envMapEncoding: getTextureEncodingFromMap(material.envMap, renderer.gammaInput),\n      envMapCubeUV: !!material.envMap && (material.envMap.mapping === THREE.CubeUVReflectionMapping || material.envMap.mapping === THREE.CubeUVRefractionMapping),\n      lightMap: !!material.lightMap,\n      aoMap: !!material.aoMap,\n      emissiveMap: !!material.emissiveMap,\n      emissiveMapEncoding: getTextureEncodingFromMap(material.emissiveMap, renderer.gammaInput),\n      bumpMap: !!material.bumpMap,\n      normalMap: !!material.normalMap,\n      displacementMap: !!material.displacementMap,\n      roughnessMap: !!material.roughnessMap,\n      metalnessMap: !!material.metalnessMap,\n      specularMap: !!material.specularMap,\n      alphaMap: !!material.alphaMap,\n      combine: material.combine,\n      vertexColors: material.vertexColors,\n      fog: fog,\n      useFog: material.fog,\n      fogExp: fog instanceof THREE.FogExp2,\n      flatShading: material.shading === THREE.FlatShading,\n      sizeAttenuation: material.sizeAttenuation,\n      logarithmicDepthBuffer: capabilities.logarithmicDepthBuffer,\n      skinning: material.skinning,\n      maxBones: maxBones,\n      useVertexTexture: capabilities.floatVertexTextures && object && object.skeleton && object.skeleton.useVertexTexture,\n      morphTargets: material.morphTargets,\n      morphNormals: material.morphNormals,\n      maxMorphTargets: renderer.maxMorphTargets,\n      maxMorphNormals: renderer.maxMorphNormals,\n      numDirLights: lights.directional.length,\n      numPointLights: lights.point.length,\n      numSpotLights: lights.spot.length,\n      numHemiLights: lights.hemi.length,\n      pointLightShadows: lights.shadowsPointLight,\n      shadowMapEnabled: renderer.shadowMap.enabled && object.receiveShadow && lights.shadows.length > 0,\n      shadowMapType: renderer.shadowMap.type,\n      toneMapping: renderer.toneMapping,\n      physicallyCorrectLights: renderer.physicallyCorrectLights,\n      premultipliedAlpha: material.premultipliedAlpha,\n      alphaTest: material.alphaTest,\n      doubleSided: material.side === THREE.DoubleSide,\n      flipSided: material.side === THREE.BackSide\n    };\n    return parameters;\n  };\n\n  this.getProgramCode = function (material, parameters) {\n    var chunks = [];\n\n    if (parameters.shaderID) {\n      chunks.push(parameters.shaderID);\n    } else {\n      chunks.push(material.fragmentShader);\n      chunks.push(material.vertexShader);\n    }\n\n    if (material.defines !== undefined) {\n      for (var name in material.defines) {\n        chunks.push(name);\n        chunks.push(material.defines[name]);\n      }\n    }\n\n    for (var i = 0; i < parameterNames.length; i++) {\n      var parameterName = parameterNames[i];\n      chunks.push(parameterName);\n      chunks.push(parameters[parameterName]);\n    }\n\n    return chunks.join();\n  };\n\n  this.acquireProgram = function (material, parameters, code) {\n    var program; // Check if code has been already compiled\n\n    for (var p = 0, pl = programs.length; p < pl; p++) {\n      var programInfo = programs[p];\n\n      if (programInfo.code === code) {\n        program = programInfo;\n        ++program.usedTimes;\n        break;\n      }\n    }\n\n    if (program === undefined) {\n      program = new THREE.WebGLProgram(renderer, code, material, parameters);\n      programs.push(program);\n    }\n\n    return program;\n  };\n\n  this.releaseProgram = function (program) {\n    if (--program.usedTimes === 0) {\n      // Remove from unordered set\n      var i = programs.indexOf(program);\n      programs[i] = programs[programs.length - 1];\n      programs.pop(); // Free WebGL resources\n\n      program.destroy();\n    }\n  }; // Exposed for resource monitoring & error feedback via renderer.info:\n\n\n  this.programs = programs;\n};\n\nvar Renderer = /*#__PURE__*/function () {\n  function Renderer(options) {\n    _classCallCheck(this, Renderer);\n\n    Object.assign(this, options);\n    this.renderer = new threejs360.WebGLRenderer();\n    this.renderer.setClearColor(0x000000, 0);\n    this.renderer.setSize(this.width, this.height);\n    this.renderer.setPixelRatio(window.devicePixelRatio);\n    this.el = this.renderer.domElement;\n  }\n\n  _createClass(Renderer, [{\n    key: \"setTexture\",\n    value: function setTexture(texture) {\n      this.texture = texture;\n      this.mesh = this.createMesh();\n    }\n  }, {\n    key: \"setSize\",\n    value: function setSize(_ref) {\n      var height = _ref.height,\n          width = _ref.width;\n      this.height = height;\n      this.width = width;\n      this.renderer.setSize(width, height);\n    }\n  }, {\n    key: \"createMesh\",\n    value: function createMesh() {\n      this.material = new threejs360.MeshBasicMaterial({\n        map: this.texture\n      });\n      this.geometry = new threejs360.SphereGeometry(1, 50, 50);\n      this.geometry.scale(-1, 1, 1);\n      var mesh = new threejs360.Mesh(this.geometry, this.material);\n      return mesh;\n    }\n  }, {\n    key: \"destroy\",\n    value: function destroy() {\n      this.geometry.dispose();\n      this.material.dispose();\n      this.renderer.dispose();\n    }\n  }, {\n    key: \"render\",\n    value: function render(scene, camera, needsUpdate) {\n      if (!needsUpdate) return;\n      this.renderer.render(scene, camera);\n    }\n  }]);\n\n  return Renderer;\n}();\n\nvar easeOutBack = function easeOutBack(k) {\n  var s = 1.70158;\n  return --k * k * ((s + 1) * k + s) + 1;\n};\n\nvar Controls = /*#__PURE__*/function () {\n  function Controls(options) {\n    var _this = this;\n\n    _classCallCheck(this, Controls);\n\n    Object.assign(this, options);\n    this.el = this.renderer.el;\n    this.theta = this.initialYaw * Math.PI / 180;\n    this.phi = 0;\n    this.velo = 0.02;\n    this.rotateStart = new threejs360.Vector2();\n    this.rotateEnd = new threejs360.Vector2();\n    this.rotateDelta = new threejs360.Vector2();\n    this.orientation = new threejs360.Quaternion();\n    this.euler = new threejs360.Euler();\n    this.momentum = false;\n    this.isUserInteracting = false;\n    this.addDraggableStyle();\n    this.onMouseMove = this.onMouseMove.bind(this);\n    this.onMouseDown = this.onMouseDown.bind(this);\n    this.onMouseUp = this.onMouseUp.bind(this);\n\n    this.onTouchStart = function (e) {\n      return _this.onMouseDown({\n        clientX: e.touches[0].pageX,\n        clientY: e.touches[0].pageY\n      });\n    };\n\n    this.onTouchMove = function (e) {\n      return _this.onMouseMove({\n        clientX: e.touches[0].pageX,\n        clientY: e.touches[0].pageY\n      });\n    };\n\n    this.onTouchEnd = function (_) {\n      return _this.onMouseUp();\n    };\n\n    this.onDeviceMotion = this.onDeviceMotion.bind(this);\n    this.onMessage = this.onMessage.bind(this);\n    this.bindEvents();\n  }\n\n  _createClass(Controls, [{\n    key: \"bindEvents\",\n    value: function bindEvents() {\n      this.el.addEventListener('mouseleave', this.onMouseUp);\n      this.el.addEventListener('mousemove', this.onMouseMove);\n      this.el.addEventListener('mousedown', this.onMouseDown);\n      this.el.addEventListener('mouseup', this.onMouseUp);\n      this.el.addEventListener('touchstart', this.onTouchStart);\n      this.el.addEventListener('touchmove', this.onTouchMove);\n      this.el.addEventListener('touchend', this.onTouchEnd);\n      if (!this.isInIframe()) window.addEventListener('devicemotion', this.onDeviceMotion);\n      window.addEventListener('message', this.onMessage);\n    }\n  }, {\n    key: \"centralize\",\n    value: function centralize() {\n      var _this2 = this;\n\n      var endTheta = this.initialYaw * Math.PI / 180;\n      var duration = 750;\n      var startTheta = this.theta;\n      var startPhi = this.phi;\n      var start = Date.now();\n\n      var animate = function animate() {\n        var progress = Date.now() - start;\n        var elapsed = progress / duration;\n        elapsed = elapsed > 1 ? 1 : elapsed;\n\n        if (progress >= duration) {\n          return cancelAnimationFrame(id);\n        }\n\n        _this2.theta = startTheta + (endTheta - startTheta) * easeOutBack(elapsed);\n        _this2.phi = startPhi + (0 - startPhi) * easeOutBack(elapsed);\n        return requestAnimationFrame(animate);\n      };\n\n      var id = animate();\n    }\n  }, {\n    key: \"isInIframe\",\n    value: function isInIframe() {\n      try {\n        return window.self !== window.top;\n      } catch (e) {\n        return true;\n      }\n    }\n  }, {\n    key: \"destroy\",\n    value: function destroy() {\n      this.el.removeEventListener('mouseleave', this.onMouseUp);\n      this.el.removeEventListener('mousemove', this.onMouseMove);\n      this.el.removeEventListener('mousedown', this.onMouseDown);\n      this.el.removeEventListener('mouseup', this.onMouseUp);\n      this.el.removeEventListener('touchstart', this.onTouchStart);\n      this.el.removeEventListener('touchmove', this.onTouchMove);\n      this.el.removeEventListener('touchend', this.onTouchEnd);\n      window.removeEventListener('devicemotion', this.onDeviceMotion);\n      window.removeEventListener('message', this.onMessage);\n    }\n  }, {\n    key: \"getCurrentStyle\",\n    value: function getCurrentStyle() {\n      return \"height: \".concat(parseInt(this.el.style.height, 10), \"px; width: \").concat(parseInt(this.el.style.width, 10), \"px; user-select: none; -webkit-user-select: none; -webkit-touch-callout: none; -webkit-tap-highlight-color: rgba(0,0,0,0);\");\n    }\n  }, {\n    key: \"addDraggingStyle\",\n    value: function addDraggingStyle() {\n      this.el.setAttribute('style', \"\".concat(this.getCurrentStyle(), \" cursor: -webkit-grabbing; cursor: -moz-grabbing; cursor: grabbing;\"));\n    }\n  }, {\n    key: \"addDraggableStyle\",\n    value: function addDraggableStyle() {\n      this.el.setAttribute('style', \"\".concat(this.getCurrentStyle(), \" cursor: -webkit-grab; cursor: -moz-grab; cursor: grab;\"));\n    }\n  }, {\n    key: \"onMessage\",\n    value: function onMessage(event) {\n      var _event$data = event.data,\n          orientation = _event$data.orientation,\n          portrait = _event$data.portrait,\n          rotationRate = _event$data.rotationRate;\n      if (!rotationRate) return;\n      this.onDeviceMotion({\n        orientation: orientation,\n        portrait: portrait,\n        rotationRate: rotationRate\n      });\n    }\n  }, {\n    key: \"onDeviceMotion\",\n    value: function onDeviceMotion(event) {\n      var portrait = event.portrait !== undefined ? event.portrait : window.matchMedia(\"(orientation: portrait)\").matches;\n      var orientation;\n\n      if (event.orientation !== undefined) {\n        orientation = event.orientation;\n      } else if (window.orientation !== undefined) {\n        orientation = window.orientation;\n      } else {\n        orientation = -90;\n      }\n\n      var alpha = threejs360.Math.degToRad(event.rotationRate.alpha);\n      var beta = threejs360.Math.degToRad(event.rotationRate.beta);\n\n      if (portrait) {\n        this.phi = this.verticalPanning ? this.phi + alpha * this.velo : this.phi;\n        this.theta = this.theta - beta * this.velo * -1;\n      } else {\n        if (this.verticalPanning) {\n          this.phi = orientation === -90 ? this.phi + beta * this.velo : this.phi - beta * this.velo;\n        }\n\n        this.theta = orientation === -90 ? this.theta - alpha * this.velo : this.theta + alpha * this.velo;\n      }\n\n      this.adjustPhi();\n    }\n  }, {\n    key: \"onMouseMove\",\n    value: function onMouseMove(event) {\n      if (!this.isUserInteracting) {\n        return;\n      }\n\n      this.rotateEnd.set(event.clientX, event.clientY);\n      this.rotateDelta.subVectors(this.rotateEnd, this.rotateStart);\n      this.rotateStart.copy(this.rotateEnd);\n      this.phi = this.verticalPanning ? this.phi + 2 * Math.PI * this.rotateDelta.y / this.renderer.height * 0.3 : this.phi;\n      this.theta += 2 * Math.PI * this.rotateDelta.x / this.renderer.width * 0.5;\n      this.adjustPhi();\n    }\n  }, {\n    key: \"adjustPhi\",\n    value: function adjustPhi() {\n      // Prevent looking too far up or down.\n      this.phi = threejs360.Math.clamp(this.phi, -Math.PI / 1.95, Math.PI / 1.95);\n    }\n  }, {\n    key: \"onMouseDown\",\n    value: function onMouseDown(event) {\n      this.addDraggingStyle();\n      this.rotateStart.set(event.clientX, event.clientY);\n      this.isUserInteracting = true;\n      this.momentum = false;\n      this.onDragStart && this.onDragStart();\n    }\n  }, {\n    key: \"inertia\",\n    value: function inertia() {\n      if (!this.momentum) return;\n      this.rotateDelta.y *= 0.90;\n      this.rotateDelta.x *= 0.90;\n      this.theta += 0.005 * this.rotateDelta.x;\n      this.phi = this.verticalPanning ? this.phi + 0.005 * this.rotateDelta.y : this.phi;\n      this.adjustPhi();\n    }\n  }, {\n    key: \"onMouseUp\",\n    value: function onMouseUp() {\n      this.isUserInteracting && this.onDragStop && this.onDragStop();\n      this.addDraggableStyle();\n      this.isUserInteracting = false;\n      this.momentum = true;\n      this.inertia();\n    }\n  }, {\n    key: \"update\",\n    value: function update() {\n      if (this.phi === this.previousPhi && this.theta === this.previousTheta) return false;\n      this.previousPhi = this.phi;\n      this.previousTheta = this.theta;\n      this.euler.set(this.phi, this.theta, 0, 'YXZ');\n      this.orientation.setFromEuler(this.euler);\n      this.camera.quaternion.copy(this.orientation);\n      this.inertia();\n      return true;\n    }\n  }]);\n\n  return Controls;\n}();\n\nvar ThreeSixtyViewer = /*#__PURE__*/function () {\n  function ThreeSixtyViewer() {\n    var options = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n\n    _classCallCheck(this, ThreeSixtyViewer);\n\n    Object.assign(this, {\n      height: 360,\n      width: 640,\n      initialYaw: 90,\n      verticalPanning: true\n    }, options);\n    var height = this.height,\n        width = this.width,\n        container = this.container,\n        containerId = this.containerId,\n        initialYaw = this.initialYaw,\n        verticalPanning = this.verticalPanning,\n        onDragStart = this.onDragStart,\n        onDragStop = this.onDragStop;\n    this.renderer = new Renderer({\n      height: height,\n      width: width\n    });\n    this.camera = new threejs360.PerspectiveCamera(80, this.width / this.height, 0.1, 100);\n    this.controls = new Controls({\n      camera: this.camera,\n      renderer: this.renderer,\n      initialYaw: initialYaw,\n      verticalPanning: verticalPanning,\n      onDragStart: onDragStart,\n      onDragStop: onDragStop\n    });\n    this.stopVideoLoop = this.stopVideoLoop.bind(this);\n    this.onError = this.onError.bind(this);\n    this.startVideoLoop = this.startVideoLoop.bind(this);\n    this.needsUpdate = false;\n    this.scene = this.createScene();\n    this.scene.add(this.camera);\n    this.element = this.getElement();\n    this.elementReady = false;\n    this.element.addEventListener('playing', this.startVideoLoop);\n    this.element.addEventListener('pause', this.stopVideoLoop);\n    this.element.addEventListener('ended', this.stopVideoLoop);\n    this.element.addEventListener('loadedmetadata', this.initAfterLoadedMetadata.bind(this));\n    this.target = this.container ? this.container : document.querySelector(this.containerId);\n  }\n\n  _createClass(ThreeSixtyViewer, [{\n    key: \"initAfterLoadedMetadata\",\n    value: function initAfterLoadedMetadata() {\n      if (this.element.readyState >= 1 && !this.elementReady) {\n        this.texture = this.createTexture();\n        this.renderer.setTexture(this.texture);\n        this.scene.getObjectByName('photo').children = [this.renderer.mesh];\n        this.elementReady = true;\n      }\n    }\n  }, {\n    key: \"play\",\n    value: function play() {\n      this.element.play && this.element.play();\n    }\n  }, {\n    key: \"pause\",\n    value: function pause() {\n      this.element.pause && this.element.pause();\n    }\n  }, {\n    key: \"centralize\",\n    value: function centralize() {\n      this.controls.centralize();\n    }\n  }, {\n    key: \"stopVideoLoop\",\n    value: function stopVideoLoop() {\n      clearTimeout(this.videoLoopId);\n      this.videoLoopId = null;\n      this.needsUpdate = false;\n    }\n  }, {\n    key: \"destroy\",\n    value: function destroy() {\n      this.element.style.display = '';\n      clearTimeout(this.videoLoopId);\n      cancelAnimationFrame(this.animationFrameId);\n      this.element.pause && this.element.pause();\n      this.target.removeChild(this.renderer.el);\n      this.controls.destroy();\n      this.renderer.destroy();\n    }\n  }, {\n    key: \"setSize\",\n    value: function setSize(_ref) {\n      var height = _ref.height,\n          width = _ref.width;\n      this.camera.aspect = width / height;\n      this.camera.updateProjectionMatrix();\n      this.renderer.setSize({\n        height: height,\n        width: width\n      });\n    }\n  }, {\n    key: \"getElement\",\n    value: function getElement() {\n      if (this.source && this.source.tagName) return this.source;\n      var video = document.createElement('video');\n      video.loop = this.loop || false;\n      video.muted = this.muted || false;\n      video.setAttribute('crossorigin', 'anonymous');\n      video.setAttribute('webkit-playsinline', 'true');\n      video.setAttribute('playsinline', 'true');\n      video.setAttribute('src', this.source);\n      video.autoplay = this.autoplay !== undefined ? this.autoplay : true;\n      video.addEventListener('error', this.onError);\n      return video;\n    }\n  }, {\n    key: \"createTexture\",\n    value: function createTexture() {\n      var texture = new threejs360.Texture(this.element);\n      texture.minFilter = threejs360.LinearFilter;\n      texture.magFilter = threejs360.LinearFilter;\n      texture.format = threejs360.RGBFormat;\n      texture.generateMipmaps = false;\n      texture.needsUpdate = true;\n      return texture;\n    }\n  }, {\n    key: \"createScene\",\n    value: function createScene() {\n      var scene = new threejs360.Scene();\n      var group = new threejs360.Object3D();\n      group.name = 'photo';\n      scene.add(group);\n      return scene;\n    }\n  }, {\n    key: \"onError\",\n    value: function onError(err) {}\n  }, {\n    key: \"startVideoLoop\",\n    value: function startVideoLoop() {\n      var _this = this;\n\n      var videoFps = 1000 / 25;\n\n      if (this.videoLoopId) {\n        clearTimeout(this.videoLoopId);\n        this.videoLoopId = null;\n      }\n\n      var videoLoop = function videoLoop() {\n        _this.needsUpdate = true;\n        _this.videoLoopId = setTimeout(videoLoop, videoFps);\n      };\n\n      videoLoop();\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this2 = this;\n\n      this.target.appendChild(this.renderer.el);\n      this.element.style.display = 'none';\n\n      var loop = function loop() {\n        _this2.animationFrameId = requestAnimationFrame(loop);\n\n        var cameraUpdated = _this2.controls.update();\n\n        _this2.renderer.render(_this2.scene, _this2.camera, _this2.needsUpdate || cameraUpdated);\n\n        _this2.needsUpdate = false;\n      };\n\n      this.startVideoLoop();\n      loop();\n    }\n  }]);\n\n  return ThreeSixtyViewer;\n}();\n\nvar Video = /*#__PURE__*/function (_ThreeSixtyViewer) {\n  _inherits(Video, _ThreeSixtyViewer);\n\n  function Video(options) {\n    _classCallCheck(this, Video);\n\n    return _possibleConstructorReturn(this, _getPrototypeOf(Video).call(this, options));\n  }\n\n  _createClass(Video, [{\n    key: \"createTexture\",\n    value: function createTexture() {\n      var texture = new threejs360.VideoTexture(this.element); //TODO: we can pass all this info through the constructor\n\n      texture.minFilter = threejs360.LinearFilter;\n      texture.magFilter = threejs360.LinearFilter;\n      texture.format = threejs360.RGBFormat;\n      texture.generateMipmaps = false;\n      texture.needsUpdate = true;\n      return texture;\n    }\n  }]);\n\n  return Video;\n}(ThreeSixtyViewer);\n\nvar Image = /*#__PURE__*/function (_ThreeSixtyViewer) {\n  _inherits(Image, _ThreeSixtyViewer);\n\n  function Image(options) {\n    _classCallCheck(this, Image);\n\n    return _possibleConstructorReturn(this, _getPrototypeOf(Image).call(this, options));\n  }\n\n  _createClass(Image, [{\n    key: \"getElement\",\n    value: function getElement() {\n      if (this.source && this.source.tagName) return this.source;\n      var image = document.createElement('img');\n      image.setAttribute('crossorigin', 'anonymous');\n      image.src = this.source;\n      return image;\n    }\n  }]);\n\n  return Image;\n}(ThreeSixtyViewer);\n\nvar Canvas = /*#__PURE__*/function (_ThreeSixtyViewer) {\n  _inherits(Canvas, _ThreeSixtyViewer);\n\n  function Canvas(options) {\n    var _this;\n\n    _classCallCheck(this, Canvas);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(Canvas).call(this, options));\n    _this.context = _this.element.getContext('2d');\n    return _this;\n  }\n\n  _createClass(Canvas, [{\n    key: \"play\",\n    value: function play() {\n      this.video.play && this.video.play();\n    }\n  }, {\n    key: \"pause\",\n    value: function pause() {\n      this.video.pause && this.video.pause();\n    }\n  }, {\n    key: \"destroy\",\n    value: function destroy() {\n      this.video.style.display = '';\n\n      _get(_getPrototypeOf(Canvas.prototype), \"destroy\", this).call(this);\n    }\n  }, {\n    key: \"getElement\",\n    value: function getElement() {\n      this.video = _get(_getPrototypeOf(Canvas.prototype), \"getElement\", this).call(this);\n      this.video.addEventListener('playing', this.startVideoLoop);\n      this.video.addEventListener('pause', this.stopVideoLoop);\n      this.video.addEventListener('ended', this.stopVideoLoop);\n      var canvas = document.createElement('canvas');\n      canvas.height = this.video.videoHeight;\n      canvas.width = this.video.videoWidth;\n      return canvas;\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this2 = this;\n\n      this.target.appendChild(this.renderer.el);\n      this.video.style.display = 'none';\n\n      var loop = function loop() {\n        _this2.animationFrameId = requestAnimationFrame(loop);\n        var h = _this2.video.videoHeight;\n        var w = _this2.video.videoWidth;\n\n        if (_this2.element.height != h) {\n          _this2.element.height = h;\n        }\n\n        if (_this2.element.width != w) {\n          _this2.element.width = w;\n        }\n\n        _this2.context.clearRect(0, 0, w, h);\n\n        _this2.context.drawImage(_this2.video, 0, 0, w, h);\n\n        var cameraUpdated = _this2.controls.update();\n\n        _this2.renderer.render(_this2.scene, _this2.camera, _this2.needsUpdate || cameraUpdated);\n\n        _this2.renderer.mesh.material.map.needsUpdate = true;\n        _this2.needsUpdate = false;\n      };\n\n      this.startVideoLoop();\n      loop();\n    }\n  }]);\n\n  return Canvas;\n}(ThreeSixtyViewer);\n\nvar Audio = /*#__PURE__*/function (_ThreeSixtyViewer) {\n  _inherits(Audio, _ThreeSixtyViewer);\n\n  function Audio(options) {\n    var _this;\n\n    _classCallCheck(this, Audio);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(Audio).call(this, options));\n\n    _this.driver.addEventListener('playing', _this.startVideoLoop);\n\n    _this.driver.addEventListener('pause', _this.stopVideoLoop);\n\n    _this.driver.addEventListener('ended', _this.stopVideoLoop);\n\n    _this.driver.addEventListener('stalled', _this.stopVideoLoop);\n\n    _this.driverInitialized = false;\n    return _this;\n  }\n\n  _createClass(Audio, [{\n    key: \"play\",\n    value: function play() {\n      this.driver.play();\n    }\n  }, {\n    key: \"pause\",\n    value: function pause() {\n      this.driver.pause();\n    }\n  }, {\n    key: \"getElement\",\n    value: function getElement() {\n      if (this.source && this.source.tagName) {\n        this.driver = this.source;\n      } else {\n        this.driver = document.createElement('audio');\n        this.driver.src = this.source;\n        this.driver.loop = this.loop || false;\n        this.driver.muted = this.muted || false;\n        this.driver.setAttribute('crossorigin', 'anonymous');\n        this.driver.autoplay = this.autoplay || true;\n      }\n\n      this.source = this.driver.src;\n      this.driver.src = '';\n      this.driver.load();\n      var video = document.createElement('video');\n      video.setAttribute('crossorigin', 'anonymous');\n      video.src = this.source;\n      video.load();\n      video.addEventListener('error', this.onError);\n      return video;\n    }\n  }, {\n    key: \"createTexture\",\n    value: function createTexture() {\n      var texture = new threejs360.VideoTexture(this.element); //TODO: we can pass all this info through the constructor\n\n      texture.minFilter = threejs360.LinearFilter;\n      texture.magFilter = threejs360.LinearFilter;\n      texture.format = threejs360.RGBFormat;\n      texture.generateMipmaps = false;\n      texture.needsUpdate = true;\n      return texture;\n    }\n  }, {\n    key: \"startVideoLoop\",\n    value: function startVideoLoop() {\n      var _this2 = this;\n\n      var videoFps = 1000 / 25;\n\n      if (this.videoLoopId) {\n        clearTimeout(this.videoLoopId);\n        this.videoLoopId = null;\n      }\n\n      var videoLoop = function videoLoop() {\n        _this2.element.currentTime = _this2.driver.currentTime;\n        _this2.needsUpdate = true;\n        _this2.videoLoopId = setTimeout(videoLoop, videoFps);\n      };\n\n      videoLoop();\n    }\n  }, {\n    key: \"destroy\",\n    value: function destroy() {\n      this.driver.style.display = '';\n\n      _get(_getPrototypeOf(Audio.prototype), \"destroy\", this).call(this);\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this3 = this;\n\n      this.target.appendChild(this.renderer.el);\n      this.element.style.display = 'none';\n      this.driver.style.display = 'none';\n\n      var loop = function loop() {\n        var cameraUpdated = _this3.controls.update();\n\n        _this3.renderer.render(_this3.scene, _this3.camera, _this3.needsUpdate || cameraUpdated);\n\n        _this3.needsUpdate = false;\n        _this3.animationFrameId = requestAnimationFrame(loop);\n        var shouldInitializeDriver = _this3.element.readyState >= _this3.element.HAVE_FUTURE_DATA && !_this3.driverInitialized;\n\n        if (shouldInitializeDriver) {\n          _this3.driver.src = _this3.source;\n\n          _this3.driver.load();\n\n          _this3.onDriverReady && _this3.onDriverReady();\n          _this3.driverInitialized = true;\n        }\n      };\n\n      loop();\n    }\n  }]);\n\n  return Audio;\n}(ThreeSixtyViewer);\n\nvar video = function video(options) {\n  if (utils.shouldUseAudioDriver()) {\n    return new Audio(options);\n  }\n\n  if (utils.shouldUseCanvasInBetween()) {\n    return new Canvas(options);\n  }\n\n  return new Video(options);\n};\n\nexport { video as Video, Image };","map":{"version":3,"sources":["/Users/ericav/Documents/Senior Design/Boeing360React/client/node_modules/kaleidoscopejs/dist/kaleidoscope.es.js"],"names":["utils","isiOS","test","navigator","userAgent","isEdge","shouldUseAudioDriver","isOldiOSOnIphone","isWebView","shouldUseCanvasInBetween","_classCallCheck","instance","Constructor","TypeError","_defineProperties","target","props","i","length","descriptor","enumerable","configurable","writable","Object","defineProperty","key","_createClass","protoProps","staticProps","prototype","_inherits","subClass","superClass","create","constructor","value","_setPrototypeOf","_getPrototypeOf","o","setPrototypeOf","getPrototypeOf","__proto__","p","_assertThisInitialized","self","ReferenceError","_possibleConstructorReturn","call","_superPropBase","object","property","hasOwnProperty","_get","receiver","Reflect","get","base","desc","getOwnPropertyDescriptor","THREE","REVISION","threejs360","Number","EPSILON","undefined","Math","pow","sign","x","Function","name","toString","match","assign","to","n","arguments","nextSource","keysArray","keys","nextIndex","len","nextKey","MOUSE","LEFT","MIDDLE","RIGHT","CullFaceNone","CullFaceBack","CullFaceFront","CullFaceFrontBack","FrontFaceDirectionCW","FrontFaceDirectionCCW","BasicShadowMap","PCFShadowMap","PCFSoftShadowMap","FrontSide","BackSide","DoubleSide","FlatShading","SmoothShading","NoColors","FaceColors","VertexColors","NoBlending","NormalBlending","AdditiveBlending","SubtractiveBlending","MultiplyBlending","CustomBlending","AddEquation","SubtractEquation","ReverseSubtractEquation","MinEquation","MaxEquation","ZeroFactor","OneFactor","SrcColorFactor","OneMinusSrcColorFactor","SrcAlphaFactor","OneMinusSrcAlphaFactor","DstAlphaFactor","OneMinusDstAlphaFactor","DstColorFactor","OneMinusDstColorFactor","SrcAlphaSaturateFactor","NeverDepth","AlwaysDepth","LessDepth","LessEqualDepth","EqualDepth","GreaterEqualDepth","GreaterDepth","NotEqualDepth","MultiplyOperation","MixOperation","AddOperation","NoToneMapping","LinearToneMapping","ReinhardToneMapping","Uncharted2ToneMapping","CineonToneMapping","UVMapping","CubeReflectionMapping","CubeRefractionMapping","EquirectangularReflectionMapping","EquirectangularRefractionMapping","SphericalReflectionMapping","CubeUVReflectionMapping","CubeUVRefractionMapping","RepeatWrapping","ClampToEdgeWrapping","MirroredRepeatWrapping","NearestFilter","NearestMipMapNearestFilter","NearestMipMapLinearFilter","LinearFilter","LinearMipMapNearestFilter","LinearMipMapLinearFilter","UnsignedByteType","ByteType","ShortType","UnsignedShortType","IntType","UnsignedIntType","FloatType","HalfFloatType","UnsignedShort4444Type","UnsignedShort5551Type","UnsignedShort565Type","AlphaFormat","RGBFormat","RGBAFormat","LuminanceFormat","LuminanceAlphaFormat","RGBEFormat","RGB_S3TC_DXT1_Format","RGBA_S3TC_DXT1_Format","RGBA_S3TC_DXT3_Format","RGBA_S3TC_DXT5_Format","RGB_PVRTC_4BPPV1_Format","RGB_PVRTC_2BPPV1_Format","RGBA_PVRTC_4BPPV1_Format","RGBA_PVRTC_2BPPV1_Format","RGB_ETC1_Format","LoopOnce","LoopRepeat","LoopPingPong","InterpolateDiscrete","InterpolateLinear","InterpolateSmooth","ZeroCurvatureEnding","ZeroSlopeEnding","WrapAroundEnding","TrianglesDrawMode","TriangleStripDrawMode","TriangleFanDrawMode","LinearEncoding","sRGBEncoding","GammaEncoding","RGBEEncoding","LogLuvEncoding","RGBM7Encoding","RGBM16Encoding","RGBDEncoding","generateUUID","chars","split","uuid","Array","rnd","r","random","join","clamp","min","max","euclideanModulo","m","mapLinear","a1","a2","b1","b2","smoothstep","smootherstep","random16","randInt","low","high","floor","randFloat","randFloatSpread","range","degToRad","degreeToRadiansFactor","PI","degrees","radToDeg","radianToDegreesFactor","radians","isPowerOfTwo","nearestPowerOfTwo","round","log","LN2","nextPowerOfTwo","Color","color","fromArray","set","g","b","copy","setHex","setStyle","setScalar","scalar","hex","setRGB","setHSL","hue2rgb","q","t","h","s","l","style","handleAlpha","string","exec","components","parseInt","parseFloat","size","charAt","ColorKeywords","clone","copyGammaToLinear","gammaFactor","copyLinearToGamma","safeInverse","convertGammaToLinear","convertLinearToGamma","sqrt","getHex","getHexString","slice","getHSL","optionalTarget","hsl","hue","saturation","lightness","delta","getStyle","offsetHSL","add","addColors","color1","color2","addScalar","multiply","multiplyScalar","lerp","alpha","equals","c","array","offset","toArray","Vector2","y","width","height","setX","setY","setComponent","index","Error","getComponent","v","w","addVectors","a","addScaledVector","sub","subVectors","subScalar","isFinite","divide","divideScalar","clampScalar","minVal","maxVal","clampLength","ceil","roundToZero","negate","dot","lengthSq","lengthManhattan","abs","normalize","angle","atan2","distanceTo","distanceToSquared","dx","dy","setLength","lerpVectors","v1","v2","fromAttribute","attribute","itemSize","rotateAround","center","cos","sin","Vector3","z","setZ","multiplyVectors","applyEuler","quaternion","euler","Quaternion","applyQuaternion","setFromEuler","applyAxisAngle","axis","setFromAxisAngle","applyMatrix3","e","elements","applyMatrix4","applyProjection","d","qx","qy","qz","qw","ix","iy","iz","iw","project","matrix","camera","Matrix4","multiplyMatrices","projectionMatrix","getInverse","matrixWorld","unproject","transformDirection","cross","crossVectors","ax","ay","az","bx","by","bz","projectOnVector","vector","projectOnPlane","planeNormal","reflect","normal","angleTo","theta","acos","dz","setFromSpherical","sinPhiRadius","phi","radius","setFromMatrixPosition","setFromMatrixColumn","setFromMatrixScale","sx","sy","sz","Vector4","setW","setAxisAngleFromQuaternion","setAxisAngleFromRotationMatrix","epsilon","epsilon2","te","m11","m12","m13","m21","m22","m23","m31","m32","m33","xx","yy","zz","xy","xz","yz","Matrix3","Float32Array","n11","n12","n13","n21","n22","n23","n31","n32","n33","identity","me","setFromMatrix4","applyToVector3Array","j","applyToBuffer","buffer","getX","getY","getZ","setXYZ","determinant","f","throwOnDegenerate","t11","t12","t13","det","msg","transpose","tmp","flattenToArrayOffset","getNormalMatrix","matrix4","transposeIntoArray","n14","n24","n34","n41","n42","n43","n44","copyPosition","extractBasis","xAxis","yAxis","zAxis","makeBasis","extractRotation","scaleX","scaleY","scaleZ","makeRotationFromEuler","order","ae","af","be","bf","ce","cf","de","df","ac","ad","bc","bd","makeRotationFromQuaternion","x2","y2","z2","wx","wy","wz","lookAt","eye","up","a11","a12","a13","a14","a21","a22","a23","a24","a31","a32","a33","a34","a41","a42","a43","a44","b11","b12","b13","b14","b21","b22","b23","b24","b31","b32","b33","b34","b41","b42","b43","b44","multiplyToArray","getPosition","setPosition","t14","scale","getMaxScaleOnAxis","scaleXSq","scaleYSq","scaleZSq","makeTranslation","makeRotationX","makeRotationY","makeRotationZ","makeRotationAxis","tx","ty","makeScale","compose","position","decompose","invSX","invSY","invSZ","setFromRotationMatrix","makeFrustum","left","right","bottom","top","near","far","makePerspective","fov","aspect","ymax","tan","ymin","xmin","xmax","makeOrthographic","Plane","constant","setComponents","setFromNormalAndCoplanarPoint","point","setFromCoplanarPoints","plane","inverseNormalLength","distanceToPoint","distanceToSphere","sphere","projectPoint","orthoPoint","perpendicularMagnitude","result","intersectLine","line","direction","denominator","start","intersectsLine","startSign","endSign","end","intersectsBox","box","intersectsPlane","intersectsSphere","coplanarPoint","m1","optionalNormalMatrix","normalMatrix","newNormal","newCoplanarPoint","translate","_x","_y","_z","_w","onChangeCallback","update","Euler","c1","c2","c3","s1","s2","s3","halfAngle","trace","setFromUnitVectors","EPS","vFrom","vTo","inverse","conjugate","multiplyQuaternions","qax","qay","qaz","qaw","qbx","qby","qbz","qbw","slerp","qb","cosHalfTheta","sinHalfTheta","halfTheta","ratioA","ratioB","onChange","callback","qa","qm","slerpFlat","dst","dstOffset","src0","srcOffset0","src1","srcOffset1","x0","y0","z0","w0","x1","y1","z1","w1","dir","sqrSin","tDir","Triangle","v0","resultLengthSq","barycoordFromPoint","dot00","dot01","dot02","dot11","dot12","denom","invDenom","u","containsPoint","setFromPointsAndIndices","points","i0","i1","i2","triangle","area","midpoint","Box3","Infinity","setFromArray","makeEmpty","minX","minY","minZ","maxX","maxY","maxZ","il","setFromPoints","expandByPoint","setFromCenterAndSize","halfSize","setFromObject","scope","updateMatrixWorld","traverse","node","geometry","boundingBox","computeBoundingBox","isEmpty","union","expandByVector","expandByScalar","containsBox","getParameter","closestPoint","clampPoint","clampedPoint","getBoundingSphere","Sphere","intersect","_order","DefaultOrder","RotationOrders","asin","setFromQuaternion","setFromVector3","reorder","newOrder","toVector3","optionalResult","Ray","origin","ray","at","recast","closestPointToPoint","directionDistance","distanceSqToPoint","distanceSqToSegment","segCenter","segDir","diff","optionalPointOnRay","optionalPointOnSegment","segExtent","a01","b0","s0","sqrDist","extDet","invDet","intersectSphere","tca","d2","radius2","thc","t0","t1","distanceToPlane","intersectPlane","distToPoint","intersectBox","tmin","tmax","tymin","tymax","tzmin","tzmax","invdirx","invdiry","invdirz","intersectTriangle","edge1","edge2","backfaceCulling","DdN","DdQxE2","DdE1xQ","QdN","optionalCenter","maxRadiusSq","empty","radiusSum","deltaLengthSq","getBoundingBox","Frustum","p0","p1","p2","p3","p4","p5","planes","frustum","setFromMatrix","me0","me1","me2","me3","me4","me5","me6","me7","me8","me9","me10","me11","me12","me13","me14","me15","intersectsObject","boundingSphere","computeBoundingSphere","negRadius","distance","d1","EventDispatcher","apply","addEventListener","hasEventListener","removeEventListener","dispatchEvent","type","listener","_listeners","listeners","indexOf","push","listenerArray","splice","event","Layers","mask","channel","enable","toggle","disable","layers","Object3D","Object3DIdCount","parent","children","DefaultUp","rotation","onRotationChange","onQuaternionChange","defineProperties","modelViewMatrix","rotationAutoUpdate","matrixAutoUpdate","DefaultMatrixAutoUpdate","matrixWorldNeedsUpdate","visible","castShadow","receiveShadow","frustumCulled","renderOrder","userData","applyMatrix","setRotationFromAxisAngle","setRotationFromEuler","setRotationFromMatrix","setRotationFromQuaternion","rotateOnAxis","q1","rotateX","rotateY","rotateZ","translateOnAxis","translateX","translateY","translateZ","localToWorld","worldToLocal","remove","getObjectById","id","getObjectByProperty","getObjectByName","child","getWorldPosition","getWorldQuaternion","getWorldRotation","getWorldScale","getWorldDirection","raycast","traverseVisible","traverseAncestors","updateMatrix","force","toJSON","meta","isRootObject","output","geometries","materials","textures","images","metadata","version","generator","JSON","stringify","material","extractFromCache","cache","values","data","recursive","source","parse","Face3","materialIndex","vertexNormals","isArray","vertexColors","BufferAttribute","dynamic","updateRange","count","needsUpdate","setDynamic","copyAt","index1","index2","copyArray","copyColorsArray","colors","copyIndicesArray","indices","copyVector2sArray","vectors","copyVector3sArray","copyVector4sArray","getW","setXY","setXYZW","Int8Attribute","Int8Array","Uint8Attribute","Uint8Array","Uint8ClampedAttribute","Uint8ClampedArray","Int16Attribute","Int16Array","Uint16Attribute","Uint16Array","Int32Attribute","Int32Array","Uint32Attribute","Uint32Array","Float32Attribute","Float64Attribute","Float64Array","DynamicBufferAttribute","InstancedBufferAttribute","meshPerAttribute","BufferGeometry","GeometryIdCount","attributes","morphAttributes","groups","drawRange","getIndex","setIndex","addAttribute","InterleavedBufferAttribute","getAttribute","removeAttribute","addGroup","clearGroups","setDrawRange","obj","Points","Line","positions","vertices","lineDistances","Mesh","Geometry","fromGeometry","updateFromObject","direct","__directGeometry","verticesNeedUpdate","normalsNeedUpdate","colorsNeedUpdate","uvsNeedUpdate","groupsNeedUpdate","normals","uv","uvs","lineDistancesNeedUpdate","lineDistance","computeGroups","DirectGeometry","fromDirectGeometry","uvs2","TypeArray","morphTargets","morphTarget","skinIndices","skinWeights","isNaN","computeFaceNormals","computeVertexNormals","vA","vB","vC","pA","pB","pC","cb","ab","jl","group","normalizeNormals","merge","attribute1","attributeArray1","attribute2","attributeArray2","attributeSize","toNonIndexed","geometry2","array2","parameters","dispose","MaxIndex","interleavedBuffer","stride","InstancedBufferGeometry","maxInstancedCount","instances","faces","faceVertexUvs","morphNormals","elementsNeedUpdate","vertex","face","fromBufferGeometry","uv2","tempNormals","tempUVs","tempUVs2","addFace","fl","areaWeighted","vl","computeMorphNormals","__originalFaceNormal","__originalVertexNormals","tmpGeo","faceNormals","dstNormalsFace","dstNormalsVertex","faceNormal","computeTangents","computeLineDistances","materialIndexOffset","vertexOffset","vertices1","vertices2","faces1","faces2","uvs1","vertexCopy","faceCopy","faceVertexNormals","faceVertexColors","uvCopy","mergeMesh","mesh","mergeVertices","verticesMap","unique","changes","precisionPoints","precision","faceIndicesToRemove","idx","sortFacesByMaterialIndex","_id","materialIndexSort","sort","newUvs1","newUvs2","normalsHash","colorsHash","uvsHash","hasMaterial","hasFaceUv","hasFaceVertexUv","hasFaceNormal","hasFaceVertexNormal","hasFaceColor","hasFaceVertexColor","faceType","setBit","getUvIndex","getNormalIndex","getColorIndex","enabled","hash","uvsCopy","k","kl","hasFaceVertexUv2","morphTargetsLength","morphTargetsPosition","morphNormalsLength","morphTargetsNormal","hasSkinIndices","hasSkinWeights","vertexUvs","morphNormal","Camera","matrixWorldInverse","PerspectiveCamera","focalLength","zoom","updateProjectionMatrix","setLens","frameHeight","atan","setViewOffset","fullWidth","fullHeight","Light","intensity","groundColor","decay","penumbra","Scene","fog","overrideMaterial","autoUpdate","FogExp2","density","ImmediateRenderObject","render","renderCallback","SphereBufferGeometry","widthSegments","heightSegments","phiStart","phiLength","thetaStart","thetaLength","thetaEnd","vertexCount","verticesRow","px","py","pz","v3","v4","SphereGeometry","Material","MaterialIdCount","side","opacity","transparent","blending","blendSrc","blendDst","blendEquation","blendSrcAlpha","blendDstAlpha","blendEquationAlpha","depthFunc","depthTest","depthWrite","colorWrite","polygonOffset","polygonOffsetFactor","polygonOffsetUnits","alphaTest","premultipliedAlpha","overdraw","_needsUpdate","setValues","newValue","currentValue","isRoot","roughness","metalness","emissive","specular","shininess","map","Texture","alphaMap","lightMap","bumpMap","bumpScale","normalMap","normalScale","displacementMap","displacementScale","displacementBias","roughnessMap","metalnessMap","emissiveMap","specularMap","envMap","reflectivity","sizeAttenuation","shading","wireframe","wireframeLinewidth","LineBasicMaterial","linewidth","linecap","linejoin","LineDashedMaterial","dashSize","gapSize","PointsMaterial","MeshDepthMaterial","MeshNormalMaterial","ShaderMaterial","defines","uniforms","vertexShader","fragmentShader","lights","skinning","extensions","derivatives","fragDepth","drawBuffers","shaderTextureLOD","defaultAttributeValues","index0AttributeName","UniformsUtils","MeshBasicMaterial","aoMap","aoMapIntensity","combine","refractionRatio","wireframeLinecap","wireframeLinejoin","MeshLambertMaterial","lightMapIntensity","emissiveIntensity","MeshStandardMaterial","envMapIntensity","MeshPhongMaterial","MultiMaterial","RawShaderMaterial","image","mapping","wrapS","wrapT","magFilter","minFilter","format","anisotropy","TextureIdCount","sourceFile","DEFAULT_IMAGE","mipmaps","DEFAULT_MAPPING","repeat","generateMipmaps","premultiplyAlpha","flipY","unpackAlignment","encoding","onUpdate","getDataURL","canvas","toDataURL","document","createElement","getContext","drawImage","wrap","url","transformUv","DataTexture","CompressedTexture","CubeTexture","VideoTexture","video","requestAnimationFrame","readyState","HAVE_CURRENT_DATA","Sprite","SpriteMaterial","matrixPosition","raycaster","intersects","distanceSq","guessSizeSq","Particle","LensFlare","texture","lensFlares","positionScreen","customUpdateCallback","updateLensFlares","flare","vecX","vecY","wantedRotation","mode","LineSegments","inverseMatrix","linePrecision","precisionSq","vStart","vEnd","interSegment","interRay","step","distSq","faceIndex","nbVertices","LineStrip","LinePieces","drawMode","updateMorphTargets","setDrawMode","morphTargetBase","morphTargetInfluences","morphTargetDictionary","ml","getMorphTargetIndexByName","tempA","tempB","tempC","uvA","uvB","uvC","barycoord","intersectionPoint","intersectionPointWorld","uvIntersection","uv1","uv3","checkIntersection","checkBufferGeometryIntersection","intersection","fvA","fvB","fvC","isFaceMaterial","faceMaterial","morphInfluences","tl","influence","targets","uvs_f","SkinnedMesh","useVertexTexture","bindMode","bindMatrix","bindMatrixInverse","bones","bone","gbone","bl","Bone","pos","rotq","scl","normalizeSkinWeights","bind","Skeleton","skeleton","calculateInverses","pose","sw","vec","skinWeight","threshold","params","localThreshold","localThresholdSq","testPoint","rayPointDistanceSq","intersectPoint","distanceToRay","ShaderChunk","merged","uniforms_src","uniforms_dst","parameter_src","UniformsLib","common","aomap","lightmap","emissivemap","bumpmap","normalmap","displacementmap","roughnessmap","metalnessmap","properties","ShaderLib","WebGLRenderer","_canvas","_context","context","_alpha","_depth","depth","_stencil","stencil","_antialias","antialias","_premultipliedAlpha","_preserveDrawingBuffer","preserveDrawingBuffer","opaqueObjects","opaqueObjectsLastIndex","transparentObjects","transparentObjectsLastIndex","sprites","domElement","autoClear","autoClearColor","autoClearDepth","autoClearStencil","sortObjects","gammaInput","gammaOutput","physicallyCorrectLights","toneMapping","toneMappingExposure","toneMappingWhitePoint","maxMorphTargets","maxMorphNormals","autoScaleCubemaps","_this","_currentProgram","_currentRenderTarget","_currentFramebuffer","_currentMaterialId","_currentGeometryProgram","_currentCamera","_currentScissor","_currentScissorTest","_currentViewport","_usedTextureUnits","_clearColor","_clearAlpha","_width","_height","_pixelRatio","_scissor","_scissorTest","_viewport","_frustum","_projScreenMatrix","_vector3","_lights","ambient","directional","directionalShadowMap","directionalShadowMatrix","spot","spotShadowMap","spotShadowMatrix","pointShadowMap","pointShadowMatrix","hemi","shadows","shadowsPointLight","_infoMemory","_infoRender","calls","info","memory","programs","_gl","getShaderPrecisionFormat","onContextLost","error","WebGLExtensions","capabilities","WebGLCapabilities","state","WebGLState","paramThreeToGL","WebGLProperties","objects","WebGLObjects","programCache","WebGLPrograms","lightCache","WebGLLights","bufferRenderer","WebGLBufferRenderer","indexedBufferRenderer","WebGLIndexedBufferRenderer","getTargetPixelRatio","glClearColor","clearColor","setDefaultGLState","init","scissor","viewport","resetGLState","reset","shadowMap","WebGLShadowMap","spritePlugin","SpritePlugin","lensFlarePlugin","LensFlarePlugin","getContextAttributes","forceContextLoss","loseContext","getMaxAnisotropy","extension","MAX_TEXTURE_MAX_ANISOTROPY_EXT","getPrecision","getPixelRatio","setPixelRatio","setSize","getSize","updateStyle","setViewport","setScissor","setScissorTest","boolean","getClearColor","setClearColor","getClearAlpha","setClearAlpha","clear","bits","COLOR_BUFFER_BIT","DEPTH_BUFFER_BIT","STENCIL_BUFFER_BIT","clearDepth","clearStencil","clearTarget","renderTarget","setRenderTarget","preventDefault","onTextureDispose","deallocateTexture","onRenderTargetDispose","deallocateRenderTarget","onMaterialDispose","deallocateMaterial","textureProperties","__image__webglTextureCube","deleteTexture","__webglInit","__webglTexture","delete","renderTargetProperties","WebGLRenderTargetCube","deleteFramebuffer","__webglFramebuffer","deleteRenderbuffer","__webglDepthbuffer","releaseMaterialProgramReference","programInfo","program","releaseProgram","renderBufferImmediate","initAttributes","buffers","hasPositions","createBuffer","hasNormals","hasUvs","hasColors","getAttributes","bindBuffer","ARRAY_BUFFER","bufferData","positionArray","DYNAMIC_DRAW","enableAttribute","vertexAttribPointer","FLOAT","normalArray","nx","ny","nz","uvArray","colorArray","disableUnusedAttributes","drawArrays","TRIANGLES","renderBufferDirect","setMaterial","setProgram","updateBuffers","geometryProgram","activeInfluences","absNumericalSort","getUniforms","uniform1fv","getWireframeAttribute","renderer","setupVertexAttributes","ELEMENT_ARRAY_BUFFER","getAttributeBuffer","dataStart","dataCount","rangeStart","rangeCount","groupStart","groupCount","drawStart","drawEnd","drawCount","setLineWidth","setMode","LINES","TRIANGLE_STRIP","TRIANGLE_FAN","lineWidth","LINE_STRIP","POINTS","renderInstances","startIndex","geometryAttributes","programAttributes","materialDefaultAttributeValues","programAttribute","geometryAttribute","InstancedInterleavedBuffer","enableAttributeAndDivisor","BYTES_PER_ELEMENT","vertexAttrib2fv","vertexAttrib3fv","vertexAttrib4fv","vertexAttrib1fv","painterSortStable","reversePainterSortStable","scene","forceClear","projectObject","setupLights","renderObjects","setBlending","updateRenderTargetMipmap","setDepthTest","setDepthWrite","setColorWrite","pushRenderItem","renderItem","groupMaterial","renderList","initMaterial","materialProperties","getParameters","code","getProgramCode","programChange","shaderID","shader","__webglShader","acquireProgram","numSupportedMorphTargets","numSupportedMorphNormals","uniformsList","uniformLocations","location","lightsHash","ambientLightColor","directionalLights","spotLights","pointLights","hemisphereLights","hasDynamicUniforms","uniform","setMaterialFaces","setDepthFunc","setPolygonOffset","CULL_FACE","setFlipSided","refreshProgram","refreshMaterial","refreshLights","p_uniforms","m_uniforms","useProgram","uniformMatrix4fv","logarithmicDepthBuffer","uniform1f","logDepthBufFC","cameraPosition","uniform3f","viewMatrix","floatVertexTextures","boneTexture","textureUnit","getTextureUnit","uniform1i","setTexture","boneTextureWidth","boneTextureHeight","boneMatrices","boneGlobalMatrices","markUniformsLightsNeedsUpdate","refreshUniformsFog","refreshUniformsCommon","refreshUniformsLine","refreshUniformsDash","refreshUniformsPoints","refreshUniformsLambert","refreshUniformsPhong","refreshUniformsStandard","mNear","mFar","loadUniformsGeneric","loadUniformsMatrices","modelMatrix","updateDynamicUniforms","dynamicUniforms","onUpdateCallback","diffuse","uvScaleMap","WebGLRenderTarget","offsetRepeat","flipEnvMap","totalSize","clientHeight","fogColor","Fog","fogNear","fogFar","fogDensity","uniformMatrix3fv","loadUniform","uniform2f","uniform4f","uniform1iv","uniform3iv","uniform2fv","uniform3fv","uniform4fv","uniformMatrix2fv","locationProperty","valueProperty","_array","i3","i4","setCubeTexture","setCubeTextureDynamic","ll","light","directionalLength","pointLength","spotLength","hemiLength","shadowsLength","AmbientLight","DirectionalLight","shadow","shadowBias","bias","shadowRadius","shadowMapSize","mapSize","SpotLight","coneCos","penumbraCos","PointLight","HemisphereLight","skyColor","setFaceCulling","cullFace","frontFaceDirection","frontFace","CW","CCW","BACK","FRONT","FRONT_AND_BACK","setTextureParameters","textureType","isPowerOfTwoImage","texParameteri","TEXTURE_WRAP_S","TEXTURE_WRAP_T","TEXTURE_MAG_FILTER","TEXTURE_MIN_FILTER","CLAMP_TO_EDGE","filterFallback","__currentAnisotropy","texParameterf","TEXTURE_MAX_ANISOTROPY_EXT","uploadTexture","slot","createTexture","activeTexture","TEXTURE0","bindTexture","TEXTURE_2D","pixelStorei","UNPACK_FLIP_Y_WEBGL","UNPACK_PREMULTIPLY_ALPHA_WEBGL","UNPACK_ALIGNMENT","clampToMaxSize","maxTextureSize","textureNeedsPowerOfTwo","makePowerOfTwo","glFormat","glType","mipmap","texImage2D","getCompressedTextureFormats","compressedTexImage2D","generateMipmap","__version","complete","maxSize","HTMLImageElement","HTMLCanvasElement","TEXTURE_CUBE_MAP","isCompressed","isDataTexture","cubeImage","maxCubemapSize","TEXTURE_CUBE_MAP_POSITIVE_X","setupFrameBufferTexture","framebuffer","attachment","textureTarget","bindFramebuffer","FRAMEBUFFER","framebufferTexture2D","setupRenderBufferStorage","renderbuffer","bindRenderbuffer","RENDERBUFFER","depthBuffer","stencilBuffer","renderbufferStorage","DEPTH_COMPONENT16","framebufferRenderbuffer","DEPTH_ATTACHMENT","DEPTH_STENCIL","DEPTH_STENCIL_ATTACHMENT","RGBA4","setupDepthRenderbuffer","isCube","createRenderbuffer","setupRenderTarget","isTargetPowerOfTwo","createFramebuffer","COLOR_ATTACHMENT0","getCurrentRenderTarget","activeCubeFace","scissorTest","activeMipMapLevel","readRenderTargetPixels","restore","IMPLEMENTATION_COLOR_READ_FORMAT","IMPLEMENTATION_COLOR_READ_TYPE","checkFramebufferStatus","FRAMEBUFFER_COMPLETE","readPixels","NEAREST","LINEAR","REPEAT","MIRRORED_REPEAT","NEAREST_MIPMAP_NEAREST","NEAREST_MIPMAP_LINEAR","LINEAR_MIPMAP_NEAREST","LINEAR_MIPMAP_LINEAR","UNSIGNED_BYTE","UNSIGNED_SHORT_4_4_4_4","UNSIGNED_SHORT_5_5_5_1","UNSIGNED_SHORT_5_6_5","BYTE","SHORT","UNSIGNED_SHORT","INT","UNSIGNED_INT","HALF_FLOAT_OES","ALPHA","RGB","RGBA","LUMINANCE","LUMINANCE_ALPHA","FUNC_ADD","FUNC_SUBTRACT","FUNC_REVERSE_SUBTRACT","ZERO","ONE","SRC_COLOR","ONE_MINUS_SRC_COLOR","SRC_ALPHA","ONE_MINUS_SRC_ALPHA","DST_ALPHA","ONE_MINUS_DST_ALPHA","DST_COLOR","ONE_MINUS_DST_COLOR","SRC_ALPHA_SATURATE","COMPRESSED_RGB_S3TC_DXT1_EXT","COMPRESSED_RGBA_S3TC_DXT1_EXT","COMPRESSED_RGBA_S3TC_DXT3_EXT","COMPRESSED_RGBA_S3TC_DXT5_EXT","COMPRESSED_RGB_PVRTC_4BPPV1_IMG","COMPRESSED_RGB_PVRTC_2BPPV1_IMG","COMPRESSED_RGBA_PVRTC_4BPPV1_IMG","COMPRESSED_RGBA_PVRTC_2BPPV1_IMG","COMPRESSED_RGB_ETC1_WEBGL","MIN_EXT","MAX_EXT","gl","getExtension","getMaxPrecision","VERTEX_SHADER","HIGH_FLOAT","FRAGMENT_SHADER","MEDIUM_FLOAT","maxTextures","MAX_TEXTURE_IMAGE_UNITS","maxVertexTextures","MAX_VERTEX_TEXTURE_IMAGE_UNITS","MAX_TEXTURE_SIZE","MAX_CUBE_MAP_TEXTURE_SIZE","maxAttributes","MAX_VERTEX_ATTRIBS","maxVertexUniforms","MAX_VERTEX_UNIFORM_VECTORS","maxVaryings","MAX_VARYING_VECTORS","maxFragmentUniforms","MAX_FRAGMENT_UNIFORM_VECTORS","vertexTextures","floatFragmentTextures","_maxPrecision","newAttributes","enabledAttributes","attributeDivisors","compressedTextureFormats","currentBlending","currentBlendEquation","currentBlendSrc","currentBlendDst","currentBlendEquationAlpha","currentBlendSrcAlpha","currentBlendDstAlpha","currentPremultipledAlpha","currentDepthFunc","currentDepthWrite","currentColorWrite","currentStencilWrite","currentStencilFunc","currentStencilRef","currentStencilMask","currentStencilFail","currentStencilZFail","currentStencilZPass","currentFlipSided","currentLineWidth","currentPolygonOffsetFactor","currentPolygonOffsetUnits","currentScissorTest","currentTextureSlot","currentBoundTextures","currentClearColor","currentClearDepth","currentClearStencil","currentScissor","currentViewport","emptyTexture","DEPTH_TEST","LEQUAL","BLEND","blendFunc","enableVertexAttribArray","vertexAttribDivisorANGLE","disableVertexAttribArray","formats","COMPRESSED_TEXTURE_FORMATS","blendEquationSeparate","blendFuncSeparate","NEVER","ALWAYS","LESS","EQUAL","GEQUAL","GREATER","NOTEQUAL","depthMask","colorMask","setStencilFunc","stencilFunc","stencilRef","stencilMask","setStencilOp","stencilFail","stencilZFail","stencilZPass","stencilOp","setStencilTest","stencilTest","STENCIL_TEST","setStencilWrite","stencilWrite","flipSided","factor","units","POLYGON_OFFSET_FILL","getScissorTest","SCISSOR_TEST","webglSlot","webglType","webglTexture","boundTexture","WebGLGeometries","onGeometryDispose","buffergeometry","_bufferGeometry","deleteAttribute","deleteAttributes","bufferproperty","__webglBuffer","deleteBuffer","removeAttributeBuffer","drawArraysInstancedANGLE","drawElements","drawElementsInstancedANGLE","WebGLShader","createShader","shaderSource","compileShader","getShaderParameter","COMPILE_STATUS","getShaderInfoLog","_renderer","_objects","_state","_shadowMapSize","_lookTarget","_lightPositionWorld","_renderList","_MorphingFlag","_SkinningFlag","_NumberOfMaterialVariants","_depthMaterials","_distanceMaterials","cubeDirections","cubeUps","cube2DViewPorts","depthShader","depthUniforms","distanceShader","distanceUniforms","useMorphing","useSkinning","depthMaterial","distanceMaterial","faceCount","isPointLight","shadowCamera","vpWidth","vpHeight","pars","shadowMatrix","vpDimensions","getDepthMaterial","clearAlpha","lightPositionWorld","newMaterial","materialVariants","customMaterial","customDepthMaterial","customDistanceMaterial","variantIndex","lightPos","vertexBuffer","elementBuffer","spritePosition","spriteRotation","spriteScale","STATIC_DRAW","createProgram","getAttribLocation","uvOffset","getUniformLocation","uvScale","fogType","fillStyle","fillRect","oldFogType","sceneFogType","sprite","attachShader","linkProgram","flares","hasVertexTexture","tempTexture","occlusionTexture","renderType","occlusionMap","screenPosition","tempPosition","invAspect","halfViewportWidth","halfViewportHeight","screenPositionPixels","TEXTURE1","copyTexImage2D","prefix","updateAttribute","bufferType","attributeProperties","updateBuffer","usage","bufferSubData","subarray","edges","checkEdge","list","WebGLProgram","programIdCount","structRe","arrayStructRe","arrayRe","getEncodingComponents","getTexelDecodingFunction","functionName","getTexelEncodingFunction","getToneMappingFunction","toneMappingName","generateExtensions","rendererExtensions","chunks","envMapCubeUV","flatShading","filter","filterEmptyLine","generateDefines","fetchUniformLocations","identifiers","getProgramParameter","ACTIVE_UNIFORMS","getActiveUniform","matches","structName","structProperty","uniformsStruct","arrayName","arrayIndex","arrayProperty","uniformsArray","uniformsArrayIndex","fetchAttributeLocations","ACTIVE_ATTRIBUTES","getActiveAttrib","replaceLightNums","replace","numDirLights","numSpotLights","numPointLights","numHemiLights","parseIncludes","pattern","include","unrollLoops","snippet","unroll","shadowMapTypeDefine","shadowMapType","envMapTypeDefine","envMapModeDefine","envMapBlendingDefine","gammaFactorDefine","customExtensions","customDefines","prefixVertex","prefixFragment","supportsVertexTextures","maxBones","doubleSided","shadowMapEnabled","pointLightShadows","useFog","fogExp","outputEncoding","mapEncoding","envMapEncoding","emissiveMapEncoding","vertexGlsl","fragmentGlsl","glVertexShader","glFragmentShader","bindAttribLocation","programLog","getProgramInfoLog","vertexLog","fragmentLog","runnable","haveDiagnostics","LINK_STATUS","diagnostics","deleteShader","cachedUniforms","cachedAttributes","destroy","deleteProgram","usedTimes","options","shaderIDs","parameterNames","allocateBones","nVertexUniforms","nVertexMatrices","getTextureEncodingFromMap","gammaOverrideLinear","envMapMode","parameterName","pl","pop","Renderer","window","devicePixelRatio","el","createMesh","_ref","easeOutBack","Controls","initialYaw","velo","rotateStart","rotateEnd","rotateDelta","orientation","momentum","isUserInteracting","addDraggableStyle","onMouseMove","onMouseDown","onMouseUp","onTouchStart","clientX","touches","pageX","clientY","pageY","onTouchMove","onTouchEnd","_","onDeviceMotion","onMessage","bindEvents","isInIframe","centralize","_this2","endTheta","duration","startTheta","startPhi","Date","now","animate","progress","elapsed","cancelAnimationFrame","getCurrentStyle","concat","addDraggingStyle","setAttribute","_event$data","portrait","rotationRate","matchMedia","beta","verticalPanning","adjustPhi","onDragStart","inertia","onDragStop","previousPhi","previousTheta","ThreeSixtyViewer","container","containerId","controls","stopVideoLoop","onError","startVideoLoop","createScene","element","getElement","elementReady","initAfterLoadedMetadata","querySelector","play","pause","clearTimeout","videoLoopId","display","animationFrameId","removeChild","tagName","loop","muted","autoplay","err","videoFps","videoLoop","setTimeout","appendChild","cameraUpdated","Video","_ThreeSixtyViewer","Image","src","Canvas","videoHeight","videoWidth","clearRect","Audio","driver","driverInitialized","load","currentTime","_this3","shouldInitializeDriver","HAVE_FUTURE_DATA","onDriverReady"],"mappings":"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","sourcesContent":["var utils = {\n  isiOS: function isiOS() {\n    return /(ipad|iphone|ipod)/ig.test(navigator.userAgent);\n  },\n  isEdge: function isEdge() {\n    return /(Edge)/ig.test(navigator.userAgent);\n  },\n  shouldUseAudioDriver: function shouldUseAudioDriver() {\n    var isOldiOSOnIphone = /iphone.*(7|8|9)_[0-9]/i.test(navigator.userAgent);\n    var isWebView = /(iPhone|iPod).*AppleWebKit(?!.*Safari)/i.test(navigator.userAgent);\n    return isOldiOSOnIphone || isWebView;\n  },\n  shouldUseCanvasInBetween: function shouldUseCanvasInBetween() {\n    return /trident|edge/i.test(navigator.userAgent);\n  }\n};\n\nfunction _classCallCheck(instance, Constructor) {\n  if (!(instance instanceof Constructor)) {\n    throw new TypeError(\"Cannot call a class as a function\");\n  }\n}\n\nfunction _defineProperties(target, props) {\n  for (var i = 0; i < props.length; i++) {\n    var descriptor = props[i];\n    descriptor.enumerable = descriptor.enumerable || false;\n    descriptor.configurable = true;\n    if (\"value\" in descriptor) descriptor.writable = true;\n    Object.defineProperty(target, descriptor.key, descriptor);\n  }\n}\n\nfunction _createClass(Constructor, protoProps, staticProps) {\n  if (protoProps) _defineProperties(Constructor.prototype, protoProps);\n  if (staticProps) _defineProperties(Constructor, staticProps);\n  return Constructor;\n}\n\nfunction _inherits(subClass, superClass) {\n  if (typeof superClass !== \"function\" && superClass !== null) {\n    throw new TypeError(\"Super expression must either be null or a function\");\n  }\n\n  subClass.prototype = Object.create(superClass && superClass.prototype, {\n    constructor: {\n      value: subClass,\n      writable: true,\n      configurable: true\n    }\n  });\n  if (superClass) _setPrototypeOf(subClass, superClass);\n}\n\nfunction _getPrototypeOf(o) {\n  _getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf : function _getPrototypeOf(o) {\n    return o.__proto__ || Object.getPrototypeOf(o);\n  };\n  return _getPrototypeOf(o);\n}\n\nfunction _setPrototypeOf(o, p) {\n  _setPrototypeOf = Object.setPrototypeOf || function _setPrototypeOf(o, p) {\n    o.__proto__ = p;\n    return o;\n  };\n\n  return _setPrototypeOf(o, p);\n}\n\nfunction _assertThisInitialized(self) {\n  if (self === void 0) {\n    throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\");\n  }\n\n  return self;\n}\n\nfunction _possibleConstructorReturn(self, call) {\n  if (call && (typeof call === \"object\" || typeof call === \"function\")) {\n    return call;\n  }\n\n  return _assertThisInitialized(self);\n}\n\nfunction _superPropBase(object, property) {\n  while (!Object.prototype.hasOwnProperty.call(object, property)) {\n    object = _getPrototypeOf(object);\n    if (object === null) break;\n  }\n\n  return object;\n}\n\nfunction _get(target, property, receiver) {\n  if (typeof Reflect !== \"undefined\" && Reflect.get) {\n    _get = Reflect.get;\n  } else {\n    _get = function _get(target, property, receiver) {\n      var base = _superPropBase(target, property);\n\n      if (!base) return;\n      var desc = Object.getOwnPropertyDescriptor(base, property);\n\n      if (desc.get) {\n        return desc.get.call(receiver);\n      }\n\n      return desc.value;\n    };\n  }\n\n  return _get(target, property, receiver || target);\n}\n\n// File:src/Three.js\n\n/**\n * @author mrdoob / http://mrdoob.com/\n */\nvar THREE = {\n  REVISION: '75'\n}; //\n\nvar threejs360 = THREE; //\n\nif (Number.EPSILON === undefined) {\n  Number.EPSILON = Math.pow(2, -52);\n} //\n\n\nif (Math.sign === undefined) {\n  // https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Math/sign\n  Math.sign = function (x) {\n    return x < 0 ? -1 : x > 0 ? 1 : +x;\n  };\n}\n\nif (Function.prototype.name === undefined && Object.defineProperty !== undefined) {\n  // Missing in IE9-11.\n  // https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Function/name\n  Object.defineProperty(Function.prototype, 'name', {\n    get: function () {\n      return this.toString().match(/^\\s*function\\s*(\\S*)\\s*\\(/)[1];\n    }\n  });\n}\n\nif (Object.assign === undefined) {\n  // https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Object/assign\n  Object.defineProperty(Object, 'assign', {\n    writable: true,\n    configurable: true,\n    value: function (target) {\n\n      if (target === undefined || target === null) {\n        throw new TypeError(\"Cannot convert first argument to object\");\n      }\n\n      var to = Object(target);\n\n      for (var i = 1, n = arguments.length; i !== n; ++i) {\n        var nextSource = arguments[i];\n        if (nextSource === undefined || nextSource === null) continue;\n        nextSource = Object(nextSource);\n        var keysArray = Object.keys(nextSource);\n\n        for (var nextIndex = 0, len = keysArray.length; nextIndex !== len; ++nextIndex) {\n          var nextKey = keysArray[nextIndex];\n          var desc = Object.getOwnPropertyDescriptor(nextSource, nextKey);\n\n          if (desc !== undefined && desc.enumerable) {\n            to[nextKey] = nextSource[nextKey];\n          }\n        }\n      }\n\n      return to;\n    }\n  });\n} // https://developer.mozilla.org/en-US/docs/Web/API/MouseEvent.button\n\n\nTHREE.MOUSE = {\n  LEFT: 0,\n  MIDDLE: 1,\n  RIGHT: 2\n}; // GL STATE CONSTANTS\n\nTHREE.CullFaceNone = 0;\nTHREE.CullFaceBack = 1;\nTHREE.CullFaceFront = 2;\nTHREE.CullFaceFrontBack = 3;\nTHREE.FrontFaceDirectionCW = 0;\nTHREE.FrontFaceDirectionCCW = 1; // SHADOWING TYPES\n\nTHREE.BasicShadowMap = 0;\nTHREE.PCFShadowMap = 1;\nTHREE.PCFSoftShadowMap = 2; // MATERIAL CONSTANTS\n// side\n\nTHREE.FrontSide = 0;\nTHREE.BackSide = 1;\nTHREE.DoubleSide = 2; // shading\n\nTHREE.FlatShading = 1;\nTHREE.SmoothShading = 2; // colors\n\nTHREE.NoColors = 0;\nTHREE.FaceColors = 1;\nTHREE.VertexColors = 2; // blending modes\n\nTHREE.NoBlending = 0;\nTHREE.NormalBlending = 1;\nTHREE.AdditiveBlending = 2;\nTHREE.SubtractiveBlending = 3;\nTHREE.MultiplyBlending = 4;\nTHREE.CustomBlending = 5; // custom blending equations\n// (numbers start from 100 not to clash with other\n// mappings to OpenGL constants defined in Texture.js)\n\nTHREE.AddEquation = 100;\nTHREE.SubtractEquation = 101;\nTHREE.ReverseSubtractEquation = 102;\nTHREE.MinEquation = 103;\nTHREE.MaxEquation = 104; // custom blending destination factors\n\nTHREE.ZeroFactor = 200;\nTHREE.OneFactor = 201;\nTHREE.SrcColorFactor = 202;\nTHREE.OneMinusSrcColorFactor = 203;\nTHREE.SrcAlphaFactor = 204;\nTHREE.OneMinusSrcAlphaFactor = 205;\nTHREE.DstAlphaFactor = 206;\nTHREE.OneMinusDstAlphaFactor = 207; // custom blending source factors\n//THREE.ZeroFactor = 200;\n//THREE.OneFactor = 201;\n//THREE.SrcAlphaFactor = 204;\n//THREE.OneMinusSrcAlphaFactor = 205;\n//THREE.DstAlphaFactor = 206;\n//THREE.OneMinusDstAlphaFactor = 207;\n\nTHREE.DstColorFactor = 208;\nTHREE.OneMinusDstColorFactor = 209;\nTHREE.SrcAlphaSaturateFactor = 210; // depth modes\n\nTHREE.NeverDepth = 0;\nTHREE.AlwaysDepth = 1;\nTHREE.LessDepth = 2;\nTHREE.LessEqualDepth = 3;\nTHREE.EqualDepth = 4;\nTHREE.GreaterEqualDepth = 5;\nTHREE.GreaterDepth = 6;\nTHREE.NotEqualDepth = 7; // TEXTURE CONSTANTS\n\nTHREE.MultiplyOperation = 0;\nTHREE.MixOperation = 1;\nTHREE.AddOperation = 2; // Tone Mapping modes\n\nTHREE.NoToneMapping = 0; // do not do any tone mapping, not even exposure (required for special purpose passes.)\n\nTHREE.LinearToneMapping = 1; // only apply exposure.\n\nTHREE.ReinhardToneMapping = 2;\nTHREE.Uncharted2ToneMapping = 3; // John Hable\n\nTHREE.CineonToneMapping = 4; // optimized filmic operator by Jim Hejl and Richard Burgess-Dawson\n// Mapping modes\n\nTHREE.UVMapping = 300;\nTHREE.CubeReflectionMapping = 301;\nTHREE.CubeRefractionMapping = 302;\nTHREE.EquirectangularReflectionMapping = 303;\nTHREE.EquirectangularRefractionMapping = 304;\nTHREE.SphericalReflectionMapping = 305;\nTHREE.CubeUVReflectionMapping = 306;\nTHREE.CubeUVRefractionMapping = 307; // Wrapping modes\n\nTHREE.RepeatWrapping = 1000;\nTHREE.ClampToEdgeWrapping = 1001;\nTHREE.MirroredRepeatWrapping = 1002; // Filters\n\nTHREE.NearestFilter = 1003;\nTHREE.NearestMipMapNearestFilter = 1004;\nTHREE.NearestMipMapLinearFilter = 1005;\nTHREE.LinearFilter = 1006;\nTHREE.LinearMipMapNearestFilter = 1007;\nTHREE.LinearMipMapLinearFilter = 1008; // Data types\n\nTHREE.UnsignedByteType = 1009;\nTHREE.ByteType = 1010;\nTHREE.ShortType = 1011;\nTHREE.UnsignedShortType = 1012;\nTHREE.IntType = 1013;\nTHREE.UnsignedIntType = 1014;\nTHREE.FloatType = 1015;\nTHREE.HalfFloatType = 1025; // Pixel types\n//THREE.UnsignedByteType = 1009;\n\nTHREE.UnsignedShort4444Type = 1016;\nTHREE.UnsignedShort5551Type = 1017;\nTHREE.UnsignedShort565Type = 1018; // Pixel formats\n\nTHREE.AlphaFormat = 1019;\nTHREE.RGBFormat = 1020;\nTHREE.RGBAFormat = 1021;\nTHREE.LuminanceFormat = 1022;\nTHREE.LuminanceAlphaFormat = 1023; // THREE.RGBEFormat handled as THREE.RGBAFormat in shaders\n\nTHREE.RGBEFormat = THREE.RGBAFormat; //1024;\n// DDS / ST3C Compressed texture formats\n\nTHREE.RGB_S3TC_DXT1_Format = 2001;\nTHREE.RGBA_S3TC_DXT1_Format = 2002;\nTHREE.RGBA_S3TC_DXT3_Format = 2003;\nTHREE.RGBA_S3TC_DXT5_Format = 2004; // PVRTC compressed texture formats\n\nTHREE.RGB_PVRTC_4BPPV1_Format = 2100;\nTHREE.RGB_PVRTC_2BPPV1_Format = 2101;\nTHREE.RGBA_PVRTC_4BPPV1_Format = 2102;\nTHREE.RGBA_PVRTC_2BPPV1_Format = 2103; // ETC compressed texture formats\n\nTHREE.RGB_ETC1_Format = 2151; // Loop styles for AnimationAction\n\nTHREE.LoopOnce = 2200;\nTHREE.LoopRepeat = 2201;\nTHREE.LoopPingPong = 2202; // Interpolation\n\nTHREE.InterpolateDiscrete = 2300;\nTHREE.InterpolateLinear = 2301;\nTHREE.InterpolateSmooth = 2302; // Interpolant ending modes\n\nTHREE.ZeroCurvatureEnding = 2400;\nTHREE.ZeroSlopeEnding = 2401;\nTHREE.WrapAroundEnding = 2402; // Triangle Draw modes\n\nTHREE.TrianglesDrawMode = 0;\nTHREE.TriangleStripDrawMode = 1;\nTHREE.TriangleFanDrawMode = 2; // Texture Encodings\n\nTHREE.LinearEncoding = 3000; // No encoding at all.\n\nTHREE.sRGBEncoding = 3001;\nTHREE.GammaEncoding = 3007; // uses GAMMA_FACTOR, for backwards compatibility with WebGLRenderer.gammaInput/gammaOutput\n// The following Texture Encodings are for RGB-only (no alpha) HDR light emission sources.\n// These encodings should not specified as output encodings except in rare situations.\n\nTHREE.RGBEEncoding = 3002; // AKA Radiance.\n\nTHREE.LogLuvEncoding = 3003;\nTHREE.RGBM7Encoding = 3004;\nTHREE.RGBM16Encoding = 3005;\nTHREE.RGBDEncoding = 3006; // MaxRange is 256.\n// File:src/math/Math.js\n\n/**\n * @author alteredq / http://alteredqualia.com/\n * @author mrdoob / http://mrdoob.com/\n */\n\nTHREE.Math = {\n  generateUUID: function () {\n    // http://www.broofa.com/Tools/Math.uuid.htm\n    var chars = '0123456789ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz'.split('');\n    var uuid = new Array(36);\n    var rnd = 0,\n        r;\n    return function () {\n      for (var i = 0; i < 36; i++) {\n        if (i === 8 || i === 13 || i === 18 || i === 23) {\n          uuid[i] = '-';\n        } else if (i === 14) {\n          uuid[i] = '4';\n        } else {\n          if (rnd <= 0x02) rnd = 0x2000000 + Math.random() * 0x1000000 | 0;\n          r = rnd & 0xf;\n          rnd = rnd >> 4;\n          uuid[i] = chars[i === 19 ? r & 0x3 | 0x8 : r];\n        }\n      }\n\n      return uuid.join('');\n    };\n  }(),\n  clamp: function (value, min, max) {\n    return Math.max(min, Math.min(max, value));\n  },\n  // compute euclidian modulo of m % n\n  // https://en.wikipedia.org/wiki/Modulo_operation\n  euclideanModulo: function (n, m) {\n    return (n % m + m) % m;\n  },\n  // Linear mapping from range <a1, a2> to range <b1, b2>\n  mapLinear: function (x, a1, a2, b1, b2) {\n    return b1 + (x - a1) * (b2 - b1) / (a2 - a1);\n  },\n  // http://en.wikipedia.org/wiki/Smoothstep\n  smoothstep: function (x, min, max) {\n    if (x <= min) return 0;\n    if (x >= max) return 1;\n    x = (x - min) / (max - min);\n    return x * x * (3 - 2 * x);\n  },\n  smootherstep: function (x, min, max) {\n    if (x <= min) return 0;\n    if (x >= max) return 1;\n    x = (x - min) / (max - min);\n    return x * x * x * (x * (x * 6 - 15) + 10);\n  },\n  random16: function () {\n    return Math.random();\n  },\n  // Random integer from <low, high> interval\n  randInt: function (low, high) {\n    return low + Math.floor(Math.random() * (high - low + 1));\n  },\n  // Random float from <low, high> interval\n  randFloat: function (low, high) {\n    return low + Math.random() * (high - low);\n  },\n  // Random float from <-range/2, range/2> interval\n  randFloatSpread: function (range) {\n    return range * (0.5 - Math.random());\n  },\n  degToRad: function () {\n    var degreeToRadiansFactor = Math.PI / 180;\n    return function (degrees) {\n      return degrees * degreeToRadiansFactor;\n    };\n  }(),\n  radToDeg: function () {\n    var radianToDegreesFactor = 180 / Math.PI;\n    return function (radians) {\n      return radians * radianToDegreesFactor;\n    };\n  }(),\n  isPowerOfTwo: function (value) {\n    return (value & value - 1) === 0 && value !== 0;\n  },\n  nearestPowerOfTwo: function (value) {\n    return Math.pow(2, Math.round(Math.log(value) / Math.LN2));\n  },\n  nextPowerOfTwo: function (value) {\n    value--;\n    value |= value >> 1;\n    value |= value >> 2;\n    value |= value >> 4;\n    value |= value >> 8;\n    value |= value >> 16;\n    value++;\n    return value;\n  }\n}; // File:src/math/Color.js\n\n/**\n * @author mrdoob / http://mrdoob.com/\n */\n\nTHREE.Color = function (color) {\n  if (arguments.length === 3) {\n    return this.fromArray(arguments);\n  }\n\n  return this.set(color);\n};\n\nTHREE.Color.prototype = {\n  constructor: THREE.Color,\n  r: 1,\n  g: 1,\n  b: 1,\n  set: function (value) {\n    if (value instanceof THREE.Color) {\n      this.copy(value);\n    } else if (typeof value === 'number') {\n      this.setHex(value);\n    } else if (typeof value === 'string') {\n      this.setStyle(value);\n    }\n\n    return this;\n  },\n  setScalar: function (scalar) {\n    this.r = scalar;\n    this.g = scalar;\n    this.b = scalar;\n  },\n  setHex: function (hex) {\n    hex = Math.floor(hex);\n    this.r = (hex >> 16 & 255) / 255;\n    this.g = (hex >> 8 & 255) / 255;\n    this.b = (hex & 255) / 255;\n    return this;\n  },\n  setRGB: function (r, g, b) {\n    this.r = r;\n    this.g = g;\n    this.b = b;\n    return this;\n  },\n  setHSL: function () {\n    function hue2rgb(p, q, t) {\n      if (t < 0) t += 1;\n      if (t > 1) t -= 1;\n      if (t < 1 / 6) return p + (q - p) * 6 * t;\n      if (t < 1 / 2) return q;\n      if (t < 2 / 3) return p + (q - p) * 6 * (2 / 3 - t);\n      return p;\n    }\n\n    return function (h, s, l) {\n      // h,s,l ranges are in 0.0 - 1.0\n      h = THREE.Math.euclideanModulo(h, 1);\n      s = THREE.Math.clamp(s, 0, 1);\n      l = THREE.Math.clamp(l, 0, 1);\n\n      if (s === 0) {\n        this.r = this.g = this.b = l;\n      } else {\n        var p = l <= 0.5 ? l * (1 + s) : l + s - l * s;\n        var q = 2 * l - p;\n        this.r = hue2rgb(q, p, h + 1 / 3);\n        this.g = hue2rgb(q, p, h);\n        this.b = hue2rgb(q, p, h - 1 / 3);\n      }\n\n      return this;\n    };\n  }(),\n  setStyle: function (style) {\n    function handleAlpha(string) {\n      if (string === undefined) return;\n    }\n\n    var m;\n\n    if (m = /^((?:rgb|hsl)a?)\\(\\s*([^\\)]*)\\)/.exec(style)) {\n      // rgb / hsl\n      var color;\n      var name = m[1];\n      var components = m[2];\n\n      switch (name) {\n        case 'rgb':\n        case 'rgba':\n          if (color = /^(\\d+)\\s*,\\s*(\\d+)\\s*,\\s*(\\d+)\\s*(,\\s*([0-9]*\\.?[0-9]+)\\s*)?$/.exec(components)) {\n            // rgb(255,0,0) rgba(255,0,0,0.5)\n            this.r = Math.min(255, parseInt(color[1], 10)) / 255;\n            this.g = Math.min(255, parseInt(color[2], 10)) / 255;\n            this.b = Math.min(255, parseInt(color[3], 10)) / 255;\n            handleAlpha(color[5]);\n            return this;\n          }\n\n          if (color = /^(\\d+)\\%\\s*,\\s*(\\d+)\\%\\s*,\\s*(\\d+)\\%\\s*(,\\s*([0-9]*\\.?[0-9]+)\\s*)?$/.exec(components)) {\n            // rgb(100%,0%,0%) rgba(100%,0%,0%,0.5)\n            this.r = Math.min(100, parseInt(color[1], 10)) / 100;\n            this.g = Math.min(100, parseInt(color[2], 10)) / 100;\n            this.b = Math.min(100, parseInt(color[3], 10)) / 100;\n            handleAlpha(color[5]);\n            return this;\n          }\n\n          break;\n\n        case 'hsl':\n        case 'hsla':\n          if (color = /^([0-9]*\\.?[0-9]+)\\s*,\\s*(\\d+)\\%\\s*,\\s*(\\d+)\\%\\s*(,\\s*([0-9]*\\.?[0-9]+)\\s*)?$/.exec(components)) {\n            // hsl(120,50%,50%) hsla(120,50%,50%,0.5)\n            var h = parseFloat(color[1]) / 360;\n            var s = parseInt(color[2], 10) / 100;\n            var l = parseInt(color[3], 10) / 100;\n            handleAlpha(color[5]);\n            return this.setHSL(h, s, l);\n          }\n\n          break;\n      }\n    } else if (m = /^\\#([A-Fa-f0-9]+)$/.exec(style)) {\n      // hex color\n      var hex = m[1];\n      var size = hex.length;\n\n      if (size === 3) {\n        // #ff0\n        this.r = parseInt(hex.charAt(0) + hex.charAt(0), 16) / 255;\n        this.g = parseInt(hex.charAt(1) + hex.charAt(1), 16) / 255;\n        this.b = parseInt(hex.charAt(2) + hex.charAt(2), 16) / 255;\n        return this;\n      } else if (size === 6) {\n        // #ff0000\n        this.r = parseInt(hex.charAt(0) + hex.charAt(1), 16) / 255;\n        this.g = parseInt(hex.charAt(2) + hex.charAt(3), 16) / 255;\n        this.b = parseInt(hex.charAt(4) + hex.charAt(5), 16) / 255;\n        return this;\n      }\n    }\n\n    if (style && style.length > 0) {\n      // color keywords\n      var hex = THREE.ColorKeywords[style];\n\n      if (hex !== undefined) {\n        // red\n        this.setHex(hex);\n      }\n    }\n\n    return this;\n  },\n  clone: function () {\n    return new this.constructor(this.r, this.g, this.b);\n  },\n  copy: function (color) {\n    this.r = color.r;\n    this.g = color.g;\n    this.b = color.b;\n    return this;\n  },\n  copyGammaToLinear: function (color, gammaFactor) {\n    if (gammaFactor === undefined) gammaFactor = 2.0;\n    this.r = Math.pow(color.r, gammaFactor);\n    this.g = Math.pow(color.g, gammaFactor);\n    this.b = Math.pow(color.b, gammaFactor);\n    return this;\n  },\n  copyLinearToGamma: function (color, gammaFactor) {\n    if (gammaFactor === undefined) gammaFactor = 2.0;\n    var safeInverse = gammaFactor > 0 ? 1.0 / gammaFactor : 1.0;\n    this.r = Math.pow(color.r, safeInverse);\n    this.g = Math.pow(color.g, safeInverse);\n    this.b = Math.pow(color.b, safeInverse);\n    return this;\n  },\n  convertGammaToLinear: function () {\n    var r = this.r,\n        g = this.g,\n        b = this.b;\n    this.r = r * r;\n    this.g = g * g;\n    this.b = b * b;\n    return this;\n  },\n  convertLinearToGamma: function () {\n    this.r = Math.sqrt(this.r);\n    this.g = Math.sqrt(this.g);\n    this.b = Math.sqrt(this.b);\n    return this;\n  },\n  getHex: function () {\n    return this.r * 255 << 16 ^ this.g * 255 << 8 ^ this.b * 255 << 0;\n  },\n  getHexString: function () {\n    return ('000000' + this.getHex().toString(16)).slice(-6);\n  },\n  getHSL: function (optionalTarget) {\n    // h,s,l ranges are in 0.0 - 1.0\n    var hsl = optionalTarget || {\n      h: 0,\n      s: 0,\n      l: 0\n    };\n    var r = this.r,\n        g = this.g,\n        b = this.b;\n    var max = Math.max(r, g, b);\n    var min = Math.min(r, g, b);\n    var hue, saturation;\n    var lightness = (min + max) / 2.0;\n\n    if (min === max) {\n      hue = 0;\n      saturation = 0;\n    } else {\n      var delta = max - min;\n      saturation = lightness <= 0.5 ? delta / (max + min) : delta / (2 - max - min);\n\n      switch (max) {\n        case r:\n          hue = (g - b) / delta + (g < b ? 6 : 0);\n          break;\n\n        case g:\n          hue = (b - r) / delta + 2;\n          break;\n\n        case b:\n          hue = (r - g) / delta + 4;\n          break;\n      }\n\n      hue /= 6;\n    }\n\n    hsl.h = hue;\n    hsl.s = saturation;\n    hsl.l = lightness;\n    return hsl;\n  },\n  getStyle: function () {\n    return 'rgb(' + (this.r * 255 | 0) + ',' + (this.g * 255 | 0) + ',' + (this.b * 255 | 0) + ')';\n  },\n  offsetHSL: function (h, s, l) {\n    var hsl = this.getHSL();\n    hsl.h += h;\n    hsl.s += s;\n    hsl.l += l;\n    this.setHSL(hsl.h, hsl.s, hsl.l);\n    return this;\n  },\n  add: function (color) {\n    this.r += color.r;\n    this.g += color.g;\n    this.b += color.b;\n    return this;\n  },\n  addColors: function (color1, color2) {\n    this.r = color1.r + color2.r;\n    this.g = color1.g + color2.g;\n    this.b = color1.b + color2.b;\n    return this;\n  },\n  addScalar: function (s) {\n    this.r += s;\n    this.g += s;\n    this.b += s;\n    return this;\n  },\n  multiply: function (color) {\n    this.r *= color.r;\n    this.g *= color.g;\n    this.b *= color.b;\n    return this;\n  },\n  multiplyScalar: function (s) {\n    this.r *= s;\n    this.g *= s;\n    this.b *= s;\n    return this;\n  },\n  lerp: function (color, alpha) {\n    this.r += (color.r - this.r) * alpha;\n    this.g += (color.g - this.g) * alpha;\n    this.b += (color.b - this.b) * alpha;\n    return this;\n  },\n  equals: function (c) {\n    return c.r === this.r && c.g === this.g && c.b === this.b;\n  },\n  fromArray: function (array, offset) {\n    if (offset === undefined) offset = 0;\n    this.r = array[offset];\n    this.g = array[offset + 1];\n    this.b = array[offset + 2];\n    return this;\n  },\n  toArray: function (array, offset) {\n    if (array === undefined) array = [];\n    if (offset === undefined) offset = 0;\n    array[offset] = this.r;\n    array[offset + 1] = this.g;\n    array[offset + 2] = this.b;\n    return array;\n  }\n};\nTHREE.ColorKeywords = {\n  'aliceblue': 0xF0F8FF,\n  'antiquewhite': 0xFAEBD7,\n  'aqua': 0x00FFFF,\n  'aquamarine': 0x7FFFD4,\n  'azure': 0xF0FFFF,\n  'beige': 0xF5F5DC,\n  'bisque': 0xFFE4C4,\n  'black': 0x000000,\n  'blanchedalmond': 0xFFEBCD,\n  'blue': 0x0000FF,\n  'blueviolet': 0x8A2BE2,\n  'brown': 0xA52A2A,\n  'burlywood': 0xDEB887,\n  'cadetblue': 0x5F9EA0,\n  'chartreuse': 0x7FFF00,\n  'chocolate': 0xD2691E,\n  'coral': 0xFF7F50,\n  'cornflowerblue': 0x6495ED,\n  'cornsilk': 0xFFF8DC,\n  'crimson': 0xDC143C,\n  'cyan': 0x00FFFF,\n  'darkblue': 0x00008B,\n  'darkcyan': 0x008B8B,\n  'darkgoldenrod': 0xB8860B,\n  'darkgray': 0xA9A9A9,\n  'darkgreen': 0x006400,\n  'darkgrey': 0xA9A9A9,\n  'darkkhaki': 0xBDB76B,\n  'darkmagenta': 0x8B008B,\n  'darkolivegreen': 0x556B2F,\n  'darkorange': 0xFF8C00,\n  'darkorchid': 0x9932CC,\n  'darkred': 0x8B0000,\n  'darksalmon': 0xE9967A,\n  'darkseagreen': 0x8FBC8F,\n  'darkslateblue': 0x483D8B,\n  'darkslategray': 0x2F4F4F,\n  'darkslategrey': 0x2F4F4F,\n  'darkturquoise': 0x00CED1,\n  'darkviolet': 0x9400D3,\n  'deeppink': 0xFF1493,\n  'deepskyblue': 0x00BFFF,\n  'dimgray': 0x696969,\n  'dimgrey': 0x696969,\n  'dodgerblue': 0x1E90FF,\n  'firebrick': 0xB22222,\n  'floralwhite': 0xFFFAF0,\n  'forestgreen': 0x228B22,\n  'fuchsia': 0xFF00FF,\n  'gainsboro': 0xDCDCDC,\n  'ghostwhite': 0xF8F8FF,\n  'gold': 0xFFD700,\n  'goldenrod': 0xDAA520,\n  'gray': 0x808080,\n  'green': 0x008000,\n  'greenyellow': 0xADFF2F,\n  'grey': 0x808080,\n  'honeydew': 0xF0FFF0,\n  'hotpink': 0xFF69B4,\n  'indianred': 0xCD5C5C,\n  'indigo': 0x4B0082,\n  'ivory': 0xFFFFF0,\n  'khaki': 0xF0E68C,\n  'lavender': 0xE6E6FA,\n  'lavenderblush': 0xFFF0F5,\n  'lawngreen': 0x7CFC00,\n  'lemonchiffon': 0xFFFACD,\n  'lightblue': 0xADD8E6,\n  'lightcoral': 0xF08080,\n  'lightcyan': 0xE0FFFF,\n  'lightgoldenrodyellow': 0xFAFAD2,\n  'lightgray': 0xD3D3D3,\n  'lightgreen': 0x90EE90,\n  'lightgrey': 0xD3D3D3,\n  'lightpink': 0xFFB6C1,\n  'lightsalmon': 0xFFA07A,\n  'lightseagreen': 0x20B2AA,\n  'lightskyblue': 0x87CEFA,\n  'lightslategray': 0x778899,\n  'lightslategrey': 0x778899,\n  'lightsteelblue': 0xB0C4DE,\n  'lightyellow': 0xFFFFE0,\n  'lime': 0x00FF00,\n  'limegreen': 0x32CD32,\n  'linen': 0xFAF0E6,\n  'magenta': 0xFF00FF,\n  'maroon': 0x800000,\n  'mediumaquamarine': 0x66CDAA,\n  'mediumblue': 0x0000CD,\n  'mediumorchid': 0xBA55D3,\n  'mediumpurple': 0x9370DB,\n  'mediumseagreen': 0x3CB371,\n  'mediumslateblue': 0x7B68EE,\n  'mediumspringgreen': 0x00FA9A,\n  'mediumturquoise': 0x48D1CC,\n  'mediumvioletred': 0xC71585,\n  'midnightblue': 0x191970,\n  'mintcream': 0xF5FFFA,\n  'mistyrose': 0xFFE4E1,\n  'moccasin': 0xFFE4B5,\n  'navajowhite': 0xFFDEAD,\n  'navy': 0x000080,\n  'oldlace': 0xFDF5E6,\n  'olive': 0x808000,\n  'olivedrab': 0x6B8E23,\n  'orange': 0xFFA500,\n  'orangered': 0xFF4500,\n  'orchid': 0xDA70D6,\n  'palegoldenrod': 0xEEE8AA,\n  'palegreen': 0x98FB98,\n  'paleturquoise': 0xAFEEEE,\n  'palevioletred': 0xDB7093,\n  'papayawhip': 0xFFEFD5,\n  'peachpuff': 0xFFDAB9,\n  'peru': 0xCD853F,\n  'pink': 0xFFC0CB,\n  'plum': 0xDDA0DD,\n  'powderblue': 0xB0E0E6,\n  'purple': 0x800080,\n  'red': 0xFF0000,\n  'rosybrown': 0xBC8F8F,\n  'royalblue': 0x4169E1,\n  'saddlebrown': 0x8B4513,\n  'salmon': 0xFA8072,\n  'sandybrown': 0xF4A460,\n  'seagreen': 0x2E8B57,\n  'seashell': 0xFFF5EE,\n  'sienna': 0xA0522D,\n  'silver': 0xC0C0C0,\n  'skyblue': 0x87CEEB,\n  'slateblue': 0x6A5ACD,\n  'slategray': 0x708090,\n  'slategrey': 0x708090,\n  'snow': 0xFFFAFA,\n  'springgreen': 0x00FF7F,\n  'steelblue': 0x4682B4,\n  'tan': 0xD2B48C,\n  'teal': 0x008080,\n  'thistle': 0xD8BFD8,\n  'tomato': 0xFF6347,\n  'turquoise': 0x40E0D0,\n  'violet': 0xEE82EE,\n  'wheat': 0xF5DEB3,\n  'white': 0xFFFFFF,\n  'whitesmoke': 0xF5F5F5,\n  'yellow': 0xFFFF00,\n  'yellowgreen': 0x9ACD32\n}; // File:src/math/Vector2.js\n\n/**\n * @author mrdoob / http://mrdoob.com/\n * @author philogb / http://blog.thejit.org/\n * @author egraether / http://egraether.com/\n * @author zz85 / http://www.lab4games.net/zz85/blog\n */\n\nTHREE.Vector2 = function (x, y) {\n  this.x = x || 0;\n  this.y = y || 0;\n};\n\nTHREE.Vector2.prototype = {\n  constructor: THREE.Vector2,\n\n  get width() {\n    return this.x;\n  },\n\n  set width(value) {\n    this.x = value;\n  },\n\n  get height() {\n    return this.y;\n  },\n\n  set height(value) {\n    this.y = value;\n  },\n\n  //\n  set: function (x, y) {\n    this.x = x;\n    this.y = y;\n    return this;\n  },\n  setScalar: function (scalar) {\n    this.x = scalar;\n    this.y = scalar;\n    return this;\n  },\n  setX: function (x) {\n    this.x = x;\n    return this;\n  },\n  setY: function (y) {\n    this.y = y;\n    return this;\n  },\n  setComponent: function (index, value) {\n    switch (index) {\n      case 0:\n        this.x = value;\n        break;\n\n      case 1:\n        this.y = value;\n        break;\n\n      default:\n        throw new Error('index is out of range: ' + index);\n    }\n  },\n  getComponent: function (index) {\n    switch (index) {\n      case 0:\n        return this.x;\n\n      case 1:\n        return this.y;\n\n      default:\n        throw new Error('index is out of range: ' + index);\n    }\n  },\n  clone: function () {\n    return new this.constructor(this.x, this.y);\n  },\n  copy: function (v) {\n    this.x = v.x;\n    this.y = v.y;\n    return this;\n  },\n  add: function (v, w) {\n    if (w !== undefined) {\n      return this.addVectors(v, w);\n    }\n\n    this.x += v.x;\n    this.y += v.y;\n    return this;\n  },\n  addScalar: function (s) {\n    this.x += s;\n    this.y += s;\n    return this;\n  },\n  addVectors: function (a, b) {\n    this.x = a.x + b.x;\n    this.y = a.y + b.y;\n    return this;\n  },\n  addScaledVector: function (v, s) {\n    this.x += v.x * s;\n    this.y += v.y * s;\n    return this;\n  },\n  sub: function (v, w) {\n    if (w !== undefined) {\n      return this.subVectors(v, w);\n    }\n\n    this.x -= v.x;\n    this.y -= v.y;\n    return this;\n  },\n  subScalar: function (s) {\n    this.x -= s;\n    this.y -= s;\n    return this;\n  },\n  subVectors: function (a, b) {\n    this.x = a.x - b.x;\n    this.y = a.y - b.y;\n    return this;\n  },\n  multiply: function (v) {\n    this.x *= v.x;\n    this.y *= v.y;\n    return this;\n  },\n  multiplyScalar: function (scalar) {\n    if (isFinite(scalar)) {\n      this.x *= scalar;\n      this.y *= scalar;\n    } else {\n      this.x = 0;\n      this.y = 0;\n    }\n\n    return this;\n  },\n  divide: function (v) {\n    this.x /= v.x;\n    this.y /= v.y;\n    return this;\n  },\n  divideScalar: function (scalar) {\n    return this.multiplyScalar(1 / scalar);\n  },\n  min: function (v) {\n    this.x = Math.min(this.x, v.x);\n    this.y = Math.min(this.y, v.y);\n    return this;\n  },\n  max: function (v) {\n    this.x = Math.max(this.x, v.x);\n    this.y = Math.max(this.y, v.y);\n    return this;\n  },\n  clamp: function (min, max) {\n    // This function assumes min < max, if this assumption isn't true it will not operate correctly\n    this.x = Math.max(min.x, Math.min(max.x, this.x));\n    this.y = Math.max(min.y, Math.min(max.y, this.y));\n    return this;\n  },\n  clampScalar: function () {\n    var min, max;\n    return function clampScalar(minVal, maxVal) {\n      if (min === undefined) {\n        min = new THREE.Vector2();\n        max = new THREE.Vector2();\n      }\n\n      min.set(minVal, minVal);\n      max.set(maxVal, maxVal);\n      return this.clamp(min, max);\n    };\n  }(),\n  clampLength: function (min, max) {\n    var length = this.length();\n    this.multiplyScalar(Math.max(min, Math.min(max, length)) / length);\n    return this;\n  },\n  floor: function () {\n    this.x = Math.floor(this.x);\n    this.y = Math.floor(this.y);\n    return this;\n  },\n  ceil: function () {\n    this.x = Math.ceil(this.x);\n    this.y = Math.ceil(this.y);\n    return this;\n  },\n  round: function () {\n    this.x = Math.round(this.x);\n    this.y = Math.round(this.y);\n    return this;\n  },\n  roundToZero: function () {\n    this.x = this.x < 0 ? Math.ceil(this.x) : Math.floor(this.x);\n    this.y = this.y < 0 ? Math.ceil(this.y) : Math.floor(this.y);\n    return this;\n  },\n  negate: function () {\n    this.x = -this.x;\n    this.y = -this.y;\n    return this;\n  },\n  dot: function (v) {\n    return this.x * v.x + this.y * v.y;\n  },\n  lengthSq: function () {\n    return this.x * this.x + this.y * this.y;\n  },\n  length: function () {\n    return Math.sqrt(this.x * this.x + this.y * this.y);\n  },\n  lengthManhattan: function () {\n    return Math.abs(this.x) + Math.abs(this.y);\n  },\n  normalize: function () {\n    return this.divideScalar(this.length());\n  },\n  angle: function () {\n    // computes the angle in radians with respect to the positive x-axis\n    var angle = Math.atan2(this.y, this.x);\n    if (angle < 0) angle += 2 * Math.PI;\n    return angle;\n  },\n  distanceTo: function (v) {\n    return Math.sqrt(this.distanceToSquared(v));\n  },\n  distanceToSquared: function (v) {\n    var dx = this.x - v.x,\n        dy = this.y - v.y;\n    return dx * dx + dy * dy;\n  },\n  setLength: function (length) {\n    return this.multiplyScalar(length / this.length());\n  },\n  lerp: function (v, alpha) {\n    this.x += (v.x - this.x) * alpha;\n    this.y += (v.y - this.y) * alpha;\n    return this;\n  },\n  lerpVectors: function (v1, v2, alpha) {\n    this.subVectors(v2, v1).multiplyScalar(alpha).add(v1);\n    return this;\n  },\n  equals: function (v) {\n    return v.x === this.x && v.y === this.y;\n  },\n  fromArray: function (array, offset) {\n    if (offset === undefined) offset = 0;\n    this.x = array[offset];\n    this.y = array[offset + 1];\n    return this;\n  },\n  toArray: function (array, offset) {\n    if (array === undefined) array = [];\n    if (offset === undefined) offset = 0;\n    array[offset] = this.x;\n    array[offset + 1] = this.y;\n    return array;\n  },\n  fromAttribute: function (attribute, index, offset) {\n    if (offset === undefined) offset = 0;\n    index = index * attribute.itemSize + offset;\n    this.x = attribute.array[index];\n    this.y = attribute.array[index + 1];\n    return this;\n  },\n  rotateAround: function (center, angle) {\n    var c = Math.cos(angle),\n        s = Math.sin(angle);\n    var x = this.x - center.x;\n    var y = this.y - center.y;\n    this.x = x * c - y * s + center.x;\n    this.y = x * s + y * c + center.y;\n    return this;\n  }\n}; // File:src/math/Vector3.js\n\n/**\n * @author mrdoob / http://mrdoob.com/\n * @author *kile / http://kile.stravaganza.org/\n * @author philogb / http://blog.thejit.org/\n * @author mikael emtinger / http://gomo.se/\n * @author egraether / http://egraether.com/\n * @author WestLangley / http://github.com/WestLangley\n */\n\nTHREE.Vector3 = function (x, y, z) {\n  this.x = x || 0;\n  this.y = y || 0;\n  this.z = z || 0;\n};\n\nTHREE.Vector3.prototype = {\n  constructor: THREE.Vector3,\n  set: function (x, y, z) {\n    this.x = x;\n    this.y = y;\n    this.z = z;\n    return this;\n  },\n  setScalar: function (scalar) {\n    this.x = scalar;\n    this.y = scalar;\n    this.z = scalar;\n    return this;\n  },\n  setX: function (x) {\n    this.x = x;\n    return this;\n  },\n  setY: function (y) {\n    this.y = y;\n    return this;\n  },\n  setZ: function (z) {\n    this.z = z;\n    return this;\n  },\n  setComponent: function (index, value) {\n    switch (index) {\n      case 0:\n        this.x = value;\n        break;\n\n      case 1:\n        this.y = value;\n        break;\n\n      case 2:\n        this.z = value;\n        break;\n\n      default:\n        throw new Error('index is out of range: ' + index);\n    }\n  },\n  getComponent: function (index) {\n    switch (index) {\n      case 0:\n        return this.x;\n\n      case 1:\n        return this.y;\n\n      case 2:\n        return this.z;\n\n      default:\n        throw new Error('index is out of range: ' + index);\n    }\n  },\n  clone: function () {\n    return new this.constructor(this.x, this.y, this.z);\n  },\n  copy: function (v) {\n    this.x = v.x;\n    this.y = v.y;\n    this.z = v.z;\n    return this;\n  },\n  add: function (v, w) {\n    if (w !== undefined) {\n      return this.addVectors(v, w);\n    }\n\n    this.x += v.x;\n    this.y += v.y;\n    this.z += v.z;\n    return this;\n  },\n  addScalar: function (s) {\n    this.x += s;\n    this.y += s;\n    this.z += s;\n    return this;\n  },\n  addVectors: function (a, b) {\n    this.x = a.x + b.x;\n    this.y = a.y + b.y;\n    this.z = a.z + b.z;\n    return this;\n  },\n  addScaledVector: function (v, s) {\n    this.x += v.x * s;\n    this.y += v.y * s;\n    this.z += v.z * s;\n    return this;\n  },\n  sub: function (v, w) {\n    if (w !== undefined) {\n      return this.subVectors(v, w);\n    }\n\n    this.x -= v.x;\n    this.y -= v.y;\n    this.z -= v.z;\n    return this;\n  },\n  subScalar: function (s) {\n    this.x -= s;\n    this.y -= s;\n    this.z -= s;\n    return this;\n  },\n  subVectors: function (a, b) {\n    this.x = a.x - b.x;\n    this.y = a.y - b.y;\n    this.z = a.z - b.z;\n    return this;\n  },\n  multiply: function (v, w) {\n    if (w !== undefined) {\n      return this.multiplyVectors(v, w);\n    }\n\n    this.x *= v.x;\n    this.y *= v.y;\n    this.z *= v.z;\n    return this;\n  },\n  multiplyScalar: function (scalar) {\n    if (isFinite(scalar)) {\n      this.x *= scalar;\n      this.y *= scalar;\n      this.z *= scalar;\n    } else {\n      this.x = 0;\n      this.y = 0;\n      this.z = 0;\n    }\n\n    return this;\n  },\n  multiplyVectors: function (a, b) {\n    this.x = a.x * b.x;\n    this.y = a.y * b.y;\n    this.z = a.z * b.z;\n    return this;\n  },\n  applyEuler: function () {\n    var quaternion;\n    return function applyEuler(euler) {\n\n      if (quaternion === undefined) quaternion = new THREE.Quaternion();\n      this.applyQuaternion(quaternion.setFromEuler(euler));\n      return this;\n    };\n  }(),\n  applyAxisAngle: function () {\n    var quaternion;\n    return function applyAxisAngle(axis, angle) {\n      if (quaternion === undefined) quaternion = new THREE.Quaternion();\n      this.applyQuaternion(quaternion.setFromAxisAngle(axis, angle));\n      return this;\n    };\n  }(),\n  applyMatrix3: function (m) {\n    var x = this.x;\n    var y = this.y;\n    var z = this.z;\n    var e = m.elements;\n    this.x = e[0] * x + e[3] * y + e[6] * z;\n    this.y = e[1] * x + e[4] * y + e[7] * z;\n    this.z = e[2] * x + e[5] * y + e[8] * z;\n    return this;\n  },\n  applyMatrix4: function (m) {\n    // input: THREE.Matrix4 affine matrix\n    var x = this.x,\n        y = this.y,\n        z = this.z;\n    var e = m.elements;\n    this.x = e[0] * x + e[4] * y + e[8] * z + e[12];\n    this.y = e[1] * x + e[5] * y + e[9] * z + e[13];\n    this.z = e[2] * x + e[6] * y + e[10] * z + e[14];\n    return this;\n  },\n  applyProjection: function (m) {\n    // input: THREE.Matrix4 projection matrix\n    var x = this.x,\n        y = this.y,\n        z = this.z;\n    var e = m.elements;\n    var d = 1 / (e[3] * x + e[7] * y + e[11] * z + e[15]); // perspective divide\n\n    this.x = (e[0] * x + e[4] * y + e[8] * z + e[12]) * d;\n    this.y = (e[1] * x + e[5] * y + e[9] * z + e[13]) * d;\n    this.z = (e[2] * x + e[6] * y + e[10] * z + e[14]) * d;\n    return this;\n  },\n  applyQuaternion: function (q) {\n    var x = this.x;\n    var y = this.y;\n    var z = this.z;\n    var qx = q.x;\n    var qy = q.y;\n    var qz = q.z;\n    var qw = q.w; // calculate quat * vector\n\n    var ix = qw * x + qy * z - qz * y;\n    var iy = qw * y + qz * x - qx * z;\n    var iz = qw * z + qx * y - qy * x;\n    var iw = -qx * x - qy * y - qz * z; // calculate result * inverse quat\n\n    this.x = ix * qw + iw * -qx + iy * -qz - iz * -qy;\n    this.y = iy * qw + iw * -qy + iz * -qx - ix * -qz;\n    this.z = iz * qw + iw * -qz + ix * -qy - iy * -qx;\n    return this;\n  },\n  project: function () {\n    var matrix;\n    return function project(camera) {\n      if (matrix === undefined) matrix = new THREE.Matrix4();\n      matrix.multiplyMatrices(camera.projectionMatrix, matrix.getInverse(camera.matrixWorld));\n      return this.applyProjection(matrix);\n    };\n  }(),\n  unproject: function () {\n    var matrix;\n    return function unproject(camera) {\n      if (matrix === undefined) matrix = new THREE.Matrix4();\n      matrix.multiplyMatrices(camera.matrixWorld, matrix.getInverse(camera.projectionMatrix));\n      return this.applyProjection(matrix);\n    };\n  }(),\n  transformDirection: function (m) {\n    // input: THREE.Matrix4 affine matrix\n    // vector interpreted as a direction\n    var x = this.x,\n        y = this.y,\n        z = this.z;\n    var e = m.elements;\n    this.x = e[0] * x + e[4] * y + e[8] * z;\n    this.y = e[1] * x + e[5] * y + e[9] * z;\n    this.z = e[2] * x + e[6] * y + e[10] * z;\n    this.normalize();\n    return this;\n  },\n  divide: function (v) {\n    this.x /= v.x;\n    this.y /= v.y;\n    this.z /= v.z;\n    return this;\n  },\n  divideScalar: function (scalar) {\n    return this.multiplyScalar(1 / scalar);\n  },\n  min: function (v) {\n    this.x = Math.min(this.x, v.x);\n    this.y = Math.min(this.y, v.y);\n    this.z = Math.min(this.z, v.z);\n    return this;\n  },\n  max: function (v) {\n    this.x = Math.max(this.x, v.x);\n    this.y = Math.max(this.y, v.y);\n    this.z = Math.max(this.z, v.z);\n    return this;\n  },\n  clamp: function (min, max) {\n    // This function assumes min < max, if this assumption isn't true it will not operate correctly\n    this.x = Math.max(min.x, Math.min(max.x, this.x));\n    this.y = Math.max(min.y, Math.min(max.y, this.y));\n    this.z = Math.max(min.z, Math.min(max.z, this.z));\n    return this;\n  },\n  clampScalar: function () {\n    var min, max;\n    return function clampScalar(minVal, maxVal) {\n      if (min === undefined) {\n        min = new THREE.Vector3();\n        max = new THREE.Vector3();\n      }\n\n      min.set(minVal, minVal, minVal);\n      max.set(maxVal, maxVal, maxVal);\n      return this.clamp(min, max);\n    };\n  }(),\n  clampLength: function (min, max) {\n    var length = this.length();\n    this.multiplyScalar(Math.max(min, Math.min(max, length)) / length);\n    return this;\n  },\n  floor: function () {\n    this.x = Math.floor(this.x);\n    this.y = Math.floor(this.y);\n    this.z = Math.floor(this.z);\n    return this;\n  },\n  ceil: function () {\n    this.x = Math.ceil(this.x);\n    this.y = Math.ceil(this.y);\n    this.z = Math.ceil(this.z);\n    return this;\n  },\n  round: function () {\n    this.x = Math.round(this.x);\n    this.y = Math.round(this.y);\n    this.z = Math.round(this.z);\n    return this;\n  },\n  roundToZero: function () {\n    this.x = this.x < 0 ? Math.ceil(this.x) : Math.floor(this.x);\n    this.y = this.y < 0 ? Math.ceil(this.y) : Math.floor(this.y);\n    this.z = this.z < 0 ? Math.ceil(this.z) : Math.floor(this.z);\n    return this;\n  },\n  negate: function () {\n    this.x = -this.x;\n    this.y = -this.y;\n    this.z = -this.z;\n    return this;\n  },\n  dot: function (v) {\n    return this.x * v.x + this.y * v.y + this.z * v.z;\n  },\n  lengthSq: function () {\n    return this.x * this.x + this.y * this.y + this.z * this.z;\n  },\n  length: function () {\n    return Math.sqrt(this.x * this.x + this.y * this.y + this.z * this.z);\n  },\n  lengthManhattan: function () {\n    return Math.abs(this.x) + Math.abs(this.y) + Math.abs(this.z);\n  },\n  normalize: function () {\n    return this.divideScalar(this.length());\n  },\n  setLength: function (length) {\n    return this.multiplyScalar(length / this.length());\n  },\n  lerp: function (v, alpha) {\n    this.x += (v.x - this.x) * alpha;\n    this.y += (v.y - this.y) * alpha;\n    this.z += (v.z - this.z) * alpha;\n    return this;\n  },\n  lerpVectors: function (v1, v2, alpha) {\n    this.subVectors(v2, v1).multiplyScalar(alpha).add(v1);\n    return this;\n  },\n  cross: function (v, w) {\n    if (w !== undefined) {\n      return this.crossVectors(v, w);\n    }\n\n    var x = this.x,\n        y = this.y,\n        z = this.z;\n    this.x = y * v.z - z * v.y;\n    this.y = z * v.x - x * v.z;\n    this.z = x * v.y - y * v.x;\n    return this;\n  },\n  crossVectors: function (a, b) {\n    var ax = a.x,\n        ay = a.y,\n        az = a.z;\n    var bx = b.x,\n        by = b.y,\n        bz = b.z;\n    this.x = ay * bz - az * by;\n    this.y = az * bx - ax * bz;\n    this.z = ax * by - ay * bx;\n    return this;\n  },\n  projectOnVector: function () {\n    var v1, dot;\n    return function projectOnVector(vector) {\n      if (v1 === undefined) v1 = new THREE.Vector3();\n      v1.copy(vector).normalize();\n      dot = this.dot(v1);\n      return this.copy(v1).multiplyScalar(dot);\n    };\n  }(),\n  projectOnPlane: function () {\n    var v1;\n    return function projectOnPlane(planeNormal) {\n      if (v1 === undefined) v1 = new THREE.Vector3();\n      v1.copy(this).projectOnVector(planeNormal);\n      return this.sub(v1);\n    };\n  }(),\n  reflect: function () {\n    // reflect incident vector off plane orthogonal to normal\n    // normal is assumed to have unit length\n    var v1;\n    return function reflect(normal) {\n      if (v1 === undefined) v1 = new THREE.Vector3();\n      return this.sub(v1.copy(normal).multiplyScalar(2 * this.dot(normal)));\n    };\n  }(),\n  angleTo: function (v) {\n    var theta = this.dot(v) / Math.sqrt(this.lengthSq() * v.lengthSq()); // clamp, to handle numerical problems\n\n    return Math.acos(THREE.Math.clamp(theta, -1, 1));\n  },\n  distanceTo: function (v) {\n    return Math.sqrt(this.distanceToSquared(v));\n  },\n  distanceToSquared: function (v) {\n    var dx = this.x - v.x;\n    var dy = this.y - v.y;\n    var dz = this.z - v.z;\n    return dx * dx + dy * dy + dz * dz;\n  },\n  setFromSpherical: function (s) {\n    var sinPhiRadius = Math.sin(s.phi) * s.radius;\n    this.x = sinPhiRadius * Math.sin(s.theta);\n    this.y = Math.cos(s.phi) * s.radius;\n    this.z = sinPhiRadius * Math.cos(s.theta);\n    return this;\n  },\n  setFromMatrixPosition: function (m) {\n    return this.setFromMatrixColumn(m, 3);\n  },\n  setFromMatrixScale: function (m) {\n    var sx = this.setFromMatrixColumn(m, 0).length();\n    var sy = this.setFromMatrixColumn(m, 1).length();\n    var sz = this.setFromMatrixColumn(m, 2).length();\n    this.x = sx;\n    this.y = sy;\n    this.z = sz;\n    return this;\n  },\n  setFromMatrixColumn: function (m, index) {\n    if (typeof m === 'number') {\n      m = arguments[1];\n      index = arguments[0];\n    }\n\n    return this.fromArray(m.elements, index * 4);\n  },\n  equals: function (v) {\n    return v.x === this.x && v.y === this.y && v.z === this.z;\n  },\n  fromArray: function (array, offset) {\n    if (offset === undefined) offset = 0;\n    this.x = array[offset];\n    this.y = array[offset + 1];\n    this.z = array[offset + 2];\n    return this;\n  },\n  toArray: function (array, offset) {\n    if (array === undefined) array = [];\n    if (offset === undefined) offset = 0;\n    array[offset] = this.x;\n    array[offset + 1] = this.y;\n    array[offset + 2] = this.z;\n    return array;\n  },\n  fromAttribute: function (attribute, index, offset) {\n    if (offset === undefined) offset = 0;\n    index = index * attribute.itemSize + offset;\n    this.x = attribute.array[index];\n    this.y = attribute.array[index + 1];\n    this.z = attribute.array[index + 2];\n    return this;\n  }\n}; // File:src/math/Vector4.js\n\n/**\n * @author supereggbert / http://www.paulbrunt.co.uk/\n * @author philogb / http://blog.thejit.org/\n * @author mikael emtinger / http://gomo.se/\n * @author egraether / http://egraether.com/\n * @author WestLangley / http://github.com/WestLangley\n */\n\nTHREE.Vector4 = function (x, y, z, w) {\n  this.x = x || 0;\n  this.y = y || 0;\n  this.z = z || 0;\n  this.w = w !== undefined ? w : 1;\n};\n\nTHREE.Vector4.prototype = {\n  constructor: THREE.Vector4,\n  set: function (x, y, z, w) {\n    this.x = x;\n    this.y = y;\n    this.z = z;\n    this.w = w;\n    return this;\n  },\n  setScalar: function (scalar) {\n    this.x = scalar;\n    this.y = scalar;\n    this.z = scalar;\n    this.w = scalar;\n    return this;\n  },\n  setX: function (x) {\n    this.x = x;\n    return this;\n  },\n  setY: function (y) {\n    this.y = y;\n    return this;\n  },\n  setZ: function (z) {\n    this.z = z;\n    return this;\n  },\n  setW: function (w) {\n    this.w = w;\n    return this;\n  },\n  setComponent: function (index, value) {\n    switch (index) {\n      case 0:\n        this.x = value;\n        break;\n\n      case 1:\n        this.y = value;\n        break;\n\n      case 2:\n        this.z = value;\n        break;\n\n      case 3:\n        this.w = value;\n        break;\n\n      default:\n        throw new Error('index is out of range: ' + index);\n    }\n  },\n  getComponent: function (index) {\n    switch (index) {\n      case 0:\n        return this.x;\n\n      case 1:\n        return this.y;\n\n      case 2:\n        return this.z;\n\n      case 3:\n        return this.w;\n\n      default:\n        throw new Error('index is out of range: ' + index);\n    }\n  },\n  clone: function () {\n    return new this.constructor(this.x, this.y, this.z, this.w);\n  },\n  copy: function (v) {\n    this.x = v.x;\n    this.y = v.y;\n    this.z = v.z;\n    this.w = v.w !== undefined ? v.w : 1;\n    return this;\n  },\n  add: function (v, w) {\n    if (w !== undefined) {\n      return this.addVectors(v, w);\n    }\n\n    this.x += v.x;\n    this.y += v.y;\n    this.z += v.z;\n    this.w += v.w;\n    return this;\n  },\n  addScalar: function (s) {\n    this.x += s;\n    this.y += s;\n    this.z += s;\n    this.w += s;\n    return this;\n  },\n  addVectors: function (a, b) {\n    this.x = a.x + b.x;\n    this.y = a.y + b.y;\n    this.z = a.z + b.z;\n    this.w = a.w + b.w;\n    return this;\n  },\n  addScaledVector: function (v, s) {\n    this.x += v.x * s;\n    this.y += v.y * s;\n    this.z += v.z * s;\n    this.w += v.w * s;\n    return this;\n  },\n  sub: function (v, w) {\n    if (w !== undefined) {\n      return this.subVectors(v, w);\n    }\n\n    this.x -= v.x;\n    this.y -= v.y;\n    this.z -= v.z;\n    this.w -= v.w;\n    return this;\n  },\n  subScalar: function (s) {\n    this.x -= s;\n    this.y -= s;\n    this.z -= s;\n    this.w -= s;\n    return this;\n  },\n  subVectors: function (a, b) {\n    this.x = a.x - b.x;\n    this.y = a.y - b.y;\n    this.z = a.z - b.z;\n    this.w = a.w - b.w;\n    return this;\n  },\n  multiplyScalar: function (scalar) {\n    if (isFinite(scalar)) {\n      this.x *= scalar;\n      this.y *= scalar;\n      this.z *= scalar;\n      this.w *= scalar;\n    } else {\n      this.x = 0;\n      this.y = 0;\n      this.z = 0;\n      this.w = 0;\n    }\n\n    return this;\n  },\n  applyMatrix4: function (m) {\n    var x = this.x;\n    var y = this.y;\n    var z = this.z;\n    var w = this.w;\n    var e = m.elements;\n    this.x = e[0] * x + e[4] * y + e[8] * z + e[12] * w;\n    this.y = e[1] * x + e[5] * y + e[9] * z + e[13] * w;\n    this.z = e[2] * x + e[6] * y + e[10] * z + e[14] * w;\n    this.w = e[3] * x + e[7] * y + e[11] * z + e[15] * w;\n    return this;\n  },\n  divideScalar: function (scalar) {\n    return this.multiplyScalar(1 / scalar);\n  },\n  setAxisAngleFromQuaternion: function (q) {\n    // http://www.euclideanspace.com/maths/geometry/rotations/conversions/quaternionToAngle/index.htm\n    // q is assumed to be normalized\n    this.w = 2 * Math.acos(q.w);\n    var s = Math.sqrt(1 - q.w * q.w);\n\n    if (s < 0.0001) {\n      this.x = 1;\n      this.y = 0;\n      this.z = 0;\n    } else {\n      this.x = q.x / s;\n      this.y = q.y / s;\n      this.z = q.z / s;\n    }\n\n    return this;\n  },\n  setAxisAngleFromRotationMatrix: function (m) {\n    // http://www.euclideanspace.com/maths/geometry/rotations/conversions/matrixToAngle/index.htm\n    // assumes the upper 3x3 of m is a pure rotation matrix (i.e, unscaled)\n    var angle,\n        x,\n        y,\n        z,\n        // variables for result\n    epsilon = 0.01,\n        // margin to allow for rounding errors\n    epsilon2 = 0.1,\n        // margin to distinguish between 0 and 180 degrees\n    te = m.elements,\n        m11 = te[0],\n        m12 = te[4],\n        m13 = te[8],\n        m21 = te[1],\n        m22 = te[5],\n        m23 = te[9],\n        m31 = te[2],\n        m32 = te[6],\n        m33 = te[10];\n\n    if (Math.abs(m12 - m21) < epsilon && Math.abs(m13 - m31) < epsilon && Math.abs(m23 - m32) < epsilon) {\n      // singularity found\n      // first check for identity matrix which must have +1 for all terms\n      // in leading diagonal and zero in other terms\n      if (Math.abs(m12 + m21) < epsilon2 && Math.abs(m13 + m31) < epsilon2 && Math.abs(m23 + m32) < epsilon2 && Math.abs(m11 + m22 + m33 - 3) < epsilon2) {\n        // this singularity is identity matrix so angle = 0\n        this.set(1, 0, 0, 0);\n        return this; // zero angle, arbitrary axis\n      } // otherwise this singularity is angle = 180\n\n\n      angle = Math.PI;\n      var xx = (m11 + 1) / 2;\n      var yy = (m22 + 1) / 2;\n      var zz = (m33 + 1) / 2;\n      var xy = (m12 + m21) / 4;\n      var xz = (m13 + m31) / 4;\n      var yz = (m23 + m32) / 4;\n\n      if (xx > yy && xx > zz) {\n        // m11 is the largest diagonal term\n        if (xx < epsilon) {\n          x = 0;\n          y = 0.707106781;\n          z = 0.707106781;\n        } else {\n          x = Math.sqrt(xx);\n          y = xy / x;\n          z = xz / x;\n        }\n      } else if (yy > zz) {\n        // m22 is the largest diagonal term\n        if (yy < epsilon) {\n          x = 0.707106781;\n          y = 0;\n          z = 0.707106781;\n        } else {\n          y = Math.sqrt(yy);\n          x = xy / y;\n          z = yz / y;\n        }\n      } else {\n        // m33 is the largest diagonal term so base result on this\n        if (zz < epsilon) {\n          x = 0.707106781;\n          y = 0.707106781;\n          z = 0;\n        } else {\n          z = Math.sqrt(zz);\n          x = xz / z;\n          y = yz / z;\n        }\n      }\n\n      this.set(x, y, z, angle);\n      return this; // return 180 deg rotation\n    } // as we have reached here there are no singularities so we can handle normally\n\n\n    var s = Math.sqrt((m32 - m23) * (m32 - m23) + (m13 - m31) * (m13 - m31) + (m21 - m12) * (m21 - m12)); // used to normalize\n\n    if (Math.abs(s) < 0.001) s = 1; // prevent divide by zero, should not happen if matrix is orthogonal and should be\n    // caught by singularity test above, but I've left it in just in case\n\n    this.x = (m32 - m23) / s;\n    this.y = (m13 - m31) / s;\n    this.z = (m21 - m12) / s;\n    this.w = Math.acos((m11 + m22 + m33 - 1) / 2);\n    return this;\n  },\n  min: function (v) {\n    this.x = Math.min(this.x, v.x);\n    this.y = Math.min(this.y, v.y);\n    this.z = Math.min(this.z, v.z);\n    this.w = Math.min(this.w, v.w);\n    return this;\n  },\n  max: function (v) {\n    this.x = Math.max(this.x, v.x);\n    this.y = Math.max(this.y, v.y);\n    this.z = Math.max(this.z, v.z);\n    this.w = Math.max(this.w, v.w);\n    return this;\n  },\n  clamp: function (min, max) {\n    // This function assumes min < max, if this assumption isn't true it will not operate correctly\n    this.x = Math.max(min.x, Math.min(max.x, this.x));\n    this.y = Math.max(min.y, Math.min(max.y, this.y));\n    this.z = Math.max(min.z, Math.min(max.z, this.z));\n    this.w = Math.max(min.w, Math.min(max.w, this.w));\n    return this;\n  },\n  clampScalar: function () {\n    var min, max;\n    return function clampScalar(minVal, maxVal) {\n      if (min === undefined) {\n        min = new THREE.Vector4();\n        max = new THREE.Vector4();\n      }\n\n      min.set(minVal, minVal, minVal, minVal);\n      max.set(maxVal, maxVal, maxVal, maxVal);\n      return this.clamp(min, max);\n    };\n  }(),\n  floor: function () {\n    this.x = Math.floor(this.x);\n    this.y = Math.floor(this.y);\n    this.z = Math.floor(this.z);\n    this.w = Math.floor(this.w);\n    return this;\n  },\n  ceil: function () {\n    this.x = Math.ceil(this.x);\n    this.y = Math.ceil(this.y);\n    this.z = Math.ceil(this.z);\n    this.w = Math.ceil(this.w);\n    return this;\n  },\n  round: function () {\n    this.x = Math.round(this.x);\n    this.y = Math.round(this.y);\n    this.z = Math.round(this.z);\n    this.w = Math.round(this.w);\n    return this;\n  },\n  roundToZero: function () {\n    this.x = this.x < 0 ? Math.ceil(this.x) : Math.floor(this.x);\n    this.y = this.y < 0 ? Math.ceil(this.y) : Math.floor(this.y);\n    this.z = this.z < 0 ? Math.ceil(this.z) : Math.floor(this.z);\n    this.w = this.w < 0 ? Math.ceil(this.w) : Math.floor(this.w);\n    return this;\n  },\n  negate: function () {\n    this.x = -this.x;\n    this.y = -this.y;\n    this.z = -this.z;\n    this.w = -this.w;\n    return this;\n  },\n  dot: function (v) {\n    return this.x * v.x + this.y * v.y + this.z * v.z + this.w * v.w;\n  },\n  lengthSq: function () {\n    return this.x * this.x + this.y * this.y + this.z * this.z + this.w * this.w;\n  },\n  length: function () {\n    return Math.sqrt(this.x * this.x + this.y * this.y + this.z * this.z + this.w * this.w);\n  },\n  lengthManhattan: function () {\n    return Math.abs(this.x) + Math.abs(this.y) + Math.abs(this.z) + Math.abs(this.w);\n  },\n  normalize: function () {\n    return this.divideScalar(this.length());\n  },\n  setLength: function (length) {\n    return this.multiplyScalar(length / this.length());\n  },\n  lerp: function (v, alpha) {\n    this.x += (v.x - this.x) * alpha;\n    this.y += (v.y - this.y) * alpha;\n    this.z += (v.z - this.z) * alpha;\n    this.w += (v.w - this.w) * alpha;\n    return this;\n  },\n  lerpVectors: function (v1, v2, alpha) {\n    this.subVectors(v2, v1).multiplyScalar(alpha).add(v1);\n    return this;\n  },\n  equals: function (v) {\n    return v.x === this.x && v.y === this.y && v.z === this.z && v.w === this.w;\n  },\n  fromArray: function (array, offset) {\n    if (offset === undefined) offset = 0;\n    this.x = array[offset];\n    this.y = array[offset + 1];\n    this.z = array[offset + 2];\n    this.w = array[offset + 3];\n    return this;\n  },\n  toArray: function (array, offset) {\n    if (array === undefined) array = [];\n    if (offset === undefined) offset = 0;\n    array[offset] = this.x;\n    array[offset + 1] = this.y;\n    array[offset + 2] = this.z;\n    array[offset + 3] = this.w;\n    return array;\n  },\n  fromAttribute: function (attribute, index, offset) {\n    if (offset === undefined) offset = 0;\n    index = index * attribute.itemSize + offset;\n    this.x = attribute.array[index];\n    this.y = attribute.array[index + 1];\n    this.z = attribute.array[index + 2];\n    this.w = attribute.array[index + 3];\n    return this;\n  }\n}; // File:src/math/Matrix3.js\n\n/**\n * @author alteredq / http://alteredqualia.com/\n * @author WestLangley / http://github.com/WestLangley\n * @author bhouston / http://clara.io\n * @author tschw\n */\n\nTHREE.Matrix3 = function () {\n  this.elements = new Float32Array([1, 0, 0, 0, 1, 0, 0, 0, 1]);\n};\n\nTHREE.Matrix3.prototype = {\n  constructor: THREE.Matrix3,\n  set: function (n11, n12, n13, n21, n22, n23, n31, n32, n33) {\n    var te = this.elements;\n    te[0] = n11;\n    te[1] = n21;\n    te[2] = n31;\n    te[3] = n12;\n    te[4] = n22;\n    te[5] = n32;\n    te[6] = n13;\n    te[7] = n23;\n    te[8] = n33;\n    return this;\n  },\n  identity: function () {\n    this.set(1, 0, 0, 0, 1, 0, 0, 0, 1);\n    return this;\n  },\n  clone: function () {\n    return new this.constructor().fromArray(this.elements);\n  },\n  copy: function (m) {\n    var me = m.elements;\n    this.set(me[0], me[3], me[6], me[1], me[4], me[7], me[2], me[5], me[8]);\n    return this;\n  },\n  setFromMatrix4: function (m) {\n    var me = m.elements;\n    this.set(me[0], me[4], me[8], me[1], me[5], me[9], me[2], me[6], me[10]);\n    return this;\n  },\n  applyToVector3Array: function () {\n    var v1;\n    return function (array, offset, length) {\n      if (v1 === undefined) v1 = new THREE.Vector3();\n      if (offset === undefined) offset = 0;\n      if (length === undefined) length = array.length;\n\n      for (var i = 0, j = offset; i < length; i += 3, j += 3) {\n        v1.fromArray(array, j);\n        v1.applyMatrix3(this);\n        v1.toArray(array, j);\n      }\n\n      return array;\n    };\n  }(),\n  applyToBuffer: function () {\n    var v1;\n    return function applyToBuffer(buffer, offset, length) {\n      if (v1 === undefined) v1 = new THREE.Vector3();\n      if (offset === undefined) offset = 0;\n      if (length === undefined) length = buffer.length / buffer.itemSize;\n\n      for (var i = 0, j = offset; i < length; i++, j++) {\n        v1.x = buffer.getX(j);\n        v1.y = buffer.getY(j);\n        v1.z = buffer.getZ(j);\n        v1.applyMatrix3(this);\n        buffer.setXYZ(v1.x, v1.y, v1.z);\n      }\n\n      return buffer;\n    };\n  }(),\n  multiplyScalar: function (s) {\n    var te = this.elements;\n    te[0] *= s;\n    te[3] *= s;\n    te[6] *= s;\n    te[1] *= s;\n    te[4] *= s;\n    te[7] *= s;\n    te[2] *= s;\n    te[5] *= s;\n    te[8] *= s;\n    return this;\n  },\n  determinant: function () {\n    var te = this.elements;\n    var a = te[0],\n        b = te[1],\n        c = te[2],\n        d = te[3],\n        e = te[4],\n        f = te[5],\n        g = te[6],\n        h = te[7],\n        i = te[8];\n    return a * e * i - a * f * h - b * d * i + b * f * g + c * d * h - c * e * g;\n  },\n  getInverse: function (matrix, throwOnDegenerate) {\n\n    var me = matrix.elements,\n        te = this.elements,\n        n11 = me[0],\n        n21 = me[1],\n        n31 = me[2],\n        n12 = me[3],\n        n22 = me[4],\n        n32 = me[5],\n        n13 = me[6],\n        n23 = me[7],\n        n33 = me[8],\n        t11 = n33 * n22 - n32 * n23,\n        t12 = n32 * n13 - n33 * n12,\n        t13 = n23 * n12 - n22 * n13,\n        det = n11 * t11 + n21 * t12 + n31 * t13;\n\n    if (det === 0) {\n      var msg = \"THREE.Matrix3.getInverse(): can't invert matrix, determinant is 0\";\n\n      if (throwOnDegenerate || false) {\n        throw new Error(msg);\n      }\n\n      return this.identity();\n    }\n\n    te[0] = t11;\n    te[1] = n31 * n23 - n33 * n21;\n    te[2] = n32 * n21 - n31 * n22;\n    te[3] = t12;\n    te[4] = n33 * n11 - n31 * n13;\n    te[5] = n31 * n12 - n32 * n11;\n    te[6] = t13;\n    te[7] = n21 * n13 - n23 * n11;\n    te[8] = n22 * n11 - n21 * n12;\n    return this.multiplyScalar(1 / det);\n  },\n  transpose: function () {\n    var tmp,\n        m = this.elements;\n    tmp = m[1];\n    m[1] = m[3];\n    m[3] = tmp;\n    tmp = m[2];\n    m[2] = m[6];\n    m[6] = tmp;\n    tmp = m[5];\n    m[5] = m[7];\n    m[7] = tmp;\n    return this;\n  },\n  flattenToArrayOffset: function (array, offset) {\n    var te = this.elements;\n    array[offset] = te[0];\n    array[offset + 1] = te[1];\n    array[offset + 2] = te[2];\n    array[offset + 3] = te[3];\n    array[offset + 4] = te[4];\n    array[offset + 5] = te[5];\n    array[offset + 6] = te[6];\n    array[offset + 7] = te[7];\n    array[offset + 8] = te[8];\n    return array;\n  },\n  getNormalMatrix: function (matrix4) {\n    return this.setFromMatrix4(matrix4).getInverse(this).transpose();\n  },\n  transposeIntoArray: function (r) {\n    var m = this.elements;\n    r[0] = m[0];\n    r[1] = m[3];\n    r[2] = m[6];\n    r[3] = m[1];\n    r[4] = m[4];\n    r[5] = m[7];\n    r[6] = m[2];\n    r[7] = m[5];\n    r[8] = m[8];\n    return this;\n  },\n  fromArray: function (array) {\n    this.elements.set(array);\n    return this;\n  },\n  toArray: function () {\n    var te = this.elements;\n    return [te[0], te[1], te[2], te[3], te[4], te[5], te[6], te[7], te[8]];\n  }\n}; // File:src/math/Matrix4.js\n\n/**\n * @author mrdoob / http://mrdoob.com/\n * @author supereggbert / http://www.paulbrunt.co.uk/\n * @author philogb / http://blog.thejit.org/\n * @author jordi_ros / http://plattsoft.com\n * @author D1plo1d / http://github.com/D1plo1d\n * @author alteredq / http://alteredqualia.com/\n * @author mikael emtinger / http://gomo.se/\n * @author timknip / http://www.floorplanner.com/\n * @author bhouston / http://clara.io\n * @author WestLangley / http://github.com/WestLangley\n */\n\nTHREE.Matrix4 = function () {\n  this.elements = new Float32Array([1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1]);\n};\n\nTHREE.Matrix4.prototype = {\n  constructor: THREE.Matrix4,\n  set: function (n11, n12, n13, n14, n21, n22, n23, n24, n31, n32, n33, n34, n41, n42, n43, n44) {\n    var te = this.elements;\n    te[0] = n11;\n    te[4] = n12;\n    te[8] = n13;\n    te[12] = n14;\n    te[1] = n21;\n    te[5] = n22;\n    te[9] = n23;\n    te[13] = n24;\n    te[2] = n31;\n    te[6] = n32;\n    te[10] = n33;\n    te[14] = n34;\n    te[3] = n41;\n    te[7] = n42;\n    te[11] = n43;\n    te[15] = n44;\n    return this;\n  },\n  identity: function () {\n    this.set(1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1);\n    return this;\n  },\n  clone: function () {\n    return new THREE.Matrix4().fromArray(this.elements);\n  },\n  copy: function (m) {\n    this.elements.set(m.elements);\n    return this;\n  },\n  copyPosition: function (m) {\n    var te = this.elements;\n    var me = m.elements;\n    te[12] = me[12];\n    te[13] = me[13];\n    te[14] = me[14];\n    return this;\n  },\n  extractBasis: function (xAxis, yAxis, zAxis) {\n    xAxis.setFromMatrixColumn(this, 0);\n    yAxis.setFromMatrixColumn(this, 1);\n    zAxis.setFromMatrixColumn(this, 2);\n    return this;\n  },\n  makeBasis: function (xAxis, yAxis, zAxis) {\n    this.set(xAxis.x, yAxis.x, zAxis.x, 0, xAxis.y, yAxis.y, zAxis.y, 0, xAxis.z, yAxis.z, zAxis.z, 0, 0, 0, 0, 1);\n    return this;\n  },\n  extractRotation: function () {\n    var v1;\n    return function (m) {\n      if (v1 === undefined) v1 = new THREE.Vector3();\n      var te = this.elements;\n      var me = m.elements;\n      var scaleX = 1 / v1.setFromMatrixColumn(m, 0).length();\n      var scaleY = 1 / v1.setFromMatrixColumn(m, 1).length();\n      var scaleZ = 1 / v1.setFromMatrixColumn(m, 2).length();\n      te[0] = me[0] * scaleX;\n      te[1] = me[1] * scaleX;\n      te[2] = me[2] * scaleX;\n      te[4] = me[4] * scaleY;\n      te[5] = me[5] * scaleY;\n      te[6] = me[6] * scaleY;\n      te[8] = me[8] * scaleZ;\n      te[9] = me[9] * scaleZ;\n      te[10] = me[10] * scaleZ;\n      return this;\n    };\n  }(),\n  makeRotationFromEuler: function (euler) {\n\n    var te = this.elements;\n    var x = euler.x,\n        y = euler.y,\n        z = euler.z;\n    var a = Math.cos(x),\n        b = Math.sin(x);\n    var c = Math.cos(y),\n        d = Math.sin(y);\n    var e = Math.cos(z),\n        f = Math.sin(z);\n\n    if (euler.order === 'XYZ') {\n      var ae = a * e,\n          af = a * f,\n          be = b * e,\n          bf = b * f;\n      te[0] = c * e;\n      te[4] = -c * f;\n      te[8] = d;\n      te[1] = af + be * d;\n      te[5] = ae - bf * d;\n      te[9] = -b * c;\n      te[2] = bf - ae * d;\n      te[6] = be + af * d;\n      te[10] = a * c;\n    } else if (euler.order === 'YXZ') {\n      var ce = c * e,\n          cf = c * f,\n          de = d * e,\n          df = d * f;\n      te[0] = ce + df * b;\n      te[4] = de * b - cf;\n      te[8] = a * d;\n      te[1] = a * f;\n      te[5] = a * e;\n      te[9] = -b;\n      te[2] = cf * b - de;\n      te[6] = df + ce * b;\n      te[10] = a * c;\n    } else if (euler.order === 'ZXY') {\n      var ce = c * e,\n          cf = c * f,\n          de = d * e,\n          df = d * f;\n      te[0] = ce - df * b;\n      te[4] = -a * f;\n      te[8] = de + cf * b;\n      te[1] = cf + de * b;\n      te[5] = a * e;\n      te[9] = df - ce * b;\n      te[2] = -a * d;\n      te[6] = b;\n      te[10] = a * c;\n    } else if (euler.order === 'ZYX') {\n      var ae = a * e,\n          af = a * f,\n          be = b * e,\n          bf = b * f;\n      te[0] = c * e;\n      te[4] = be * d - af;\n      te[8] = ae * d + bf;\n      te[1] = c * f;\n      te[5] = bf * d + ae;\n      te[9] = af * d - be;\n      te[2] = -d;\n      te[6] = b * c;\n      te[10] = a * c;\n    } else if (euler.order === 'YZX') {\n      var ac = a * c,\n          ad = a * d,\n          bc = b * c,\n          bd = b * d;\n      te[0] = c * e;\n      te[4] = bd - ac * f;\n      te[8] = bc * f + ad;\n      te[1] = f;\n      te[5] = a * e;\n      te[9] = -b * e;\n      te[2] = -d * e;\n      te[6] = ad * f + bc;\n      te[10] = ac - bd * f;\n    } else if (euler.order === 'XZY') {\n      var ac = a * c,\n          ad = a * d,\n          bc = b * c,\n          bd = b * d;\n      te[0] = c * e;\n      te[4] = -f;\n      te[8] = d * e;\n      te[1] = ac * f + bd;\n      te[5] = a * e;\n      te[9] = ad * f - bc;\n      te[2] = bc * f - ad;\n      te[6] = b * e;\n      te[10] = bd * f + ac;\n    } // last column\n\n\n    te[3] = 0;\n    te[7] = 0;\n    te[11] = 0; // bottom row\n\n    te[12] = 0;\n    te[13] = 0;\n    te[14] = 0;\n    te[15] = 1;\n    return this;\n  },\n  makeRotationFromQuaternion: function (q) {\n    var te = this.elements;\n    var x = q.x,\n        y = q.y,\n        z = q.z,\n        w = q.w;\n    var x2 = x + x,\n        y2 = y + y,\n        z2 = z + z;\n    var xx = x * x2,\n        xy = x * y2,\n        xz = x * z2;\n    var yy = y * y2,\n        yz = y * z2,\n        zz = z * z2;\n    var wx = w * x2,\n        wy = w * y2,\n        wz = w * z2;\n    te[0] = 1 - (yy + zz);\n    te[4] = xy - wz;\n    te[8] = xz + wy;\n    te[1] = xy + wz;\n    te[5] = 1 - (xx + zz);\n    te[9] = yz - wx;\n    te[2] = xz - wy;\n    te[6] = yz + wx;\n    te[10] = 1 - (xx + yy); // last column\n\n    te[3] = 0;\n    te[7] = 0;\n    te[11] = 0; // bottom row\n\n    te[12] = 0;\n    te[13] = 0;\n    te[14] = 0;\n    te[15] = 1;\n    return this;\n  },\n  lookAt: function () {\n    var x, y, z;\n    return function (eye, target, up) {\n      if (x === undefined) x = new THREE.Vector3();\n      if (y === undefined) y = new THREE.Vector3();\n      if (z === undefined) z = new THREE.Vector3();\n      var te = this.elements;\n      z.subVectors(eye, target).normalize();\n\n      if (z.lengthSq() === 0) {\n        z.z = 1;\n      }\n\n      x.crossVectors(up, z).normalize();\n\n      if (x.lengthSq() === 0) {\n        z.x += 0.0001;\n        x.crossVectors(up, z).normalize();\n      }\n\n      y.crossVectors(z, x);\n      te[0] = x.x;\n      te[4] = y.x;\n      te[8] = z.x;\n      te[1] = x.y;\n      te[5] = y.y;\n      te[9] = z.y;\n      te[2] = x.z;\n      te[6] = y.z;\n      te[10] = z.z;\n      return this;\n    };\n  }(),\n  multiply: function (m, n) {\n    if (n !== undefined) {\n      return this.multiplyMatrices(m, n);\n    }\n\n    return this.multiplyMatrices(this, m);\n  },\n  multiplyMatrices: function (a, b) {\n    var ae = a.elements;\n    var be = b.elements;\n    var te = this.elements;\n    var a11 = ae[0],\n        a12 = ae[4],\n        a13 = ae[8],\n        a14 = ae[12];\n    var a21 = ae[1],\n        a22 = ae[5],\n        a23 = ae[9],\n        a24 = ae[13];\n    var a31 = ae[2],\n        a32 = ae[6],\n        a33 = ae[10],\n        a34 = ae[14];\n    var a41 = ae[3],\n        a42 = ae[7],\n        a43 = ae[11],\n        a44 = ae[15];\n    var b11 = be[0],\n        b12 = be[4],\n        b13 = be[8],\n        b14 = be[12];\n    var b21 = be[1],\n        b22 = be[5],\n        b23 = be[9],\n        b24 = be[13];\n    var b31 = be[2],\n        b32 = be[6],\n        b33 = be[10],\n        b34 = be[14];\n    var b41 = be[3],\n        b42 = be[7],\n        b43 = be[11],\n        b44 = be[15];\n    te[0] = a11 * b11 + a12 * b21 + a13 * b31 + a14 * b41;\n    te[4] = a11 * b12 + a12 * b22 + a13 * b32 + a14 * b42;\n    te[8] = a11 * b13 + a12 * b23 + a13 * b33 + a14 * b43;\n    te[12] = a11 * b14 + a12 * b24 + a13 * b34 + a14 * b44;\n    te[1] = a21 * b11 + a22 * b21 + a23 * b31 + a24 * b41;\n    te[5] = a21 * b12 + a22 * b22 + a23 * b32 + a24 * b42;\n    te[9] = a21 * b13 + a22 * b23 + a23 * b33 + a24 * b43;\n    te[13] = a21 * b14 + a22 * b24 + a23 * b34 + a24 * b44;\n    te[2] = a31 * b11 + a32 * b21 + a33 * b31 + a34 * b41;\n    te[6] = a31 * b12 + a32 * b22 + a33 * b32 + a34 * b42;\n    te[10] = a31 * b13 + a32 * b23 + a33 * b33 + a34 * b43;\n    te[14] = a31 * b14 + a32 * b24 + a33 * b34 + a34 * b44;\n    te[3] = a41 * b11 + a42 * b21 + a43 * b31 + a44 * b41;\n    te[7] = a41 * b12 + a42 * b22 + a43 * b32 + a44 * b42;\n    te[11] = a41 * b13 + a42 * b23 + a43 * b33 + a44 * b43;\n    te[15] = a41 * b14 + a42 * b24 + a43 * b34 + a44 * b44;\n    return this;\n  },\n  multiplyToArray: function (a, b, r) {\n    var te = this.elements;\n    this.multiplyMatrices(a, b);\n    r[0] = te[0];\n    r[1] = te[1];\n    r[2] = te[2];\n    r[3] = te[3];\n    r[4] = te[4];\n    r[5] = te[5];\n    r[6] = te[6];\n    r[7] = te[7];\n    r[8] = te[8];\n    r[9] = te[9];\n    r[10] = te[10];\n    r[11] = te[11];\n    r[12] = te[12];\n    r[13] = te[13];\n    r[14] = te[14];\n    r[15] = te[15];\n    return this;\n  },\n  multiplyScalar: function (s) {\n    var te = this.elements;\n    te[0] *= s;\n    te[4] *= s;\n    te[8] *= s;\n    te[12] *= s;\n    te[1] *= s;\n    te[5] *= s;\n    te[9] *= s;\n    te[13] *= s;\n    te[2] *= s;\n    te[6] *= s;\n    te[10] *= s;\n    te[14] *= s;\n    te[3] *= s;\n    te[7] *= s;\n    te[11] *= s;\n    te[15] *= s;\n    return this;\n  },\n  applyToVector3Array: function () {\n    var v1;\n    return function (array, offset, length) {\n      if (v1 === undefined) v1 = new THREE.Vector3();\n      if (offset === undefined) offset = 0;\n      if (length === undefined) length = array.length;\n\n      for (var i = 0, j = offset; i < length; i += 3, j += 3) {\n        v1.fromArray(array, j);\n        v1.applyMatrix4(this);\n        v1.toArray(array, j);\n      }\n\n      return array;\n    };\n  }(),\n  applyToBuffer: function () {\n    var v1;\n    return function applyToBuffer(buffer, offset, length) {\n      if (v1 === undefined) v1 = new THREE.Vector3();\n      if (offset === undefined) offset = 0;\n      if (length === undefined) length = buffer.length / buffer.itemSize;\n\n      for (var i = 0, j = offset; i < length; i++, j++) {\n        v1.x = buffer.getX(j);\n        v1.y = buffer.getY(j);\n        v1.z = buffer.getZ(j);\n        v1.applyMatrix4(this);\n        buffer.setXYZ(v1.x, v1.y, v1.z);\n      }\n\n      return buffer;\n    };\n  }(),\n  determinant: function () {\n    var te = this.elements;\n    var n11 = te[0],\n        n12 = te[4],\n        n13 = te[8],\n        n14 = te[12];\n    var n21 = te[1],\n        n22 = te[5],\n        n23 = te[9],\n        n24 = te[13];\n    var n31 = te[2],\n        n32 = te[6],\n        n33 = te[10],\n        n34 = te[14];\n    var n41 = te[3],\n        n42 = te[7],\n        n43 = te[11],\n        n44 = te[15]; //TODO: make this more efficient\n    //( based on http://www.euclideanspace.com/maths/algebra/matrix/functions/inverse/fourD/index.htm )\n\n    return n41 * (+n14 * n23 * n32 - n13 * n24 * n32 - n14 * n22 * n33 + n12 * n24 * n33 + n13 * n22 * n34 - n12 * n23 * n34) + n42 * (+n11 * n23 * n34 - n11 * n24 * n33 + n14 * n21 * n33 - n13 * n21 * n34 + n13 * n24 * n31 - n14 * n23 * n31) + n43 * (+n11 * n24 * n32 - n11 * n22 * n34 - n14 * n21 * n32 + n12 * n21 * n34 + n14 * n22 * n31 - n12 * n24 * n31) + n44 * (-n13 * n22 * n31 - n11 * n23 * n32 + n11 * n22 * n33 + n13 * n21 * n32 - n12 * n21 * n33 + n12 * n23 * n31);\n  },\n  transpose: function () {\n    var te = this.elements;\n    var tmp;\n    tmp = te[1];\n    te[1] = te[4];\n    te[4] = tmp;\n    tmp = te[2];\n    te[2] = te[8];\n    te[8] = tmp;\n    tmp = te[6];\n    te[6] = te[9];\n    te[9] = tmp;\n    tmp = te[3];\n    te[3] = te[12];\n    te[12] = tmp;\n    tmp = te[7];\n    te[7] = te[13];\n    te[13] = tmp;\n    tmp = te[11];\n    te[11] = te[14];\n    te[14] = tmp;\n    return this;\n  },\n  flattenToArrayOffset: function (array, offset) {\n    var te = this.elements;\n    array[offset] = te[0];\n    array[offset + 1] = te[1];\n    array[offset + 2] = te[2];\n    array[offset + 3] = te[3];\n    array[offset + 4] = te[4];\n    array[offset + 5] = te[5];\n    array[offset + 6] = te[6];\n    array[offset + 7] = te[7];\n    array[offset + 8] = te[8];\n    array[offset + 9] = te[9];\n    array[offset + 10] = te[10];\n    array[offset + 11] = te[11];\n    array[offset + 12] = te[12];\n    array[offset + 13] = te[13];\n    array[offset + 14] = te[14];\n    array[offset + 15] = te[15];\n    return array;\n  },\n  getPosition: function () {\n    var v1;\n    return function () {\n      if (v1 === undefined) v1 = new THREE.Vector3();\n      return v1.setFromMatrixColumn(this, 3);\n    };\n  }(),\n  setPosition: function (v) {\n    var te = this.elements;\n    te[12] = v.x;\n    te[13] = v.y;\n    te[14] = v.z;\n    return this;\n  },\n  getInverse: function (m, throwOnDegenerate) {\n    // based on http://www.euclideanspace.com/maths/algebra/matrix/functions/inverse/fourD/index.htm\n    var te = this.elements,\n        me = m.elements,\n        n11 = me[0],\n        n21 = me[1],\n        n31 = me[2],\n        n41 = me[3],\n        n12 = me[4],\n        n22 = me[5],\n        n32 = me[6],\n        n42 = me[7],\n        n13 = me[8],\n        n23 = me[9],\n        n33 = me[10],\n        n43 = me[11],\n        n14 = me[12],\n        n24 = me[13],\n        n34 = me[14],\n        n44 = me[15],\n        t11 = n23 * n34 * n42 - n24 * n33 * n42 + n24 * n32 * n43 - n22 * n34 * n43 - n23 * n32 * n44 + n22 * n33 * n44,\n        t12 = n14 * n33 * n42 - n13 * n34 * n42 - n14 * n32 * n43 + n12 * n34 * n43 + n13 * n32 * n44 - n12 * n33 * n44,\n        t13 = n13 * n24 * n42 - n14 * n23 * n42 + n14 * n22 * n43 - n12 * n24 * n43 - n13 * n22 * n44 + n12 * n23 * n44,\n        t14 = n14 * n23 * n32 - n13 * n24 * n32 - n14 * n22 * n33 + n12 * n24 * n33 + n13 * n22 * n34 - n12 * n23 * n34;\n    var det = n11 * t11 + n21 * t12 + n31 * t13 + n41 * t14;\n\n    if (det === 0) {\n      var msg = \"THREE.Matrix4.getInverse(): can't invert matrix, determinant is 0\";\n\n      if (throwOnDegenerate || false) {\n        throw new Error(msg);\n      }\n\n      return this.identity();\n    }\n\n    te[0] = t11;\n    te[1] = n24 * n33 * n41 - n23 * n34 * n41 - n24 * n31 * n43 + n21 * n34 * n43 + n23 * n31 * n44 - n21 * n33 * n44;\n    te[2] = n22 * n34 * n41 - n24 * n32 * n41 + n24 * n31 * n42 - n21 * n34 * n42 - n22 * n31 * n44 + n21 * n32 * n44;\n    te[3] = n23 * n32 * n41 - n22 * n33 * n41 - n23 * n31 * n42 + n21 * n33 * n42 + n22 * n31 * n43 - n21 * n32 * n43;\n    te[4] = t12;\n    te[5] = n13 * n34 * n41 - n14 * n33 * n41 + n14 * n31 * n43 - n11 * n34 * n43 - n13 * n31 * n44 + n11 * n33 * n44;\n    te[6] = n14 * n32 * n41 - n12 * n34 * n41 - n14 * n31 * n42 + n11 * n34 * n42 + n12 * n31 * n44 - n11 * n32 * n44;\n    te[7] = n12 * n33 * n41 - n13 * n32 * n41 + n13 * n31 * n42 - n11 * n33 * n42 - n12 * n31 * n43 + n11 * n32 * n43;\n    te[8] = t13;\n    te[9] = n14 * n23 * n41 - n13 * n24 * n41 - n14 * n21 * n43 + n11 * n24 * n43 + n13 * n21 * n44 - n11 * n23 * n44;\n    te[10] = n12 * n24 * n41 - n14 * n22 * n41 + n14 * n21 * n42 - n11 * n24 * n42 - n12 * n21 * n44 + n11 * n22 * n44;\n    te[11] = n13 * n22 * n41 - n12 * n23 * n41 - n13 * n21 * n42 + n11 * n23 * n42 + n12 * n21 * n43 - n11 * n22 * n43;\n    te[12] = t14;\n    te[13] = n13 * n24 * n31 - n14 * n23 * n31 + n14 * n21 * n33 - n11 * n24 * n33 - n13 * n21 * n34 + n11 * n23 * n34;\n    te[14] = n14 * n22 * n31 - n12 * n24 * n31 - n14 * n21 * n32 + n11 * n24 * n32 + n12 * n21 * n34 - n11 * n22 * n34;\n    te[15] = n12 * n23 * n31 - n13 * n22 * n31 + n13 * n21 * n32 - n11 * n23 * n32 - n12 * n21 * n33 + n11 * n22 * n33;\n    return this.multiplyScalar(1 / det);\n  },\n  scale: function (v) {\n    var te = this.elements;\n    var x = v.x,\n        y = v.y,\n        z = v.z;\n    te[0] *= x;\n    te[4] *= y;\n    te[8] *= z;\n    te[1] *= x;\n    te[5] *= y;\n    te[9] *= z;\n    te[2] *= x;\n    te[6] *= y;\n    te[10] *= z;\n    te[3] *= x;\n    te[7] *= y;\n    te[11] *= z;\n    return this;\n  },\n  getMaxScaleOnAxis: function () {\n    var te = this.elements;\n    var scaleXSq = te[0] * te[0] + te[1] * te[1] + te[2] * te[2];\n    var scaleYSq = te[4] * te[4] + te[5] * te[5] + te[6] * te[6];\n    var scaleZSq = te[8] * te[8] + te[9] * te[9] + te[10] * te[10];\n    return Math.sqrt(Math.max(scaleXSq, scaleYSq, scaleZSq));\n  },\n  makeTranslation: function (x, y, z) {\n    this.set(1, 0, 0, x, 0, 1, 0, y, 0, 0, 1, z, 0, 0, 0, 1);\n    return this;\n  },\n  makeRotationX: function (theta) {\n    var c = Math.cos(theta),\n        s = Math.sin(theta);\n    this.set(1, 0, 0, 0, 0, c, -s, 0, 0, s, c, 0, 0, 0, 0, 1);\n    return this;\n  },\n  makeRotationY: function (theta) {\n    var c = Math.cos(theta),\n        s = Math.sin(theta);\n    this.set(c, 0, s, 0, 0, 1, 0, 0, -s, 0, c, 0, 0, 0, 0, 1);\n    return this;\n  },\n  makeRotationZ: function (theta) {\n    var c = Math.cos(theta),\n        s = Math.sin(theta);\n    this.set(c, -s, 0, 0, s, c, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1);\n    return this;\n  },\n  makeRotationAxis: function (axis, angle) {\n    // Based on http://www.gamedev.net/reference/articles/article1199.asp\n    var c = Math.cos(angle);\n    var s = Math.sin(angle);\n    var t = 1 - c;\n    var x = axis.x,\n        y = axis.y,\n        z = axis.z;\n    var tx = t * x,\n        ty = t * y;\n    this.set(tx * x + c, tx * y - s * z, tx * z + s * y, 0, tx * y + s * z, ty * y + c, ty * z - s * x, 0, tx * z - s * y, ty * z + s * x, t * z * z + c, 0, 0, 0, 0, 1);\n    return this;\n  },\n  makeScale: function (x, y, z) {\n    this.set(x, 0, 0, 0, 0, y, 0, 0, 0, 0, z, 0, 0, 0, 0, 1);\n    return this;\n  },\n  compose: function (position, quaternion, scale) {\n    this.makeRotationFromQuaternion(quaternion);\n    this.scale(scale);\n    this.setPosition(position);\n    return this;\n  },\n  decompose: function () {\n    var vector, matrix;\n    return function (position, quaternion, scale) {\n      if (vector === undefined) vector = new THREE.Vector3();\n      if (matrix === undefined) matrix = new THREE.Matrix4();\n      var te = this.elements;\n      var sx = vector.set(te[0], te[1], te[2]).length();\n      var sy = vector.set(te[4], te[5], te[6]).length();\n      var sz = vector.set(te[8], te[9], te[10]).length(); // if determine is negative, we need to invert one scale\n\n      var det = this.determinant();\n\n      if (det < 0) {\n        sx = -sx;\n      }\n\n      position.x = te[12];\n      position.y = te[13];\n      position.z = te[14]; // scale the rotation part\n\n      matrix.elements.set(this.elements); // at this point matrix is incomplete so we can't use .copy()\n\n      var invSX = 1 / sx;\n      var invSY = 1 / sy;\n      var invSZ = 1 / sz;\n      matrix.elements[0] *= invSX;\n      matrix.elements[1] *= invSX;\n      matrix.elements[2] *= invSX;\n      matrix.elements[4] *= invSY;\n      matrix.elements[5] *= invSY;\n      matrix.elements[6] *= invSY;\n      matrix.elements[8] *= invSZ;\n      matrix.elements[9] *= invSZ;\n      matrix.elements[10] *= invSZ;\n      quaternion.setFromRotationMatrix(matrix);\n      scale.x = sx;\n      scale.y = sy;\n      scale.z = sz;\n      return this;\n    };\n  }(),\n  makeFrustum: function (left, right, bottom, top, near, far) {\n    var te = this.elements;\n    var x = 2 * near / (right - left);\n    var y = 2 * near / (top - bottom);\n    var a = (right + left) / (right - left);\n    var b = (top + bottom) / (top - bottom);\n    var c = -(far + near) / (far - near);\n    var d = -2 * far * near / (far - near);\n    te[0] = x;\n    te[4] = 0;\n    te[8] = a;\n    te[12] = 0;\n    te[1] = 0;\n    te[5] = y;\n    te[9] = b;\n    te[13] = 0;\n    te[2] = 0;\n    te[6] = 0;\n    te[10] = c;\n    te[14] = d;\n    te[3] = 0;\n    te[7] = 0;\n    te[11] = -1;\n    te[15] = 0;\n    return this;\n  },\n  makePerspective: function (fov, aspect, near, far) {\n    var ymax = near * Math.tan(THREE.Math.degToRad(fov * 0.5));\n    var ymin = -ymax;\n    var xmin = ymin * aspect;\n    var xmax = ymax * aspect;\n    return this.makeFrustum(xmin, xmax, ymin, ymax, near, far);\n  },\n  makeOrthographic: function (left, right, top, bottom, near, far) {\n    var te = this.elements;\n    var w = 1.0 / (right - left);\n    var h = 1.0 / (top - bottom);\n    var p = 1.0 / (far - near);\n    var x = (right + left) * w;\n    var y = (top + bottom) * h;\n    var z = (far + near) * p;\n    te[0] = 2 * w;\n    te[4] = 0;\n    te[8] = 0;\n    te[12] = -x;\n    te[1] = 0;\n    te[5] = 2 * h;\n    te[9] = 0;\n    te[13] = -y;\n    te[2] = 0;\n    te[6] = 0;\n    te[10] = -2 * p;\n    te[14] = -z;\n    te[3] = 0;\n    te[7] = 0;\n    te[11] = 0;\n    te[15] = 1;\n    return this;\n  },\n  equals: function (matrix) {\n    var te = this.elements;\n    var me = matrix.elements;\n\n    for (var i = 0; i < 16; i++) {\n      if (te[i] !== me[i]) return false;\n    }\n\n    return true;\n  },\n  fromArray: function (array) {\n    this.elements.set(array);\n    return this;\n  },\n  toArray: function () {\n    var te = this.elements;\n    return [te[0], te[1], te[2], te[3], te[4], te[5], te[6], te[7], te[8], te[9], te[10], te[11], te[12], te[13], te[14], te[15]];\n  }\n}; // File:src/math/Plane.js\n\n/**\n * @author bhouston / http://clara.io\n */\n\nTHREE.Plane = function (normal, constant) {\n  this.normal = normal !== undefined ? normal : new THREE.Vector3(1, 0, 0);\n  this.constant = constant !== undefined ? constant : 0;\n};\n\nTHREE.Plane.prototype = {\n  constructor: THREE.Plane,\n  set: function (normal, constant) {\n    this.normal.copy(normal);\n    this.constant = constant;\n    return this;\n  },\n  setComponents: function (x, y, z, w) {\n    this.normal.set(x, y, z);\n    this.constant = w;\n    return this;\n  },\n  setFromNormalAndCoplanarPoint: function (normal, point) {\n    this.normal.copy(normal);\n    this.constant = -point.dot(this.normal); // must be this.normal, not normal, as this.normal is normalized\n\n    return this;\n  },\n  setFromCoplanarPoints: function () {\n    var v1 = new THREE.Vector3();\n    var v2 = new THREE.Vector3();\n    return function (a, b, c) {\n      var normal = v1.subVectors(c, b).cross(v2.subVectors(a, b)).normalize(); // Q: should an error be thrown if normal is zero (e.g. degenerate plane)?\n\n      this.setFromNormalAndCoplanarPoint(normal, a);\n      return this;\n    };\n  }(),\n  clone: function () {\n    return new this.constructor().copy(this);\n  },\n  copy: function (plane) {\n    this.normal.copy(plane.normal);\n    this.constant = plane.constant;\n    return this;\n  },\n  normalize: function () {\n    // Note: will lead to a divide by zero if the plane is invalid.\n    var inverseNormalLength = 1.0 / this.normal.length();\n    this.normal.multiplyScalar(inverseNormalLength);\n    this.constant *= inverseNormalLength;\n    return this;\n  },\n  negate: function () {\n    this.constant *= -1;\n    this.normal.negate();\n    return this;\n  },\n  distanceToPoint: function (point) {\n    return this.normal.dot(point) + this.constant;\n  },\n  distanceToSphere: function (sphere) {\n    return this.distanceToPoint(sphere.center) - sphere.radius;\n  },\n  projectPoint: function (point, optionalTarget) {\n    return this.orthoPoint(point, optionalTarget).sub(point).negate();\n  },\n  orthoPoint: function (point, optionalTarget) {\n    var perpendicularMagnitude = this.distanceToPoint(point);\n    var result = optionalTarget || new THREE.Vector3();\n    return result.copy(this.normal).multiplyScalar(perpendicularMagnitude);\n  },\n  intersectLine: function () {\n    var v1 = new THREE.Vector3();\n    return function (line, optionalTarget) {\n      var result = optionalTarget || new THREE.Vector3();\n      var direction = line.delta(v1);\n      var denominator = this.normal.dot(direction);\n\n      if (denominator === 0) {\n        // line is coplanar, return origin\n        if (this.distanceToPoint(line.start) === 0) {\n          return result.copy(line.start);\n        } // Unsure if this is the correct method to handle this case.\n\n\n        return undefined;\n      }\n\n      var t = -(line.start.dot(this.normal) + this.constant) / denominator;\n\n      if (t < 0 || t > 1) {\n        return undefined;\n      }\n\n      return result.copy(direction).multiplyScalar(t).add(line.start);\n    };\n  }(),\n  intersectsLine: function (line) {\n    // Note: this tests if a line intersects the plane, not whether it (or its end-points) are coplanar with it.\n    var startSign = this.distanceToPoint(line.start);\n    var endSign = this.distanceToPoint(line.end);\n    return startSign < 0 && endSign > 0 || endSign < 0 && startSign > 0;\n  },\n  intersectsBox: function (box) {\n    return box.intersectsPlane(this);\n  },\n  intersectsSphere: function (sphere) {\n    return sphere.intersectsPlane(this);\n  },\n  coplanarPoint: function (optionalTarget) {\n    var result = optionalTarget || new THREE.Vector3();\n    return result.copy(this.normal).multiplyScalar(-this.constant);\n  },\n  applyMatrix4: function () {\n    var v1 = new THREE.Vector3();\n    var v2 = new THREE.Vector3();\n    var m1 = new THREE.Matrix3();\n    return function (matrix, optionalNormalMatrix) {\n      // compute new normal based on theory here:\n      // http://www.songho.ca/opengl/gl_normaltransform.html\n      var normalMatrix = optionalNormalMatrix || m1.getNormalMatrix(matrix);\n      var newNormal = v1.copy(this.normal).applyMatrix3(normalMatrix);\n      var newCoplanarPoint = this.coplanarPoint(v2);\n      newCoplanarPoint.applyMatrix4(matrix);\n      this.setFromNormalAndCoplanarPoint(newNormal, newCoplanarPoint);\n      return this;\n    };\n  }(),\n  translate: function (offset) {\n    this.constant = this.constant - offset.dot(this.normal);\n    return this;\n  },\n  equals: function (plane) {\n    return plane.normal.equals(this.normal) && plane.constant === this.constant;\n  }\n}; // File:src/math/Quaternion.js\n\n/**\n * @author mikael emtinger / http://gomo.se/\n * @author alteredq / http://alteredqualia.com/\n * @author WestLangley / http://github.com/WestLangley\n * @author bhouston / http://clara.io\n */\n\nTHREE.Quaternion = function (x, y, z, w) {\n  this._x = x || 0;\n  this._y = y || 0;\n  this._z = z || 0;\n  this._w = w !== undefined ? w : 1;\n};\n\nTHREE.Quaternion.prototype = {\n  constructor: THREE.Quaternion,\n\n  get x() {\n    return this._x;\n  },\n\n  set x(value) {\n    this._x = value;\n    this.onChangeCallback();\n  },\n\n  get y() {\n    return this._y;\n  },\n\n  set y(value) {\n    this._y = value;\n    this.onChangeCallback();\n  },\n\n  get z() {\n    return this._z;\n  },\n\n  set z(value) {\n    this._z = value;\n    this.onChangeCallback();\n  },\n\n  get w() {\n    return this._w;\n  },\n\n  set w(value) {\n    this._w = value;\n    this.onChangeCallback();\n  },\n\n  set: function (x, y, z, w) {\n    this._x = x;\n    this._y = y;\n    this._z = z;\n    this._w = w;\n    this.onChangeCallback();\n    return this;\n  },\n  clone: function () {\n    return new this.constructor(this._x, this._y, this._z, this._w);\n  },\n  copy: function (quaternion) {\n    this._x = quaternion.x;\n    this._y = quaternion.y;\n    this._z = quaternion.z;\n    this._w = quaternion.w;\n    this.onChangeCallback();\n    return this;\n  },\n  setFromEuler: function (euler, update) {\n    if (euler instanceof THREE.Euler === false) {\n      throw new Error('THREE.Quaternion: .setFromEuler() now expects a Euler rotation rather than a Vector3 and order.');\n    } // http://www.mathworks.com/matlabcentral/fileexchange/\n    // \t20696-function-to-convert-between-dcm-euler-angles-quaternions-and-euler-vectors/\n    //\tcontent/SpinCalc.m\n\n\n    var c1 = Math.cos(euler._x / 2);\n    var c2 = Math.cos(euler._y / 2);\n    var c3 = Math.cos(euler._z / 2);\n    var s1 = Math.sin(euler._x / 2);\n    var s2 = Math.sin(euler._y / 2);\n    var s3 = Math.sin(euler._z / 2);\n    var order = euler.order;\n\n    if (order === 'XYZ') {\n      this._x = s1 * c2 * c3 + c1 * s2 * s3;\n      this._y = c1 * s2 * c3 - s1 * c2 * s3;\n      this._z = c1 * c2 * s3 + s1 * s2 * c3;\n      this._w = c1 * c2 * c3 - s1 * s2 * s3;\n    } else if (order === 'YXZ') {\n      this._x = s1 * c2 * c3 + c1 * s2 * s3;\n      this._y = c1 * s2 * c3 - s1 * c2 * s3;\n      this._z = c1 * c2 * s3 - s1 * s2 * c3;\n      this._w = c1 * c2 * c3 + s1 * s2 * s3;\n    } else if (order === 'ZXY') {\n      this._x = s1 * c2 * c3 - c1 * s2 * s3;\n      this._y = c1 * s2 * c3 + s1 * c2 * s3;\n      this._z = c1 * c2 * s3 + s1 * s2 * c3;\n      this._w = c1 * c2 * c3 - s1 * s2 * s3;\n    } else if (order === 'ZYX') {\n      this._x = s1 * c2 * c3 - c1 * s2 * s3;\n      this._y = c1 * s2 * c3 + s1 * c2 * s3;\n      this._z = c1 * c2 * s3 - s1 * s2 * c3;\n      this._w = c1 * c2 * c3 + s1 * s2 * s3;\n    } else if (order === 'YZX') {\n      this._x = s1 * c2 * c3 + c1 * s2 * s3;\n      this._y = c1 * s2 * c3 + s1 * c2 * s3;\n      this._z = c1 * c2 * s3 - s1 * s2 * c3;\n      this._w = c1 * c2 * c3 - s1 * s2 * s3;\n    } else if (order === 'XZY') {\n      this._x = s1 * c2 * c3 - c1 * s2 * s3;\n      this._y = c1 * s2 * c3 - s1 * c2 * s3;\n      this._z = c1 * c2 * s3 + s1 * s2 * c3;\n      this._w = c1 * c2 * c3 + s1 * s2 * s3;\n    }\n\n    if (update !== false) this.onChangeCallback();\n    return this;\n  },\n  setFromAxisAngle: function (axis, angle) {\n    // http://www.euclideanspace.com/maths/geometry/rotations/conversions/angleToQuaternion/index.htm\n    // assumes axis is normalized\n    var halfAngle = angle / 2,\n        s = Math.sin(halfAngle);\n    this._x = axis.x * s;\n    this._y = axis.y * s;\n    this._z = axis.z * s;\n    this._w = Math.cos(halfAngle);\n    this.onChangeCallback();\n    return this;\n  },\n  setFromRotationMatrix: function (m) {\n    // http://www.euclideanspace.com/maths/geometry/rotations/conversions/matrixToQuaternion/index.htm\n    // assumes the upper 3x3 of m is a pure rotation matrix (i.e, unscaled)\n    var te = m.elements,\n        m11 = te[0],\n        m12 = te[4],\n        m13 = te[8],\n        m21 = te[1],\n        m22 = te[5],\n        m23 = te[9],\n        m31 = te[2],\n        m32 = te[6],\n        m33 = te[10],\n        trace = m11 + m22 + m33,\n        s;\n\n    if (trace > 0) {\n      s = 0.5 / Math.sqrt(trace + 1.0);\n      this._w = 0.25 / s;\n      this._x = (m32 - m23) * s;\n      this._y = (m13 - m31) * s;\n      this._z = (m21 - m12) * s;\n    } else if (m11 > m22 && m11 > m33) {\n      s = 2.0 * Math.sqrt(1.0 + m11 - m22 - m33);\n      this._w = (m32 - m23) / s;\n      this._x = 0.25 * s;\n      this._y = (m12 + m21) / s;\n      this._z = (m13 + m31) / s;\n    } else if (m22 > m33) {\n      s = 2.0 * Math.sqrt(1.0 + m22 - m11 - m33);\n      this._w = (m13 - m31) / s;\n      this._x = (m12 + m21) / s;\n      this._y = 0.25 * s;\n      this._z = (m23 + m32) / s;\n    } else {\n      s = 2.0 * Math.sqrt(1.0 + m33 - m11 - m22);\n      this._w = (m21 - m12) / s;\n      this._x = (m13 + m31) / s;\n      this._y = (m23 + m32) / s;\n      this._z = 0.25 * s;\n    }\n\n    this.onChangeCallback();\n    return this;\n  },\n  setFromUnitVectors: function () {\n    // http://lolengine.net/blog/2014/02/24/quaternion-from-two-vectors-final\n    // assumes direction vectors vFrom and vTo are normalized\n    var v1, r;\n    var EPS = 0.000001;\n    return function (vFrom, vTo) {\n      if (v1 === undefined) v1 = new THREE.Vector3();\n      r = vFrom.dot(vTo) + 1;\n\n      if (r < EPS) {\n        r = 0;\n\n        if (Math.abs(vFrom.x) > Math.abs(vFrom.z)) {\n          v1.set(-vFrom.y, vFrom.x, 0);\n        } else {\n          v1.set(0, -vFrom.z, vFrom.y);\n        }\n      } else {\n        v1.crossVectors(vFrom, vTo);\n      }\n\n      this._x = v1.x;\n      this._y = v1.y;\n      this._z = v1.z;\n      this._w = r;\n      this.normalize();\n      return this;\n    };\n  }(),\n  inverse: function () {\n    this.conjugate().normalize();\n    return this;\n  },\n  conjugate: function () {\n    this._x *= -1;\n    this._y *= -1;\n    this._z *= -1;\n    this.onChangeCallback();\n    return this;\n  },\n  dot: function (v) {\n    return this._x * v._x + this._y * v._y + this._z * v._z + this._w * v._w;\n  },\n  lengthSq: function () {\n    return this._x * this._x + this._y * this._y + this._z * this._z + this._w * this._w;\n  },\n  length: function () {\n    return Math.sqrt(this._x * this._x + this._y * this._y + this._z * this._z + this._w * this._w);\n  },\n  normalize: function () {\n    var l = this.length();\n\n    if (l === 0) {\n      this._x = 0;\n      this._y = 0;\n      this._z = 0;\n      this._w = 1;\n    } else {\n      l = 1 / l;\n      this._x = this._x * l;\n      this._y = this._y * l;\n      this._z = this._z * l;\n      this._w = this._w * l;\n    }\n\n    this.onChangeCallback();\n    return this;\n  },\n  multiply: function (q, p) {\n    if (p !== undefined) {\n      return this.multiplyQuaternions(q, p);\n    }\n\n    return this.multiplyQuaternions(this, q);\n  },\n  multiplyQuaternions: function (a, b) {\n    // from http://www.euclideanspace.com/maths/algebra/realNormedAlgebra/quaternions/code/index.htm\n    var qax = a._x,\n        qay = a._y,\n        qaz = a._z,\n        qaw = a._w;\n    var qbx = b._x,\n        qby = b._y,\n        qbz = b._z,\n        qbw = b._w;\n    this._x = qax * qbw + qaw * qbx + qay * qbz - qaz * qby;\n    this._y = qay * qbw + qaw * qby + qaz * qbx - qax * qbz;\n    this._z = qaz * qbw + qaw * qbz + qax * qby - qay * qbx;\n    this._w = qaw * qbw - qax * qbx - qay * qby - qaz * qbz;\n    this.onChangeCallback();\n    return this;\n  },\n  slerp: function (qb, t) {\n    if (t === 0) return this;\n    if (t === 1) return this.copy(qb);\n    var x = this._x,\n        y = this._y,\n        z = this._z,\n        w = this._w; // http://www.euclideanspace.com/maths/algebra/realNormedAlgebra/quaternions/slerp/\n\n    var cosHalfTheta = w * qb._w + x * qb._x + y * qb._y + z * qb._z;\n\n    if (cosHalfTheta < 0) {\n      this._w = -qb._w;\n      this._x = -qb._x;\n      this._y = -qb._y;\n      this._z = -qb._z;\n      cosHalfTheta = -cosHalfTheta;\n    } else {\n      this.copy(qb);\n    }\n\n    if (cosHalfTheta >= 1.0) {\n      this._w = w;\n      this._x = x;\n      this._y = y;\n      this._z = z;\n      return this;\n    }\n\n    var sinHalfTheta = Math.sqrt(1.0 - cosHalfTheta * cosHalfTheta);\n\n    if (Math.abs(sinHalfTheta) < 0.001) {\n      this._w = 0.5 * (w + this._w);\n      this._x = 0.5 * (x + this._x);\n      this._y = 0.5 * (y + this._y);\n      this._z = 0.5 * (z + this._z);\n      return this;\n    }\n\n    var halfTheta = Math.atan2(sinHalfTheta, cosHalfTheta);\n    var ratioA = Math.sin((1 - t) * halfTheta) / sinHalfTheta,\n        ratioB = Math.sin(t * halfTheta) / sinHalfTheta;\n    this._w = w * ratioA + this._w * ratioB;\n    this._x = x * ratioA + this._x * ratioB;\n    this._y = y * ratioA + this._y * ratioB;\n    this._z = z * ratioA + this._z * ratioB;\n    this.onChangeCallback();\n    return this;\n  },\n  equals: function (quaternion) {\n    return quaternion._x === this._x && quaternion._y === this._y && quaternion._z === this._z && quaternion._w === this._w;\n  },\n  fromArray: function (array, offset) {\n    if (offset === undefined) offset = 0;\n    this._x = array[offset];\n    this._y = array[offset + 1];\n    this._z = array[offset + 2];\n    this._w = array[offset + 3];\n    this.onChangeCallback();\n    return this;\n  },\n  toArray: function (array, offset) {\n    if (array === undefined) array = [];\n    if (offset === undefined) offset = 0;\n    array[offset] = this._x;\n    array[offset + 1] = this._y;\n    array[offset + 2] = this._z;\n    array[offset + 3] = this._w;\n    return array;\n  },\n  onChange: function (callback) {\n    this.onChangeCallback = callback;\n    return this;\n  },\n  onChangeCallback: function () {}\n};\nObject.assign(THREE.Quaternion, {\n  slerp: function (qa, qb, qm, t) {\n    return qm.copy(qa).slerp(qb, t);\n  },\n  slerpFlat: function (dst, dstOffset, src0, srcOffset0, src1, srcOffset1, t) {\n    // fuzz-free, array-based Quaternion SLERP operation\n    var x0 = src0[srcOffset0 + 0],\n        y0 = src0[srcOffset0 + 1],\n        z0 = src0[srcOffset0 + 2],\n        w0 = src0[srcOffset0 + 3],\n        x1 = src1[srcOffset1 + 0],\n        y1 = src1[srcOffset1 + 1],\n        z1 = src1[srcOffset1 + 2],\n        w1 = src1[srcOffset1 + 3];\n\n    if (w0 !== w1 || x0 !== x1 || y0 !== y1 || z0 !== z1) {\n      var s = 1 - t,\n          cos = x0 * x1 + y0 * y1 + z0 * z1 + w0 * w1,\n          dir = cos >= 0 ? 1 : -1,\n          sqrSin = 1 - cos * cos; // Skip the Slerp for tiny steps to avoid numeric problems:\n\n      if (sqrSin > Number.EPSILON) {\n        var sin = Math.sqrt(sqrSin),\n            len = Math.atan2(sin, cos * dir);\n        s = Math.sin(s * len) / sin;\n        t = Math.sin(t * len) / sin;\n      }\n\n      var tDir = t * dir;\n      x0 = x0 * s + x1 * tDir;\n      y0 = y0 * s + y1 * tDir;\n      z0 = z0 * s + z1 * tDir;\n      w0 = w0 * s + w1 * tDir; // Normalize in case we just did a lerp:\n\n      if (s === 1 - t) {\n        var f = 1 / Math.sqrt(x0 * x0 + y0 * y0 + z0 * z0 + w0 * w0);\n        x0 *= f;\n        y0 *= f;\n        z0 *= f;\n        w0 *= f;\n      }\n    }\n\n    dst[dstOffset] = x0;\n    dst[dstOffset + 1] = y0;\n    dst[dstOffset + 2] = z0;\n    dst[dstOffset + 3] = w0;\n  }\n}); // File:src/math/Triangle.js\n\n/**\n * @author bhouston / http://clara.io\n * @author mrdoob / http://mrdoob.com/\n */\n\nTHREE.Triangle = function (a, b, c) {\n  this.a = a !== undefined ? a : new THREE.Vector3();\n  this.b = b !== undefined ? b : new THREE.Vector3();\n  this.c = c !== undefined ? c : new THREE.Vector3();\n};\n\nTHREE.Triangle.normal = function () {\n  var v0 = new THREE.Vector3();\n  return function (a, b, c, optionalTarget) {\n    var result = optionalTarget || new THREE.Vector3();\n    result.subVectors(c, b);\n    v0.subVectors(a, b);\n    result.cross(v0);\n    var resultLengthSq = result.lengthSq();\n\n    if (resultLengthSq > 0) {\n      return result.multiplyScalar(1 / Math.sqrt(resultLengthSq));\n    }\n\n    return result.set(0, 0, 0);\n  };\n}(); // static/instance method to calculate barycentric coordinates\n// based on: http://www.blackpawn.com/texts/pointinpoly/default.html\n\n\nTHREE.Triangle.barycoordFromPoint = function () {\n  var v0 = new THREE.Vector3();\n  var v1 = new THREE.Vector3();\n  var v2 = new THREE.Vector3();\n  return function (point, a, b, c, optionalTarget) {\n    v0.subVectors(c, a);\n    v1.subVectors(b, a);\n    v2.subVectors(point, a);\n    var dot00 = v0.dot(v0);\n    var dot01 = v0.dot(v1);\n    var dot02 = v0.dot(v2);\n    var dot11 = v1.dot(v1);\n    var dot12 = v1.dot(v2);\n    var denom = dot00 * dot11 - dot01 * dot01;\n    var result = optionalTarget || new THREE.Vector3(); // collinear or singular triangle\n\n    if (denom === 0) {\n      // arbitrary location outside of triangle?\n      // not sure if this is the best idea, maybe should be returning undefined\n      return result.set(-2, -1, -1);\n    }\n\n    var invDenom = 1 / denom;\n    var u = (dot11 * dot02 - dot01 * dot12) * invDenom;\n    var v = (dot00 * dot12 - dot01 * dot02) * invDenom; // barycentric coordinates must always sum to 1\n\n    return result.set(1 - u - v, v, u);\n  };\n}();\n\nTHREE.Triangle.containsPoint = function () {\n  var v1 = new THREE.Vector3();\n  return function (point, a, b, c) {\n    var result = THREE.Triangle.barycoordFromPoint(point, a, b, c, v1);\n    return result.x >= 0 && result.y >= 0 && result.x + result.y <= 1;\n  };\n}();\n\nTHREE.Triangle.prototype = {\n  constructor: THREE.Triangle,\n  set: function (a, b, c) {\n    this.a.copy(a);\n    this.b.copy(b);\n    this.c.copy(c);\n    return this;\n  },\n  setFromPointsAndIndices: function (points, i0, i1, i2) {\n    this.a.copy(points[i0]);\n    this.b.copy(points[i1]);\n    this.c.copy(points[i2]);\n    return this;\n  },\n  clone: function () {\n    return new this.constructor().copy(this);\n  },\n  copy: function (triangle) {\n    this.a.copy(triangle.a);\n    this.b.copy(triangle.b);\n    this.c.copy(triangle.c);\n    return this;\n  },\n  area: function () {\n    var v0 = new THREE.Vector3();\n    var v1 = new THREE.Vector3();\n    return function () {\n      v0.subVectors(this.c, this.b);\n      v1.subVectors(this.a, this.b);\n      return v0.cross(v1).length() * 0.5;\n    };\n  }(),\n  midpoint: function (optionalTarget) {\n    var result = optionalTarget || new THREE.Vector3();\n    return result.addVectors(this.a, this.b).add(this.c).multiplyScalar(1 / 3);\n  },\n  normal: function (optionalTarget) {\n    return THREE.Triangle.normal(this.a, this.b, this.c, optionalTarget);\n  },\n  plane: function (optionalTarget) {\n    var result = optionalTarget || new THREE.Plane();\n    return result.setFromCoplanarPoints(this.a, this.b, this.c);\n  },\n  barycoordFromPoint: function (point, optionalTarget) {\n    return THREE.Triangle.barycoordFromPoint(point, this.a, this.b, this.c, optionalTarget);\n  },\n  containsPoint: function (point) {\n    return THREE.Triangle.containsPoint(point, this.a, this.b, this.c);\n  },\n  equals: function (triangle) {\n    return triangle.a.equals(this.a) && triangle.b.equals(this.b) && triangle.c.equals(this.c);\n  }\n}; // File:src/math/Box3.js\n\n/**\n * @author bhouston / http://clara.io\n * @author WestLangley / http://github.com/WestLangley\n */\n\nTHREE.Box3 = function (min, max) {\n  this.min = min !== undefined ? min : new THREE.Vector3(+Infinity, +Infinity, +Infinity);\n  this.max = max !== undefined ? max : new THREE.Vector3(-Infinity, -Infinity, -Infinity);\n};\n\nTHREE.Box3.prototype = {\n  constructor: THREE.Box3,\n  set: function (min, max) {\n    this.min.copy(min);\n    this.max.copy(max);\n    return this;\n  },\n  setFromArray: function (array) {\n    this.makeEmpty();\n    var minX = +Infinity;\n    var minY = +Infinity;\n    var minZ = +Infinity;\n    var maxX = -Infinity;\n    var maxY = -Infinity;\n    var maxZ = -Infinity;\n\n    for (var i = 0, il = array.length; i < il; i += 3) {\n      var x = array[i];\n      var y = array[i + 1];\n      var z = array[i + 2];\n      if (x < minX) minX = x;\n      if (y < minY) minY = y;\n      if (z < minZ) minZ = z;\n      if (x > maxX) maxX = x;\n      if (y > maxY) maxY = y;\n      if (z > maxZ) maxZ = z;\n    }\n\n    this.min.set(minX, minY, minZ);\n    this.max.set(maxX, maxY, maxZ);\n  },\n  setFromPoints: function (points) {\n    this.makeEmpty();\n\n    for (var i = 0, il = points.length; i < il; i++) {\n      this.expandByPoint(points[i]);\n    }\n\n    return this;\n  },\n  setFromCenterAndSize: function () {\n    var v1 = new THREE.Vector3();\n    return function (center, size) {\n      var halfSize = v1.copy(size).multiplyScalar(0.5);\n      this.min.copy(center).sub(halfSize);\n      this.max.copy(center).add(halfSize);\n      return this;\n    };\n  }(),\n  setFromObject: function () {\n    // Computes the world-axis-aligned bounding box of an object (including its children),\n    // accounting for both the object's, and children's, world transforms\n    var box;\n    return function (object) {\n      if (box === undefined) box = new THREE.Box3();\n      var scope = this;\n      this.makeEmpty();\n      object.updateMatrixWorld(true);\n      object.traverse(function (node) {\n        var geometry = node.geometry;\n\n        if (geometry !== undefined) {\n          if (geometry.boundingBox === null) {\n            geometry.computeBoundingBox();\n          }\n\n          if (geometry.boundingBox.isEmpty() === false) {\n            box.copy(geometry.boundingBox);\n            box.applyMatrix4(node.matrixWorld);\n            scope.union(box);\n          }\n        }\n      });\n      return this;\n    };\n  }(),\n  clone: function () {\n    return new this.constructor().copy(this);\n  },\n  copy: function (box) {\n    this.min.copy(box.min);\n    this.max.copy(box.max);\n    return this;\n  },\n  makeEmpty: function () {\n    this.min.x = this.min.y = this.min.z = +Infinity;\n    this.max.x = this.max.y = this.max.z = -Infinity;\n    return this;\n  },\n  isEmpty: function () {\n    // this is a more robust check for empty than ( volume <= 0 ) because volume can get positive with two negative axes\n    return this.max.x < this.min.x || this.max.y < this.min.y || this.max.z < this.min.z;\n  },\n  center: function (optionalTarget) {\n    var result = optionalTarget || new THREE.Vector3();\n    return result.addVectors(this.min, this.max).multiplyScalar(0.5);\n  },\n  size: function (optionalTarget) {\n    var result = optionalTarget || new THREE.Vector3();\n    return result.subVectors(this.max, this.min);\n  },\n  expandByPoint: function (point) {\n    this.min.min(point);\n    this.max.max(point);\n    return this;\n  },\n  expandByVector: function (vector) {\n    this.min.sub(vector);\n    this.max.add(vector);\n    return this;\n  },\n  expandByScalar: function (scalar) {\n    this.min.addScalar(-scalar);\n    this.max.addScalar(scalar);\n    return this;\n  },\n  containsPoint: function (point) {\n    if (point.x < this.min.x || point.x > this.max.x || point.y < this.min.y || point.y > this.max.y || point.z < this.min.z || point.z > this.max.z) {\n      return false;\n    }\n\n    return true;\n  },\n  containsBox: function (box) {\n    if (this.min.x <= box.min.x && box.max.x <= this.max.x && this.min.y <= box.min.y && box.max.y <= this.max.y && this.min.z <= box.min.z && box.max.z <= this.max.z) {\n      return true;\n    }\n\n    return false;\n  },\n  getParameter: function (point, optionalTarget) {\n    // This can potentially have a divide by zero if the box\n    // has a size dimension of 0.\n    var result = optionalTarget || new THREE.Vector3();\n    return result.set((point.x - this.min.x) / (this.max.x - this.min.x), (point.y - this.min.y) / (this.max.y - this.min.y), (point.z - this.min.z) / (this.max.z - this.min.z));\n  },\n  intersectsBox: function (box) {\n    // using 6 splitting planes to rule out intersections.\n    if (box.max.x < this.min.x || box.min.x > this.max.x || box.max.y < this.min.y || box.min.y > this.max.y || box.max.z < this.min.z || box.min.z > this.max.z) {\n      return false;\n    }\n\n    return true;\n  },\n  intersectsSphere: function () {\n    var closestPoint;\n    return function intersectsSphere(sphere) {\n      if (closestPoint === undefined) closestPoint = new THREE.Vector3(); // Find the point on the AABB closest to the sphere center.\n\n      this.clampPoint(sphere.center, closestPoint); // If that point is inside the sphere, the AABB and sphere intersect.\n\n      return closestPoint.distanceToSquared(sphere.center) <= sphere.radius * sphere.radius;\n    };\n  }(),\n  intersectsPlane: function (plane) {\n    // We compute the minimum and maximum dot product values. If those values\n    // are on the same side (back or front) of the plane, then there is no intersection.\n    var min, max;\n\n    if (plane.normal.x > 0) {\n      min = plane.normal.x * this.min.x;\n      max = plane.normal.x * this.max.x;\n    } else {\n      min = plane.normal.x * this.max.x;\n      max = plane.normal.x * this.min.x;\n    }\n\n    if (plane.normal.y > 0) {\n      min += plane.normal.y * this.min.y;\n      max += plane.normal.y * this.max.y;\n    } else {\n      min += plane.normal.y * this.max.y;\n      max += plane.normal.y * this.min.y;\n    }\n\n    if (plane.normal.z > 0) {\n      min += plane.normal.z * this.min.z;\n      max += plane.normal.z * this.max.z;\n    } else {\n      min += plane.normal.z * this.max.z;\n      max += plane.normal.z * this.min.z;\n    }\n\n    return min <= plane.constant && max >= plane.constant;\n  },\n  clampPoint: function (point, optionalTarget) {\n    var result = optionalTarget || new THREE.Vector3();\n    return result.copy(point).clamp(this.min, this.max);\n  },\n  distanceToPoint: function () {\n    var v1 = new THREE.Vector3();\n    return function (point) {\n      var clampedPoint = v1.copy(point).clamp(this.min, this.max);\n      return clampedPoint.sub(point).length();\n    };\n  }(),\n  getBoundingSphere: function () {\n    var v1 = new THREE.Vector3();\n    return function (optionalTarget) {\n      var result = optionalTarget || new THREE.Sphere();\n      result.center = this.center();\n      result.radius = this.size(v1).length() * 0.5;\n      return result;\n    };\n  }(),\n  intersect: function (box) {\n    this.min.max(box.min);\n    this.max.min(box.max);\n    return this;\n  },\n  union: function (box) {\n    this.min.min(box.min);\n    this.max.max(box.max);\n    return this;\n  },\n  applyMatrix4: function () {\n    var points = [new THREE.Vector3(), new THREE.Vector3(), new THREE.Vector3(), new THREE.Vector3(), new THREE.Vector3(), new THREE.Vector3(), new THREE.Vector3(), new THREE.Vector3()];\n    return function (matrix) {\n      // NOTE: I am using a binary pattern to specify all 2^3 combinations below\n      points[0].set(this.min.x, this.min.y, this.min.z).applyMatrix4(matrix); // 000\n\n      points[1].set(this.min.x, this.min.y, this.max.z).applyMatrix4(matrix); // 001\n\n      points[2].set(this.min.x, this.max.y, this.min.z).applyMatrix4(matrix); // 010\n\n      points[3].set(this.min.x, this.max.y, this.max.z).applyMatrix4(matrix); // 011\n\n      points[4].set(this.max.x, this.min.y, this.min.z).applyMatrix4(matrix); // 100\n\n      points[5].set(this.max.x, this.min.y, this.max.z).applyMatrix4(matrix); // 101\n\n      points[6].set(this.max.x, this.max.y, this.min.z).applyMatrix4(matrix); // 110\n\n      points[7].set(this.max.x, this.max.y, this.max.z).applyMatrix4(matrix); // 111\n\n      this.makeEmpty();\n      this.setFromPoints(points);\n      return this;\n    };\n  }(),\n  translate: function (offset) {\n    this.min.add(offset);\n    this.max.add(offset);\n    return this;\n  },\n  equals: function (box) {\n    return box.min.equals(this.min) && box.max.equals(this.max);\n  }\n}; // File:src/math/Euler.js\n\n/**\n * @author mrdoob / http://mrdoob.com/\n * @author WestLangley / http://github.com/WestLangley\n * @author bhouston / http://clara.io\n */\n\nTHREE.Euler = function (x, y, z, order) {\n  this._x = x || 0;\n  this._y = y || 0;\n  this._z = z || 0;\n  this._order = order || THREE.Euler.DefaultOrder;\n};\n\nTHREE.Euler.RotationOrders = ['XYZ', 'YZX', 'ZXY', 'XZY', 'YXZ', 'ZYX'];\nTHREE.Euler.DefaultOrder = 'XYZ';\nTHREE.Euler.prototype = {\n  constructor: THREE.Euler,\n\n  get x() {\n    return this._x;\n  },\n\n  set x(value) {\n    this._x = value;\n    this.onChangeCallback();\n  },\n\n  get y() {\n    return this._y;\n  },\n\n  set y(value) {\n    this._y = value;\n    this.onChangeCallback();\n  },\n\n  get z() {\n    return this._z;\n  },\n\n  set z(value) {\n    this._z = value;\n    this.onChangeCallback();\n  },\n\n  get order() {\n    return this._order;\n  },\n\n  set order(value) {\n    this._order = value;\n    this.onChangeCallback();\n  },\n\n  set: function (x, y, z, order) {\n    this._x = x;\n    this._y = y;\n    this._z = z;\n    this._order = order || this._order;\n    this.onChangeCallback();\n    return this;\n  },\n  clone: function () {\n    return new this.constructor(this._x, this._y, this._z, this._order);\n  },\n  copy: function (euler) {\n    this._x = euler._x;\n    this._y = euler._y;\n    this._z = euler._z;\n    this._order = euler._order;\n    this.onChangeCallback();\n    return this;\n  },\n  setFromRotationMatrix: function (m, order, update) {\n    var clamp = THREE.Math.clamp; // assumes the upper 3x3 of m is a pure rotation matrix (i.e, unscaled)\n\n    var te = m.elements;\n    var m11 = te[0],\n        m12 = te[4],\n        m13 = te[8];\n    var m21 = te[1],\n        m22 = te[5],\n        m23 = te[9];\n    var m31 = te[2],\n        m32 = te[6],\n        m33 = te[10];\n    order = order || this._order;\n\n    if (order === 'XYZ') {\n      this._y = Math.asin(clamp(m13, -1, 1));\n\n      if (Math.abs(m13) < 0.99999) {\n        this._x = Math.atan2(-m23, m33);\n        this._z = Math.atan2(-m12, m11);\n      } else {\n        this._x = Math.atan2(m32, m22);\n        this._z = 0;\n      }\n    } else if (order === 'YXZ') {\n      this._x = Math.asin(-clamp(m23, -1, 1));\n\n      if (Math.abs(m23) < 0.99999) {\n        this._y = Math.atan2(m13, m33);\n        this._z = Math.atan2(m21, m22);\n      } else {\n        this._y = Math.atan2(-m31, m11);\n        this._z = 0;\n      }\n    } else if (order === 'ZXY') {\n      this._x = Math.asin(clamp(m32, -1, 1));\n\n      if (Math.abs(m32) < 0.99999) {\n        this._y = Math.atan2(-m31, m33);\n        this._z = Math.atan2(-m12, m22);\n      } else {\n        this._y = 0;\n        this._z = Math.atan2(m21, m11);\n      }\n    } else if (order === 'ZYX') {\n      this._y = Math.asin(-clamp(m31, -1, 1));\n\n      if (Math.abs(m31) < 0.99999) {\n        this._x = Math.atan2(m32, m33);\n        this._z = Math.atan2(m21, m11);\n      } else {\n        this._x = 0;\n        this._z = Math.atan2(-m12, m22);\n      }\n    } else if (order === 'YZX') {\n      this._z = Math.asin(clamp(m21, -1, 1));\n\n      if (Math.abs(m21) < 0.99999) {\n        this._x = Math.atan2(-m23, m22);\n        this._y = Math.atan2(-m31, m11);\n      } else {\n        this._x = 0;\n        this._y = Math.atan2(m13, m33);\n      }\n    } else if (order === 'XZY') {\n      this._z = Math.asin(-clamp(m12, -1, 1));\n\n      if (Math.abs(m12) < 0.99999) {\n        this._x = Math.atan2(m32, m22);\n        this._y = Math.atan2(m13, m11);\n      } else {\n        this._x = Math.atan2(-m23, m33);\n        this._y = 0;\n      }\n    }\n\n    this._order = order;\n    if (update !== false) this.onChangeCallback();\n    return this;\n  },\n  setFromQuaternion: function () {\n    var matrix;\n    return function (q, order, update) {\n      if (matrix === undefined) matrix = new THREE.Matrix4();\n      matrix.makeRotationFromQuaternion(q);\n      this.setFromRotationMatrix(matrix, order, update);\n      return this;\n    };\n  }(),\n  setFromVector3: function (v, order) {\n    return this.set(v.x, v.y, v.z, order || this._order);\n  },\n  reorder: function () {\n    // WARNING: this discards revolution information -bhouston\n    var q = new THREE.Quaternion();\n    return function (newOrder) {\n      q.setFromEuler(this);\n      this.setFromQuaternion(q, newOrder);\n    };\n  }(),\n  equals: function (euler) {\n    return euler._x === this._x && euler._y === this._y && euler._z === this._z && euler._order === this._order;\n  },\n  fromArray: function (array) {\n    this._x = array[0];\n    this._y = array[1];\n    this._z = array[2];\n    if (array[3] !== undefined) this._order = array[3];\n    this.onChangeCallback();\n    return this;\n  },\n  toArray: function (array, offset) {\n    if (array === undefined) array = [];\n    if (offset === undefined) offset = 0;\n    array[offset] = this._x;\n    array[offset + 1] = this._y;\n    array[offset + 2] = this._z;\n    array[offset + 3] = this._order;\n    return array;\n  },\n  toVector3: function (optionalResult) {\n    if (optionalResult) {\n      return optionalResult.set(this._x, this._y, this._z);\n    } else {\n      return new THREE.Vector3(this._x, this._y, this._z);\n    }\n  },\n  onChange: function (callback) {\n    this.onChangeCallback = callback;\n    return this;\n  },\n  onChangeCallback: function () {}\n}; // File:src/math/Ray.js\n\n/**\n * @author bhouston / http://clara.io\n */\n\nTHREE.Ray = function (origin, direction) {\n  this.origin = origin !== undefined ? origin : new THREE.Vector3();\n  this.direction = direction !== undefined ? direction : new THREE.Vector3();\n};\n\nTHREE.Ray.prototype = {\n  constructor: THREE.Ray,\n  set: function (origin, direction) {\n    this.origin.copy(origin);\n    this.direction.copy(direction);\n    return this;\n  },\n  clone: function () {\n    return new this.constructor().copy(this);\n  },\n  copy: function (ray) {\n    this.origin.copy(ray.origin);\n    this.direction.copy(ray.direction);\n    return this;\n  },\n  at: function (t, optionalTarget) {\n    var result = optionalTarget || new THREE.Vector3();\n    return result.copy(this.direction).multiplyScalar(t).add(this.origin);\n  },\n  lookAt: function (v) {\n    this.direction.copy(v).sub(this.origin).normalize();\n  },\n  recast: function () {\n    var v1 = new THREE.Vector3();\n    return function (t) {\n      this.origin.copy(this.at(t, v1));\n      return this;\n    };\n  }(),\n  closestPointToPoint: function (point, optionalTarget) {\n    var result = optionalTarget || new THREE.Vector3();\n    result.subVectors(point, this.origin);\n    var directionDistance = result.dot(this.direction);\n\n    if (directionDistance < 0) {\n      return result.copy(this.origin);\n    }\n\n    return result.copy(this.direction).multiplyScalar(directionDistance).add(this.origin);\n  },\n  distanceToPoint: function (point) {\n    return Math.sqrt(this.distanceSqToPoint(point));\n  },\n  distanceSqToPoint: function () {\n    var v1 = new THREE.Vector3();\n    return function (point) {\n      var directionDistance = v1.subVectors(point, this.origin).dot(this.direction); // point behind the ray\n\n      if (directionDistance < 0) {\n        return this.origin.distanceToSquared(point);\n      }\n\n      v1.copy(this.direction).multiplyScalar(directionDistance).add(this.origin);\n      return v1.distanceToSquared(point);\n    };\n  }(),\n  distanceSqToSegment: function () {\n    var segCenter = new THREE.Vector3();\n    var segDir = new THREE.Vector3();\n    var diff = new THREE.Vector3();\n    return function (v0, v1, optionalPointOnRay, optionalPointOnSegment) {\n      // from http://www.geometrictools.com/LibMathematics/Distance/Wm5DistRay3Segment3.cpp\n      // It returns the min distance between the ray and the segment\n      // defined by v0 and v1\n      // It can also set two optional targets :\n      // - The closest point on the ray\n      // - The closest point on the segment\n      segCenter.copy(v0).add(v1).multiplyScalar(0.5);\n      segDir.copy(v1).sub(v0).normalize();\n      diff.copy(this.origin).sub(segCenter);\n      var segExtent = v0.distanceTo(v1) * 0.5;\n      var a01 = -this.direction.dot(segDir);\n      var b0 = diff.dot(this.direction);\n      var b1 = -diff.dot(segDir);\n      var c = diff.lengthSq();\n      var det = Math.abs(1 - a01 * a01);\n      var s0, s1, sqrDist, extDet;\n\n      if (det > 0) {\n        // The ray and segment are not parallel.\n        s0 = a01 * b1 - b0;\n        s1 = a01 * b0 - b1;\n        extDet = segExtent * det;\n\n        if (s0 >= 0) {\n          if (s1 >= -extDet) {\n            if (s1 <= extDet) {\n              // region 0\n              // Minimum at interior points of ray and segment.\n              var invDet = 1 / det;\n              s0 *= invDet;\n              s1 *= invDet;\n              sqrDist = s0 * (s0 + a01 * s1 + 2 * b0) + s1 * (a01 * s0 + s1 + 2 * b1) + c;\n            } else {\n              // region 1\n              s1 = segExtent;\n              s0 = Math.max(0, -(a01 * s1 + b0));\n              sqrDist = -s0 * s0 + s1 * (s1 + 2 * b1) + c;\n            }\n          } else {\n            // region 5\n            s1 = -segExtent;\n            s0 = Math.max(0, -(a01 * s1 + b0));\n            sqrDist = -s0 * s0 + s1 * (s1 + 2 * b1) + c;\n          }\n        } else {\n          if (s1 <= -extDet) {\n            // region 4\n            s0 = Math.max(0, -(-a01 * segExtent + b0));\n            s1 = s0 > 0 ? -segExtent : Math.min(Math.max(-segExtent, -b1), segExtent);\n            sqrDist = -s0 * s0 + s1 * (s1 + 2 * b1) + c;\n          } else if (s1 <= extDet) {\n            // region 3\n            s0 = 0;\n            s1 = Math.min(Math.max(-segExtent, -b1), segExtent);\n            sqrDist = s1 * (s1 + 2 * b1) + c;\n          } else {\n            // region 2\n            s0 = Math.max(0, -(a01 * segExtent + b0));\n            s1 = s0 > 0 ? segExtent : Math.min(Math.max(-segExtent, -b1), segExtent);\n            sqrDist = -s0 * s0 + s1 * (s1 + 2 * b1) + c;\n          }\n        }\n      } else {\n        // Ray and segment are parallel.\n        s1 = a01 > 0 ? -segExtent : segExtent;\n        s0 = Math.max(0, -(a01 * s1 + b0));\n        sqrDist = -s0 * s0 + s1 * (s1 + 2 * b1) + c;\n      }\n\n      if (optionalPointOnRay) {\n        optionalPointOnRay.copy(this.direction).multiplyScalar(s0).add(this.origin);\n      }\n\n      if (optionalPointOnSegment) {\n        optionalPointOnSegment.copy(segDir).multiplyScalar(s1).add(segCenter);\n      }\n\n      return sqrDist;\n    };\n  }(),\n  intersectSphere: function () {\n    var v1 = new THREE.Vector3();\n    return function (sphere, optionalTarget) {\n      v1.subVectors(sphere.center, this.origin);\n      var tca = v1.dot(this.direction);\n      var d2 = v1.dot(v1) - tca * tca;\n      var radius2 = sphere.radius * sphere.radius;\n      if (d2 > radius2) return null;\n      var thc = Math.sqrt(radius2 - d2); // t0 = first intersect point - entrance on front of sphere\n\n      var t0 = tca - thc; // t1 = second intersect point - exit point on back of sphere\n\n      var t1 = tca + thc; // test to see if both t0 and t1 are behind the ray - if so, return null\n\n      if (t0 < 0 && t1 < 0) return null; // test to see if t0 is behind the ray:\n      // if it is, the ray is inside the sphere, so return the second exit point scaled by t1,\n      // in order to always return an intersect point that is in front of the ray.\n\n      if (t0 < 0) return this.at(t1, optionalTarget); // else t0 is in front of the ray, so return the first collision point scaled by t0\n\n      return this.at(t0, optionalTarget);\n    };\n  }(),\n  intersectsSphere: function (sphere) {\n    return this.distanceToPoint(sphere.center) <= sphere.radius;\n  },\n  distanceToPlane: function (plane) {\n    var denominator = plane.normal.dot(this.direction);\n\n    if (denominator === 0) {\n      // line is coplanar, return origin\n      if (plane.distanceToPoint(this.origin) === 0) {\n        return 0;\n      } // Null is preferable to undefined since undefined means.... it is undefined\n\n\n      return null;\n    }\n\n    var t = -(this.origin.dot(plane.normal) + plane.constant) / denominator; // Return if the ray never intersects the plane\n\n    return t >= 0 ? t : null;\n  },\n  intersectPlane: function (plane, optionalTarget) {\n    var t = this.distanceToPlane(plane);\n\n    if (t === null) {\n      return null;\n    }\n\n    return this.at(t, optionalTarget);\n  },\n  intersectsPlane: function (plane) {\n    // check if the ray lies on the plane first\n    var distToPoint = plane.distanceToPoint(this.origin);\n\n    if (distToPoint === 0) {\n      return true;\n    }\n\n    var denominator = plane.normal.dot(this.direction);\n\n    if (denominator * distToPoint < 0) {\n      return true;\n    } // ray origin is behind the plane (and is pointing behind it)\n\n\n    return false;\n  },\n  intersectBox: function (box, optionalTarget) {\n    var tmin, tmax, tymin, tymax, tzmin, tzmax;\n    var invdirx = 1 / this.direction.x,\n        invdiry = 1 / this.direction.y,\n        invdirz = 1 / this.direction.z;\n    var origin = this.origin;\n\n    if (invdirx >= 0) {\n      tmin = (box.min.x - origin.x) * invdirx;\n      tmax = (box.max.x - origin.x) * invdirx;\n    } else {\n      tmin = (box.max.x - origin.x) * invdirx;\n      tmax = (box.min.x - origin.x) * invdirx;\n    }\n\n    if (invdiry >= 0) {\n      tymin = (box.min.y - origin.y) * invdiry;\n      tymax = (box.max.y - origin.y) * invdiry;\n    } else {\n      tymin = (box.max.y - origin.y) * invdiry;\n      tymax = (box.min.y - origin.y) * invdiry;\n    }\n\n    if (tmin > tymax || tymin > tmax) return null; // These lines also handle the case where tmin or tmax is NaN\n    // (result of 0 * Infinity). x !== x returns true if x is NaN\n\n    if (tymin > tmin || tmin !== tmin) tmin = tymin;\n    if (tymax < tmax || tmax !== tmax) tmax = tymax;\n\n    if (invdirz >= 0) {\n      tzmin = (box.min.z - origin.z) * invdirz;\n      tzmax = (box.max.z - origin.z) * invdirz;\n    } else {\n      tzmin = (box.max.z - origin.z) * invdirz;\n      tzmax = (box.min.z - origin.z) * invdirz;\n    }\n\n    if (tmin > tzmax || tzmin > tmax) return null;\n    if (tzmin > tmin || tmin !== tmin) tmin = tzmin;\n    if (tzmax < tmax || tmax !== tmax) tmax = tzmax; //return point closest to the ray (positive side)\n\n    if (tmax < 0) return null;\n    return this.at(tmin >= 0 ? tmin : tmax, optionalTarget);\n  },\n  intersectsBox: function () {\n    var v = new THREE.Vector3();\n    return function (box) {\n      return this.intersectBox(box, v) !== null;\n    };\n  }(),\n  intersectTriangle: function () {\n    // Compute the offset origin, edges, and normal.\n    var diff = new THREE.Vector3();\n    var edge1 = new THREE.Vector3();\n    var edge2 = new THREE.Vector3();\n    var normal = new THREE.Vector3();\n    return function (a, b, c, backfaceCulling, optionalTarget) {\n      // from http://www.geometrictools.com/LibMathematics/Intersection/Wm5IntrRay3Triangle3.cpp\n      edge1.subVectors(b, a);\n      edge2.subVectors(c, a);\n      normal.crossVectors(edge1, edge2); // Solve Q + t*D = b1*E1 + b2*E2 (Q = kDiff, D = ray direction,\n      // E1 = kEdge1, E2 = kEdge2, N = Cross(E1,E2)) by\n      //   |Dot(D,N)|*b1 = sign(Dot(D,N))*Dot(D,Cross(Q,E2))\n      //   |Dot(D,N)|*b2 = sign(Dot(D,N))*Dot(D,Cross(E1,Q))\n      //   |Dot(D,N)|*t = -sign(Dot(D,N))*Dot(Q,N)\n\n      var DdN = this.direction.dot(normal);\n      var sign;\n\n      if (DdN > 0) {\n        if (backfaceCulling) return null;\n        sign = 1;\n      } else if (DdN < 0) {\n        sign = -1;\n        DdN = -DdN;\n      } else {\n        return null;\n      }\n\n      diff.subVectors(this.origin, a);\n      var DdQxE2 = sign * this.direction.dot(edge2.crossVectors(diff, edge2)); // b1 < 0, no intersection\n\n      if (DdQxE2 < 0) {\n        return null;\n      }\n\n      var DdE1xQ = sign * this.direction.dot(edge1.cross(diff)); // b2 < 0, no intersection\n\n      if (DdE1xQ < 0) {\n        return null;\n      } // b1+b2 > 1, no intersection\n\n\n      if (DdQxE2 + DdE1xQ > DdN) {\n        return null;\n      } // Line intersects triangle, check if ray does.\n\n\n      var QdN = -sign * diff.dot(normal); // t < 0, no intersection\n\n      if (QdN < 0) {\n        return null;\n      } // Ray intersects triangle.\n\n\n      return this.at(QdN / DdN, optionalTarget);\n    };\n  }(),\n  applyMatrix4: function (matrix4) {\n    this.direction.add(this.origin).applyMatrix4(matrix4);\n    this.origin.applyMatrix4(matrix4);\n    this.direction.sub(this.origin);\n    this.direction.normalize();\n    return this;\n  },\n  equals: function (ray) {\n    return ray.origin.equals(this.origin) && ray.direction.equals(this.direction);\n  }\n}; // File:src/math/Sphere.js\n\n/**\n * @author bhouston / http://clara.io\n * @author mrdoob / http://mrdoob.com/\n */\n\nTHREE.Sphere = function (center, radius) {\n  this.center = center !== undefined ? center : new THREE.Vector3();\n  this.radius = radius !== undefined ? radius : 0;\n};\n\nTHREE.Sphere.prototype = {\n  constructor: THREE.Sphere,\n  set: function (center, radius) {\n    this.center.copy(center);\n    this.radius = radius;\n    return this;\n  },\n  setFromPoints: function () {\n    var box = new THREE.Box3();\n    return function (points, optionalCenter) {\n      var center = this.center;\n\n      if (optionalCenter !== undefined) {\n        center.copy(optionalCenter);\n      } else {\n        box.setFromPoints(points).center(center);\n      }\n\n      var maxRadiusSq = 0;\n\n      for (var i = 0, il = points.length; i < il; i++) {\n        maxRadiusSq = Math.max(maxRadiusSq, center.distanceToSquared(points[i]));\n      }\n\n      this.radius = Math.sqrt(maxRadiusSq);\n      return this;\n    };\n  }(),\n  clone: function () {\n    return new this.constructor().copy(this);\n  },\n  copy: function (sphere) {\n    this.center.copy(sphere.center);\n    this.radius = sphere.radius;\n    return this;\n  },\n  empty: function () {\n    return this.radius <= 0;\n  },\n  containsPoint: function (point) {\n    return point.distanceToSquared(this.center) <= this.radius * this.radius;\n  },\n  distanceToPoint: function (point) {\n    return point.distanceTo(this.center) - this.radius;\n  },\n  intersectsSphere: function (sphere) {\n    var radiusSum = this.radius + sphere.radius;\n    return sphere.center.distanceToSquared(this.center) <= radiusSum * radiusSum;\n  },\n  intersectsBox: function (box) {\n    return box.intersectsSphere(this);\n  },\n  intersectsPlane: function (plane) {\n    // We use the following equation to compute the signed distance from\n    // the center of the sphere to the plane.\n    //\n    // distance = q * n - d\n    //\n    // If this distance is greater than the radius of the sphere,\n    // then there is no intersection.\n    return Math.abs(this.center.dot(plane.normal) - plane.constant) <= this.radius;\n  },\n  clampPoint: function (point, optionalTarget) {\n    var deltaLengthSq = this.center.distanceToSquared(point);\n    var result = optionalTarget || new THREE.Vector3();\n    result.copy(point);\n\n    if (deltaLengthSq > this.radius * this.radius) {\n      result.sub(this.center).normalize();\n      result.multiplyScalar(this.radius).add(this.center);\n    }\n\n    return result;\n  },\n  getBoundingBox: function (optionalTarget) {\n    var box = optionalTarget || new THREE.Box3();\n    box.set(this.center, this.center);\n    box.expandByScalar(this.radius);\n    return box;\n  },\n  applyMatrix4: function (matrix) {\n    this.center.applyMatrix4(matrix);\n    this.radius = this.radius * matrix.getMaxScaleOnAxis();\n    return this;\n  },\n  translate: function (offset) {\n    this.center.add(offset);\n    return this;\n  },\n  equals: function (sphere) {\n    return sphere.center.equals(this.center) && sphere.radius === this.radius;\n  }\n}; // File:src/math/Frustum.js\n\n/**\n * @author mrdoob / http://mrdoob.com/\n * @author alteredq / http://alteredqualia.com/\n * @author bhouston / http://clara.io\n */\n\nTHREE.Frustum = function (p0, p1, p2, p3, p4, p5) {\n  this.planes = [p0 !== undefined ? p0 : new THREE.Plane(), p1 !== undefined ? p1 : new THREE.Plane(), p2 !== undefined ? p2 : new THREE.Plane(), p3 !== undefined ? p3 : new THREE.Plane(), p4 !== undefined ? p4 : new THREE.Plane(), p5 !== undefined ? p5 : new THREE.Plane()];\n};\n\nTHREE.Frustum.prototype = {\n  constructor: THREE.Frustum,\n  set: function (p0, p1, p2, p3, p4, p5) {\n    var planes = this.planes;\n    planes[0].copy(p0);\n    planes[1].copy(p1);\n    planes[2].copy(p2);\n    planes[3].copy(p3);\n    planes[4].copy(p4);\n    planes[5].copy(p5);\n    return this;\n  },\n  clone: function () {\n    return new this.constructor().copy(this);\n  },\n  copy: function (frustum) {\n    var planes = this.planes;\n\n    for (var i = 0; i < 6; i++) {\n      planes[i].copy(frustum.planes[i]);\n    }\n\n    return this;\n  },\n  setFromMatrix: function (m) {\n    var planes = this.planes;\n    var me = m.elements;\n    var me0 = me[0],\n        me1 = me[1],\n        me2 = me[2],\n        me3 = me[3];\n    var me4 = me[4],\n        me5 = me[5],\n        me6 = me[6],\n        me7 = me[7];\n    var me8 = me[8],\n        me9 = me[9],\n        me10 = me[10],\n        me11 = me[11];\n    var me12 = me[12],\n        me13 = me[13],\n        me14 = me[14],\n        me15 = me[15];\n    planes[0].setComponents(me3 - me0, me7 - me4, me11 - me8, me15 - me12).normalize();\n    planes[1].setComponents(me3 + me0, me7 + me4, me11 + me8, me15 + me12).normalize();\n    planes[2].setComponents(me3 + me1, me7 + me5, me11 + me9, me15 + me13).normalize();\n    planes[3].setComponents(me3 - me1, me7 - me5, me11 - me9, me15 - me13).normalize();\n    planes[4].setComponents(me3 - me2, me7 - me6, me11 - me10, me15 - me14).normalize();\n    planes[5].setComponents(me3 + me2, me7 + me6, me11 + me10, me15 + me14).normalize();\n    return this;\n  },\n  intersectsObject: function () {\n    var sphere = new THREE.Sphere();\n    return function (object) {\n      var geometry = object.geometry;\n      if (geometry.boundingSphere === null) geometry.computeBoundingSphere();\n      sphere.copy(geometry.boundingSphere);\n      sphere.applyMatrix4(object.matrixWorld);\n      return this.intersectsSphere(sphere);\n    };\n  }(),\n  intersectsSphere: function (sphere) {\n    var planes = this.planes;\n    var center = sphere.center;\n    var negRadius = -sphere.radius;\n\n    for (var i = 0; i < 6; i++) {\n      var distance = planes[i].distanceToPoint(center);\n\n      if (distance < negRadius) {\n        return false;\n      }\n    }\n\n    return true;\n  },\n  intersectsBox: function () {\n    var p1 = new THREE.Vector3(),\n        p2 = new THREE.Vector3();\n    return function (box) {\n      var planes = this.planes;\n\n      for (var i = 0; i < 6; i++) {\n        var plane = planes[i];\n        p1.x = plane.normal.x > 0 ? box.min.x : box.max.x;\n        p2.x = plane.normal.x > 0 ? box.max.x : box.min.x;\n        p1.y = plane.normal.y > 0 ? box.min.y : box.max.y;\n        p2.y = plane.normal.y > 0 ? box.max.y : box.min.y;\n        p1.z = plane.normal.z > 0 ? box.min.z : box.max.z;\n        p2.z = plane.normal.z > 0 ? box.max.z : box.min.z;\n        var d1 = plane.distanceToPoint(p1);\n        var d2 = plane.distanceToPoint(p2); // if both outside plane, no intersection\n\n        if (d1 < 0 && d2 < 0) {\n          return false;\n        }\n      }\n\n      return true;\n    };\n  }(),\n  containsPoint: function (point) {\n    var planes = this.planes;\n\n    for (var i = 0; i < 6; i++) {\n      if (planes[i].distanceToPoint(point) < 0) {\n        return false;\n      }\n    }\n\n    return true;\n  }\n}; // File:src/core/EventDispatcher.js\n\n/**\n * https://github.com/mrdoob/eventdispatcher.js/\n */\n\nTHREE.EventDispatcher = function () {};\n\nTHREE.EventDispatcher.prototype = {\n  constructor: THREE.EventDispatcher,\n  apply: function (object) {\n    object.addEventListener = THREE.EventDispatcher.prototype.addEventListener;\n    object.hasEventListener = THREE.EventDispatcher.prototype.hasEventListener;\n    object.removeEventListener = THREE.EventDispatcher.prototype.removeEventListener;\n    object.dispatchEvent = THREE.EventDispatcher.prototype.dispatchEvent;\n  },\n  addEventListener: function (type, listener) {\n    if (this._listeners === undefined) this._listeners = {};\n    var listeners = this._listeners;\n\n    if (listeners[type] === undefined) {\n      listeners[type] = [];\n    }\n\n    if (listeners[type].indexOf(listener) === -1) {\n      listeners[type].push(listener);\n    }\n  },\n  hasEventListener: function (type, listener) {\n    if (this._listeners === undefined) return false;\n    var listeners = this._listeners;\n\n    if (listeners[type] !== undefined && listeners[type].indexOf(listener) !== -1) {\n      return true;\n    }\n\n    return false;\n  },\n  removeEventListener: function (type, listener) {\n    if (this._listeners === undefined) return;\n    var listeners = this._listeners;\n    var listenerArray = listeners[type];\n\n    if (listenerArray !== undefined) {\n      var index = listenerArray.indexOf(listener);\n\n      if (index !== -1) {\n        listenerArray.splice(index, 1);\n      }\n    }\n  },\n  dispatchEvent: function (event) {\n    if (this._listeners === undefined) return;\n    var listeners = this._listeners;\n    var listenerArray = listeners[event.type];\n\n    if (listenerArray !== undefined) {\n      event.target = this;\n      var array = [];\n      var length = listenerArray.length;\n\n      for (var i = 0; i < length; i++) {\n        array[i] = listenerArray[i];\n      }\n\n      for (var i = 0; i < length; i++) {\n        array[i].call(this, event);\n      }\n    }\n  }\n}; // File:src/core/Layers.js\n\n/**\n * @author mrdoob / http://mrdoob.com/\n */\n\nTHREE.Layers = function () {\n  this.mask = 1;\n};\n\nTHREE.Layers.prototype = {\n  constructor: THREE.Layers,\n  set: function (channel) {\n    this.mask = 1 << channel;\n  },\n  enable: function (channel) {\n    this.mask |= 1 << channel;\n  },\n  toggle: function (channel) {\n    this.mask ^= 1 << channel;\n  },\n  disable: function (channel) {\n    this.mask &= ~(1 << channel);\n  },\n  test: function (layers) {\n    return (this.mask & layers.mask) !== 0;\n  }\n}; // File:src/core/Object3D.js\n\n/**\n * @author mrdoob / http://mrdoob.com/\n * @author mikael emtinger / http://gomo.se/\n * @author alteredq / http://alteredqualia.com/\n * @author WestLangley / http://github.com/WestLangley\n * @author elephantatwork / www.elephantatwork.ch\n */\n\nTHREE.Object3D = function () {\n  Object.defineProperty(this, 'id', {\n    value: THREE.Object3DIdCount++\n  });\n  this.uuid = THREE.Math.generateUUID();\n  this.name = '';\n  this.type = 'Object3D';\n  this.parent = null;\n  this.children = [];\n  this.up = THREE.Object3D.DefaultUp.clone();\n  var position = new THREE.Vector3();\n  var rotation = new THREE.Euler();\n  var quaternion = new THREE.Quaternion();\n  var scale = new THREE.Vector3(1, 1, 1);\n\n  function onRotationChange() {\n    quaternion.setFromEuler(rotation, false);\n  }\n\n  function onQuaternionChange() {\n    rotation.setFromQuaternion(quaternion, undefined, false);\n  }\n\n  rotation.onChange(onRotationChange);\n  quaternion.onChange(onQuaternionChange);\n  Object.defineProperties(this, {\n    position: {\n      enumerable: true,\n      value: position\n    },\n    rotation: {\n      enumerable: true,\n      value: rotation\n    },\n    quaternion: {\n      enumerable: true,\n      value: quaternion\n    },\n    scale: {\n      enumerable: true,\n      value: scale\n    },\n    modelViewMatrix: {\n      value: new THREE.Matrix4()\n    },\n    normalMatrix: {\n      value: new THREE.Matrix3()\n    }\n  });\n  this.rotationAutoUpdate = true;\n  this.matrix = new THREE.Matrix4();\n  this.matrixWorld = new THREE.Matrix4();\n  this.matrixAutoUpdate = THREE.Object3D.DefaultMatrixAutoUpdate;\n  this.matrixWorldNeedsUpdate = false;\n  this.layers = new THREE.Layers();\n  this.visible = true;\n  this.castShadow = false;\n  this.receiveShadow = false;\n  this.frustumCulled = true;\n  this.renderOrder = 0;\n  this.userData = {};\n};\n\nTHREE.Object3D.DefaultUp = new THREE.Vector3(0, 1, 0);\nTHREE.Object3D.DefaultMatrixAutoUpdate = true;\nTHREE.Object3D.prototype = {\n  constructor: THREE.Object3D,\n  applyMatrix: function (matrix) {\n    this.matrix.multiplyMatrices(matrix, this.matrix);\n    this.matrix.decompose(this.position, this.quaternion, this.scale);\n  },\n  setRotationFromAxisAngle: function (axis, angle) {\n    // assumes axis is normalized\n    this.quaternion.setFromAxisAngle(axis, angle);\n  },\n  setRotationFromEuler: function (euler) {\n    this.quaternion.setFromEuler(euler, true);\n  },\n  setRotationFromMatrix: function (m) {\n    // assumes the upper 3x3 of m is a pure rotation matrix (i.e, unscaled)\n    this.quaternion.setFromRotationMatrix(m);\n  },\n  setRotationFromQuaternion: function (q) {\n    // assumes q is normalized\n    this.quaternion.copy(q);\n  },\n  rotateOnAxis: function () {\n    // rotate object on axis in object space\n    // axis is assumed to be normalized\n    var q1 = new THREE.Quaternion();\n    return function (axis, angle) {\n      q1.setFromAxisAngle(axis, angle);\n      this.quaternion.multiply(q1);\n      return this;\n    };\n  }(),\n  rotateX: function () {\n    var v1 = new THREE.Vector3(1, 0, 0);\n    return function (angle) {\n      return this.rotateOnAxis(v1, angle);\n    };\n  }(),\n  rotateY: function () {\n    var v1 = new THREE.Vector3(0, 1, 0);\n    return function (angle) {\n      return this.rotateOnAxis(v1, angle);\n    };\n  }(),\n  rotateZ: function () {\n    var v1 = new THREE.Vector3(0, 0, 1);\n    return function (angle) {\n      return this.rotateOnAxis(v1, angle);\n    };\n  }(),\n  translateOnAxis: function () {\n    // translate object by distance along axis in object space\n    // axis is assumed to be normalized\n    var v1 = new THREE.Vector3();\n    return function (axis, distance) {\n      v1.copy(axis).applyQuaternion(this.quaternion);\n      this.position.add(v1.multiplyScalar(distance));\n      return this;\n    };\n  }(),\n  translateX: function () {\n    var v1 = new THREE.Vector3(1, 0, 0);\n    return function (distance) {\n      return this.translateOnAxis(v1, distance);\n    };\n  }(),\n  translateY: function () {\n    var v1 = new THREE.Vector3(0, 1, 0);\n    return function (distance) {\n      return this.translateOnAxis(v1, distance);\n    };\n  }(),\n  translateZ: function () {\n    var v1 = new THREE.Vector3(0, 0, 1);\n    return function (distance) {\n      return this.translateOnAxis(v1, distance);\n    };\n  }(),\n  localToWorld: function (vector) {\n    return vector.applyMatrix4(this.matrixWorld);\n  },\n  worldToLocal: function () {\n    var m1 = new THREE.Matrix4();\n    return function (vector) {\n      return vector.applyMatrix4(m1.getInverse(this.matrixWorld));\n    };\n  }(),\n  lookAt: function () {\n    // This routine does not support objects with rotated and/or translated parent(s)\n    var m1 = new THREE.Matrix4();\n    return function (vector) {\n      m1.lookAt(vector, this.position, this.up);\n      this.quaternion.setFromRotationMatrix(m1);\n    };\n  }(),\n  add: function (object) {\n    if (arguments.length > 1) {\n      for (var i = 0; i < arguments.length; i++) {\n        this.add(arguments[i]);\n      }\n\n      return this;\n    }\n\n    if (object === this) {\n      return this;\n    }\n\n    if (object instanceof THREE.Object3D) {\n      if (object.parent !== null) {\n        object.parent.remove(object);\n      }\n\n      object.parent = this;\n      object.dispatchEvent({\n        type: 'added'\n      });\n      this.children.push(object);\n    }\n\n    return this;\n  },\n  remove: function (object) {\n    if (arguments.length > 1) {\n      for (var i = 0; i < arguments.length; i++) {\n        this.remove(arguments[i]);\n      }\n    }\n\n    var index = this.children.indexOf(object);\n\n    if (index !== -1) {\n      object.parent = null;\n      object.dispatchEvent({\n        type: 'removed'\n      });\n      this.children.splice(index, 1);\n    }\n  },\n  getObjectById: function (id) {\n    return this.getObjectByProperty('id', id);\n  },\n  getObjectByName: function (name) {\n    return this.getObjectByProperty('name', name);\n  },\n  getObjectByProperty: function (name, value) {\n    if (this[name] === value) return this;\n\n    for (var i = 0, l = this.children.length; i < l; i++) {\n      var child = this.children[i];\n      var object = child.getObjectByProperty(name, value);\n\n      if (object !== undefined) {\n        return object;\n      }\n    }\n\n    return undefined;\n  },\n  getWorldPosition: function (optionalTarget) {\n    var result = optionalTarget || new THREE.Vector3();\n    this.updateMatrixWorld(true);\n    return result.setFromMatrixPosition(this.matrixWorld);\n  },\n  getWorldQuaternion: function () {\n    var position = new THREE.Vector3();\n    var scale = new THREE.Vector3();\n    return function (optionalTarget) {\n      var result = optionalTarget || new THREE.Quaternion();\n      this.updateMatrixWorld(true);\n      this.matrixWorld.decompose(position, result, scale);\n      return result;\n    };\n  }(),\n  getWorldRotation: function () {\n    var quaternion = new THREE.Quaternion();\n    return function (optionalTarget) {\n      var result = optionalTarget || new THREE.Euler();\n      this.getWorldQuaternion(quaternion);\n      return result.setFromQuaternion(quaternion, this.rotation.order, false);\n    };\n  }(),\n  getWorldScale: function () {\n    var position = new THREE.Vector3();\n    var quaternion = new THREE.Quaternion();\n    return function (optionalTarget) {\n      var result = optionalTarget || new THREE.Vector3();\n      this.updateMatrixWorld(true);\n      this.matrixWorld.decompose(position, quaternion, result);\n      return result;\n    };\n  }(),\n  getWorldDirection: function () {\n    var quaternion = new THREE.Quaternion();\n    return function (optionalTarget) {\n      var result = optionalTarget || new THREE.Vector3();\n      this.getWorldQuaternion(quaternion);\n      return result.set(0, 0, 1).applyQuaternion(quaternion);\n    };\n  }(),\n  raycast: function () {},\n  traverse: function (callback) {\n    callback(this);\n    var children = this.children;\n\n    for (var i = 0, l = children.length; i < l; i++) {\n      children[i].traverse(callback);\n    }\n  },\n  traverseVisible: function (callback) {\n    if (this.visible === false) return;\n    callback(this);\n    var children = this.children;\n\n    for (var i = 0, l = children.length; i < l; i++) {\n      children[i].traverseVisible(callback);\n    }\n  },\n  traverseAncestors: function (callback) {\n    var parent = this.parent;\n\n    if (parent !== null) {\n      callback(parent);\n      parent.traverseAncestors(callback);\n    }\n  },\n  updateMatrix: function () {\n    this.matrix.compose(this.position, this.quaternion, this.scale);\n    this.matrixWorldNeedsUpdate = true;\n  },\n  updateMatrixWorld: function (force) {\n    if (this.matrixAutoUpdate === true) this.updateMatrix();\n\n    if (this.matrixWorldNeedsUpdate === true || force === true) {\n      if (this.parent === null) {\n        this.matrixWorld.copy(this.matrix);\n      } else {\n        this.matrixWorld.multiplyMatrices(this.parent.matrixWorld, this.matrix);\n      }\n\n      this.matrixWorldNeedsUpdate = false;\n      force = true;\n    } // update children\n\n\n    for (var i = 0, l = this.children.length; i < l; i++) {\n      this.children[i].updateMatrixWorld(force);\n    }\n  },\n  toJSON: function (meta) {\n    var isRootObject = meta === undefined;\n    var output = {}; // meta is a hash used to collect geometries, materials.\n    // not providing it implies that this is the root object\n    // being serialized.\n\n    if (isRootObject) {\n      // initialize meta obj\n      meta = {\n        geometries: {},\n        materials: {},\n        textures: {},\n        images: {}\n      };\n      output.metadata = {\n        version: 4.4,\n        type: 'Object',\n        generator: 'Object3D.toJSON'\n      };\n    } // standard Object3D serialization\n\n\n    var object = {};\n    object.uuid = this.uuid;\n    object.type = this.type;\n    if (this.name !== '') object.name = this.name;\n    if (JSON.stringify(this.userData) !== '{}') object.userData = this.userData;\n    if (this.castShadow === true) object.castShadow = true;\n    if (this.receiveShadow === true) object.receiveShadow = true;\n    if (this.visible === false) object.visible = false;\n    object.matrix = this.matrix.toArray(); //\n\n    if (this.geometry !== undefined) {\n      if (meta.geometries[this.geometry.uuid] === undefined) {\n        meta.geometries[this.geometry.uuid] = this.geometry.toJSON(meta);\n      }\n\n      object.geometry = this.geometry.uuid;\n    }\n\n    if (this.material !== undefined) {\n      if (meta.materials[this.material.uuid] === undefined) {\n        meta.materials[this.material.uuid] = this.material.toJSON(meta);\n      }\n\n      object.material = this.material.uuid;\n    } //\n\n\n    if (this.children.length > 0) {\n      object.children = [];\n\n      for (var i = 0; i < this.children.length; i++) {\n        object.children.push(this.children[i].toJSON(meta).object);\n      }\n    }\n\n    if (isRootObject) {\n      var geometries = extractFromCache(meta.geometries);\n      var materials = extractFromCache(meta.materials);\n      var textures = extractFromCache(meta.textures);\n      var images = extractFromCache(meta.images);\n      if (geometries.length > 0) output.geometries = geometries;\n      if (materials.length > 0) output.materials = materials;\n      if (textures.length > 0) output.textures = textures;\n      if (images.length > 0) output.images = images;\n    }\n\n    output.object = object;\n    return output; // extract data from the cache hash\n    // remove metadata on each item\n    // and return as array\n\n    function extractFromCache(cache) {\n      var values = [];\n\n      for (var key in cache) {\n        var data = cache[key];\n        delete data.metadata;\n        values.push(data);\n      }\n\n      return values;\n    }\n  },\n  clone: function (recursive) {\n    return new this.constructor().copy(this, recursive);\n  },\n  copy: function (source, recursive) {\n    if (recursive === undefined) recursive = true;\n    this.name = source.name;\n    this.up.copy(source.up);\n    this.position.copy(source.position);\n    this.quaternion.copy(source.quaternion);\n    this.scale.copy(source.scale);\n    this.rotationAutoUpdate = source.rotationAutoUpdate;\n    this.matrix.copy(source.matrix);\n    this.matrixWorld.copy(source.matrixWorld);\n    this.matrixAutoUpdate = source.matrixAutoUpdate;\n    this.matrixWorldNeedsUpdate = source.matrixWorldNeedsUpdate;\n    this.visible = source.visible;\n    this.castShadow = source.castShadow;\n    this.receiveShadow = source.receiveShadow;\n    this.frustumCulled = source.frustumCulled;\n    this.renderOrder = source.renderOrder;\n    this.userData = JSON.parse(JSON.stringify(source.userData));\n\n    if (recursive === true) {\n      for (var i = 0; i < source.children.length; i++) {\n        var child = source.children[i];\n        this.add(child.clone());\n      }\n    }\n\n    return this;\n  }\n};\nTHREE.EventDispatcher.prototype.apply(THREE.Object3D.prototype);\nTHREE.Object3DIdCount = 0; // File:src/core/Face3.js\n\n/**\n * @author mrdoob / http://mrdoob.com/\n * @author alteredq / http://alteredqualia.com/\n */\n\nTHREE.Face3 = function (a, b, c, normal, color, materialIndex) {\n  this.a = a;\n  this.b = b;\n  this.c = c;\n  this.normal = normal instanceof THREE.Vector3 ? normal : new THREE.Vector3();\n  this.vertexNormals = Array.isArray(normal) ? normal : [];\n  this.color = color instanceof THREE.Color ? color : new THREE.Color();\n  this.vertexColors = Array.isArray(color) ? color : [];\n  this.materialIndex = materialIndex !== undefined ? materialIndex : 0;\n};\n\nTHREE.Face3.prototype = {\n  constructor: THREE.Face3,\n  clone: function () {\n    return new this.constructor().copy(this);\n  },\n  copy: function (source) {\n    this.a = source.a;\n    this.b = source.b;\n    this.c = source.c;\n    this.normal.copy(source.normal);\n    this.color.copy(source.color);\n    this.materialIndex = source.materialIndex;\n\n    for (var i = 0, il = source.vertexNormals.length; i < il; i++) {\n      this.vertexNormals[i] = source.vertexNormals[i].clone();\n    }\n\n    for (var i = 0, il = source.vertexColors.length; i < il; i++) {\n      this.vertexColors[i] = source.vertexColors[i].clone();\n    }\n\n    return this;\n  }\n}; // File:src/core/BufferAttribute.js\n\n/**\n * @author mrdoob / http://mrdoob.com/\n */\n\nTHREE.BufferAttribute = function (array, itemSize) {\n  this.uuid = THREE.Math.generateUUID();\n  this.array = array;\n  this.itemSize = itemSize;\n  this.dynamic = false;\n  this.updateRange = {\n    offset: 0,\n    count: -1\n  };\n  this.version = 0;\n};\n\nTHREE.BufferAttribute.prototype = {\n  constructor: THREE.BufferAttribute,\n\n  get count() {\n    return this.array.length / this.itemSize;\n  },\n\n  set needsUpdate(value) {\n    if (value === true) this.version++;\n  },\n\n  setDynamic: function (value) {\n    this.dynamic = value;\n    return this;\n  },\n  copy: function (source) {\n    this.array = new source.array.constructor(source.array);\n    this.itemSize = source.itemSize;\n    this.dynamic = source.dynamic;\n    return this;\n  },\n  copyAt: function (index1, attribute, index2) {\n    index1 *= this.itemSize;\n    index2 *= attribute.itemSize;\n\n    for (var i = 0, l = this.itemSize; i < l; i++) {\n      this.array[index1 + i] = attribute.array[index2 + i];\n    }\n\n    return this;\n  },\n  copyArray: function (array) {\n    this.array.set(array);\n    return this;\n  },\n  copyColorsArray: function (colors) {\n    var array = this.array,\n        offset = 0;\n\n    for (var i = 0, l = colors.length; i < l; i++) {\n      var color = colors[i];\n\n      if (color === undefined) {\n        color = new THREE.Color();\n      }\n\n      array[offset++] = color.r;\n      array[offset++] = color.g;\n      array[offset++] = color.b;\n    }\n\n    return this;\n  },\n  copyIndicesArray: function (indices) {\n    var array = this.array,\n        offset = 0;\n\n    for (var i = 0, l = indices.length; i < l; i++) {\n      var index = indices[i];\n      array[offset++] = index.a;\n      array[offset++] = index.b;\n      array[offset++] = index.c;\n    }\n\n    return this;\n  },\n  copyVector2sArray: function (vectors) {\n    var array = this.array,\n        offset = 0;\n\n    for (var i = 0, l = vectors.length; i < l; i++) {\n      var vector = vectors[i];\n\n      if (vector === undefined) {\n        vector = new THREE.Vector2();\n      }\n\n      array[offset++] = vector.x;\n      array[offset++] = vector.y;\n    }\n\n    return this;\n  },\n  copyVector3sArray: function (vectors) {\n    var array = this.array,\n        offset = 0;\n\n    for (var i = 0, l = vectors.length; i < l; i++) {\n      var vector = vectors[i];\n\n      if (vector === undefined) {\n        vector = new THREE.Vector3();\n      }\n\n      array[offset++] = vector.x;\n      array[offset++] = vector.y;\n      array[offset++] = vector.z;\n    }\n\n    return this;\n  },\n  copyVector4sArray: function (vectors) {\n    var array = this.array,\n        offset = 0;\n\n    for (var i = 0, l = vectors.length; i < l; i++) {\n      var vector = vectors[i];\n\n      if (vector === undefined) {\n        vector = new THREE.Vector4();\n      }\n\n      array[offset++] = vector.x;\n      array[offset++] = vector.y;\n      array[offset++] = vector.z;\n      array[offset++] = vector.w;\n    }\n\n    return this;\n  },\n  set: function (value, offset) {\n    if (offset === undefined) offset = 0;\n    this.array.set(value, offset);\n    return this;\n  },\n  getX: function (index) {\n    return this.array[index * this.itemSize];\n  },\n  setX: function (index, x) {\n    this.array[index * this.itemSize] = x;\n    return this;\n  },\n  getY: function (index) {\n    return this.array[index * this.itemSize + 1];\n  },\n  setY: function (index, y) {\n    this.array[index * this.itemSize + 1] = y;\n    return this;\n  },\n  getZ: function (index) {\n    return this.array[index * this.itemSize + 2];\n  },\n  setZ: function (index, z) {\n    this.array[index * this.itemSize + 2] = z;\n    return this;\n  },\n  getW: function (index) {\n    return this.array[index * this.itemSize + 3];\n  },\n  setW: function (index, w) {\n    this.array[index * this.itemSize + 3] = w;\n    return this;\n  },\n  setXY: function (index, x, y) {\n    index *= this.itemSize;\n    this.array[index + 0] = x;\n    this.array[index + 1] = y;\n    return this;\n  },\n  setXYZ: function (index, x, y, z) {\n    index *= this.itemSize;\n    this.array[index + 0] = x;\n    this.array[index + 1] = y;\n    this.array[index + 2] = z;\n    return this;\n  },\n  setXYZW: function (index, x, y, z, w) {\n    index *= this.itemSize;\n    this.array[index + 0] = x;\n    this.array[index + 1] = y;\n    this.array[index + 2] = z;\n    this.array[index + 3] = w;\n    return this;\n  },\n  clone: function () {\n    return new this.constructor().copy(this);\n  }\n}; //\n\nTHREE.Int8Attribute = function (array, itemSize) {\n  return new THREE.BufferAttribute(new Int8Array(array), itemSize);\n};\n\nTHREE.Uint8Attribute = function (array, itemSize) {\n  return new THREE.BufferAttribute(new Uint8Array(array), itemSize);\n};\n\nTHREE.Uint8ClampedAttribute = function (array, itemSize) {\n  return new THREE.BufferAttribute(new Uint8ClampedArray(array), itemSize);\n};\n\nTHREE.Int16Attribute = function (array, itemSize) {\n  return new THREE.BufferAttribute(new Int16Array(array), itemSize);\n};\n\nTHREE.Uint16Attribute = function (array, itemSize) {\n  return new THREE.BufferAttribute(new Uint16Array(array), itemSize);\n};\n\nTHREE.Int32Attribute = function (array, itemSize) {\n  return new THREE.BufferAttribute(new Int32Array(array), itemSize);\n};\n\nTHREE.Uint32Attribute = function (array, itemSize) {\n  return new THREE.BufferAttribute(new Uint32Array(array), itemSize);\n};\n\nTHREE.Float32Attribute = function (array, itemSize) {\n  return new THREE.BufferAttribute(new Float32Array(array), itemSize);\n};\n\nTHREE.Float64Attribute = function (array, itemSize) {\n  return new THREE.BufferAttribute(new Float64Array(array), itemSize);\n}; // Deprecated\n\n\nTHREE.DynamicBufferAttribute = function (array, itemSize) {\n  return new THREE.BufferAttribute(array, itemSize).setDynamic(true);\n}; // File:src/core/InstancedBufferAttribute.js\n\n/**\n * @author benaadams / https://twitter.com/ben_a_adams\n */\n\n\nTHREE.InstancedBufferAttribute = function (array, itemSize, meshPerAttribute) {\n  THREE.BufferAttribute.call(this, array, itemSize);\n  this.meshPerAttribute = meshPerAttribute || 1;\n};\n\nTHREE.InstancedBufferAttribute.prototype = Object.create(THREE.BufferAttribute.prototype);\nTHREE.InstancedBufferAttribute.prototype.constructor = THREE.InstancedBufferAttribute;\n\nTHREE.InstancedBufferAttribute.prototype.copy = function (source) {\n  THREE.BufferAttribute.prototype.copy.call(this, source);\n  this.meshPerAttribute = source.meshPerAttribute;\n  return this;\n}; // File:src/core/BufferGeometry.js\n\n/**\n * @author alteredq / http://alteredqualia.com/\n * @author mrdoob / http://mrdoob.com/\n */\n\n\nTHREE.BufferGeometry = function () {\n  Object.defineProperty(this, 'id', {\n    value: THREE.GeometryIdCount++\n  });\n  this.uuid = THREE.Math.generateUUID();\n  this.name = '';\n  this.type = 'BufferGeometry';\n  this.index = null;\n  this.attributes = {};\n  this.morphAttributes = {};\n  this.groups = [];\n  this.boundingBox = null;\n  this.boundingSphere = null;\n  this.drawRange = {\n    start: 0,\n    count: Infinity\n  };\n};\n\nTHREE.BufferGeometry.prototype = {\n  constructor: THREE.BufferGeometry,\n  getIndex: function () {\n    return this.index;\n  },\n  setIndex: function (index) {\n    this.index = index;\n  },\n  addAttribute: function (name, attribute) {\n    if (attribute instanceof THREE.BufferAttribute === false && attribute instanceof THREE.InterleavedBufferAttribute === false) {\n      this.addAttribute(name, new THREE.BufferAttribute(arguments[1], arguments[2]));\n      return;\n    }\n\n    if (name === 'index') {\n      this.setIndex(attribute);\n      return;\n    }\n\n    this.attributes[name] = attribute;\n    return this;\n  },\n  getAttribute: function (name) {\n    return this.attributes[name];\n  },\n  removeAttribute: function (name) {\n    delete this.attributes[name];\n    return this;\n  },\n  addGroup: function (start, count, materialIndex) {\n    this.groups.push({\n      start: start,\n      count: count,\n      materialIndex: materialIndex !== undefined ? materialIndex : 0\n    });\n  },\n  clearGroups: function () {\n    this.groups = [];\n  },\n  setDrawRange: function (start, count) {\n    this.drawRange.start = start;\n    this.drawRange.count = count;\n  },\n  applyMatrix: function (matrix) {\n    var position = this.attributes.position;\n\n    if (position !== undefined) {\n      matrix.applyToVector3Array(position.array);\n      position.needsUpdate = true;\n    }\n\n    var normal = this.attributes.normal;\n\n    if (normal !== undefined) {\n      var normalMatrix = new THREE.Matrix3().getNormalMatrix(matrix);\n      normalMatrix.applyToVector3Array(normal.array);\n      normal.needsUpdate = true;\n    }\n\n    if (this.boundingBox !== null) {\n      this.computeBoundingBox();\n    }\n\n    if (this.boundingSphere !== null) {\n      this.computeBoundingSphere();\n    }\n\n    return this;\n  },\n  rotateX: function () {\n    // rotate geometry around world x-axis\n    var m1;\n    return function rotateX(angle) {\n      if (m1 === undefined) m1 = new THREE.Matrix4();\n      m1.makeRotationX(angle);\n      this.applyMatrix(m1);\n      return this;\n    };\n  }(),\n  rotateY: function () {\n    // rotate geometry around world y-axis\n    var m1;\n    return function rotateY(angle) {\n      if (m1 === undefined) m1 = new THREE.Matrix4();\n      m1.makeRotationY(angle);\n      this.applyMatrix(m1);\n      return this;\n    };\n  }(),\n  rotateZ: function () {\n    // rotate geometry around world z-axis\n    var m1;\n    return function rotateZ(angle) {\n      if (m1 === undefined) m1 = new THREE.Matrix4();\n      m1.makeRotationZ(angle);\n      this.applyMatrix(m1);\n      return this;\n    };\n  }(),\n  translate: function () {\n    // translate geometry\n    var m1;\n    return function translate(x, y, z) {\n      if (m1 === undefined) m1 = new THREE.Matrix4();\n      m1.makeTranslation(x, y, z);\n      this.applyMatrix(m1);\n      return this;\n    };\n  }(),\n  scale: function () {\n    // scale geometry\n    var m1;\n    return function scale(x, y, z) {\n      if (m1 === undefined) m1 = new THREE.Matrix4();\n      m1.makeScale(x, y, z);\n      this.applyMatrix(m1);\n      return this;\n    };\n  }(),\n  lookAt: function () {\n    var obj;\n    return function lookAt(vector) {\n      if (obj === undefined) obj = new THREE.Object3D();\n      obj.lookAt(vector);\n      obj.updateMatrix();\n      this.applyMatrix(obj.matrix);\n    };\n  }(),\n  center: function () {\n    this.computeBoundingBox();\n    var offset = this.boundingBox.center().negate();\n    this.translate(offset.x, offset.y, offset.z);\n    return offset;\n  },\n  setFromObject: function (object) {\n    // console.log( 'THREE.BufferGeometry.setFromObject(). Converting', object, this );\n    var geometry = object.geometry;\n\n    if (object instanceof THREE.Points || object instanceof THREE.Line) {\n      var positions = new THREE.Float32Attribute(geometry.vertices.length * 3, 3);\n      var colors = new THREE.Float32Attribute(geometry.colors.length * 3, 3);\n      this.addAttribute('position', positions.copyVector3sArray(geometry.vertices));\n      this.addAttribute('color', colors.copyColorsArray(geometry.colors));\n\n      if (geometry.lineDistances && geometry.lineDistances.length === geometry.vertices.length) {\n        var lineDistances = new THREE.Float32Attribute(geometry.lineDistances.length, 1);\n        this.addAttribute('lineDistance', lineDistances.copyArray(geometry.lineDistances));\n      }\n\n      if (geometry.boundingSphere !== null) {\n        this.boundingSphere = geometry.boundingSphere.clone();\n      }\n\n      if (geometry.boundingBox !== null) {\n        this.boundingBox = geometry.boundingBox.clone();\n      }\n    } else if (object instanceof THREE.Mesh) {\n      if (geometry instanceof THREE.Geometry) {\n        this.fromGeometry(geometry);\n      }\n    }\n\n    return this;\n  },\n  updateFromObject: function (object) {\n    var geometry = object.geometry;\n\n    if (object instanceof THREE.Mesh) {\n      var direct = geometry.__directGeometry;\n\n      if (direct === undefined) {\n        return this.fromGeometry(geometry);\n      }\n\n      direct.verticesNeedUpdate = geometry.verticesNeedUpdate;\n      direct.normalsNeedUpdate = geometry.normalsNeedUpdate;\n      direct.colorsNeedUpdate = geometry.colorsNeedUpdate;\n      direct.uvsNeedUpdate = geometry.uvsNeedUpdate;\n      direct.groupsNeedUpdate = geometry.groupsNeedUpdate;\n      geometry.verticesNeedUpdate = false;\n      geometry.normalsNeedUpdate = false;\n      geometry.colorsNeedUpdate = false;\n      geometry.uvsNeedUpdate = false;\n      geometry.groupsNeedUpdate = false;\n      geometry = direct;\n    }\n\n    if (geometry.verticesNeedUpdate === true) {\n      var attribute = this.attributes.position;\n\n      if (attribute !== undefined) {\n        attribute.copyVector3sArray(geometry.vertices);\n        attribute.needsUpdate = true;\n      }\n\n      geometry.verticesNeedUpdate = false;\n    }\n\n    if (geometry.normalsNeedUpdate === true) {\n      var attribute = this.attributes.normal;\n\n      if (attribute !== undefined) {\n        attribute.copyVector3sArray(geometry.normals);\n        attribute.needsUpdate = true;\n      }\n\n      geometry.normalsNeedUpdate = false;\n    }\n\n    if (geometry.colorsNeedUpdate === true) {\n      var attribute = this.attributes.color;\n\n      if (attribute !== undefined) {\n        attribute.copyColorsArray(geometry.colors);\n        attribute.needsUpdate = true;\n      }\n\n      geometry.colorsNeedUpdate = false;\n    }\n\n    if (geometry.uvsNeedUpdate) {\n      var attribute = this.attributes.uv;\n\n      if (attribute !== undefined) {\n        attribute.copyVector2sArray(geometry.uvs);\n        attribute.needsUpdate = true;\n      }\n\n      geometry.uvsNeedUpdate = false;\n    }\n\n    if (geometry.lineDistancesNeedUpdate) {\n      var attribute = this.attributes.lineDistance;\n\n      if (attribute !== undefined) {\n        attribute.copyArray(geometry.lineDistances);\n        attribute.needsUpdate = true;\n      }\n\n      geometry.lineDistancesNeedUpdate = false;\n    }\n\n    if (geometry.groupsNeedUpdate) {\n      geometry.computeGroups(object.geometry);\n      this.groups = geometry.groups;\n      geometry.groupsNeedUpdate = false;\n    }\n\n    return this;\n  },\n  fromGeometry: function (geometry) {\n    geometry.__directGeometry = new THREE.DirectGeometry().fromGeometry(geometry);\n    return this.fromDirectGeometry(geometry.__directGeometry);\n  },\n  fromDirectGeometry: function (geometry) {\n    var positions = new Float32Array(geometry.vertices.length * 3);\n    this.addAttribute('position', new THREE.BufferAttribute(positions, 3).copyVector3sArray(geometry.vertices));\n\n    if (geometry.normals.length > 0) {\n      var normals = new Float32Array(geometry.normals.length * 3);\n      this.addAttribute('normal', new THREE.BufferAttribute(normals, 3).copyVector3sArray(geometry.normals));\n    }\n\n    if (geometry.colors.length > 0) {\n      var colors = new Float32Array(geometry.colors.length * 3);\n      this.addAttribute('color', new THREE.BufferAttribute(colors, 3).copyColorsArray(geometry.colors));\n    }\n\n    if (geometry.uvs.length > 0) {\n      var uvs = new Float32Array(geometry.uvs.length * 2);\n      this.addAttribute('uv', new THREE.BufferAttribute(uvs, 2).copyVector2sArray(geometry.uvs));\n    }\n\n    if (geometry.uvs2.length > 0) {\n      var uvs2 = new Float32Array(geometry.uvs2.length * 2);\n      this.addAttribute('uv2', new THREE.BufferAttribute(uvs2, 2).copyVector2sArray(geometry.uvs2));\n    }\n\n    if (geometry.indices.length > 0) {\n      var TypeArray = geometry.vertices.length > 65535 ? Uint32Array : Uint16Array;\n      var indices = new TypeArray(geometry.indices.length * 3);\n      this.setIndex(new THREE.BufferAttribute(indices, 1).copyIndicesArray(geometry.indices));\n    } // groups\n\n\n    this.groups = geometry.groups; // morphs\n\n    for (var name in geometry.morphTargets) {\n      var array = [];\n      var morphTargets = geometry.morphTargets[name];\n\n      for (var i = 0, l = morphTargets.length; i < l; i++) {\n        var morphTarget = morphTargets[i];\n        var attribute = new THREE.Float32Attribute(morphTarget.length * 3, 3);\n        array.push(attribute.copyVector3sArray(morphTarget));\n      }\n\n      this.morphAttributes[name] = array;\n    } // skinning\n\n\n    if (geometry.skinIndices.length > 0) {\n      var skinIndices = new THREE.Float32Attribute(geometry.skinIndices.length * 4, 4);\n      this.addAttribute('skinIndex', skinIndices.copyVector4sArray(geometry.skinIndices));\n    }\n\n    if (geometry.skinWeights.length > 0) {\n      var skinWeights = new THREE.Float32Attribute(geometry.skinWeights.length * 4, 4);\n      this.addAttribute('skinWeight', skinWeights.copyVector4sArray(geometry.skinWeights));\n    } //\n\n\n    if (geometry.boundingSphere !== null) {\n      this.boundingSphere = geometry.boundingSphere.clone();\n    }\n\n    if (geometry.boundingBox !== null) {\n      this.boundingBox = geometry.boundingBox.clone();\n    }\n\n    return this;\n  },\n  computeBoundingBox: function () {\n    var vector = new THREE.Vector3();\n    return function () {\n      if (this.boundingBox === null) {\n        this.boundingBox = new THREE.Box3();\n      }\n\n      var positions = this.attributes.position.array;\n\n      if (positions) {\n        this.boundingBox.setFromArray(positions);\n      }\n\n      if (positions === undefined || positions.length === 0) {\n        this.boundingBox.min.set(0, 0, 0);\n        this.boundingBox.max.set(0, 0, 0);\n      }\n\n      if (isNaN(this.boundingBox.min.x) || isNaN(this.boundingBox.min.y) || isNaN(this.boundingBox.min.z)) ;\n    };\n  }(),\n  computeBoundingSphere: function () {\n    var box = new THREE.Box3();\n    var vector = new THREE.Vector3();\n    return function () {\n      if (this.boundingSphere === null) {\n        this.boundingSphere = new THREE.Sphere();\n      }\n\n      var positions = this.attributes.position.array;\n\n      if (positions) {\n        var center = this.boundingSphere.center;\n        box.setFromArray(positions);\n        box.center(center); // hoping to find a boundingSphere with a radius smaller than the\n        // boundingSphere of the boundingBox: sqrt(3) smaller in the best case\n\n        var maxRadiusSq = 0;\n\n        for (var i = 0, il = positions.length; i < il; i += 3) {\n          vector.fromArray(positions, i);\n          maxRadiusSq = Math.max(maxRadiusSq, center.distanceToSquared(vector));\n        }\n\n        this.boundingSphere.radius = Math.sqrt(maxRadiusSq);\n\n        if (isNaN(this.boundingSphere.radius)) ;\n      }\n    };\n  }(),\n  computeFaceNormals: function () {// backwards compatibility\n  },\n  computeVertexNormals: function () {\n    var index = this.index;\n    var attributes = this.attributes;\n    var groups = this.groups;\n\n    if (attributes.position) {\n      var positions = attributes.position.array;\n\n      if (attributes.normal === undefined) {\n        this.addAttribute('normal', new THREE.BufferAttribute(new Float32Array(positions.length), 3));\n      } else {\n        // reset existing normals to zero\n        var array = attributes.normal.array;\n\n        for (var i = 0, il = array.length; i < il; i++) {\n          array[i] = 0;\n        }\n      }\n\n      var normals = attributes.normal.array;\n      var vA,\n          vB,\n          vC,\n          pA = new THREE.Vector3(),\n          pB = new THREE.Vector3(),\n          pC = new THREE.Vector3(),\n          cb = new THREE.Vector3(),\n          ab = new THREE.Vector3(); // indexed elements\n\n      if (index) {\n        var indices = index.array;\n\n        if (groups.length === 0) {\n          this.addGroup(0, indices.length);\n        }\n\n        for (var j = 0, jl = groups.length; j < jl; ++j) {\n          var group = groups[j];\n          var start = group.start;\n          var count = group.count;\n\n          for (var i = start, il = start + count; i < il; i += 3) {\n            vA = indices[i + 0] * 3;\n            vB = indices[i + 1] * 3;\n            vC = indices[i + 2] * 3;\n            pA.fromArray(positions, vA);\n            pB.fromArray(positions, vB);\n            pC.fromArray(positions, vC);\n            cb.subVectors(pC, pB);\n            ab.subVectors(pA, pB);\n            cb.cross(ab);\n            normals[vA] += cb.x;\n            normals[vA + 1] += cb.y;\n            normals[vA + 2] += cb.z;\n            normals[vB] += cb.x;\n            normals[vB + 1] += cb.y;\n            normals[vB + 2] += cb.z;\n            normals[vC] += cb.x;\n            normals[vC + 1] += cb.y;\n            normals[vC + 2] += cb.z;\n          }\n        }\n      } else {\n        // non-indexed elements (unconnected triangle soup)\n        for (var i = 0, il = positions.length; i < il; i += 9) {\n          pA.fromArray(positions, i);\n          pB.fromArray(positions, i + 3);\n          pC.fromArray(positions, i + 6);\n          cb.subVectors(pC, pB);\n          ab.subVectors(pA, pB);\n          cb.cross(ab);\n          normals[i] = cb.x;\n          normals[i + 1] = cb.y;\n          normals[i + 2] = cb.z;\n          normals[i + 3] = cb.x;\n          normals[i + 4] = cb.y;\n          normals[i + 5] = cb.z;\n          normals[i + 6] = cb.x;\n          normals[i + 7] = cb.y;\n          normals[i + 8] = cb.z;\n        }\n      }\n\n      this.normalizeNormals();\n      attributes.normal.needsUpdate = true;\n    }\n  },\n  merge: function (geometry, offset) {\n    if (geometry instanceof THREE.BufferGeometry === false) {\n      return;\n    }\n\n    if (offset === undefined) offset = 0;\n    var attributes = this.attributes;\n\n    for (var key in attributes) {\n      if (geometry.attributes[key] === undefined) continue;\n      var attribute1 = attributes[key];\n      var attributeArray1 = attribute1.array;\n      var attribute2 = geometry.attributes[key];\n      var attributeArray2 = attribute2.array;\n      var attributeSize = attribute2.itemSize;\n\n      for (var i = 0, j = attributeSize * offset; i < attributeArray2.length; i++, j++) {\n        attributeArray1[j] = attributeArray2[i];\n      }\n    }\n\n    return this;\n  },\n  normalizeNormals: function () {\n    var normals = this.attributes.normal.array;\n    var x, y, z, n;\n\n    for (var i = 0, il = normals.length; i < il; i += 3) {\n      x = normals[i];\n      y = normals[i + 1];\n      z = normals[i + 2];\n      n = 1.0 / Math.sqrt(x * x + y * y + z * z);\n      normals[i] *= n;\n      normals[i + 1] *= n;\n      normals[i + 2] *= n;\n    }\n  },\n  toNonIndexed: function () {\n    if (this.index === null) {\n      return this;\n    }\n\n    var geometry2 = new THREE.BufferGeometry();\n    var indices = this.index.array;\n    var attributes = this.attributes;\n\n    for (var name in attributes) {\n      var attribute = attributes[name];\n      var array = attribute.array;\n      var itemSize = attribute.itemSize;\n      var array2 = new array.constructor(indices.length * itemSize);\n      var index = 0,\n          index2 = 0;\n\n      for (var i = 0, l = indices.length; i < l; i++) {\n        index = indices[i] * itemSize;\n\n        for (var j = 0; j < itemSize; j++) {\n          array2[index2++] = array[index++];\n        }\n      }\n\n      geometry2.addAttribute(name, new THREE.BufferAttribute(array2, itemSize));\n    }\n\n    return geometry2;\n  },\n  toJSON: function () {\n    var data = {\n      metadata: {\n        version: 4.4,\n        type: 'BufferGeometry',\n        generator: 'BufferGeometry.toJSON'\n      }\n    }; // standard BufferGeometry serialization\n\n    data.uuid = this.uuid;\n    data.type = this.type;\n    if (this.name !== '') data.name = this.name;\n\n    if (this.parameters !== undefined) {\n      var parameters = this.parameters;\n\n      for (var key in parameters) {\n        if (parameters[key] !== undefined) data[key] = parameters[key];\n      }\n\n      return data;\n    }\n\n    data.data = {\n      attributes: {}\n    };\n    var index = this.index;\n\n    if (index !== null) {\n      var array = Array.prototype.slice.call(index.array);\n      data.data.index = {\n        type: index.array.constructor.name,\n        array: array\n      };\n    }\n\n    var attributes = this.attributes;\n\n    for (var key in attributes) {\n      var attribute = attributes[key];\n      var array = Array.prototype.slice.call(attribute.array);\n      data.data.attributes[key] = {\n        itemSize: attribute.itemSize,\n        type: attribute.array.constructor.name,\n        array: array\n      };\n    }\n\n    var groups = this.groups;\n\n    if (groups.length > 0) {\n      data.data.groups = JSON.parse(JSON.stringify(groups));\n    }\n\n    var boundingSphere = this.boundingSphere;\n\n    if (boundingSphere !== null) {\n      data.data.boundingSphere = {\n        center: boundingSphere.center.toArray(),\n        radius: boundingSphere.radius\n      };\n    }\n\n    return data;\n  },\n  clone: function () {\n    /*\n    // Handle primitives\n    \tvar parameters = this.parameters;\n    \tif ( parameters !== undefined ) {\n    \t\tvar values = [];\n    \t\tfor ( var key in parameters ) {\n    \t\t\tvalues.push( parameters[ key ] );\n    \t\t}\n    \t\tvar geometry = Object.create( this.constructor.prototype );\n    \tthis.constructor.apply( geometry, values );\n    \treturn geometry;\n    \t}\n    \treturn new this.constructor().copy( this );\n    */\n    return new THREE.BufferGeometry().copy(this);\n  },\n  copy: function (source) {\n    var index = source.index;\n\n    if (index !== null) {\n      this.setIndex(index.clone());\n    }\n\n    var attributes = source.attributes;\n\n    for (var name in attributes) {\n      var attribute = attributes[name];\n      this.addAttribute(name, attribute.clone());\n    }\n\n    var groups = source.groups;\n\n    for (var i = 0, l = groups.length; i < l; i++) {\n      var group = groups[i];\n      this.addGroup(group.start, group.count);\n    }\n\n    return this;\n  },\n  dispose: function () {\n    this.dispatchEvent({\n      type: 'dispose'\n    });\n  }\n};\nTHREE.EventDispatcher.prototype.apply(THREE.BufferGeometry.prototype);\nTHREE.BufferGeometry.MaxIndex = 65535; // File:src/core/InterleavedBufferAttribute.js\n\n/**\n * @author benaadams / https://twitter.com/ben_a_adams\n */\n\nTHREE.InterleavedBufferAttribute = function (interleavedBuffer, itemSize, offset) {\n  this.uuid = THREE.Math.generateUUID();\n  this.data = interleavedBuffer;\n  this.itemSize = itemSize;\n  this.offset = offset;\n};\n\nTHREE.InterleavedBufferAttribute.prototype = {\n  constructor: THREE.InterleavedBufferAttribute,\n\n  get length() {\n    return this.array.length;\n  },\n\n  get count() {\n    return this.data.count;\n  },\n\n  setX: function (index, x) {\n    this.data.array[index * this.data.stride + this.offset] = x;\n    return this;\n  },\n  setY: function (index, y) {\n    this.data.array[index * this.data.stride + this.offset + 1] = y;\n    return this;\n  },\n  setZ: function (index, z) {\n    this.data.array[index * this.data.stride + this.offset + 2] = z;\n    return this;\n  },\n  setW: function (index, w) {\n    this.data.array[index * this.data.stride + this.offset + 3] = w;\n    return this;\n  },\n  getX: function (index) {\n    return this.data.array[index * this.data.stride + this.offset];\n  },\n  getY: function (index) {\n    return this.data.array[index * this.data.stride + this.offset + 1];\n  },\n  getZ: function (index) {\n    return this.data.array[index * this.data.stride + this.offset + 2];\n  },\n  getW: function (index) {\n    return this.data.array[index * this.data.stride + this.offset + 3];\n  },\n  setXY: function (index, x, y) {\n    index = index * this.data.stride + this.offset;\n    this.data.array[index + 0] = x;\n    this.data.array[index + 1] = y;\n    return this;\n  },\n  setXYZ: function (index, x, y, z) {\n    index = index * this.data.stride + this.offset;\n    this.data.array[index + 0] = x;\n    this.data.array[index + 1] = y;\n    this.data.array[index + 2] = z;\n    return this;\n  },\n  setXYZW: function (index, x, y, z, w) {\n    index = index * this.data.stride + this.offset;\n    this.data.array[index + 0] = x;\n    this.data.array[index + 1] = y;\n    this.data.array[index + 2] = z;\n    this.data.array[index + 3] = w;\n    return this;\n  }\n}; // File:src/core/InstancedBufferGeometry.js\n\n/**\n * @author benaadams / https://twitter.com/ben_a_adams\n */\n\nTHREE.InstancedBufferGeometry = function () {\n  THREE.BufferGeometry.call(this);\n  this.type = 'InstancedBufferGeometry';\n  this.maxInstancedCount = undefined;\n};\n\nTHREE.InstancedBufferGeometry.prototype = Object.create(THREE.BufferGeometry.prototype);\nTHREE.InstancedBufferGeometry.prototype.constructor = THREE.InstancedBufferGeometry;\n\nTHREE.InstancedBufferGeometry.prototype.addGroup = function (start, count, instances) {\n  this.groups.push({\n    start: start,\n    count: count,\n    instances: instances\n  });\n};\n\nTHREE.InstancedBufferGeometry.prototype.copy = function (source) {\n  var index = source.index;\n\n  if (index !== null) {\n    this.setIndex(index.clone());\n  }\n\n  var attributes = source.attributes;\n\n  for (var name in attributes) {\n    var attribute = attributes[name];\n    this.addAttribute(name, attribute.clone());\n  }\n\n  var groups = source.groups;\n\n  for (var i = 0, l = groups.length; i < l; i++) {\n    var group = groups[i];\n    this.addGroup(group.start, group.count, group.instances);\n  }\n\n  return this;\n};\n\nTHREE.EventDispatcher.prototype.apply(THREE.InstancedBufferGeometry.prototype); // File:src/core/Geometry.js\n\n/**\n * @author mrdoob / http://mrdoob.com/\n * @author kile / http://kile.stravaganza.org/\n * @author alteredq / http://alteredqualia.com/\n * @author mikael emtinger / http://gomo.se/\n * @author zz85 / http://www.lab4games.net/zz85/blog\n * @author bhouston / http://clara.io\n */\n\nTHREE.Geometry = function () {\n  Object.defineProperty(this, 'id', {\n    value: THREE.GeometryIdCount++\n  });\n  this.uuid = THREE.Math.generateUUID();\n  this.name = '';\n  this.type = 'Geometry';\n  this.vertices = [];\n  this.colors = [];\n  this.faces = [];\n  this.faceVertexUvs = [[]];\n  this.morphTargets = [];\n  this.morphNormals = [];\n  this.skinWeights = [];\n  this.skinIndices = [];\n  this.lineDistances = [];\n  this.boundingBox = null;\n  this.boundingSphere = null; // update flags\n\n  this.verticesNeedUpdate = false;\n  this.elementsNeedUpdate = false;\n  this.uvsNeedUpdate = false;\n  this.normalsNeedUpdate = false;\n  this.colorsNeedUpdate = false;\n  this.lineDistancesNeedUpdate = false;\n  this.groupsNeedUpdate = false;\n};\n\nTHREE.Geometry.prototype = {\n  constructor: THREE.Geometry,\n  applyMatrix: function (matrix) {\n    var normalMatrix = new THREE.Matrix3().getNormalMatrix(matrix);\n\n    for (var i = 0, il = this.vertices.length; i < il; i++) {\n      var vertex = this.vertices[i];\n      vertex.applyMatrix4(matrix);\n    }\n\n    for (var i = 0, il = this.faces.length; i < il; i++) {\n      var face = this.faces[i];\n      face.normal.applyMatrix3(normalMatrix).normalize();\n\n      for (var j = 0, jl = face.vertexNormals.length; j < jl; j++) {\n        face.vertexNormals[j].applyMatrix3(normalMatrix).normalize();\n      }\n    }\n\n    if (this.boundingBox !== null) {\n      this.computeBoundingBox();\n    }\n\n    if (this.boundingSphere !== null) {\n      this.computeBoundingSphere();\n    }\n\n    this.verticesNeedUpdate = true;\n    this.normalsNeedUpdate = true;\n    return this;\n  },\n  rotateX: function () {\n    // rotate geometry around world x-axis\n    var m1;\n    return function rotateX(angle) {\n      if (m1 === undefined) m1 = new THREE.Matrix4();\n      m1.makeRotationX(angle);\n      this.applyMatrix(m1);\n      return this;\n    };\n  }(),\n  rotateY: function () {\n    // rotate geometry around world y-axis\n    var m1;\n    return function rotateY(angle) {\n      if (m1 === undefined) m1 = new THREE.Matrix4();\n      m1.makeRotationY(angle);\n      this.applyMatrix(m1);\n      return this;\n    };\n  }(),\n  rotateZ: function () {\n    // rotate geometry around world z-axis\n    var m1;\n    return function rotateZ(angle) {\n      if (m1 === undefined) m1 = new THREE.Matrix4();\n      m1.makeRotationZ(angle);\n      this.applyMatrix(m1);\n      return this;\n    };\n  }(),\n  translate: function () {\n    // translate geometry\n    var m1;\n    return function translate(x, y, z) {\n      if (m1 === undefined) m1 = new THREE.Matrix4();\n      m1.makeTranslation(x, y, z);\n      this.applyMatrix(m1);\n      return this;\n    };\n  }(),\n  scale: function () {\n    // scale geometry\n    var m1;\n    return function scale(x, y, z) {\n      if (m1 === undefined) m1 = new THREE.Matrix4();\n      m1.makeScale(x, y, z);\n      this.applyMatrix(m1);\n      return this;\n    };\n  }(),\n  lookAt: function () {\n    var obj;\n    return function lookAt(vector) {\n      if (obj === undefined) obj = new THREE.Object3D();\n      obj.lookAt(vector);\n      obj.updateMatrix();\n      this.applyMatrix(obj.matrix);\n    };\n  }(),\n  fromBufferGeometry: function (geometry) {\n    var scope = this;\n    var indices = geometry.index !== null ? geometry.index.array : undefined;\n    var attributes = geometry.attributes;\n    var positions = attributes.position.array;\n    var normals = attributes.normal !== undefined ? attributes.normal.array : undefined;\n    var colors = attributes.color !== undefined ? attributes.color.array : undefined;\n    var uvs = attributes.uv !== undefined ? attributes.uv.array : undefined;\n    var uvs2 = attributes.uv2 !== undefined ? attributes.uv2.array : undefined;\n    if (uvs2 !== undefined) this.faceVertexUvs[1] = [];\n    var tempNormals = [];\n    var tempUVs = [];\n    var tempUVs2 = [];\n\n    for (var i = 0, j = 0; i < positions.length; i += 3, j += 2) {\n      scope.vertices.push(new THREE.Vector3(positions[i], positions[i + 1], positions[i + 2]));\n\n      if (normals !== undefined) {\n        tempNormals.push(new THREE.Vector3(normals[i], normals[i + 1], normals[i + 2]));\n      }\n\n      if (colors !== undefined) {\n        scope.colors.push(new THREE.Color(colors[i], colors[i + 1], colors[i + 2]));\n      }\n\n      if (uvs !== undefined) {\n        tempUVs.push(new THREE.Vector2(uvs[j], uvs[j + 1]));\n      }\n\n      if (uvs2 !== undefined) {\n        tempUVs2.push(new THREE.Vector2(uvs2[j], uvs2[j + 1]));\n      }\n    }\n\n    function addFace(a, b, c, materialIndex) {\n      var vertexNormals = normals !== undefined ? [tempNormals[a].clone(), tempNormals[b].clone(), tempNormals[c].clone()] : [];\n      var vertexColors = colors !== undefined ? [scope.colors[a].clone(), scope.colors[b].clone(), scope.colors[c].clone()] : [];\n      var face = new THREE.Face3(a, b, c, vertexNormals, vertexColors, materialIndex);\n      scope.faces.push(face);\n\n      if (uvs !== undefined) {\n        scope.faceVertexUvs[0].push([tempUVs[a].clone(), tempUVs[b].clone(), tempUVs[c].clone()]);\n      }\n\n      if (uvs2 !== undefined) {\n        scope.faceVertexUvs[1].push([tempUVs2[a].clone(), tempUVs2[b].clone(), tempUVs2[c].clone()]);\n      }\n    }\n\n    if (indices !== undefined) {\n      var groups = geometry.groups;\n\n      if (groups.length > 0) {\n        for (var i = 0; i < groups.length; i++) {\n          var group = groups[i];\n          var start = group.start;\n          var count = group.count;\n\n          for (var j = start, jl = start + count; j < jl; j += 3) {\n            addFace(indices[j], indices[j + 1], indices[j + 2], group.materialIndex);\n          }\n        }\n      } else {\n        for (var i = 0; i < indices.length; i += 3) {\n          addFace(indices[i], indices[i + 1], indices[i + 2]);\n        }\n      }\n    } else {\n      for (var i = 0; i < positions.length / 3; i += 3) {\n        addFace(i, i + 1, i + 2);\n      }\n    }\n\n    this.computeFaceNormals();\n\n    if (geometry.boundingBox !== null) {\n      this.boundingBox = geometry.boundingBox.clone();\n    }\n\n    if (geometry.boundingSphere !== null) {\n      this.boundingSphere = geometry.boundingSphere.clone();\n    }\n\n    return this;\n  },\n  center: function () {\n    this.computeBoundingBox();\n    var offset = this.boundingBox.center().negate();\n    this.translate(offset.x, offset.y, offset.z);\n    return offset;\n  },\n  normalize: function () {\n    this.computeBoundingSphere();\n    var center = this.boundingSphere.center;\n    var radius = this.boundingSphere.radius;\n    var s = radius === 0 ? 1 : 1.0 / radius;\n    var matrix = new THREE.Matrix4();\n    matrix.set(s, 0, 0, -s * center.x, 0, s, 0, -s * center.y, 0, 0, s, -s * center.z, 0, 0, 0, 1);\n    this.applyMatrix(matrix);\n    return this;\n  },\n  computeFaceNormals: function () {\n    var cb = new THREE.Vector3(),\n        ab = new THREE.Vector3();\n\n    for (var f = 0, fl = this.faces.length; f < fl; f++) {\n      var face = this.faces[f];\n      var vA = this.vertices[face.a];\n      var vB = this.vertices[face.b];\n      var vC = this.vertices[face.c];\n      cb.subVectors(vC, vB);\n      ab.subVectors(vA, vB);\n      cb.cross(ab);\n      cb.normalize();\n      face.normal.copy(cb);\n    }\n  },\n  computeVertexNormals: function (areaWeighted) {\n    if (areaWeighted === undefined) areaWeighted = true;\n    var v, vl, f, fl, face, vertices;\n    vertices = new Array(this.vertices.length);\n\n    for (v = 0, vl = this.vertices.length; v < vl; v++) {\n      vertices[v] = new THREE.Vector3();\n    }\n\n    if (areaWeighted) {\n      // vertex normals weighted by triangle areas\n      // http://www.iquilezles.org/www/articles/normals/normals.htm\n      var vA, vB, vC;\n      var cb = new THREE.Vector3(),\n          ab = new THREE.Vector3();\n\n      for (f = 0, fl = this.faces.length; f < fl; f++) {\n        face = this.faces[f];\n        vA = this.vertices[face.a];\n        vB = this.vertices[face.b];\n        vC = this.vertices[face.c];\n        cb.subVectors(vC, vB);\n        ab.subVectors(vA, vB);\n        cb.cross(ab);\n        vertices[face.a].add(cb);\n        vertices[face.b].add(cb);\n        vertices[face.c].add(cb);\n      }\n    } else {\n      for (f = 0, fl = this.faces.length; f < fl; f++) {\n        face = this.faces[f];\n        vertices[face.a].add(face.normal);\n        vertices[face.b].add(face.normal);\n        vertices[face.c].add(face.normal);\n      }\n    }\n\n    for (v = 0, vl = this.vertices.length; v < vl; v++) {\n      vertices[v].normalize();\n    }\n\n    for (f = 0, fl = this.faces.length; f < fl; f++) {\n      face = this.faces[f];\n      var vertexNormals = face.vertexNormals;\n\n      if (vertexNormals.length === 3) {\n        vertexNormals[0].copy(vertices[face.a]);\n        vertexNormals[1].copy(vertices[face.b]);\n        vertexNormals[2].copy(vertices[face.c]);\n      } else {\n        vertexNormals[0] = vertices[face.a].clone();\n        vertexNormals[1] = vertices[face.b].clone();\n        vertexNormals[2] = vertices[face.c].clone();\n      }\n    }\n\n    if (this.faces.length > 0) {\n      this.normalsNeedUpdate = true;\n    }\n  },\n  computeMorphNormals: function () {\n    var i, il, f, fl, face; // save original normals\n    // - create temp variables on first access\n    //   otherwise just copy (for faster repeated calls)\n\n    for (f = 0, fl = this.faces.length; f < fl; f++) {\n      face = this.faces[f];\n\n      if (!face.__originalFaceNormal) {\n        face.__originalFaceNormal = face.normal.clone();\n      } else {\n        face.__originalFaceNormal.copy(face.normal);\n      }\n\n      if (!face.__originalVertexNormals) face.__originalVertexNormals = [];\n\n      for (i = 0, il = face.vertexNormals.length; i < il; i++) {\n        if (!face.__originalVertexNormals[i]) {\n          face.__originalVertexNormals[i] = face.vertexNormals[i].clone();\n        } else {\n          face.__originalVertexNormals[i].copy(face.vertexNormals[i]);\n        }\n      }\n    } // use temp geometry to compute face and vertex normals for each morph\n\n\n    var tmpGeo = new THREE.Geometry();\n    tmpGeo.faces = this.faces;\n\n    for (i = 0, il = this.morphTargets.length; i < il; i++) {\n      // create on first access\n      if (!this.morphNormals[i]) {\n        this.morphNormals[i] = {};\n        this.morphNormals[i].faceNormals = [];\n        this.morphNormals[i].vertexNormals = [];\n        var dstNormalsFace = this.morphNormals[i].faceNormals;\n        var dstNormalsVertex = this.morphNormals[i].vertexNormals;\n        var faceNormal, vertexNormals;\n\n        for (f = 0, fl = this.faces.length; f < fl; f++) {\n          faceNormal = new THREE.Vector3();\n          vertexNormals = {\n            a: new THREE.Vector3(),\n            b: new THREE.Vector3(),\n            c: new THREE.Vector3()\n          };\n          dstNormalsFace.push(faceNormal);\n          dstNormalsVertex.push(vertexNormals);\n        }\n      }\n\n      var morphNormals = this.morphNormals[i]; // set vertices to morph target\n\n      tmpGeo.vertices = this.morphTargets[i].vertices; // compute morph normals\n\n      tmpGeo.computeFaceNormals();\n      tmpGeo.computeVertexNormals(); // store morph normals\n\n      var faceNormal, vertexNormals;\n\n      for (f = 0, fl = this.faces.length; f < fl; f++) {\n        face = this.faces[f];\n        faceNormal = morphNormals.faceNormals[f];\n        vertexNormals = morphNormals.vertexNormals[f];\n        faceNormal.copy(face.normal);\n        vertexNormals.a.copy(face.vertexNormals[0]);\n        vertexNormals.b.copy(face.vertexNormals[1]);\n        vertexNormals.c.copy(face.vertexNormals[2]);\n      }\n    } // restore original normals\n\n\n    for (f = 0, fl = this.faces.length; f < fl; f++) {\n      face = this.faces[f];\n      face.normal = face.__originalFaceNormal;\n      face.vertexNormals = face.__originalVertexNormals;\n    }\n  },\n  computeTangents: function () {},\n  computeLineDistances: function () {\n    var d = 0;\n    var vertices = this.vertices;\n\n    for (var i = 0, il = vertices.length; i < il; i++) {\n      if (i > 0) {\n        d += vertices[i].distanceTo(vertices[i - 1]);\n      }\n\n      this.lineDistances[i] = d;\n    }\n  },\n  computeBoundingBox: function () {\n    if (this.boundingBox === null) {\n      this.boundingBox = new THREE.Box3();\n    }\n\n    this.boundingBox.setFromPoints(this.vertices);\n  },\n  computeBoundingSphere: function () {\n    if (this.boundingSphere === null) {\n      this.boundingSphere = new THREE.Sphere();\n    }\n\n    this.boundingSphere.setFromPoints(this.vertices);\n  },\n  merge: function (geometry, matrix, materialIndexOffset) {\n    if (geometry instanceof THREE.Geometry === false) {\n      return;\n    }\n\n    var normalMatrix,\n        vertexOffset = this.vertices.length,\n        vertices1 = this.vertices,\n        vertices2 = geometry.vertices,\n        faces1 = this.faces,\n        faces2 = geometry.faces,\n        uvs1 = this.faceVertexUvs[0],\n        uvs2 = geometry.faceVertexUvs[0];\n    if (materialIndexOffset === undefined) materialIndexOffset = 0;\n\n    if (matrix !== undefined) {\n      normalMatrix = new THREE.Matrix3().getNormalMatrix(matrix);\n    } // vertices\n\n\n    for (var i = 0, il = vertices2.length; i < il; i++) {\n      var vertex = vertices2[i];\n      var vertexCopy = vertex.clone();\n      if (matrix !== undefined) vertexCopy.applyMatrix4(matrix);\n      vertices1.push(vertexCopy);\n    } // faces\n\n\n    for (i = 0, il = faces2.length; i < il; i++) {\n      var face = faces2[i],\n          faceCopy,\n          normal,\n          color,\n          faceVertexNormals = face.vertexNormals,\n          faceVertexColors = face.vertexColors;\n      faceCopy = new THREE.Face3(face.a + vertexOffset, face.b + vertexOffset, face.c + vertexOffset);\n      faceCopy.normal.copy(face.normal);\n\n      if (normalMatrix !== undefined) {\n        faceCopy.normal.applyMatrix3(normalMatrix).normalize();\n      }\n\n      for (var j = 0, jl = faceVertexNormals.length; j < jl; j++) {\n        normal = faceVertexNormals[j].clone();\n\n        if (normalMatrix !== undefined) {\n          normal.applyMatrix3(normalMatrix).normalize();\n        }\n\n        faceCopy.vertexNormals.push(normal);\n      }\n\n      faceCopy.color.copy(face.color);\n\n      for (var j = 0, jl = faceVertexColors.length; j < jl; j++) {\n        color = faceVertexColors[j];\n        faceCopy.vertexColors.push(color.clone());\n      }\n\n      faceCopy.materialIndex = face.materialIndex + materialIndexOffset;\n      faces1.push(faceCopy);\n    } // uvs\n\n\n    for (i = 0, il = uvs2.length; i < il; i++) {\n      var uv = uvs2[i],\n          uvCopy = [];\n\n      if (uv === undefined) {\n        continue;\n      }\n\n      for (var j = 0, jl = uv.length; j < jl; j++) {\n        uvCopy.push(uv[j].clone());\n      }\n\n      uvs1.push(uvCopy);\n    }\n  },\n  mergeMesh: function (mesh) {\n    if (mesh instanceof THREE.Mesh === false) {\n      return;\n    }\n\n    mesh.matrixAutoUpdate && mesh.updateMatrix();\n    this.merge(mesh.geometry, mesh.matrix);\n  },\n\n  /*\n   * Checks for duplicate vertices with hashmap.\n   * Duplicated vertices are removed\n   * and faces' vertices are updated.\n   */\n  mergeVertices: function () {\n    var verticesMap = {}; // Hashmap for looking up vertices by position coordinates (and making sure they are unique)\n\n    var unique = [],\n        changes = [];\n    var v, key;\n    var precisionPoints = 4; // number of decimal points, e.g. 4 for epsilon of 0.0001\n\n    var precision = Math.pow(10, precisionPoints);\n    var i, il, face;\n    var indices, j, jl;\n\n    for (i = 0, il = this.vertices.length; i < il; i++) {\n      v = this.vertices[i];\n      key = Math.round(v.x * precision) + '_' + Math.round(v.y * precision) + '_' + Math.round(v.z * precision);\n\n      if (verticesMap[key] === undefined) {\n        verticesMap[key] = i;\n        unique.push(this.vertices[i]);\n        changes[i] = unique.length - 1;\n      } else {\n        //console.log('Duplicate vertex found. ', i, ' could be using ', verticesMap[key]);\n        changes[i] = changes[verticesMap[key]];\n      }\n    } // if faces are completely degenerate after merging vertices, we\n    // have to remove them from the geometry.\n\n\n    var faceIndicesToRemove = [];\n\n    for (i = 0, il = this.faces.length; i < il; i++) {\n      face = this.faces[i];\n      face.a = changes[face.a];\n      face.b = changes[face.b];\n      face.c = changes[face.c];\n      indices = [face.a, face.b, face.c];\n      // we have to remove the face as nothing can be saved\n\n      for (var n = 0; n < 3; n++) {\n        if (indices[n] === indices[(n + 1) % 3]) {\n          faceIndicesToRemove.push(i);\n          break;\n        }\n      }\n    }\n\n    for (i = faceIndicesToRemove.length - 1; i >= 0; i--) {\n      var idx = faceIndicesToRemove[i];\n      this.faces.splice(idx, 1);\n\n      for (j = 0, jl = this.faceVertexUvs.length; j < jl; j++) {\n        this.faceVertexUvs[j].splice(idx, 1);\n      }\n    } // Use unique set of vertices\n\n\n    var diff = this.vertices.length - unique.length;\n    this.vertices = unique;\n    return diff;\n  },\n  sortFacesByMaterialIndex: function () {\n    var faces = this.faces;\n    var length = faces.length; // tag faces\n\n    for (var i = 0; i < length; i++) {\n      faces[i]._id = i;\n    } // sort faces\n\n\n    function materialIndexSort(a, b) {\n      return a.materialIndex - b.materialIndex;\n    }\n\n    faces.sort(materialIndexSort); // sort uvs\n\n    var uvs1 = this.faceVertexUvs[0];\n    var uvs2 = this.faceVertexUvs[1];\n    var newUvs1, newUvs2;\n    if (uvs1 && uvs1.length === length) newUvs1 = [];\n    if (uvs2 && uvs2.length === length) newUvs2 = [];\n\n    for (var i = 0; i < length; i++) {\n      var id = faces[i]._id;\n      if (newUvs1) newUvs1.push(uvs1[id]);\n      if (newUvs2) newUvs2.push(uvs2[id]);\n    }\n\n    if (newUvs1) this.faceVertexUvs[0] = newUvs1;\n    if (newUvs2) this.faceVertexUvs[1] = newUvs2;\n  },\n  toJSON: function () {\n    var data = {\n      metadata: {\n        version: 4.4,\n        type: 'Geometry',\n        generator: 'Geometry.toJSON'\n      }\n    }; // standard Geometry serialization\n\n    data.uuid = this.uuid;\n    data.type = this.type;\n    if (this.name !== '') data.name = this.name;\n\n    if (this.parameters !== undefined) {\n      var parameters = this.parameters;\n\n      for (var key in parameters) {\n        if (parameters[key] !== undefined) data[key] = parameters[key];\n      }\n\n      return data;\n    }\n\n    var vertices = [];\n\n    for (var i = 0; i < this.vertices.length; i++) {\n      var vertex = this.vertices[i];\n      vertices.push(vertex.x, vertex.y, vertex.z);\n    }\n\n    var faces = [];\n    var normals = [];\n    var normalsHash = {};\n    var colors = [];\n    var colorsHash = {};\n    var uvs = [];\n    var uvsHash = {};\n\n    for (var i = 0; i < this.faces.length; i++) {\n      var face = this.faces[i];\n      var hasMaterial = true;\n      var hasFaceUv = false; // deprecated\n\n      var hasFaceVertexUv = this.faceVertexUvs[0][i] !== undefined;\n      var hasFaceNormal = face.normal.length() > 0;\n      var hasFaceVertexNormal = face.vertexNormals.length > 0;\n      var hasFaceColor = face.color.r !== 1 || face.color.g !== 1 || face.color.b !== 1;\n      var hasFaceVertexColor = face.vertexColors.length > 0;\n      var faceType = 0;\n      faceType = setBit(faceType, 0, 0); // isQuad\n\n      faceType = setBit(faceType, 1, hasMaterial);\n      faceType = setBit(faceType, 2, hasFaceUv);\n      faceType = setBit(faceType, 3, hasFaceVertexUv);\n      faceType = setBit(faceType, 4, hasFaceNormal);\n      faceType = setBit(faceType, 5, hasFaceVertexNormal);\n      faceType = setBit(faceType, 6, hasFaceColor);\n      faceType = setBit(faceType, 7, hasFaceVertexColor);\n      faces.push(faceType);\n      faces.push(face.a, face.b, face.c);\n      faces.push(face.materialIndex);\n\n      if (hasFaceVertexUv) {\n        var faceVertexUvs = this.faceVertexUvs[0][i];\n        faces.push(getUvIndex(faceVertexUvs[0]), getUvIndex(faceVertexUvs[1]), getUvIndex(faceVertexUvs[2]));\n      }\n\n      if (hasFaceNormal) {\n        faces.push(getNormalIndex(face.normal));\n      }\n\n      if (hasFaceVertexNormal) {\n        var vertexNormals = face.vertexNormals;\n        faces.push(getNormalIndex(vertexNormals[0]), getNormalIndex(vertexNormals[1]), getNormalIndex(vertexNormals[2]));\n      }\n\n      if (hasFaceColor) {\n        faces.push(getColorIndex(face.color));\n      }\n\n      if (hasFaceVertexColor) {\n        var vertexColors = face.vertexColors;\n        faces.push(getColorIndex(vertexColors[0]), getColorIndex(vertexColors[1]), getColorIndex(vertexColors[2]));\n      }\n    }\n\n    function setBit(value, position, enabled) {\n      return enabled ? value | 1 << position : value & ~(1 << position);\n    }\n\n    function getNormalIndex(normal) {\n      var hash = normal.x.toString() + normal.y.toString() + normal.z.toString();\n\n      if (normalsHash[hash] !== undefined) {\n        return normalsHash[hash];\n      }\n\n      normalsHash[hash] = normals.length / 3;\n      normals.push(normal.x, normal.y, normal.z);\n      return normalsHash[hash];\n    }\n\n    function getColorIndex(color) {\n      var hash = color.r.toString() + color.g.toString() + color.b.toString();\n\n      if (colorsHash[hash] !== undefined) {\n        return colorsHash[hash];\n      }\n\n      colorsHash[hash] = colors.length;\n      colors.push(color.getHex());\n      return colorsHash[hash];\n    }\n\n    function getUvIndex(uv) {\n      var hash = uv.x.toString() + uv.y.toString();\n\n      if (uvsHash[hash] !== undefined) {\n        return uvsHash[hash];\n      }\n\n      uvsHash[hash] = uvs.length / 2;\n      uvs.push(uv.x, uv.y);\n      return uvsHash[hash];\n    }\n\n    data.data = {};\n    data.data.vertices = vertices;\n    data.data.normals = normals;\n    if (colors.length > 0) data.data.colors = colors;\n    if (uvs.length > 0) data.data.uvs = [uvs]; // temporal backward compatibility\n\n    data.data.faces = faces;\n    return data;\n  },\n  clone: function () {\n    /*\n    // Handle primitives\n    \tvar parameters = this.parameters;\n    \tif ( parameters !== undefined ) {\n    \t\tvar values = [];\n    \t\tfor ( var key in parameters ) {\n    \t\t\tvalues.push( parameters[ key ] );\n    \t\t}\n    \t\tvar geometry = Object.create( this.constructor.prototype );\n    \tthis.constructor.apply( geometry, values );\n    \treturn geometry;\n    \t}\n    \treturn new this.constructor().copy( this );\n    */\n    return new THREE.Geometry().copy(this);\n  },\n  copy: function (source) {\n    this.vertices = [];\n    this.faces = [];\n    this.faceVertexUvs = [[]];\n    var vertices = source.vertices;\n\n    for (var i = 0, il = vertices.length; i < il; i++) {\n      this.vertices.push(vertices[i].clone());\n    }\n\n    var faces = source.faces;\n\n    for (var i = 0, il = faces.length; i < il; i++) {\n      this.faces.push(faces[i].clone());\n    }\n\n    for (var i = 0, il = source.faceVertexUvs.length; i < il; i++) {\n      var faceVertexUvs = source.faceVertexUvs[i];\n\n      if (this.faceVertexUvs[i] === undefined) {\n        this.faceVertexUvs[i] = [];\n      }\n\n      for (var j = 0, jl = faceVertexUvs.length; j < jl; j++) {\n        var uvs = faceVertexUvs[j],\n            uvsCopy = [];\n\n        for (var k = 0, kl = uvs.length; k < kl; k++) {\n          var uv = uvs[k];\n          uvsCopy.push(uv.clone());\n        }\n\n        this.faceVertexUvs[i].push(uvsCopy);\n      }\n    }\n\n    return this;\n  },\n  dispose: function () {\n    this.dispatchEvent({\n      type: 'dispose'\n    });\n  }\n};\nTHREE.EventDispatcher.prototype.apply(THREE.Geometry.prototype);\nTHREE.GeometryIdCount = 0; // File:src/core/DirectGeometry.js\n\n/**\n * @author mrdoob / http://mrdoob.com/\n */\n\nTHREE.DirectGeometry = function () {\n  Object.defineProperty(this, 'id', {\n    value: THREE.GeometryIdCount++\n  });\n  this.uuid = THREE.Math.generateUUID();\n  this.name = '';\n  this.type = 'DirectGeometry';\n  this.indices = [];\n  this.vertices = [];\n  this.normals = [];\n  this.colors = [];\n  this.uvs = [];\n  this.uvs2 = [];\n  this.groups = [];\n  this.morphTargets = {};\n  this.skinWeights = [];\n  this.skinIndices = []; // this.lineDistances = [];\n\n  this.boundingBox = null;\n  this.boundingSphere = null; // update flags\n\n  this.verticesNeedUpdate = false;\n  this.normalsNeedUpdate = false;\n  this.colorsNeedUpdate = false;\n  this.uvsNeedUpdate = false;\n  this.groupsNeedUpdate = false;\n};\n\nTHREE.DirectGeometry.prototype = {\n  constructor: THREE.DirectGeometry,\n  computeBoundingBox: THREE.Geometry.prototype.computeBoundingBox,\n  computeBoundingSphere: THREE.Geometry.prototype.computeBoundingSphere,\n  computeFaceNormals: function () {},\n  computeVertexNormals: function () {},\n  computeGroups: function (geometry) {\n    var group;\n    var groups = [];\n    var materialIndex;\n    var faces = geometry.faces;\n\n    for (var i = 0; i < faces.length; i++) {\n      var face = faces[i]; // materials\n\n      if (face.materialIndex !== materialIndex) {\n        materialIndex = face.materialIndex;\n\n        if (group !== undefined) {\n          group.count = i * 3 - group.start;\n          groups.push(group);\n        }\n\n        group = {\n          start: i * 3,\n          materialIndex: materialIndex\n        };\n      }\n    }\n\n    if (group !== undefined) {\n      group.count = i * 3 - group.start;\n      groups.push(group);\n    }\n\n    this.groups = groups;\n  },\n  fromGeometry: function (geometry) {\n    var faces = geometry.faces;\n    var vertices = geometry.vertices;\n    var faceVertexUvs = geometry.faceVertexUvs;\n    var hasFaceVertexUv = faceVertexUvs[0] && faceVertexUvs[0].length > 0;\n    var hasFaceVertexUv2 = faceVertexUvs[1] && faceVertexUvs[1].length > 0; // morphs\n\n    var morphTargets = geometry.morphTargets;\n    var morphTargetsLength = morphTargets.length;\n    var morphTargetsPosition;\n\n    if (morphTargetsLength > 0) {\n      morphTargetsPosition = [];\n\n      for (var i = 0; i < morphTargetsLength; i++) {\n        morphTargetsPosition[i] = [];\n      }\n\n      this.morphTargets.position = morphTargetsPosition;\n    }\n\n    var morphNormals = geometry.morphNormals;\n    var morphNormalsLength = morphNormals.length;\n    var morphTargetsNormal;\n\n    if (morphNormalsLength > 0) {\n      morphTargetsNormal = [];\n\n      for (var i = 0; i < morphNormalsLength; i++) {\n        morphTargetsNormal[i] = [];\n      }\n\n      this.morphTargets.normal = morphTargetsNormal;\n    } // skins\n\n\n    var skinIndices = geometry.skinIndices;\n    var skinWeights = geometry.skinWeights;\n    var hasSkinIndices = skinIndices.length === vertices.length;\n    var hasSkinWeights = skinWeights.length === vertices.length; //\n\n    for (var i = 0; i < faces.length; i++) {\n      var face = faces[i];\n      this.vertices.push(vertices[face.a], vertices[face.b], vertices[face.c]);\n      var vertexNormals = face.vertexNormals;\n\n      if (vertexNormals.length === 3) {\n        this.normals.push(vertexNormals[0], vertexNormals[1], vertexNormals[2]);\n      } else {\n        var normal = face.normal;\n        this.normals.push(normal, normal, normal);\n      }\n\n      var vertexColors = face.vertexColors;\n\n      if (vertexColors.length === 3) {\n        this.colors.push(vertexColors[0], vertexColors[1], vertexColors[2]);\n      } else {\n        var color = face.color;\n        this.colors.push(color, color, color);\n      }\n\n      if (hasFaceVertexUv === true) {\n        var vertexUvs = faceVertexUvs[0][i];\n\n        if (vertexUvs !== undefined) {\n          this.uvs.push(vertexUvs[0], vertexUvs[1], vertexUvs[2]);\n        } else {\n          this.uvs.push(new THREE.Vector2(), new THREE.Vector2(), new THREE.Vector2());\n        }\n      }\n\n      if (hasFaceVertexUv2 === true) {\n        var vertexUvs = faceVertexUvs[1][i];\n\n        if (vertexUvs !== undefined) {\n          this.uvs2.push(vertexUvs[0], vertexUvs[1], vertexUvs[2]);\n        } else {\n          this.uvs2.push(new THREE.Vector2(), new THREE.Vector2(), new THREE.Vector2());\n        }\n      } // morphs\n\n\n      for (var j = 0; j < morphTargetsLength; j++) {\n        var morphTarget = morphTargets[j].vertices;\n        morphTargetsPosition[j].push(morphTarget[face.a], morphTarget[face.b], morphTarget[face.c]);\n      }\n\n      for (var j = 0; j < morphNormalsLength; j++) {\n        var morphNormal = morphNormals[j].vertexNormals[i];\n        morphTargetsNormal[j].push(morphNormal.a, morphNormal.b, morphNormal.c);\n      } // skins\n\n\n      if (hasSkinIndices) {\n        this.skinIndices.push(skinIndices[face.a], skinIndices[face.b], skinIndices[face.c]);\n      }\n\n      if (hasSkinWeights) {\n        this.skinWeights.push(skinWeights[face.a], skinWeights[face.b], skinWeights[face.c]);\n      }\n    }\n\n    this.computeGroups(geometry);\n    this.verticesNeedUpdate = geometry.verticesNeedUpdate;\n    this.normalsNeedUpdate = geometry.normalsNeedUpdate;\n    this.colorsNeedUpdate = geometry.colorsNeedUpdate;\n    this.uvsNeedUpdate = geometry.uvsNeedUpdate;\n    this.groupsNeedUpdate = geometry.groupsNeedUpdate;\n    return this;\n  },\n  dispose: function () {\n    this.dispatchEvent({\n      type: 'dispose'\n    });\n  }\n};\nTHREE.EventDispatcher.prototype.apply(THREE.DirectGeometry.prototype); // File:src/cameras/Camera.js\n\n/**\n * @author mrdoob / http://mrdoob.com/\n * @author mikael emtinger / http://gomo.se/\n * @author WestLangley / http://github.com/WestLangley\n*/\n\nTHREE.Camera = function () {\n  THREE.Object3D.call(this);\n  this.type = 'Camera';\n  this.matrixWorldInverse = new THREE.Matrix4();\n  this.projectionMatrix = new THREE.Matrix4();\n};\n\nTHREE.Camera.prototype = Object.create(THREE.Object3D.prototype);\nTHREE.Camera.prototype.constructor = THREE.Camera;\n\nTHREE.Camera.prototype.getWorldDirection = function () {\n  var quaternion = new THREE.Quaternion();\n  return function (optionalTarget) {\n    var result = optionalTarget || new THREE.Vector3();\n    this.getWorldQuaternion(quaternion);\n    return result.set(0, 0, -1).applyQuaternion(quaternion);\n  };\n}();\n\nTHREE.Camera.prototype.lookAt = function () {\n  // This routine does not support cameras with rotated and/or translated parent(s)\n  var m1 = new THREE.Matrix4();\n  return function (vector) {\n    m1.lookAt(this.position, vector, this.up);\n    this.quaternion.setFromRotationMatrix(m1);\n  };\n}();\n\nTHREE.Camera.prototype.clone = function () {\n  return new this.constructor().copy(this);\n};\n\nTHREE.Camera.prototype.copy = function (source) {\n  THREE.Object3D.prototype.copy.call(this, source);\n  this.matrixWorldInverse.copy(source.matrixWorldInverse);\n  this.projectionMatrix.copy(source.projectionMatrix);\n  return this;\n}; // File:src/cameras/PerspectiveCamera.js\n\n/**\n * @author mrdoob / http://mrdoob.com/\n * @author greggman / http://games.greggman.com/\n * @author zz85 / http://www.lab4games.net/zz85/blog\n */\n\n\nTHREE.PerspectiveCamera = function (fov, aspect, near, far) {\n  THREE.Camera.call(this);\n  this.type = 'PerspectiveCamera';\n  this.focalLength = 10;\n  this.zoom = 1;\n  this.fov = fov !== undefined ? fov : 50;\n  this.aspect = aspect !== undefined ? aspect : 1;\n  this.near = near !== undefined ? near : 0.1;\n  this.far = far !== undefined ? far : 2000;\n  this.updateProjectionMatrix();\n};\n\nTHREE.PerspectiveCamera.prototype = Object.create(THREE.Camera.prototype);\nTHREE.PerspectiveCamera.prototype.constructor = THREE.PerspectiveCamera;\n/**\n * Uses Focal Length (in mm) to estimate and set FOV\n * 35mm (full-frame) camera is used if frame size is not specified;\n * Formula based on http://www.bobatkins.com/photography/technical/field_of_view.html\n */\n\nTHREE.PerspectiveCamera.prototype.setLens = function (focalLength, frameHeight) {\n  if (frameHeight === undefined) frameHeight = 24;\n  this.fov = 2 * THREE.Math.radToDeg(Math.atan(frameHeight / (focalLength * 2)));\n  this.updateProjectionMatrix();\n};\n/**\n * Sets an offset in a larger frustum. This is useful for multi-window or\n * multi-monitor/multi-machine setups.\n *\n * For example, if you have 3x2 monitors and each monitor is 1920x1080 and\n * the monitors are in grid like this\n *\n *   +---+---+---+\n *   | A | B | C |\n *   +---+---+---+\n *   | D | E | F |\n *   +---+---+---+\n *\n * then for each monitor you would call it like this\n *\n *   var w = 1920;\n *   var h = 1080;\n *   var fullWidth = w * 3;\n *   var fullHeight = h * 2;\n *\n *   --A--\n *   camera.setOffset( fullWidth, fullHeight, w * 0, h * 0, w, h );\n *   --B--\n *   camera.setOffset( fullWidth, fullHeight, w * 1, h * 0, w, h );\n *   --C--\n *   camera.setOffset( fullWidth, fullHeight, w * 2, h * 0, w, h );\n *   --D--\n *   camera.setOffset( fullWidth, fullHeight, w * 0, h * 1, w, h );\n *   --E--\n *   camera.setOffset( fullWidth, fullHeight, w * 1, h * 1, w, h );\n *   --F--\n *   camera.setOffset( fullWidth, fullHeight, w * 2, h * 1, w, h );\n *\n *   Note there is no reason monitors have to be the same size or in a grid.\n */\n\n\nTHREE.PerspectiveCamera.prototype.setViewOffset = function (fullWidth, fullHeight, x, y, width, height) {\n  this.fullWidth = fullWidth;\n  this.fullHeight = fullHeight;\n  this.x = x;\n  this.y = y;\n  this.width = width;\n  this.height = height;\n  this.updateProjectionMatrix();\n};\n\nTHREE.PerspectiveCamera.prototype.updateProjectionMatrix = function () {\n  var fov = THREE.Math.radToDeg(2 * Math.atan(Math.tan(THREE.Math.degToRad(this.fov) * 0.5) / this.zoom));\n\n  if (this.fullWidth) {\n    var aspect = this.fullWidth / this.fullHeight;\n    var top = Math.tan(THREE.Math.degToRad(fov * 0.5)) * this.near;\n    var bottom = -top;\n    var left = aspect * bottom;\n    var right = aspect * top;\n    var width = Math.abs(right - left);\n    var height = Math.abs(top - bottom);\n    this.projectionMatrix.makeFrustum(left + this.x * width / this.fullWidth, left + (this.x + this.width) * width / this.fullWidth, top - (this.y + this.height) * height / this.fullHeight, top - this.y * height / this.fullHeight, this.near, this.far);\n  } else {\n    this.projectionMatrix.makePerspective(fov, this.aspect, this.near, this.far);\n  }\n};\n\nTHREE.PerspectiveCamera.prototype.copy = function (source) {\n  THREE.Camera.prototype.copy.call(this, source);\n  this.focalLength = source.focalLength;\n  this.zoom = source.zoom;\n  this.fov = source.fov;\n  this.aspect = source.aspect;\n  this.near = source.near;\n  this.far = source.far;\n  return this;\n};\n\nTHREE.PerspectiveCamera.prototype.toJSON = function (meta) {\n  var data = THREE.Object3D.prototype.toJSON.call(this, meta);\n  data.object.focalLength = this.focalLength;\n  data.object.zoom = this.zoom;\n  data.object.fov = this.fov;\n  data.object.aspect = this.aspect;\n  data.object.near = this.near;\n  data.object.far = this.far;\n  return data;\n}; // File:src/lights/Light.js\n\n/**\n * @author mrdoob / http://mrdoob.com/\n * @author alteredq / http://alteredqualia.com/\n */\n\n\nTHREE.Light = function (color, intensity) {\n  THREE.Object3D.call(this);\n  this.type = 'Light';\n  this.color = new THREE.Color(color);\n  this.intensity = intensity !== undefined ? intensity : 1;\n  this.receiveShadow = undefined;\n};\n\nTHREE.Light.prototype = Object.create(THREE.Object3D.prototype);\nTHREE.Light.prototype.constructor = THREE.Light;\n\nTHREE.Light.prototype.copy = function (source) {\n  THREE.Object3D.prototype.copy.call(this, source);\n  this.color.copy(source.color);\n  this.intensity = source.intensity;\n  return this;\n};\n\nTHREE.Light.prototype.toJSON = function (meta) {\n  var data = THREE.Object3D.prototype.toJSON.call(this, meta);\n  data.object.color = this.color.getHex();\n  data.object.intensity = this.intensity;\n  if (this.groundColor !== undefined) data.object.groundColor = this.groundColor.getHex();\n  if (this.distance !== undefined) data.object.distance = this.distance;\n  if (this.angle !== undefined) data.object.angle = this.angle;\n  if (this.decay !== undefined) data.object.decay = this.decay;\n  if (this.penumbra !== undefined) data.object.penumbra = this.penumbra;\n  return data;\n}; // File:src/scenes/Scene.js\n\n/**\n * @author mrdoob / http://mrdoob.com/\n */\n\n\nTHREE.Scene = function () {\n  THREE.Object3D.call(this);\n  this.type = 'Scene';\n  this.fog = null;\n  this.overrideMaterial = null;\n  this.autoUpdate = true; // checked by the renderer\n};\n\nTHREE.Scene.prototype = Object.create(THREE.Object3D.prototype);\nTHREE.Scene.prototype.constructor = THREE.Scene;\n\nTHREE.Scene.prototype.copy = function (source, recursive) {\n  THREE.Object3D.prototype.copy.call(this, source, recursive);\n  if (source.fog !== null) this.fog = source.fog.clone();\n  if (source.overrideMaterial !== null) this.overrideMaterial = source.overrideMaterial.clone();\n  this.autoUpdate = source.autoUpdate;\n  this.matrixAutoUpdate = source.matrixAutoUpdate;\n  return this;\n}; // File:src/scenes/FogExp2.js\n\n/**\n * @author mrdoob / http://mrdoob.com/\n * @author alteredq / http://alteredqualia.com/\n */\n\n\nTHREE.FogExp2 = function (color, density) {\n  this.name = '';\n  this.color = new THREE.Color(color);\n  this.density = density !== undefined ? density : 0.00025;\n};\n\nTHREE.FogExp2.prototype.clone = function () {\n  return new THREE.FogExp2(this.color.getHex(), this.density);\n}; // File:src/extras/objects/ImmediateRenderObject.js\n\n/**\n * @author alteredq / http://alteredqualia.com/\n */\n\n\nTHREE.ImmediateRenderObject = function (material) {\n  THREE.Object3D.call(this);\n  this.material = material;\n\n  this.render = function (renderCallback) {};\n};\n\nTHREE.ImmediateRenderObject.prototype = Object.create(THREE.Object3D.prototype);\nTHREE.ImmediateRenderObject.prototype.constructor = THREE.ImmediateRenderObject; // File:src/extras/geometries/SphereBufferGeometry.js\n\n/**\n * @author benaadams / https://twitter.com/ben_a_adams\n * based on THREE.SphereGeometry\n */\n\nTHREE.SphereBufferGeometry = function (radius, widthSegments, heightSegments, phiStart, phiLength, thetaStart, thetaLength) {\n  THREE.BufferGeometry.call(this);\n  this.type = 'SphereBufferGeometry';\n  this.parameters = {\n    radius: radius,\n    widthSegments: widthSegments,\n    heightSegments: heightSegments,\n    phiStart: phiStart,\n    phiLength: phiLength,\n    thetaStart: thetaStart,\n    thetaLength: thetaLength\n  };\n  radius = radius || 50;\n  widthSegments = Math.max(3, Math.floor(widthSegments) || 8);\n  heightSegments = Math.max(2, Math.floor(heightSegments) || 6);\n  phiStart = phiStart !== undefined ? phiStart : 0;\n  phiLength = phiLength !== undefined ? phiLength : Math.PI * 2;\n  thetaStart = thetaStart !== undefined ? thetaStart : 0;\n  thetaLength = thetaLength !== undefined ? thetaLength : Math.PI;\n  var thetaEnd = thetaStart + thetaLength;\n  var vertexCount = (widthSegments + 1) * (heightSegments + 1);\n  var positions = new THREE.BufferAttribute(new Float32Array(vertexCount * 3), 3);\n  var normals = new THREE.BufferAttribute(new Float32Array(vertexCount * 3), 3);\n  var uvs = new THREE.BufferAttribute(new Float32Array(vertexCount * 2), 2);\n  var index = 0,\n      vertices = [],\n      normal = new THREE.Vector3();\n\n  for (var y = 0; y <= heightSegments; y++) {\n    var verticesRow = [];\n    var v = y / heightSegments;\n\n    for (var x = 0; x <= widthSegments; x++) {\n      var u = x / widthSegments;\n      var px = -radius * Math.cos(phiStart + u * phiLength) * Math.sin(thetaStart + v * thetaLength);\n      var py = radius * Math.cos(thetaStart + v * thetaLength);\n      var pz = radius * Math.sin(phiStart + u * phiLength) * Math.sin(thetaStart + v * thetaLength);\n      normal.set(px, py, pz).normalize();\n      positions.setXYZ(index, px, py, pz);\n      normals.setXYZ(index, normal.x, normal.y, normal.z);\n      uvs.setXY(index, u, 1 - v);\n      verticesRow.push(index);\n      index++;\n    }\n\n    vertices.push(verticesRow);\n  }\n\n  var indices = [];\n\n  for (var y = 0; y < heightSegments; y++) {\n    for (var x = 0; x < widthSegments; x++) {\n      var v1 = vertices[y][x + 1];\n      var v2 = vertices[y][x];\n      var v3 = vertices[y + 1][x];\n      var v4 = vertices[y + 1][x + 1];\n      if (y !== 0 || thetaStart > 0) indices.push(v1, v2, v4);\n      if (y !== heightSegments - 1 || thetaEnd < Math.PI) indices.push(v2, v3, v4);\n    }\n  }\n\n  this.setIndex(new (positions.count > 65535 ? THREE.Uint32Attribute : THREE.Uint16Attribute)(indices, 1));\n  this.addAttribute('position', positions);\n  this.addAttribute('normal', normals);\n  this.addAttribute('uv', uvs);\n  this.boundingSphere = new THREE.Sphere(new THREE.Vector3(), radius);\n};\n\nTHREE.SphereBufferGeometry.prototype = Object.create(THREE.BufferGeometry.prototype);\nTHREE.SphereBufferGeometry.prototype.constructor = THREE.SphereBufferGeometry; // File:src/extras/geometries/SphereGeometry.js\n\n/**\n * @author mrdoob / http://mrdoob.com/\n */\n\nTHREE.SphereGeometry = function (radius, widthSegments, heightSegments, phiStart, phiLength, thetaStart, thetaLength) {\n  THREE.Geometry.call(this);\n  this.type = 'SphereGeometry';\n  this.parameters = {\n    radius: radius,\n    widthSegments: widthSegments,\n    heightSegments: heightSegments,\n    phiStart: phiStart,\n    phiLength: phiLength,\n    thetaStart: thetaStart,\n    thetaLength: thetaLength\n  };\n  this.fromBufferGeometry(new THREE.SphereBufferGeometry(radius, widthSegments, heightSegments, phiStart, phiLength, thetaStart, thetaLength));\n};\n\nTHREE.SphereGeometry.prototype = Object.create(THREE.Geometry.prototype);\nTHREE.SphereGeometry.prototype.constructor = THREE.SphereGeometry; // File:src/materials/Material.js\n\n/**\n * @author mrdoob / http://mrdoob.com/\n * @author alteredq / http://alteredqualia.com/\n */\n\nTHREE.Material = function () {\n  Object.defineProperty(this, 'id', {\n    value: THREE.MaterialIdCount++\n  });\n  this.uuid = THREE.Math.generateUUID();\n  this.name = '';\n  this.type = 'Material';\n  this.side = THREE.FrontSide;\n  this.opacity = 1;\n  this.transparent = false;\n  this.blending = THREE.NormalBlending;\n  this.blendSrc = THREE.SrcAlphaFactor;\n  this.blendDst = THREE.OneMinusSrcAlphaFactor;\n  this.blendEquation = THREE.AddEquation;\n  this.blendSrcAlpha = null;\n  this.blendDstAlpha = null;\n  this.blendEquationAlpha = null;\n  this.depthFunc = THREE.LessEqualDepth;\n  this.depthTest = true;\n  this.depthWrite = true;\n  this.colorWrite = true;\n  this.precision = null; // override the renderer's default precision for this material\n\n  this.polygonOffset = false;\n  this.polygonOffsetFactor = 0;\n  this.polygonOffsetUnits = 0;\n  this.alphaTest = 0;\n  this.premultipliedAlpha = false;\n  this.overdraw = 0; // Overdrawn pixels (typically between 0 and 1) for fixing antialiasing gaps in CanvasRenderer\n\n  this.visible = true;\n  this._needsUpdate = true;\n};\n\nTHREE.Material.prototype = {\n  constructor: THREE.Material,\n\n  get needsUpdate() {\n    return this._needsUpdate;\n  },\n\n  set needsUpdate(value) {\n    if (value === true) this.update();\n    this._needsUpdate = value;\n  },\n\n  setValues: function (values) {\n    if (values === undefined) return;\n\n    for (var key in values) {\n      var newValue = values[key];\n\n      if (newValue === undefined) {\n        continue;\n      }\n\n      var currentValue = this[key];\n\n      if (currentValue === undefined) {\n        continue;\n      }\n\n      if (currentValue instanceof THREE.Color) {\n        currentValue.set(newValue);\n      } else if (currentValue instanceof THREE.Vector3 && newValue instanceof THREE.Vector3) {\n        currentValue.copy(newValue);\n      } else if (key === 'overdraw') {\n        // ensure overdraw is backwards-compatible with legacy boolean type\n        this[key] = Number(newValue);\n      } else {\n        this[key] = newValue;\n      }\n    }\n  },\n  toJSON: function (meta) {\n    var isRoot = meta === undefined;\n\n    if (isRoot) {\n      meta = {\n        textures: {},\n        images: {}\n      };\n    }\n\n    var data = {\n      metadata: {\n        version: 4.4,\n        type: 'Material',\n        generator: 'Material.toJSON'\n      }\n    }; // standard Material serialization\n\n    data.uuid = this.uuid;\n    data.type = this.type;\n    if (this.name !== '') data.name = this.name;\n    if (this.color instanceof THREE.Color) data.color = this.color.getHex();\n    if (this.roughness !== 0.5) data.roughness = this.roughness;\n    if (this.metalness !== 0.5) data.metalness = this.metalness;\n    if (this.emissive instanceof THREE.Color) data.emissive = this.emissive.getHex();\n    if (this.specular instanceof THREE.Color) data.specular = this.specular.getHex();\n    if (this.shininess !== undefined) data.shininess = this.shininess;\n    if (this.map instanceof THREE.Texture) data.map = this.map.toJSON(meta).uuid;\n    if (this.alphaMap instanceof THREE.Texture) data.alphaMap = this.alphaMap.toJSON(meta).uuid;\n    if (this.lightMap instanceof THREE.Texture) data.lightMap = this.lightMap.toJSON(meta).uuid;\n\n    if (this.bumpMap instanceof THREE.Texture) {\n      data.bumpMap = this.bumpMap.toJSON(meta).uuid;\n      data.bumpScale = this.bumpScale;\n    }\n\n    if (this.normalMap instanceof THREE.Texture) {\n      data.normalMap = this.normalMap.toJSON(meta).uuid;\n      data.normalScale = this.normalScale.toArray();\n    }\n\n    if (this.displacementMap instanceof THREE.Texture) {\n      data.displacementMap = this.displacementMap.toJSON(meta).uuid;\n      data.displacementScale = this.displacementScale;\n      data.displacementBias = this.displacementBias;\n    }\n\n    if (this.roughnessMap instanceof THREE.Texture) data.roughnessMap = this.roughnessMap.toJSON(meta).uuid;\n    if (this.metalnessMap instanceof THREE.Texture) data.metalnessMap = this.metalnessMap.toJSON(meta).uuid;\n    if (this.emissiveMap instanceof THREE.Texture) data.emissiveMap = this.emissiveMap.toJSON(meta).uuid;\n    if (this.specularMap instanceof THREE.Texture) data.specularMap = this.specularMap.toJSON(meta).uuid;\n\n    if (this.envMap instanceof THREE.Texture) {\n      data.envMap = this.envMap.toJSON(meta).uuid;\n      data.reflectivity = this.reflectivity; // Scale behind envMap\n    }\n\n    if (this.size !== undefined) data.size = this.size;\n    if (this.sizeAttenuation !== undefined) data.sizeAttenuation = this.sizeAttenuation;\n    if (this.vertexColors !== undefined && this.vertexColors !== THREE.NoColors) data.vertexColors = this.vertexColors;\n    if (this.shading !== undefined && this.shading !== THREE.SmoothShading) data.shading = this.shading;\n    if (this.blending !== undefined && this.blending !== THREE.NormalBlending) data.blending = this.blending;\n    if (this.side !== undefined && this.side !== THREE.FrontSide) data.side = this.side;\n    if (this.opacity < 1) data.opacity = this.opacity;\n    if (this.transparent === true) data.transparent = this.transparent;\n    if (this.alphaTest > 0) data.alphaTest = this.alphaTest;\n    if (this.premultipliedAlpha === true) data.premultipliedAlpha = this.premultipliedAlpha;\n    if (this.wireframe === true) data.wireframe = this.wireframe;\n    if (this.wireframeLinewidth > 1) data.wireframeLinewidth = this.wireframeLinewidth; // TODO: Copied from Object3D.toJSON\n\n    function extractFromCache(cache) {\n      var values = [];\n\n      for (var key in cache) {\n        var data = cache[key];\n        delete data.metadata;\n        values.push(data);\n      }\n\n      return values;\n    }\n\n    if (isRoot) {\n      var textures = extractFromCache(meta.textures);\n      var images = extractFromCache(meta.images);\n      if (textures.length > 0) data.textures = textures;\n      if (images.length > 0) data.images = images;\n    }\n\n    return data;\n  },\n  clone: function () {\n    return new this.constructor().copy(this);\n  },\n  copy: function (source) {\n    this.name = source.name;\n    this.side = source.side;\n    this.opacity = source.opacity;\n    this.transparent = source.transparent;\n    this.blending = source.blending;\n    this.blendSrc = source.blendSrc;\n    this.blendDst = source.blendDst;\n    this.blendEquation = source.blendEquation;\n    this.blendSrcAlpha = source.blendSrcAlpha;\n    this.blendDstAlpha = source.blendDstAlpha;\n    this.blendEquationAlpha = source.blendEquationAlpha;\n    this.depthFunc = source.depthFunc;\n    this.depthTest = source.depthTest;\n    this.depthWrite = source.depthWrite;\n    this.colorWrite = source.colorWrite;\n    this.precision = source.precision;\n    this.polygonOffset = source.polygonOffset;\n    this.polygonOffsetFactor = source.polygonOffsetFactor;\n    this.polygonOffsetUnits = source.polygonOffsetUnits;\n    this.alphaTest = source.alphaTest;\n    this.premultipliedAlpha = source.premultipliedAlpha;\n    this.overdraw = source.overdraw;\n    this.visible = source.visible;\n    return this;\n  },\n  update: function () {\n    this.dispatchEvent({\n      type: 'update'\n    });\n  },\n  dispose: function () {\n    this.dispatchEvent({\n      type: 'dispose'\n    });\n  }\n};\nTHREE.EventDispatcher.prototype.apply(THREE.Material.prototype);\nTHREE.MaterialIdCount = 0; // File:src/materials/LineBasicMaterial.js\n\n/**\n * @author mrdoob / http://mrdoob.com/\n * @author alteredq / http://alteredqualia.com/\n *\n * parameters = {\n *  color: <hex>,\n *  opacity: <float>,\n *\n *  linewidth: <float>,\n *  linecap: \"round\",\n *  linejoin: \"round\",\n *\n *  blending: THREE.NormalBlending,\n *  depthTest: <bool>,\n *  depthWrite: <bool>,\n *\n *  vertexColors: <bool>\n *\n *  fog: <bool>\n * }\n */\n\nTHREE.LineBasicMaterial = function (parameters) {\n  THREE.Material.call(this);\n  this.type = 'LineBasicMaterial';\n  this.color = new THREE.Color(0xffffff);\n  this.linewidth = 1;\n  this.linecap = 'round';\n  this.linejoin = 'round';\n  this.blending = THREE.NormalBlending;\n  this.vertexColors = THREE.NoColors;\n  this.fog = true;\n  this.setValues(parameters);\n};\n\nTHREE.LineBasicMaterial.prototype = Object.create(THREE.Material.prototype);\nTHREE.LineBasicMaterial.prototype.constructor = THREE.LineBasicMaterial;\n\nTHREE.LineBasicMaterial.prototype.copy = function (source) {\n  THREE.Material.prototype.copy.call(this, source);\n  this.color.copy(source.color);\n  this.linewidth = source.linewidth;\n  this.linecap = source.linecap;\n  this.linejoin = source.linejoin;\n  this.vertexColors = source.vertexColors;\n  this.fog = source.fog;\n  return this;\n}; // File:src/materials/LineDashedMaterial.js\n\n/**\n * @author alteredq / http://alteredqualia.com/\n *\n * parameters = {\n *  color: <hex>,\n *  opacity: <float>,\n *\n *  linewidth: <float>,\n *\n *  scale: <float>,\n *  dashSize: <float>,\n *  gapSize: <float>,\n *\n *  blending: THREE.NormalBlending,\n *  depthTest: <bool>,\n *  depthWrite: <bool>,\n *\n *  vertexColors: THREE.NoColors / THREE.FaceColors / THREE.VertexColors\n *\n *  fog: <bool>\n * }\n */\n\n\nTHREE.LineDashedMaterial = function (parameters) {\n  THREE.Material.call(this);\n  this.type = 'LineDashedMaterial';\n  this.color = new THREE.Color(0xffffff);\n  this.linewidth = 1;\n  this.scale = 1;\n  this.dashSize = 3;\n  this.gapSize = 1;\n  this.blending = THREE.NormalBlending;\n  this.vertexColors = THREE.NoColors;\n  this.fog = true;\n  this.setValues(parameters);\n};\n\nTHREE.LineDashedMaterial.prototype = Object.create(THREE.Material.prototype);\nTHREE.LineDashedMaterial.prototype.constructor = THREE.LineDashedMaterial;\n\nTHREE.LineDashedMaterial.prototype.copy = function (source) {\n  THREE.Material.prototype.copy.call(this, source);\n  this.color.copy(source.color);\n  this.linewidth = source.linewidth;\n  this.scale = source.scale;\n  this.dashSize = source.dashSize;\n  this.gapSize = source.gapSize;\n  this.vertexColors = source.vertexColors;\n  this.fog = source.fog;\n  return this;\n}; // File:src/materials/PointsMaterial.js\n\n/**\n * @author mrdoob / http://mrdoob.com/\n * @author alteredq / http://alteredqualia.com/\n *\n * parameters = {\n *  color: <hex>,\n *  opacity: <float>,\n *  map: new THREE.Texture( <Image> ),\n *\n *  size: <float>,\n *  sizeAttenuation: <bool>,\n *\n *  blending: THREE.NormalBlending,\n *  depthTest: <bool>,\n *  depthWrite: <bool>,\n *\n *  vertexColors: <bool>,\n *\n *  fog: <bool>\n * }\n */\n\n\nTHREE.PointsMaterial = function (parameters) {\n  THREE.Material.call(this);\n  this.type = 'PointsMaterial';\n  this.color = new THREE.Color(0xffffff);\n  this.map = null;\n  this.size = 1;\n  this.sizeAttenuation = true;\n  this.blending = THREE.NormalBlending;\n  this.vertexColors = THREE.NoColors;\n  this.fog = true;\n  this.setValues(parameters);\n};\n\nTHREE.PointsMaterial.prototype = Object.create(THREE.Material.prototype);\nTHREE.PointsMaterial.prototype.constructor = THREE.PointsMaterial;\n\nTHREE.PointsMaterial.prototype.copy = function (source) {\n  THREE.Material.prototype.copy.call(this, source);\n  this.color.copy(source.color);\n  this.map = source.map;\n  this.size = source.size;\n  this.sizeAttenuation = source.sizeAttenuation;\n  this.vertexColors = source.vertexColors;\n  this.fog = source.fog;\n  return this;\n}; // File:src/materials/MeshDepthMaterial.js\n\n/**\n * @author mrdoob / http://mrdoob.com/\n * @author alteredq / http://alteredqualia.com/\n *\n * parameters = {\n *  opacity: <float>,\n *\n *  wireframe: <boolean>,\n *  wireframeLinewidth: <float>\n * }\n */\n\n\nTHREE.MeshDepthMaterial = function (parameters) {\n  THREE.Material.call(this);\n  this.type = 'MeshDepthMaterial';\n  this.morphTargets = false;\n  this.wireframe = false;\n  this.wireframeLinewidth = 1;\n  this.setValues(parameters);\n};\n\nTHREE.MeshDepthMaterial.prototype = Object.create(THREE.Material.prototype);\nTHREE.MeshDepthMaterial.prototype.constructor = THREE.MeshDepthMaterial;\n\nTHREE.MeshDepthMaterial.prototype.copy = function (source) {\n  THREE.Material.prototype.copy.call(this, source);\n  this.wireframe = source.wireframe;\n  this.wireframeLinewidth = source.wireframeLinewidth;\n  return this;\n}; // File:src/materials/MeshNormalMaterial.js\n\n/**\n * @author mrdoob / http://mrdoob.com/\n *\n * parameters = {\n *  opacity: <float>,\n *\n *  wireframe: <boolean>,\n *  wireframeLinewidth: <float>\n * }\n */\n\n\nTHREE.MeshNormalMaterial = function (parameters) {\n  THREE.Material.call(this, parameters);\n  this.type = 'MeshNormalMaterial';\n  this.wireframe = false;\n  this.wireframeLinewidth = 1;\n  this.morphTargets = false;\n  this.setValues(parameters);\n};\n\nTHREE.MeshNormalMaterial.prototype = Object.create(THREE.Material.prototype);\nTHREE.MeshNormalMaterial.prototype.constructor = THREE.MeshNormalMaterial;\n\nTHREE.MeshNormalMaterial.prototype.copy = function (source) {\n  THREE.Material.prototype.copy.call(this, source);\n  this.wireframe = source.wireframe;\n  this.wireframeLinewidth = source.wireframeLinewidth;\n  return this;\n}; // File:src/materials/ShaderMaterial.js\n\n/**\n * @author alteredq / http://alteredqualia.com/\n *\n * parameters = {\n *  defines: { \"label\" : \"value\" },\n *  uniforms: { \"parameter1\": { type: \"f\", value: 1.0 }, \"parameter2\": { type: \"i\" value2: 2 } },\n *\n *  fragmentShader: <string>,\n *  vertexShader: <string>,\n *\n *  shading: THREE.SmoothShading,\n *\n *  wireframe: <boolean>,\n *  wireframeLinewidth: <float>,\n *\n *  lights: <bool>,\n *\n *  vertexColors: THREE.NoColors / THREE.VertexColors / THREE.FaceColors,\n *\n *  skinning: <bool>,\n *  morphTargets: <bool>,\n *  morphNormals: <bool>,\n *\n *\tfog: <bool>\n * }\n */\n\n\nTHREE.ShaderMaterial = function (parameters) {\n  THREE.Material.call(this);\n  this.type = 'ShaderMaterial';\n  this.defines = {};\n  this.uniforms = {};\n  this.vertexShader = 'void main() {\\n\\tgl_Position = projectionMatrix * modelViewMatrix * vec4( position, 1.0 );\\n}';\n  this.fragmentShader = 'void main() {\\n\\tgl_FragColor = vec4( 1.0, 0.0, 0.0, 1.0 );\\n}';\n  this.shading = THREE.SmoothShading;\n  this.linewidth = 1;\n  this.wireframe = false;\n  this.wireframeLinewidth = 1;\n  this.fog = false; // set to use scene fog\n\n  this.lights = false; // set to use scene lights\n\n  this.vertexColors = THREE.NoColors; // set to use \"color\" attribute stream\n\n  this.skinning = false; // set to use skinning attribute streams\n\n  this.morphTargets = false; // set to use morph targets\n\n  this.morphNormals = false; // set to use morph normals\n\n  this.extensions = {\n    derivatives: false,\n    // set to use derivatives\n    fragDepth: false,\n    // set to use fragment depth values\n    drawBuffers: false,\n    // set to use draw buffers\n    shaderTextureLOD: false // set to use shader texture LOD\n\n  }; // When rendered geometry doesn't include these attributes but the material does,\n  // use these default values in WebGL. This avoids errors when buffer data is missing.\n\n  this.defaultAttributeValues = {\n    'color': [1, 1, 1],\n    'uv': [0, 0],\n    'uv2': [0, 0]\n  };\n  this.index0AttributeName = undefined;\n\n  if (parameters !== undefined) {\n    if (parameters.attributes !== undefined) ;\n\n    this.setValues(parameters);\n  }\n};\n\nTHREE.ShaderMaterial.prototype = Object.create(THREE.Material.prototype);\nTHREE.ShaderMaterial.prototype.constructor = THREE.ShaderMaterial;\n\nTHREE.ShaderMaterial.prototype.copy = function (source) {\n  THREE.Material.prototype.copy.call(this, source);\n  this.fragmentShader = source.fragmentShader;\n  this.vertexShader = source.vertexShader;\n  this.uniforms = THREE.UniformsUtils.clone(source.uniforms);\n  this.defines = source.defines;\n  this.shading = source.shading;\n  this.wireframe = source.wireframe;\n  this.wireframeLinewidth = source.wireframeLinewidth;\n  this.fog = source.fog;\n  this.lights = source.lights;\n  this.vertexColors = source.vertexColors;\n  this.skinning = source.skinning;\n  this.morphTargets = source.morphTargets;\n  this.morphNormals = source.morphNormals;\n  this.extensions = source.extensions;\n  return this;\n};\n\nTHREE.ShaderMaterial.prototype.toJSON = function (meta) {\n  var data = THREE.Material.prototype.toJSON.call(this, meta);\n  data.uniforms = this.uniforms;\n  data.vertexShader = this.vertexShader;\n  data.fragmentShader = this.fragmentShader;\n  return data;\n}; // File:src/materials/MeshBasicMaterial.js\n\n/**\n * @author mrdoob / http://mrdoob.com/\n * @author alteredq / http://alteredqualia.com/\n *\n * parameters = {\n *  color: <hex>,\n *  opacity: <float>,\n *  map: new THREE.Texture( <Image> ),\n *\n *  aoMap: new THREE.Texture( <Image> ),\n *  aoMapIntensity: <float>\n *\n *  specularMap: new THREE.Texture( <Image> ),\n *\n *  alphaMap: new THREE.Texture( <Image> ),\n *\n *  envMap: new THREE.TextureCube( [posx, negx, posy, negy, posz, negz] ),\n *  combine: THREE.Multiply,\n *  reflectivity: <float>,\n *  refractionRatio: <float>,\n *\n *  shading: THREE.SmoothShading,\n *  blending: THREE.NormalBlending,\n *  depthTest: <bool>,\n *  depthWrite: <bool>,\n *\n *  wireframe: <boolean>,\n *  wireframeLinewidth: <float>,\n *\n *  vertexColors: THREE.NoColors / THREE.VertexColors / THREE.FaceColors,\n *\n *  skinning: <bool>,\n *  morphTargets: <bool>,\n *\n *  fog: <bool>\n * }\n */\n\n\nTHREE.MeshBasicMaterial = function (parameters) {\n  THREE.Material.call(this);\n  this.type = 'MeshBasicMaterial';\n  this.color = new THREE.Color(0xffffff); // emissive\n\n  this.map = null;\n  this.aoMap = null;\n  this.aoMapIntensity = 1.0;\n  this.specularMap = null;\n  this.alphaMap = null;\n  this.envMap = null;\n  this.combine = THREE.MultiplyOperation;\n  this.reflectivity = 1;\n  this.refractionRatio = 0.98;\n  this.fog = true;\n  this.shading = THREE.SmoothShading;\n  this.blending = THREE.NormalBlending;\n  this.wireframe = false;\n  this.wireframeLinewidth = 1;\n  this.wireframeLinecap = 'round';\n  this.wireframeLinejoin = 'round';\n  this.vertexColors = THREE.NoColors;\n  this.skinning = false;\n  this.morphTargets = false;\n  this.setValues(parameters);\n};\n\nTHREE.MeshBasicMaterial.prototype = Object.create(THREE.Material.prototype);\nTHREE.MeshBasicMaterial.prototype.constructor = THREE.MeshBasicMaterial;\n\nTHREE.MeshBasicMaterial.prototype.copy = function (source) {\n  THREE.Material.prototype.copy.call(this, source);\n  this.color.copy(source.color);\n  this.map = source.map;\n  this.aoMap = source.aoMap;\n  this.aoMapIntensity = source.aoMapIntensity;\n  this.specularMap = source.specularMap;\n  this.alphaMap = source.alphaMap;\n  this.envMap = source.envMap;\n  this.combine = source.combine;\n  this.reflectivity = source.reflectivity;\n  this.refractionRatio = source.refractionRatio;\n  this.fog = source.fog;\n  this.shading = source.shading;\n  this.wireframe = source.wireframe;\n  this.wireframeLinewidth = source.wireframeLinewidth;\n  this.wireframeLinecap = source.wireframeLinecap;\n  this.wireframeLinejoin = source.wireframeLinejoin;\n  this.vertexColors = source.vertexColors;\n  this.skinning = source.skinning;\n  this.morphTargets = source.morphTargets;\n  return this;\n}; // File:src/materials/MeshLambertMaterial.js\n\n/**\n * @author mrdoob / http://mrdoob.com/\n * @author alteredq / http://alteredqualia.com/\n *\n * parameters = {\n *  color: <hex>,\n *  opacity: <float>,\n *\n *  map: new THREE.Texture( <Image> ),\n *\n *  lightMap: new THREE.Texture( <Image> ),\n *  lightMapIntensity: <float>\n *\n *  aoMap: new THREE.Texture( <Image> ),\n *  aoMapIntensity: <float>\n *\n *  emissive: <hex>,\n *  emissiveIntensity: <float>\n *  emissiveMap: new THREE.Texture( <Image> ),\n *\n *  specularMap: new THREE.Texture( <Image> ),\n *\n *  alphaMap: new THREE.Texture( <Image> ),\n *\n *  envMap: new THREE.TextureCube( [posx, negx, posy, negy, posz, negz] ),\n *  combine: THREE.Multiply,\n *  reflectivity: <float>,\n *  refractionRatio: <float>,\n *\n *  blending: THREE.NormalBlending,\n *  depthTest: <bool>,\n *  depthWrite: <bool>,\n *\n *  wireframe: <boolean>,\n *  wireframeLinewidth: <float>,\n *\n *  vertexColors: THREE.NoColors / THREE.VertexColors / THREE.FaceColors,\n *\n *  skinning: <bool>,\n *  morphTargets: <bool>,\n *  morphNormals: <bool>,\n *\n *\tfog: <bool>\n * }\n */\n\n\nTHREE.MeshLambertMaterial = function (parameters) {\n  THREE.Material.call(this);\n  this.type = 'MeshLambertMaterial';\n  this.color = new THREE.Color(0xffffff); // diffuse\n\n  this.map = null;\n  this.lightMap = null;\n  this.lightMapIntensity = 1.0;\n  this.aoMap = null;\n  this.aoMapIntensity = 1.0;\n  this.emissive = new THREE.Color(0x000000);\n  this.emissiveIntensity = 1.0;\n  this.emissiveMap = null;\n  this.specularMap = null;\n  this.alphaMap = null;\n  this.envMap = null;\n  this.combine = THREE.MultiplyOperation;\n  this.reflectivity = 1;\n  this.refractionRatio = 0.98;\n  this.fog = true;\n  this.blending = THREE.NormalBlending;\n  this.wireframe = false;\n  this.wireframeLinewidth = 1;\n  this.wireframeLinecap = 'round';\n  this.wireframeLinejoin = 'round';\n  this.vertexColors = THREE.NoColors;\n  this.skinning = false;\n  this.morphTargets = false;\n  this.morphNormals = false;\n  this.setValues(parameters);\n};\n\nTHREE.MeshLambertMaterial.prototype = Object.create(THREE.Material.prototype);\nTHREE.MeshLambertMaterial.prototype.constructor = THREE.MeshLambertMaterial;\n\nTHREE.MeshLambertMaterial.prototype.copy = function (source) {\n  THREE.Material.prototype.copy.call(this, source);\n  this.color.copy(source.color);\n  this.map = source.map;\n  this.lightMap = source.lightMap;\n  this.lightMapIntensity = source.lightMapIntensity;\n  this.aoMap = source.aoMap;\n  this.aoMapIntensity = source.aoMapIntensity;\n  this.emissive.copy(source.emissive);\n  this.emissiveMap = source.emissiveMap;\n  this.emissiveIntensity = source.emissiveIntensity;\n  this.specularMap = source.specularMap;\n  this.alphaMap = source.alphaMap;\n  this.envMap = source.envMap;\n  this.combine = source.combine;\n  this.reflectivity = source.reflectivity;\n  this.refractionRatio = source.refractionRatio;\n  this.fog = source.fog;\n  this.wireframe = source.wireframe;\n  this.wireframeLinewidth = source.wireframeLinewidth;\n  this.wireframeLinecap = source.wireframeLinecap;\n  this.wireframeLinejoin = source.wireframeLinejoin;\n  this.vertexColors = source.vertexColors;\n  this.skinning = source.skinning;\n  this.morphTargets = source.morphTargets;\n  this.morphNormals = source.morphNormals;\n  return this;\n}; // File:src/materials/MeshStandardMaterial.js\n\n/**\n * @author WestLangley / http://github.com/WestLangley\n *\n * parameters = {\n *  color: <hex>,\n *  roughness: <float>,\n *  metalness: <float>,\n *  opacity: <float>,\n *\n *  map: new THREE.Texture( <Image> ),\n *\n *  lightMap: new THREE.Texture( <Image> ),\n *  lightMapIntensity: <float>\n *\n *  aoMap: new THREE.Texture( <Image> ),\n *  aoMapIntensity: <float>\n *\n *  emissive: <hex>,\n *  emissiveIntensity: <float>\n *  emissiveMap: new THREE.Texture( <Image> ),\n *\n *  bumpMap: new THREE.Texture( <Image> ),\n *  bumpScale: <float>,\n *\n *  normalMap: new THREE.Texture( <Image> ),\n *  normalScale: <Vector2>,\n *\n *  displacementMap: new THREE.Texture( <Image> ),\n *  displacementScale: <float>,\n *  displacementBias: <float>,\n *\n *  roughnessMap: new THREE.Texture( <Image> ),\n *\n *  metalnessMap: new THREE.Texture( <Image> ),\n *\n *  alphaMap: new THREE.Texture( <Image> ),\n *\n *  envMap: new THREE.CubeTexture( [posx, negx, posy, negy, posz, negz] ),\n *  envMapIntensity: <float>\n *\n *  refractionRatio: <float>,\n *\n *  shading: THREE.SmoothShading,\n *  blending: THREE.NormalBlending,\n *  depthTest: <bool>,\n *  depthWrite: <bool>,\n *\n *  wireframe: <boolean>,\n *  wireframeLinewidth: <float>,\n *\n *  vertexColors: THREE.NoColors / THREE.VertexColors / THREE.FaceColors,\n *\n *  skinning: <bool>,\n *  morphTargets: <bool>,\n *  morphNormals: <bool>,\n *\n *\tfog: <bool>\n * }\n */\n\n\nTHREE.MeshStandardMaterial = function (parameters) {\n  THREE.Material.call(this);\n  this.type = 'MeshStandardMaterial';\n  this.color = new THREE.Color(0xffffff); // diffuse\n\n  this.roughness = 0.5;\n  this.metalness = 0.5;\n  this.map = null;\n  this.lightMap = null;\n  this.lightMapIntensity = 1.0;\n  this.aoMap = null;\n  this.aoMapIntensity = 1.0;\n  this.emissive = new THREE.Color(0x000000);\n  this.emissiveIntensity = 1.0;\n  this.emissiveMap = null;\n  this.bumpMap = null;\n  this.bumpScale = 1;\n  this.normalMap = null;\n  this.normalScale = new THREE.Vector2(1, 1);\n  this.displacementMap = null;\n  this.displacementScale = 1;\n  this.displacementBias = 0;\n  this.roughnessMap = null;\n  this.metalnessMap = null;\n  this.alphaMap = null;\n  this.envMap = null;\n  this.envMapIntensity = 1.0;\n  this.refractionRatio = 0.98;\n  this.fog = true;\n  this.shading = THREE.SmoothShading;\n  this.blending = THREE.NormalBlending;\n  this.wireframe = false;\n  this.wireframeLinewidth = 1;\n  this.wireframeLinecap = 'round';\n  this.wireframeLinejoin = 'round';\n  this.vertexColors = THREE.NoColors;\n  this.skinning = false;\n  this.morphTargets = false;\n  this.morphNormals = false;\n  this.setValues(parameters);\n};\n\nTHREE.MeshStandardMaterial.prototype = Object.create(THREE.Material.prototype);\nTHREE.MeshStandardMaterial.prototype.constructor = THREE.MeshStandardMaterial;\n\nTHREE.MeshStandardMaterial.prototype.copy = function (source) {\n  THREE.Material.prototype.copy.call(this, source);\n  this.color.copy(source.color);\n  this.roughness = source.roughness;\n  this.metalness = source.metalness;\n  this.map = source.map;\n  this.lightMap = source.lightMap;\n  this.lightMapIntensity = source.lightMapIntensity;\n  this.aoMap = source.aoMap;\n  this.aoMapIntensity = source.aoMapIntensity;\n  this.emissive.copy(source.emissive);\n  this.emissiveMap = source.emissiveMap;\n  this.emissiveIntensity = source.emissiveIntensity;\n  this.bumpMap = source.bumpMap;\n  this.bumpScale = source.bumpScale;\n  this.normalMap = source.normalMap;\n  this.normalScale.copy(source.normalScale);\n  this.displacementMap = source.displacementMap;\n  this.displacementScale = source.displacementScale;\n  this.displacementBias = source.displacementBias;\n  this.roughnessMap = source.roughnessMap;\n  this.metalnessMap = source.metalnessMap;\n  this.alphaMap = source.alphaMap;\n  this.envMap = source.envMap;\n  this.envMapIntensity = source.envMapIntensity;\n  this.refractionRatio = source.refractionRatio;\n  this.fog = source.fog;\n  this.shading = source.shading;\n  this.wireframe = source.wireframe;\n  this.wireframeLinewidth = source.wireframeLinewidth;\n  this.wireframeLinecap = source.wireframeLinecap;\n  this.wireframeLinejoin = source.wireframeLinejoin;\n  this.vertexColors = source.vertexColors;\n  this.skinning = source.skinning;\n  this.morphTargets = source.morphTargets;\n  this.morphNormals = source.morphNormals;\n  return this;\n}; // File:src/materials/MeshPhongMaterial.js\n\n/**\n * @author mrdoob / http://mrdoob.com/\n * @author alteredq / http://alteredqualia.com/\n *\n * parameters = {\n *  color: <hex>,\n *  specular: <hex>,\n *  shininess: <float>,\n *  opacity: <float>,\n *\n *  map: new THREE.Texture( <Image> ),\n *\n *  lightMap: new THREE.Texture( <Image> ),\n *  lightMapIntensity: <float>\n *\n *  aoMap: new THREE.Texture( <Image> ),\n *  aoMapIntensity: <float>\n *\n *  emissive: <hex>,\n *  emissiveIntensity: <float>\n *  emissiveMap: new THREE.Texture( <Image> ),\n *\n *  bumpMap: new THREE.Texture( <Image> ),\n *  bumpScale: <float>,\n *\n *  normalMap: new THREE.Texture( <Image> ),\n *  normalScale: <Vector2>,\n *\n *  displacementMap: new THREE.Texture( <Image> ),\n *  displacementScale: <float>,\n *  displacementBias: <float>,\n *\n *  specularMap: new THREE.Texture( <Image> ),\n *\n *  alphaMap: new THREE.Texture( <Image> ),\n *\n *  envMap: new THREE.TextureCube( [posx, negx, posy, negy, posz, negz] ),\n *  combine: THREE.Multiply,\n *  reflectivity: <float>,\n *  refractionRatio: <float>,\n *\n *  shading: THREE.SmoothShading,\n *  blending: THREE.NormalBlending,\n *  depthTest: <bool>,\n *  depthWrite: <bool>,\n *\n *  wireframe: <boolean>,\n *  wireframeLinewidth: <float>,\n *\n *  vertexColors: THREE.NoColors / THREE.VertexColors / THREE.FaceColors,\n *\n *  skinning: <bool>,\n *  morphTargets: <bool>,\n *  morphNormals: <bool>,\n *\n *\tfog: <bool>\n * }\n */\n\n\nTHREE.MeshPhongMaterial = function (parameters) {\n  THREE.Material.call(this);\n  this.type = 'MeshPhongMaterial';\n  this.color = new THREE.Color(0xffffff); // diffuse\n\n  this.specular = new THREE.Color(0x111111);\n  this.shininess = 30;\n  this.map = null;\n  this.lightMap = null;\n  this.lightMapIntensity = 1.0;\n  this.aoMap = null;\n  this.aoMapIntensity = 1.0;\n  this.emissive = new THREE.Color(0x000000);\n  this.emissiveIntensity = 1.0;\n  this.emissiveMap = null;\n  this.bumpMap = null;\n  this.bumpScale = 1;\n  this.normalMap = null;\n  this.normalScale = new THREE.Vector2(1, 1);\n  this.displacementMap = null;\n  this.displacementScale = 1;\n  this.displacementBias = 0;\n  this.specularMap = null;\n  this.alphaMap = null;\n  this.envMap = null;\n  this.combine = THREE.MultiplyOperation;\n  this.reflectivity = 1;\n  this.refractionRatio = 0.98;\n  this.fog = true;\n  this.shading = THREE.SmoothShading;\n  this.blending = THREE.NormalBlending;\n  this.wireframe = false;\n  this.wireframeLinewidth = 1;\n  this.wireframeLinecap = 'round';\n  this.wireframeLinejoin = 'round';\n  this.vertexColors = THREE.NoColors;\n  this.skinning = false;\n  this.morphTargets = false;\n  this.morphNormals = false;\n  this.setValues(parameters);\n};\n\nTHREE.MeshPhongMaterial.prototype = Object.create(THREE.Material.prototype);\nTHREE.MeshPhongMaterial.prototype.constructor = THREE.MeshPhongMaterial;\n\nTHREE.MeshPhongMaterial.prototype.copy = function (source) {\n  THREE.Material.prototype.copy.call(this, source);\n  this.color.copy(source.color);\n  this.specular.copy(source.specular);\n  this.shininess = source.shininess;\n  this.map = source.map;\n  this.lightMap = source.lightMap;\n  this.lightMapIntensity = source.lightMapIntensity;\n  this.aoMap = source.aoMap;\n  this.aoMapIntensity = source.aoMapIntensity;\n  this.emissive.copy(source.emissive);\n  this.emissiveMap = source.emissiveMap;\n  this.emissiveIntensity = source.emissiveIntensity;\n  this.bumpMap = source.bumpMap;\n  this.bumpScale = source.bumpScale;\n  this.normalMap = source.normalMap;\n  this.normalScale.copy(source.normalScale);\n  this.displacementMap = source.displacementMap;\n  this.displacementScale = source.displacementScale;\n  this.displacementBias = source.displacementBias;\n  this.specularMap = source.specularMap;\n  this.alphaMap = source.alphaMap;\n  this.envMap = source.envMap;\n  this.combine = source.combine;\n  this.reflectivity = source.reflectivity;\n  this.refractionRatio = source.refractionRatio;\n  this.fog = source.fog;\n  this.shading = source.shading;\n  this.wireframe = source.wireframe;\n  this.wireframeLinewidth = source.wireframeLinewidth;\n  this.wireframeLinecap = source.wireframeLinecap;\n  this.wireframeLinejoin = source.wireframeLinejoin;\n  this.vertexColors = source.vertexColors;\n  this.skinning = source.skinning;\n  this.morphTargets = source.morphTargets;\n  this.morphNormals = source.morphNormals;\n  return this;\n}; // File:src/materials/MultiMaterial.js\n\n/**\n * @author mrdoob / http://mrdoob.com/\n */\n\n\nTHREE.MultiMaterial = function (materials) {\n  this.uuid = THREE.Math.generateUUID();\n  this.type = 'MultiMaterial';\n  this.materials = materials instanceof Array ? materials : [];\n  this.visible = true;\n};\n\nTHREE.MultiMaterial.prototype = {\n  constructor: THREE.MultiMaterial,\n  toJSON: function (meta) {\n    var output = {\n      metadata: {\n        version: 4.2,\n        type: 'material',\n        generator: 'MaterialExporter'\n      },\n      uuid: this.uuid,\n      type: this.type,\n      materials: []\n    };\n    var materials = this.materials;\n\n    for (var i = 0, l = materials.length; i < l; i++) {\n      var material = materials[i].toJSON(meta);\n      delete material.metadata;\n      output.materials.push(material);\n    }\n\n    output.visible = this.visible;\n    return output;\n  },\n  clone: function () {\n    var material = new this.constructor();\n\n    for (var i = 0; i < this.materials.length; i++) {\n      material.materials.push(this.materials[i].clone());\n    }\n\n    material.visible = this.visible;\n    return material;\n  }\n}; // File:src/materials/RawShaderMaterial.js\n\n/**\n * @author mrdoob / http://mrdoob.com/\n */\n\nTHREE.RawShaderMaterial = function (parameters) {\n  THREE.ShaderMaterial.call(this, parameters);\n  this.type = 'RawShaderMaterial';\n};\n\nTHREE.RawShaderMaterial.prototype = Object.create(THREE.ShaderMaterial.prototype);\nTHREE.RawShaderMaterial.prototype.constructor = THREE.RawShaderMaterial; // File:src/textures/Texture.js\n\n/**\n * @author mrdoob / http://mrdoob.com/\n * @author alteredq / http://alteredqualia.com/\n * @author szimek / https://github.com/szimek/\n */\n\nTHREE.Texture = function (image, mapping, wrapS, wrapT, magFilter, minFilter, format, type, anisotropy) {\n  Object.defineProperty(this, 'id', {\n    value: THREE.TextureIdCount++\n  });\n  this.uuid = THREE.Math.generateUUID();\n  this.name = '';\n  this.sourceFile = '';\n  this.image = image !== undefined ? image : THREE.Texture.DEFAULT_IMAGE;\n  this.mipmaps = [];\n  this.mapping = mapping !== undefined ? mapping : THREE.Texture.DEFAULT_MAPPING;\n  this.wrapS = wrapS !== undefined ? wrapS : THREE.ClampToEdgeWrapping;\n  this.wrapT = wrapT !== undefined ? wrapT : THREE.ClampToEdgeWrapping;\n  this.magFilter = magFilter !== undefined ? magFilter : THREE.LinearFilter;\n  this.minFilter = minFilter !== undefined ? minFilter : THREE.LinearMipMapLinearFilter;\n  this.anisotropy = anisotropy !== undefined ? anisotropy : 1;\n  this.format = format !== undefined ? format : THREE.RGBAFormat;\n  this.type = type !== undefined ? type : THREE.UnsignedByteType;\n  this.offset = new THREE.Vector2(0, 0);\n  this.repeat = new THREE.Vector2(1, 1);\n  this.generateMipmaps = true;\n  this.premultiplyAlpha = false;\n  this.flipY = true;\n  this.unpackAlignment = 4; // valid values: 1, 2, 4, 8 (see http://www.khronos.org/opengles/sdk/docs/man/xhtml/glPixelStorei.xml)\n  // Values of encoding !== THREE.LinearEncoding only supported on map, envMap and emissiveMap.\n  //\n  // Also changing the encoding after already used by a Material will not automatically make the Material\n  // update.  You need to explicitly call Material.needsUpdate to trigger it to recompile.\n\n  this.encoding = THREE.LinearEncoding;\n  this.version = 0;\n  this.onUpdate = null;\n};\n\nTHREE.Texture.DEFAULT_IMAGE = undefined;\nTHREE.Texture.DEFAULT_MAPPING = THREE.UVMapping;\nTHREE.Texture.prototype = {\n  constructor: THREE.Texture,\n\n  set needsUpdate(value) {\n    if (value === true) this.version++;\n  },\n\n  clone: function () {\n    return new this.constructor().copy(this);\n  },\n  copy: function (source) {\n    this.image = source.image;\n    this.mipmaps = source.mipmaps.slice(0);\n    this.mapping = source.mapping;\n    this.wrapS = source.wrapS;\n    this.wrapT = source.wrapT;\n    this.magFilter = source.magFilter;\n    this.minFilter = source.minFilter;\n    this.anisotropy = source.anisotropy;\n    this.format = source.format;\n    this.type = source.type;\n    this.offset.copy(source.offset);\n    this.repeat.copy(source.repeat);\n    this.generateMipmaps = source.generateMipmaps;\n    this.premultiplyAlpha = source.premultiplyAlpha;\n    this.flipY = source.flipY;\n    this.unpackAlignment = source.unpackAlignment;\n    this.encoding = source.encoding;\n    return this;\n  },\n  toJSON: function (meta) {\n    if (meta.textures[this.uuid] !== undefined) {\n      return meta.textures[this.uuid];\n    }\n\n    function getDataURL(image) {\n      var canvas;\n\n      if (image.toDataURL !== undefined) {\n        canvas = image;\n      } else {\n        canvas = document.createElement('canvas');\n        canvas.width = image.width;\n        canvas.height = image.height;\n        canvas.getContext('2d').drawImage(image, 0, 0, image.width, image.height);\n      }\n\n      if (canvas.width > 2048 || canvas.height > 2048) {\n        return canvas.toDataURL('image/jpeg', 0.6);\n      } else {\n        return canvas.toDataURL('image/png');\n      }\n    }\n\n    var output = {\n      metadata: {\n        version: 4.4,\n        type: 'Texture',\n        generator: 'Texture.toJSON'\n      },\n      uuid: this.uuid,\n      name: this.name,\n      mapping: this.mapping,\n      repeat: [this.repeat.x, this.repeat.y],\n      offset: [this.offset.x, this.offset.y],\n      wrap: [this.wrapS, this.wrapT],\n      minFilter: this.minFilter,\n      magFilter: this.magFilter,\n      anisotropy: this.anisotropy\n    };\n\n    if (this.image !== undefined) {\n      // TODO: Move to THREE.Image\n      var image = this.image;\n\n      if (image.uuid === undefined) {\n        image.uuid = THREE.Math.generateUUID(); // UGH\n      }\n\n      if (meta.images[image.uuid] === undefined) {\n        meta.images[image.uuid] = {\n          uuid: image.uuid,\n          url: getDataURL(image)\n        };\n      }\n\n      output.image = image.uuid;\n    }\n\n    meta.textures[this.uuid] = output;\n    return output;\n  },\n  dispose: function () {\n    this.dispatchEvent({\n      type: 'dispose'\n    });\n  },\n  transformUv: function (uv) {\n    if (this.mapping !== THREE.UVMapping) return;\n    uv.multiply(this.repeat);\n    uv.add(this.offset);\n\n    if (uv.x < 0 || uv.x > 1) {\n      switch (this.wrapS) {\n        case THREE.RepeatWrapping:\n          uv.x = uv.x - Math.floor(uv.x);\n          break;\n\n        case THREE.ClampToEdgeWrapping:\n          uv.x = uv.x < 0 ? 0 : 1;\n          break;\n\n        case THREE.MirroredRepeatWrapping:\n          if (Math.abs(Math.floor(uv.x) % 2) === 1) {\n            uv.x = Math.ceil(uv.x) - uv.x;\n          } else {\n            uv.x = uv.x - Math.floor(uv.x);\n          }\n\n          break;\n      }\n    }\n\n    if (uv.y < 0 || uv.y > 1) {\n      switch (this.wrapT) {\n        case THREE.RepeatWrapping:\n          uv.y = uv.y - Math.floor(uv.y);\n          break;\n\n        case THREE.ClampToEdgeWrapping:\n          uv.y = uv.y < 0 ? 0 : 1;\n          break;\n\n        case THREE.MirroredRepeatWrapping:\n          if (Math.abs(Math.floor(uv.y) % 2) === 1) {\n            uv.y = Math.ceil(uv.y) - uv.y;\n          } else {\n            uv.y = uv.y - Math.floor(uv.y);\n          }\n\n          break;\n      }\n    }\n\n    if (this.flipY) {\n      uv.y = 1 - uv.y;\n    }\n  }\n};\nTHREE.EventDispatcher.prototype.apply(THREE.Texture.prototype);\nTHREE.TextureIdCount = 0; // File:src/textures/DataTexture.js\n\n/**\n * @author alteredq / http://alteredqualia.com/\n */\n\nTHREE.DataTexture = function (data, width, height, format, type, mapping, wrapS, wrapT, magFilter, minFilter, anisotropy) {\n  THREE.Texture.call(this, null, mapping, wrapS, wrapT, magFilter, minFilter, format, type, anisotropy);\n  this.image = {\n    data: data,\n    width: width,\n    height: height\n  };\n  this.magFilter = magFilter !== undefined ? magFilter : THREE.NearestFilter;\n  this.minFilter = minFilter !== undefined ? minFilter : THREE.NearestFilter;\n  this.flipY = false;\n  this.generateMipmaps = false;\n};\n\nTHREE.DataTexture.prototype = Object.create(THREE.Texture.prototype);\nTHREE.DataTexture.prototype.constructor = THREE.DataTexture; // File:src/textures/CompressedTexture.js\n\n/**\n * @author alteredq / http://alteredqualia.com/\n */\n\nTHREE.CompressedTexture = function (mipmaps, width, height, format, type, mapping, wrapS, wrapT, magFilter, minFilter, anisotropy) {\n  THREE.Texture.call(this, null, mapping, wrapS, wrapT, magFilter, minFilter, format, type, anisotropy);\n  this.image = {\n    width: width,\n    height: height\n  };\n  this.mipmaps = mipmaps; // no flipping for cube textures\n  // (also flipping doesn't work for compressed textures )\n\n  this.flipY = false; // can't generate mipmaps for compressed textures\n  // mips must be embedded in DDS files\n\n  this.generateMipmaps = false;\n};\n\nTHREE.CompressedTexture.prototype = Object.create(THREE.Texture.prototype);\nTHREE.CompressedTexture.prototype.constructor = THREE.CompressedTexture; // File:src/textures/CubeTexture.js\n\n/**\n * @author mrdoob / http://mrdoob.com/\n */\n\nTHREE.CubeTexture = function (images, mapping, wrapS, wrapT, magFilter, minFilter, format, type, anisotropy) {\n  images = images !== undefined ? images : [];\n  mapping = mapping !== undefined ? mapping : THREE.CubeReflectionMapping;\n  THREE.Texture.call(this, images, mapping, wrapS, wrapT, magFilter, minFilter, format, type, anisotropy);\n  this.flipY = false;\n};\n\nTHREE.CubeTexture.prototype = Object.create(THREE.Texture.prototype);\nTHREE.CubeTexture.prototype.constructor = THREE.CubeTexture;\nObject.defineProperty(THREE.CubeTexture.prototype, 'images', {\n  get: function () {\n    return this.image;\n  },\n  set: function (value) {\n    this.image = value;\n  }\n}); // File:src/textures/VideoTexture.js\n\n/**\n * @author mrdoob / http://mrdoob.com/\n */\n\nTHREE.VideoTexture = function (video, mapping, wrapS, wrapT, magFilter, minFilter, format, type, anisotropy) {\n  THREE.Texture.call(this, video, mapping, wrapS, wrapT, magFilter, minFilter, format, type, anisotropy);\n  this.generateMipmaps = false;\n  var scope = this;\n\n  function update() {\n    requestAnimationFrame(update);\n\n    if (video.readyState >= video.HAVE_CURRENT_DATA) {\n      scope.needsUpdate = true;\n    }\n  }\n\n  update();\n};\n\nTHREE.VideoTexture.prototype = Object.create(THREE.Texture.prototype);\nTHREE.VideoTexture.prototype.constructor = THREE.VideoTexture; // File:src/objects/Sprite.js\n\n/**\n * @author mikael emtinger / http://gomo.se/\n * @author alteredq / http://alteredqualia.com/\n */\n\nTHREE.Sprite = function () {\n  var indices = new Uint16Array([0, 1, 2, 0, 2, 3]);\n  var vertices = new Float32Array([-0.5, -0.5, 0, 0.5, -0.5, 0, 0.5, 0.5, 0, -0.5, 0.5, 0]);\n  var uvs = new Float32Array([0, 0, 1, 0, 1, 1, 0, 1]);\n  var geometry = new THREE.BufferGeometry();\n  geometry.setIndex(new THREE.BufferAttribute(indices, 1));\n  geometry.addAttribute('position', new THREE.BufferAttribute(vertices, 3));\n  geometry.addAttribute('uv', new THREE.BufferAttribute(uvs, 2));\n  return function Sprite(material) {\n    THREE.Object3D.call(this);\n    this.type = 'Sprite';\n    this.geometry = geometry;\n    this.material = material !== undefined ? material : new THREE.SpriteMaterial();\n  };\n}();\n\nTHREE.Sprite.prototype = Object.create(THREE.Object3D.prototype);\nTHREE.Sprite.prototype.constructor = THREE.Sprite;\n\nTHREE.Sprite.prototype.raycast = function () {\n  var matrixPosition = new THREE.Vector3();\n  return function raycast(raycaster, intersects) {\n    matrixPosition.setFromMatrixPosition(this.matrixWorld);\n    var distanceSq = raycaster.ray.distanceSqToPoint(matrixPosition);\n    var guessSizeSq = this.scale.x * this.scale.y;\n\n    if (distanceSq > guessSizeSq) {\n      return;\n    }\n\n    intersects.push({\n      distance: Math.sqrt(distanceSq),\n      point: this.position,\n      face: null,\n      object: this\n    });\n  };\n}();\n\nTHREE.Sprite.prototype.clone = function () {\n  return new this.constructor(this.material).copy(this);\n}; // Backwards compatibility\n\n\nTHREE.Particle = THREE.Sprite; // File:src/objects/LensFlare.js\n\n/**\n * @author mikael emtinger / http://gomo.se/\n * @author alteredq / http://alteredqualia.com/\n */\n\nTHREE.LensFlare = function (texture, size, distance, blending, color) {\n  THREE.Object3D.call(this);\n  this.lensFlares = [];\n  this.positionScreen = new THREE.Vector3();\n  this.customUpdateCallback = undefined;\n\n  if (texture !== undefined) {\n    this.add(texture, size, distance, blending, color);\n  }\n};\n\nTHREE.LensFlare.prototype = Object.create(THREE.Object3D.prototype);\nTHREE.LensFlare.prototype.constructor = THREE.LensFlare;\n/*\n * Add: adds another flare\n */\n\nTHREE.LensFlare.prototype.add = function (texture, size, distance, blending, color, opacity) {\n  if (size === undefined) size = -1;\n  if (distance === undefined) distance = 0;\n  if (opacity === undefined) opacity = 1;\n  if (color === undefined) color = new THREE.Color(0xffffff);\n  if (blending === undefined) blending = THREE.NormalBlending;\n  distance = Math.min(distance, Math.max(0, distance));\n  this.lensFlares.push({\n    texture: texture,\n    // THREE.Texture\n    size: size,\n    // size in pixels (-1 = use texture.width)\n    distance: distance,\n    // distance (0-1) from light source (0=at light source)\n    x: 0,\n    y: 0,\n    z: 0,\n    // screen position (-1 => 1) z = 0 is in front z = 1 is back\n    scale: 1,\n    // scale\n    rotation: 0,\n    // rotation\n    opacity: opacity,\n    // opacity\n    color: color,\n    // color\n    blending: blending // blending\n\n  });\n};\n/*\n * Update lens flares update positions on all flares based on the screen position\n * Set myLensFlare.customUpdateCallback to alter the flares in your project specific way.\n */\n\n\nTHREE.LensFlare.prototype.updateLensFlares = function () {\n  var f,\n      fl = this.lensFlares.length;\n  var flare;\n  var vecX = -this.positionScreen.x * 2;\n  var vecY = -this.positionScreen.y * 2;\n\n  for (f = 0; f < fl; f++) {\n    flare = this.lensFlares[f];\n    flare.x = this.positionScreen.x + vecX * flare.distance;\n    flare.y = this.positionScreen.y + vecY * flare.distance;\n    flare.wantedRotation = flare.x * Math.PI * 0.25;\n    flare.rotation += (flare.wantedRotation - flare.rotation) * 0.25;\n  }\n};\n\nTHREE.LensFlare.prototype.copy = function (source) {\n  THREE.Object3D.prototype.copy.call(this, source);\n  this.positionScreen.copy(source.positionScreen);\n  this.customUpdateCallback = source.customUpdateCallback;\n\n  for (var i = 0, l = source.lensFlares.length; i < l; i++) {\n    this.lensFlares.push(source.lensFlares[i]);\n  }\n\n  return this;\n}; // File:src/objects/Line.js\n\n/**\n * @author mrdoob / http://mrdoob.com/\n */\n\n\nTHREE.Line = function (geometry, material, mode) {\n  if (mode === 1) {\n    return new THREE.LineSegments(geometry, material);\n  }\n\n  THREE.Object3D.call(this);\n  this.type = 'Line';\n  this.geometry = geometry !== undefined ? geometry : new THREE.Geometry();\n  this.material = material !== undefined ? material : new THREE.LineBasicMaterial({\n    color: Math.random() * 0xffffff\n  });\n};\n\nTHREE.Line.prototype = Object.create(THREE.Object3D.prototype);\nTHREE.Line.prototype.constructor = THREE.Line;\n\nTHREE.Line.prototype.raycast = function () {\n  var inverseMatrix = new THREE.Matrix4();\n  var ray = new THREE.Ray();\n  var sphere = new THREE.Sphere();\n  return function raycast(raycaster, intersects) {\n    var precision = raycaster.linePrecision;\n    var precisionSq = precision * precision;\n    var geometry = this.geometry;\n    var matrixWorld = this.matrixWorld; // Checking boundingSphere distance to ray\n\n    if (geometry.boundingSphere === null) geometry.computeBoundingSphere();\n    sphere.copy(geometry.boundingSphere);\n    sphere.applyMatrix4(matrixWorld);\n    if (raycaster.ray.intersectsSphere(sphere) === false) return; //\n\n    inverseMatrix.getInverse(matrixWorld);\n    ray.copy(raycaster.ray).applyMatrix4(inverseMatrix);\n    var vStart = new THREE.Vector3();\n    var vEnd = new THREE.Vector3();\n    var interSegment = new THREE.Vector3();\n    var interRay = new THREE.Vector3();\n    var step = this instanceof THREE.LineSegments ? 2 : 1;\n\n    if (geometry instanceof THREE.BufferGeometry) {\n      var index = geometry.index;\n      var attributes = geometry.attributes;\n      var positions = attributes.position.array;\n\n      if (index !== null) {\n        var indices = index.array;\n\n        for (var i = 0, l = indices.length - 1; i < l; i += step) {\n          var a = indices[i];\n          var b = indices[i + 1];\n          vStart.fromArray(positions, a * 3);\n          vEnd.fromArray(positions, b * 3);\n          var distSq = ray.distanceSqToSegment(vStart, vEnd, interRay, interSegment);\n          if (distSq > precisionSq) continue;\n          interRay.applyMatrix4(this.matrixWorld); //Move back to world space for distance calculation\n\n          var distance = raycaster.ray.origin.distanceTo(interRay);\n          if (distance < raycaster.near || distance > raycaster.far) continue;\n          intersects.push({\n            distance: distance,\n            // What do we want? intersection point on the ray or on the segment??\n            // point: raycaster.ray.at( distance ),\n            point: interSegment.clone().applyMatrix4(this.matrixWorld),\n            index: i,\n            face: null,\n            faceIndex: null,\n            object: this\n          });\n        }\n      } else {\n        for (var i = 0, l = positions.length / 3 - 1; i < l; i += step) {\n          vStart.fromArray(positions, 3 * i);\n          vEnd.fromArray(positions, 3 * i + 3);\n          var distSq = ray.distanceSqToSegment(vStart, vEnd, interRay, interSegment);\n          if (distSq > precisionSq) continue;\n          interRay.applyMatrix4(this.matrixWorld); //Move back to world space for distance calculation\n\n          var distance = raycaster.ray.origin.distanceTo(interRay);\n          if (distance < raycaster.near || distance > raycaster.far) continue;\n          intersects.push({\n            distance: distance,\n            // What do we want? intersection point on the ray or on the segment??\n            // point: raycaster.ray.at( distance ),\n            point: interSegment.clone().applyMatrix4(this.matrixWorld),\n            index: i,\n            face: null,\n            faceIndex: null,\n            object: this\n          });\n        }\n      }\n    } else if (geometry instanceof THREE.Geometry) {\n      var vertices = geometry.vertices;\n      var nbVertices = vertices.length;\n\n      for (var i = 0; i < nbVertices - 1; i += step) {\n        var distSq = ray.distanceSqToSegment(vertices[i], vertices[i + 1], interRay, interSegment);\n        if (distSq > precisionSq) continue;\n        interRay.applyMatrix4(this.matrixWorld); //Move back to world space for distance calculation\n\n        var distance = raycaster.ray.origin.distanceTo(interRay);\n        if (distance < raycaster.near || distance > raycaster.far) continue;\n        intersects.push({\n          distance: distance,\n          // What do we want? intersection point on the ray or on the segment??\n          // point: raycaster.ray.at( distance ),\n          point: interSegment.clone().applyMatrix4(this.matrixWorld),\n          index: i,\n          face: null,\n          faceIndex: null,\n          object: this\n        });\n      }\n    }\n  };\n}();\n\nTHREE.Line.prototype.clone = function () {\n  return new this.constructor(this.geometry, this.material).copy(this);\n}; // DEPRECATED\n\n\nTHREE.LineStrip = 0;\nTHREE.LinePieces = 1; // File:src/objects/LineSegments.js\n\n/**\n * @author mrdoob / http://mrdoob.com/\n */\n\nTHREE.LineSegments = function (geometry, material) {\n  THREE.Line.call(this, geometry, material);\n  this.type = 'LineSegments';\n};\n\nTHREE.LineSegments.prototype = Object.create(THREE.Line.prototype);\nTHREE.LineSegments.prototype.constructor = THREE.LineSegments; // File:src/objects/Mesh.js\n\n/**\n * @author mrdoob / http://mrdoob.com/\n * @author alteredq / http://alteredqualia.com/\n * @author mikael emtinger / http://gomo.se/\n * @author jonobr1 / http://jonobr1.com/\n */\n\nTHREE.Mesh = function (geometry, material) {\n  THREE.Object3D.call(this);\n  this.type = 'Mesh';\n  this.geometry = geometry !== undefined ? geometry : new THREE.Geometry();\n  this.material = material !== undefined ? material : new THREE.MeshBasicMaterial({\n    color: Math.random() * 0xffffff\n  });\n  this.drawMode = THREE.TrianglesDrawMode;\n  this.updateMorphTargets();\n};\n\nTHREE.Mesh.prototype = Object.create(THREE.Object3D.prototype);\nTHREE.Mesh.prototype.constructor = THREE.Mesh;\n\nTHREE.Mesh.prototype.setDrawMode = function (value) {\n  this.drawMode = value;\n};\n\nTHREE.Mesh.prototype.updateMorphTargets = function () {\n  if (this.geometry.morphTargets !== undefined && this.geometry.morphTargets.length > 0) {\n    this.morphTargetBase = -1;\n    this.morphTargetInfluences = [];\n    this.morphTargetDictionary = {};\n\n    for (var m = 0, ml = this.geometry.morphTargets.length; m < ml; m++) {\n      this.morphTargetInfluences.push(0);\n      this.morphTargetDictionary[this.geometry.morphTargets[m].name] = m;\n    }\n  }\n};\n\nTHREE.Mesh.prototype.getMorphTargetIndexByName = function (name) {\n  if (this.morphTargetDictionary[name] !== undefined) {\n    return this.morphTargetDictionary[name];\n  }\n\n  return 0;\n};\n\nTHREE.Mesh.prototype.raycast = function () {\n  var inverseMatrix = new THREE.Matrix4();\n  var ray = new THREE.Ray();\n  var sphere = new THREE.Sphere();\n  var vA = new THREE.Vector3();\n  var vB = new THREE.Vector3();\n  var vC = new THREE.Vector3();\n  var tempA = new THREE.Vector3();\n  var tempB = new THREE.Vector3();\n  var tempC = new THREE.Vector3();\n  var uvA = new THREE.Vector2();\n  var uvB = new THREE.Vector2();\n  var uvC = new THREE.Vector2();\n  var barycoord = new THREE.Vector3();\n  var intersectionPoint = new THREE.Vector3();\n  var intersectionPointWorld = new THREE.Vector3();\n\n  function uvIntersection(point, p1, p2, p3, uv1, uv2, uv3) {\n    THREE.Triangle.barycoordFromPoint(point, p1, p2, p3, barycoord);\n    uv1.multiplyScalar(barycoord.x);\n    uv2.multiplyScalar(barycoord.y);\n    uv3.multiplyScalar(barycoord.z);\n    uv1.add(uv2).add(uv3);\n    return uv1.clone();\n  }\n\n  function checkIntersection(object, raycaster, ray, pA, pB, pC, point) {\n    var intersect;\n    var material = object.material;\n\n    if (material.side === THREE.BackSide) {\n      intersect = ray.intersectTriangle(pC, pB, pA, true, point);\n    } else {\n      intersect = ray.intersectTriangle(pA, pB, pC, material.side !== THREE.DoubleSide, point);\n    }\n\n    if (intersect === null) return null;\n    intersectionPointWorld.copy(point);\n    intersectionPointWorld.applyMatrix4(object.matrixWorld);\n    var distance = raycaster.ray.origin.distanceTo(intersectionPointWorld);\n    if (distance < raycaster.near || distance > raycaster.far) return null;\n    return {\n      distance: distance,\n      point: intersectionPointWorld.clone(),\n      object: object\n    };\n  }\n\n  function checkBufferGeometryIntersection(object, raycaster, ray, positions, uvs, a, b, c) {\n    vA.fromArray(positions, a * 3);\n    vB.fromArray(positions, b * 3);\n    vC.fromArray(positions, c * 3);\n    var intersection = checkIntersection(object, raycaster, ray, vA, vB, vC, intersectionPoint);\n\n    if (intersection) {\n      if (uvs) {\n        uvA.fromArray(uvs, a * 2);\n        uvB.fromArray(uvs, b * 2);\n        uvC.fromArray(uvs, c * 2);\n        intersection.uv = uvIntersection(intersectionPoint, vA, vB, vC, uvA, uvB, uvC);\n      }\n\n      intersection.face = new THREE.Face3(a, b, c, THREE.Triangle.normal(vA, vB, vC));\n      intersection.faceIndex = a;\n    }\n\n    return intersection;\n  }\n\n  return function raycast(raycaster, intersects) {\n    var geometry = this.geometry;\n    var material = this.material;\n    var matrixWorld = this.matrixWorld;\n    if (material === undefined) return; // Checking boundingSphere distance to ray\n\n    if (geometry.boundingSphere === null) geometry.computeBoundingSphere();\n    sphere.copy(geometry.boundingSphere);\n    sphere.applyMatrix4(matrixWorld);\n    if (raycaster.ray.intersectsSphere(sphere) === false) return; //\n\n    inverseMatrix.getInverse(matrixWorld);\n    ray.copy(raycaster.ray).applyMatrix4(inverseMatrix); // Check boundingBox before continuing\n\n    if (geometry.boundingBox !== null) {\n      if (ray.intersectsBox(geometry.boundingBox) === false) return;\n    }\n\n    var uvs, intersection;\n\n    if (geometry instanceof THREE.BufferGeometry) {\n      var a, b, c;\n      var index = geometry.index;\n      var attributes = geometry.attributes;\n      var positions = attributes.position.array;\n\n      if (attributes.uv !== undefined) {\n        uvs = attributes.uv.array;\n      }\n\n      if (index !== null) {\n        var indices = index.array;\n\n        for (var i = 0, l = indices.length; i < l; i += 3) {\n          a = indices[i];\n          b = indices[i + 1];\n          c = indices[i + 2];\n          intersection = checkBufferGeometryIntersection(this, raycaster, ray, positions, uvs, a, b, c);\n\n          if (intersection) {\n            intersection.faceIndex = Math.floor(i / 3); // triangle number in indices buffer semantics\n\n            intersects.push(intersection);\n          }\n        }\n      } else {\n        for (var i = 0, l = positions.length; i < l; i += 9) {\n          a = i / 3;\n          b = a + 1;\n          c = a + 2;\n          intersection = checkBufferGeometryIntersection(this, raycaster, ray, positions, uvs, a, b, c);\n\n          if (intersection) {\n            intersection.index = a; // triangle number in positions buffer semantics\n\n            intersects.push(intersection);\n          }\n        }\n      }\n    } else if (geometry instanceof THREE.Geometry) {\n      var fvA, fvB, fvC;\n      var isFaceMaterial = material instanceof THREE.MultiMaterial;\n      var materials = isFaceMaterial === true ? material.materials : null;\n      var vertices = geometry.vertices;\n      var faces = geometry.faces;\n      var faceVertexUvs = geometry.faceVertexUvs[0];\n      if (faceVertexUvs.length > 0) uvs = faceVertexUvs;\n\n      for (var f = 0, fl = faces.length; f < fl; f++) {\n        var face = faces[f];\n        var faceMaterial = isFaceMaterial === true ? materials[face.materialIndex] : material;\n        if (faceMaterial === undefined) continue;\n        fvA = vertices[face.a];\n        fvB = vertices[face.b];\n        fvC = vertices[face.c];\n\n        if (faceMaterial.morphTargets === true) {\n          var morphTargets = geometry.morphTargets;\n          var morphInfluences = this.morphTargetInfluences;\n          vA.set(0, 0, 0);\n          vB.set(0, 0, 0);\n          vC.set(0, 0, 0);\n\n          for (var t = 0, tl = morphTargets.length; t < tl; t++) {\n            var influence = morphInfluences[t];\n            if (influence === 0) continue;\n            var targets = morphTargets[t].vertices;\n            vA.addScaledVector(tempA.subVectors(targets[face.a], fvA), influence);\n            vB.addScaledVector(tempB.subVectors(targets[face.b], fvB), influence);\n            vC.addScaledVector(tempC.subVectors(targets[face.c], fvC), influence);\n          }\n\n          vA.add(fvA);\n          vB.add(fvB);\n          vC.add(fvC);\n          fvA = vA;\n          fvB = vB;\n          fvC = vC;\n        }\n\n        intersection = checkIntersection(this, raycaster, ray, fvA, fvB, fvC, intersectionPoint);\n\n        if (intersection) {\n          if (uvs) {\n            var uvs_f = uvs[f];\n            uvA.copy(uvs_f[0]);\n            uvB.copy(uvs_f[1]);\n            uvC.copy(uvs_f[2]);\n            intersection.uv = uvIntersection(intersectionPoint, fvA, fvB, fvC, uvA, uvB, uvC);\n          }\n\n          intersection.face = face;\n          intersection.faceIndex = f;\n          intersects.push(intersection);\n        }\n      }\n    }\n  };\n}();\n\nTHREE.Mesh.prototype.clone = function () {\n  return new this.constructor(this.geometry, this.material).copy(this);\n}; // File:src/objects/SkinnedMesh.js\n\n/**\n * @author mikael emtinger / http://gomo.se/\n * @author alteredq / http://alteredqualia.com/\n * @author ikerr / http://verold.com\n */\n\n\nTHREE.SkinnedMesh = function (geometry, material, useVertexTexture) {\n  THREE.Mesh.call(this, geometry, material);\n  this.type = 'SkinnedMesh';\n  this.bindMode = \"attached\";\n  this.bindMatrix = new THREE.Matrix4();\n  this.bindMatrixInverse = new THREE.Matrix4(); // init bones\n  // TODO: remove bone creation as there is no reason (other than\n  // convenience) for THREE.SkinnedMesh to do this.\n\n  var bones = [];\n\n  if (this.geometry && this.geometry.bones !== undefined) {\n    var bone, gbone;\n\n    for (var b = 0, bl = this.geometry.bones.length; b < bl; ++b) {\n      gbone = this.geometry.bones[b];\n      bone = new THREE.Bone(this);\n      bones.push(bone);\n      bone.name = gbone.name;\n      bone.position.fromArray(gbone.pos);\n      bone.quaternion.fromArray(gbone.rotq);\n      if (gbone.scl !== undefined) bone.scale.fromArray(gbone.scl);\n    }\n\n    for (var b = 0, bl = this.geometry.bones.length; b < bl; ++b) {\n      gbone = this.geometry.bones[b];\n\n      if (gbone.parent !== -1 && gbone.parent !== null) {\n        bones[gbone.parent].add(bones[b]);\n      } else {\n        this.add(bones[b]);\n      }\n    }\n  }\n\n  this.normalizeSkinWeights();\n  this.updateMatrixWorld(true);\n  this.bind(new THREE.Skeleton(bones, undefined, useVertexTexture), this.matrixWorld);\n};\n\nTHREE.SkinnedMesh.prototype = Object.create(THREE.Mesh.prototype);\nTHREE.SkinnedMesh.prototype.constructor = THREE.SkinnedMesh;\n\nTHREE.SkinnedMesh.prototype.bind = function (skeleton, bindMatrix) {\n  this.skeleton = skeleton;\n\n  if (bindMatrix === undefined) {\n    this.updateMatrixWorld(true);\n    this.skeleton.calculateInverses();\n    bindMatrix = this.matrixWorld;\n  }\n\n  this.bindMatrix.copy(bindMatrix);\n  this.bindMatrixInverse.getInverse(bindMatrix);\n};\n\nTHREE.SkinnedMesh.prototype.pose = function () {\n  this.skeleton.pose();\n};\n\nTHREE.SkinnedMesh.prototype.normalizeSkinWeights = function () {\n  if (this.geometry instanceof THREE.Geometry) {\n    for (var i = 0; i < this.geometry.skinWeights.length; i++) {\n      var sw = this.geometry.skinWeights[i];\n      var scale = 1.0 / sw.lengthManhattan();\n\n      if (scale !== Infinity) {\n        sw.multiplyScalar(scale);\n      } else {\n        sw.set(1, 0, 0, 0); // do something reasonable\n      }\n    }\n  } else if (this.geometry instanceof THREE.BufferGeometry) {\n    var vec = new THREE.Vector4();\n    var skinWeight = this.geometry.attributes.skinWeight;\n\n    for (var i = 0; i < skinWeight.count; i++) {\n      vec.x = skinWeight.getX(i);\n      vec.y = skinWeight.getY(i);\n      vec.z = skinWeight.getZ(i);\n      vec.w = skinWeight.getW(i);\n      var scale = 1.0 / vec.lengthManhattan();\n\n      if (scale !== Infinity) {\n        vec.multiplyScalar(scale);\n      } else {\n        vec.set(1, 0, 0, 0); // do something reasonable\n      }\n\n      skinWeight.setXYZW(i, vec.x, vec.y, vec.z, vec.w);\n    }\n  }\n};\n\nTHREE.SkinnedMesh.prototype.updateMatrixWorld = function (force) {\n  THREE.Mesh.prototype.updateMatrixWorld.call(this, true);\n\n  if (this.bindMode === \"attached\") {\n    this.bindMatrixInverse.getInverse(this.matrixWorld);\n  } else if (this.bindMode === \"detached\") {\n    this.bindMatrixInverse.getInverse(this.bindMatrix);\n  }\n};\n\nTHREE.SkinnedMesh.prototype.clone = function () {\n  return new this.constructor(this.geometry, this.material, this.useVertexTexture).copy(this);\n}; // File:src/objects/Points.js\n\n/**\n * @author alteredq / http://alteredqualia.com/\n */\n\n\nTHREE.Points = function (geometry, material) {\n  THREE.Object3D.call(this);\n  this.type = 'Points';\n  this.geometry = geometry !== undefined ? geometry : new THREE.Geometry();\n  this.material = material !== undefined ? material : new THREE.PointsMaterial({\n    color: Math.random() * 0xffffff\n  });\n};\n\nTHREE.Points.prototype = Object.create(THREE.Object3D.prototype);\nTHREE.Points.prototype.constructor = THREE.Points;\n\nTHREE.Points.prototype.raycast = function () {\n  var inverseMatrix = new THREE.Matrix4();\n  var ray = new THREE.Ray();\n  var sphere = new THREE.Sphere();\n  return function raycast(raycaster, intersects) {\n    var object = this;\n    var geometry = this.geometry;\n    var matrixWorld = this.matrixWorld;\n    var threshold = raycaster.params.Points.threshold; // Checking boundingSphere distance to ray\n\n    if (geometry.boundingSphere === null) geometry.computeBoundingSphere();\n    sphere.copy(geometry.boundingSphere);\n    sphere.applyMatrix4(matrixWorld);\n    if (raycaster.ray.intersectsSphere(sphere) === false) return; //\n\n    inverseMatrix.getInverse(matrixWorld);\n    ray.copy(raycaster.ray).applyMatrix4(inverseMatrix);\n    var localThreshold = threshold / ((this.scale.x + this.scale.y + this.scale.z) / 3);\n    var localThresholdSq = localThreshold * localThreshold;\n    var position = new THREE.Vector3();\n\n    function testPoint(point, index) {\n      var rayPointDistanceSq = ray.distanceSqToPoint(point);\n\n      if (rayPointDistanceSq < localThresholdSq) {\n        var intersectPoint = ray.closestPointToPoint(point);\n        intersectPoint.applyMatrix4(matrixWorld);\n        var distance = raycaster.ray.origin.distanceTo(intersectPoint);\n        if (distance < raycaster.near || distance > raycaster.far) return;\n        intersects.push({\n          distance: distance,\n          distanceToRay: Math.sqrt(rayPointDistanceSq),\n          point: intersectPoint.clone(),\n          index: index,\n          face: null,\n          object: object\n        });\n      }\n    }\n\n    if (geometry instanceof THREE.BufferGeometry) {\n      var index = geometry.index;\n      var attributes = geometry.attributes;\n      var positions = attributes.position.array;\n\n      if (index !== null) {\n        var indices = index.array;\n\n        for (var i = 0, il = indices.length; i < il; i++) {\n          var a = indices[i];\n          position.fromArray(positions, a * 3);\n          testPoint(position, a);\n        }\n      } else {\n        for (var i = 0, l = positions.length / 3; i < l; i++) {\n          position.fromArray(positions, i * 3);\n          testPoint(position, i);\n        }\n      }\n    } else {\n      var vertices = geometry.vertices;\n\n      for (var i = 0, l = vertices.length; i < l; i++) {\n        testPoint(vertices[i], i);\n      }\n    }\n  };\n}();\n\nTHREE.Points.prototype.clone = function () {\n  return new this.constructor(this.geometry, this.material).copy(this);\n}; // File:src/lights/Light.js\n\n/**\n * @author mrdoob / http://mrdoob.com/\n * @author alteredq / http://alteredqualia.com/\n */\n\n\nTHREE.Light = function (color, intensity) {\n  THREE.Object3D.call(this);\n  this.type = 'Light';\n  this.color = new THREE.Color(color);\n  this.intensity = intensity !== undefined ? intensity : 1;\n  this.receiveShadow = undefined;\n};\n\nTHREE.Light.prototype = Object.create(THREE.Object3D.prototype);\nTHREE.Light.prototype.constructor = THREE.Light;\n\nTHREE.Light.prototype.copy = function (source) {\n  THREE.Object3D.prototype.copy.call(this, source);\n  this.color.copy(source.color);\n  this.intensity = source.intensity;\n  return this;\n};\n\nTHREE.Light.prototype.toJSON = function (meta) {\n  var data = THREE.Object3D.prototype.toJSON.call(this, meta);\n  data.object.color = this.color.getHex();\n  data.object.intensity = this.intensity;\n  if (this.groundColor !== undefined) data.object.groundColor = this.groundColor.getHex();\n  if (this.distance !== undefined) data.object.distance = this.distance;\n  if (this.angle !== undefined) data.object.angle = this.angle;\n  if (this.decay !== undefined) data.object.decay = this.decay;\n  if (this.penumbra !== undefined) data.object.penumbra = this.penumbra;\n  return data;\n}; // File:src/renderers/shaders/ShaderChunk.js\n\n\nTHREE.ShaderChunk = {}; // File:src/renderers/shaders/ShaderChunk/alphamap_fragment.glsl\n\nTHREE.ShaderChunk['alphamap_fragment'] = \"#ifdef USE_ALPHAMAP\\n\\n\\tdiffuseColor.a *= texture2D( alphaMap, vUv ).g;\\n\\n#endif\\n\"; // File:src/renderers/shaders/ShaderChunk/alphamap_pars_fragment.glsl\n\nTHREE.ShaderChunk['alphamap_pars_fragment'] = \"#ifdef USE_ALPHAMAP\\n\\n\\tuniform sampler2D alphaMap;\\n\\n#endif\\n\"; // File:src/renderers/shaders/ShaderChunk/alphatest_fragment.glsl\n\nTHREE.ShaderChunk['alphatest_fragment'] = \"#ifdef ALPHATEST\\n\\n\\tif ( diffuseColor.a < ALPHATEST ) discard;\\n\\n#endif\\n\"; // File:src/renderers/shaders/ShaderChunk/aomap_fragment.glsl\n\nTHREE.ShaderChunk['aomap_fragment'] = \"#ifdef USE_AOMAP\\n\\n\\tfloat ambientOcclusion = ( texture2D( aoMap, vUv2 ).r - 1.0 ) * aoMapIntensity + 1.0;\\n\\n\\treflectedLight.indirectDiffuse *= ambientOcclusion;\\n\\n\\t#if defined( USE_ENVMAP ) && defined( STANDARD )\\n\\n\\t\\tfloat dotNV = saturate( dot( geometry.normal, geometry.viewDir ) );\\n\\n\\t\\treflectedLight.indirectSpecular *= computeSpecularOcclusion( dotNV, ambientOcclusion, material.specularRoughness );\\n\\n\\t#endif\\n\\n#endif\\n\"; // File:src/renderers/shaders/ShaderChunk/aomap_pars_fragment.glsl\n\nTHREE.ShaderChunk['aomap_pars_fragment'] = \"#ifdef USE_AOMAP\\n\\n\\tuniform sampler2D aoMap;\\n\\tuniform float aoMapIntensity;\\n\\n#endif\"; // File:src/renderers/shaders/ShaderChunk/begin_vertex.glsl\n\nTHREE.ShaderChunk['begin_vertex'] = \"\\nvec3 transformed = vec3( position );\\n\"; // File:src/renderers/shaders/ShaderChunk/beginnormal_vertex.glsl\n\nTHREE.ShaderChunk['beginnormal_vertex'] = \"\\nvec3 objectNormal = vec3( normal );\\n\"; // File:src/renderers/shaders/ShaderChunk/color_fragment.glsl\n\nTHREE.ShaderChunk['color_fragment'] = \"#ifdef USE_COLOR\\n\\n\\tdiffuseColor.rgb *= vColor;\\n\\n#endif\"; // File:src/renderers/shaders/ShaderChunk/color_pars_fragment.glsl\n\nTHREE.ShaderChunk['color_pars_fragment'] = \"#ifdef USE_COLOR\\n\\n\\tvarying vec3 vColor;\\n\\n#endif\\n\"; // File:src/renderers/shaders/ShaderChunk/color_pars_vertex.glsl\n\nTHREE.ShaderChunk['color_pars_vertex'] = \"#ifdef USE_COLOR\\n\\n\\tvarying vec3 vColor;\\n\\n#endif\"; // File:src/renderers/shaders/ShaderChunk/color_vertex.glsl\n\nTHREE.ShaderChunk['color_vertex'] = \"#ifdef USE_COLOR\\n\\n\\tvColor.xyz = color.xyz;\\n\\n#endif\"; // File:src/renderers/shaders/ShaderChunk/common.glsl\n\nTHREE.ShaderChunk['common'] = \"#define PI 3.14159\\n#define PI2 6.28318\\n#define RECIPROCAL_PI 0.31830988618\\n#define RECIPROCAL_PI2 0.15915494\\n#define LOG2 1.442695\\n#define EPSILON 1e-6\\n\\n#define saturate(a) clamp( a, 0.0, 1.0 )\\n#define whiteCompliment(a) ( 1.0 - saturate( a ) )\\n\\nfloat pow2( const in float x ) { return x*x; }\\nfloat pow3( const in float x ) { return x*x*x; }\\nfloat pow4( const in float x ) { float x2 = x*x; return x2*x2; }\\nfloat average( const in vec3 color ) { return dot( color, vec3( 0.3333 ) ); }\\n\\n\\nstruct IncidentLight {\\n\\tvec3 color;\\n\\tvec3 direction;\\n\\tbool visible;\\n};\\n\\nstruct ReflectedLight {\\n\\tvec3 directDiffuse;\\n\\tvec3 directSpecular;\\n\\tvec3 indirectDiffuse;\\n\\tvec3 indirectSpecular;\\n};\\n\\nstruct GeometricContext {\\n\\tvec3 position;\\n\\tvec3 normal;\\n\\tvec3 viewDir;\\n};\\n\\n\\nvec3 transformDirection( in vec3 dir, in mat4 matrix ) {\\n\\n\\treturn normalize( ( matrix * vec4( dir, 0.0 ) ).xyz );\\n\\n}\\n\\n// http://en.wikibooks.org/wiki/GLSL_Programming/Applying_Matrix_Transformations\\nvec3 inverseTransformDirection( in vec3 dir, in mat4 matrix ) {\\n\\n\\treturn normalize( ( vec4( dir, 0.0 ) * matrix ).xyz );\\n\\n}\\n\\nvec3 projectOnPlane(in vec3 point, in vec3 pointOnPlane, in vec3 planeNormal ) {\\n\\n\\tfloat distance = dot( planeNormal, point - pointOnPlane );\\n\\n\\treturn - distance * planeNormal + point;\\n\\n}\\n\\nfloat sideOfPlane( in vec3 point, in vec3 pointOnPlane, in vec3 planeNormal ) {\\n\\n\\treturn sign( dot( point - pointOnPlane, planeNormal ) );\\n\\n}\\n\\nvec3 linePlaneIntersect( in vec3 pointOnLine, in vec3 lineDirection, in vec3 pointOnPlane, in vec3 planeNormal ) {\\n\\n\\treturn lineDirection * ( dot( planeNormal, pointOnPlane - pointOnLine ) / dot( planeNormal, lineDirection ) ) + pointOnLine;\\n\\n}\\n\"; // File:src/renderers/shaders/ShaderChunk/defaultnormal_vertex.glsl\n\nTHREE.ShaderChunk['defaultnormal_vertex'] = \"#ifdef FLIP_SIDED\\n\\n\\tobjectNormal = -objectNormal;\\n\\n#endif\\n\\nvec3 transformedNormal = normalMatrix * objectNormal;\\n\"; // File:src/renderers/shaders/ShaderChunk/encodings_fragment.glsl\n\nTHREE.ShaderChunk['encodings_fragment'] = \"  gl_FragColor = linearToOutputTexel( gl_FragColor );\\n\"; // File:src/renderers/shaders/ShaderChunk/encodings_pars_fragment.glsl\n\nTHREE.ShaderChunk['encodings_pars_fragment'] = \"// For a discussion of what this is, please read this: http://lousodrome.net/blog/light/2013/05/26/gamma-correct-and-hdr-rendering-in-a-32-bits-buffer/\\n\\nvec4 LinearToLinear( in vec4 value ) {\\n  return value;\\n}\\n\\nvec4 GammaToLinear( in vec4 value, in float gammaFactor ) {\\n  return vec4( pow( value.xyz, vec3( gammaFactor ) ), value.w );\\n}\\nvec4 LinearToGamma( in vec4 value, in float gammaFactor ) {\\n  return vec4( pow( value.xyz, vec3( 1.0 / gammaFactor ) ), value.w );\\n}\\n\\nvec4 sRGBToLinear( in vec4 value ) {\\n  return vec4( mix( pow( value.rgb * 0.9478672986 + vec3( 0.0521327014 ), vec3( 2.4 ) ), value.rgb * 0.0773993808, vec3( lessThanEqual( value.rgb, vec3( 0.04045 ) ) ) ), value.w );\\n}\\nvec4 LinearTosRGB( in vec4 value ) {\\n  return vec4( mix( pow( value.rgb, vec3( 0.41666 ) ) * 1.055 - vec3( 0.055 ), value.rgb * 12.92, vec3( lessThanEqual( value.rgb, vec3( 0.0031308 ) ) ) ), value.w );\\n}\\n\\nvec4 RGBEToLinear( in vec4 value ) {\\n  return vec4( value.rgb * exp2( value.a * 255.0 - 128.0 ), 1.0 );\\n}\\nvec4 LinearToRGBE( in vec4 value ) {\\n  float maxComponent = max( max( value.r, value.g ), value.b );\\n  float fExp = clamp( ceil( log2( maxComponent ) ), -128.0, 127.0 );\\n  return vec4( value.rgb / exp2( fExp ), ( fExp + 128.0 ) / 255.0 );\\n//  return vec4( value.brg, ( 3.0 + 128.0 ) / 256.0 );\\n}\\n\\n// reference: http://iwasbeingirony.blogspot.ca/2010/06/difference-between-rgbm-and-rgbd.html\\nvec4 RGBMToLinear( in vec4 value, in float maxRange ) {\\n  return vec4( value.xyz * value.w * maxRange, 1.0 );\\n}\\nvec4 LinearToRGBM( in vec4 value, in float maxRange ) {\\n  float maxRGB = max( value.x, max( value.g, value.b ) );\\n  float M      = clamp( maxRGB / maxRange, 0.0, 1.0 );\\n  M            = ceil( M * 255.0 ) / 255.0;\\n  return vec4( value.rgb / ( M * maxRange ), M );\\n}\\n\\n// reference: http://iwasbeingirony.blogspot.ca/2010/06/difference-between-rgbm-and-rgbd.html\\nvec4 RGBDToLinear( in vec4 value, in float maxRange ) {\\n    return vec4( value.rgb * ( ( maxRange / 255.0 ) / value.a ), 1.0 );\\n}\\nvec4 LinearToRGBD( in vec4 value, in float maxRange ) {\\n    float maxRGB = max( value.x, max( value.g, value.b ) );\\n    float D      = max( maxRange / maxRGB, 1.0 );\\n    D            = min( floor( D ) / 255.0, 1.0 );\\n    return vec4( value.rgb * ( D * ( 255.0 / maxRange ) ), D );\\n}\\n\\n// LogLuv reference: http://graphicrants.blogspot.ca/2009/04/rgbm-color-encoding.html\\n\\n// M matrix, for encoding\\nconst mat3 cLogLuvM = mat3( 0.2209, 0.3390, 0.4184, 0.1138, 0.6780, 0.7319, 0.0102, 0.1130, 0.2969 );\\nvec4 LinearToLogLuv( in vec4 value )  {\\n  vec3 Xp_Y_XYZp = value.rgb * cLogLuvM;\\n  Xp_Y_XYZp = max(Xp_Y_XYZp, vec3(1e-6, 1e-6, 1e-6));\\n  vec4 vResult;\\n  vResult.xy = Xp_Y_XYZp.xy / Xp_Y_XYZp.z;\\n  float Le = 2.0 * log2(Xp_Y_XYZp.y) + 127.0;\\n  vResult.w = fract(Le);\\n  vResult.z = (Le - (floor(vResult.w*255.0))/255.0)/255.0;\\n  return vResult;\\n}\\n\\n// Inverse M matrix, for decoding\\nconst mat3 cLogLuvInverseM = mat3( 6.0014, -2.7008, -1.7996, -1.3320, 3.1029, -5.7721, 0.3008, -1.0882, 5.6268 );\\nvec4 LogLuvToLinear( in vec4 value ) {\\n  float Le = value.z * 255.0 + value.w;\\n  vec3 Xp_Y_XYZp;\\n  Xp_Y_XYZp.y = exp2((Le - 127.0) / 2.0);\\n  Xp_Y_XYZp.z = Xp_Y_XYZp.y / value.y;\\n  Xp_Y_XYZp.x = value.x * Xp_Y_XYZp.z;\\n  vec3 vRGB = Xp_Y_XYZp.rgb * cLogLuvInverseM;\\n  return vec4( max(vRGB, 0.0), 1.0 );\\n}\\n\"; // File:src/renderers/shaders/ShaderChunk/envmap_fragment.glsl\n\nTHREE.ShaderChunk['envmap_fragment'] = \"#ifdef USE_ENVMAP\\n\\n\\t#if defined( USE_BUMPMAP ) || defined( USE_NORMALMAP ) || defined( PHONG )\\n\\n\\t\\tvec3 cameraToVertex = normalize( vWorldPosition - cameraPosition );\\n\\n\\t\\t// Transforming Normal Vectors with the Inverse Transformation\\n\\t\\tvec3 worldNormal = inverseTransformDirection( normal, viewMatrix );\\n\\n\\t\\t#ifdef ENVMAP_MODE_REFLECTION\\n\\n\\t\\t\\tvec3 reflectVec = reflect( cameraToVertex, worldNormal );\\n\\n\\t\\t#else\\n\\n\\t\\t\\tvec3 reflectVec = refract( cameraToVertex, worldNormal, refractionRatio );\\n\\n\\t\\t#endif\\n\\n\\t#else\\n\\n\\t\\tvec3 reflectVec = vReflect;\\n\\n\\t#endif\\n\\n\\t#ifdef DOUBLE_SIDED\\n\\t\\tfloat flipNormal = ( float( gl_FrontFacing ) * 2.0 - 1.0 );\\n\\t#else\\n\\t\\tfloat flipNormal = 1.0;\\n\\t#endif\\n\\n\\t#ifdef ENVMAP_TYPE_CUBE\\n\\n\\t\\tvec4 envColor = textureCube( envMap, flipNormal * vec3( flipEnvMap * reflectVec.x, reflectVec.yz ) );\\n\\n\\t#elif defined( ENVMAP_TYPE_EQUIREC )\\n\\n\\t\\tvec2 sampleUV;\\n\\t\\tsampleUV.y = saturate( flipNormal * reflectVec.y * 0.5 + 0.5 );\\n\\t\\tsampleUV.x = atan( flipNormal * reflectVec.z, flipNormal * reflectVec.x ) * RECIPROCAL_PI2 + 0.5;\\n\\t\\tvec4 envColor = texture2D( envMap, sampleUV );\\n\\n\\t#elif defined( ENVMAP_TYPE_SPHERE )\\n\\n\\t\\tvec3 reflectView = flipNormal * normalize((viewMatrix * vec4( reflectVec, 0.0 )).xyz + vec3(0.0,0.0,1.0));\\n\\t\\tvec4 envColor = texture2D( envMap, reflectView.xy * 0.5 + 0.5 );\\n\\n\\t#endif\\n\\n\\tenvColor = envMapTexelToLinear( envColor );\\n\\n\\t#ifdef ENVMAP_BLENDING_MULTIPLY\\n\\n\\t\\toutgoingLight = mix( outgoingLight, outgoingLight * envColor.xyz, specularStrength * reflectivity );\\n\\n\\t#elif defined( ENVMAP_BLENDING_MIX )\\n\\n\\t\\toutgoingLight = mix( outgoingLight, envColor.xyz, specularStrength * reflectivity );\\n\\n\\t#elif defined( ENVMAP_BLENDING_ADD )\\n\\n\\t\\toutgoingLight += envColor.xyz * specularStrength * reflectivity;\\n\\n\\t#endif\\n\\n#endif\\n\"; // File:src/renderers/shaders/ShaderChunk/envmap_pars_fragment.glsl\n\nTHREE.ShaderChunk['envmap_pars_fragment'] = \"#if defined( USE_ENVMAP ) || defined( STANDARD )\\n\\tuniform float reflectivity;\\n\\tuniform float envMapIntenstiy;\\n#endif\\n\\n#ifdef USE_ENVMAP\\n\\t#ifdef ENVMAP_TYPE_CUBE\\n\\t\\tuniform samplerCube envMap;\\n\\t#else\\n\\t\\tuniform sampler2D envMap;\\n\\t#endif\\n\\tuniform float flipEnvMap;\\n\\n\\t#if defined( USE_BUMPMAP ) || defined( USE_NORMALMAP ) || defined( PHONG ) || defined( STANDARD )\\n\\n\\t\\tuniform float refractionRatio;\\n\\n\\t#else\\n\\n\\t\\tvarying vec3 vReflect;\\n\\n\\t#endif\\n\\n#endif\\n\"; // File:src/renderers/shaders/ShaderChunk/envmap_pars_vertex.glsl\n\nTHREE.ShaderChunk['envmap_pars_vertex'] = \"#if defined( USE_ENVMAP ) && ! defined( USE_BUMPMAP ) && ! defined( USE_NORMALMAP ) && ! defined( PHONG ) && ! defined( STANDARD )\\n\\n\\tvarying vec3 vReflect;\\n\\n\\tuniform float refractionRatio;\\n\\n#endif\\n\"; // File:src/renderers/shaders/ShaderChunk/envmap_vertex.glsl\n\nTHREE.ShaderChunk['envmap_vertex'] = \"#if defined( USE_ENVMAP ) && ! defined( USE_BUMPMAP ) && ! defined( USE_NORMALMAP ) && ! defined( PHONG ) && ! defined( STANDARD )\\n\\n\\tvec3 cameraToVertex = normalize( worldPosition.xyz - cameraPosition );\\n\\n\\tvec3 worldNormal = inverseTransformDirection( transformedNormal, viewMatrix );\\n\\n\\t#ifdef ENVMAP_MODE_REFLECTION\\n\\n\\t\\tvReflect = reflect( cameraToVertex, worldNormal );\\n\\n\\t#else\\n\\n\\t\\tvReflect = refract( cameraToVertex, worldNormal, refractionRatio );\\n\\n\\t#endif\\n\\n#endif\\n\"; // File:src/renderers/shaders/ShaderChunk/fog_fragment.glsl\n\nTHREE.ShaderChunk['fog_fragment'] = \"#ifdef USE_FOG\\n\\n\\t#ifdef USE_LOGDEPTHBUF_EXT\\n\\n\\t\\tfloat depth = gl_FragDepthEXT / gl_FragCoord.w;\\n\\n\\t#else\\n\\n\\t\\tfloat depth = gl_FragCoord.z / gl_FragCoord.w;\\n\\n\\t#endif\\n\\n\\t#ifdef FOG_EXP2\\n\\n\\t\\tfloat fogFactor = whiteCompliment( exp2( - fogDensity * fogDensity * depth * depth * LOG2 ) );\\n\\n\\t#else\\n\\n\\t\\tfloat fogFactor = smoothstep( fogNear, fogFar, depth );\\n\\n\\t#endif\\n\\n\\tgl_FragColor.rgb = mix( gl_FragColor.rgb, fogColor, fogFactor );\\n\\n#endif\\n\"; // File:src/renderers/shaders/ShaderChunk/fog_pars_fragment.glsl\n\nTHREE.ShaderChunk['fog_pars_fragment'] = \"#ifdef USE_FOG\\n\\n\\tuniform vec3 fogColor;\\n\\n\\t#ifdef FOG_EXP2\\n\\n\\t\\tuniform float fogDensity;\\n\\n\\t#else\\n\\n\\t\\tuniform float fogNear;\\n\\t\\tuniform float fogFar;\\n\\t#endif\\n\\n#endif\"; // File:src/renderers/shaders/ShaderChunk/logdepthbuf_fragment.glsl\n\nTHREE.ShaderChunk['logdepthbuf_fragment'] = \"#if defined(USE_LOGDEPTHBUF) && defined(USE_LOGDEPTHBUF_EXT)\\n\\n\\tgl_FragDepthEXT = log2(vFragDepth) * logDepthBufFC * 0.5;\\n\\n#endif\"; // File:src/renderers/shaders/ShaderChunk/logdepthbuf_pars_fragment.glsl\n\nTHREE.ShaderChunk['logdepthbuf_pars_fragment'] = \"#ifdef USE_LOGDEPTHBUF\\n\\n\\tuniform float logDepthBufFC;\\n\\n\\t#ifdef USE_LOGDEPTHBUF_EXT\\n\\n\\t\\tvarying float vFragDepth;\\n\\n\\t#endif\\n\\n#endif\\n\"; // File:src/renderers/shaders/ShaderChunk/logdepthbuf_pars_vertex.glsl\n\nTHREE.ShaderChunk['logdepthbuf_pars_vertex'] = \"#ifdef USE_LOGDEPTHBUF\\n\\n\\t#ifdef USE_LOGDEPTHBUF_EXT\\n\\n\\t\\tvarying float vFragDepth;\\n\\n\\t#endif\\n\\n\\tuniform float logDepthBufFC;\\n\\n#endif\"; // File:src/renderers/shaders/ShaderChunk/logdepthbuf_vertex.glsl\n\nTHREE.ShaderChunk['logdepthbuf_vertex'] = \"#ifdef USE_LOGDEPTHBUF\\n\\n\\tgl_Position.z = log2(max( EPSILON, gl_Position.w + 1.0 )) * logDepthBufFC;\\n\\n\\t#ifdef USE_LOGDEPTHBUF_EXT\\n\\n\\t\\tvFragDepth = 1.0 + gl_Position.w;\\n\\n\\t#else\\n\\n\\t\\tgl_Position.z = (gl_Position.z - 1.0) * gl_Position.w;\\n\\n\\t#endif\\n\\n#endif\\n\"; // File:src/renderers/shaders/ShaderChunk/map_fragment.glsl\n\nTHREE.ShaderChunk['map_fragment'] = \"#ifdef USE_MAP\\n\\n\\tvec4 texelColor = texture2D( map, vUv );\\n\\n\\ttexelColor = mapTexelToLinear( texelColor );\\n\\tdiffuseColor *= texelColor;\\n\\n#endif\\n\"; // File:src/renderers/shaders/ShaderChunk/map_pars_fragment.glsl\n\nTHREE.ShaderChunk['map_pars_fragment'] = \"#ifdef USE_MAP\\n\\n\\tuniform sampler2D map;\\n\\n#endif\\n\"; // File:src/renderers/shaders/ShaderChunk/morphnormal_vertex.glsl\n\nTHREE.ShaderChunk['morphnormal_vertex'] = \"#ifdef USE_MORPHNORMALS\\n\\n\\tobjectNormal += ( morphNormal0 - normal ) * morphTargetInfluences[ 0 ];\\n\\tobjectNormal += ( morphNormal1 - normal ) * morphTargetInfluences[ 1 ];\\n\\tobjectNormal += ( morphNormal2 - normal ) * morphTargetInfluences[ 2 ];\\n\\tobjectNormal += ( morphNormal3 - normal ) * morphTargetInfluences[ 3 ];\\n\\n#endif\\n\"; // File:src/renderers/shaders/ShaderChunk/morphtarget_pars_vertex.glsl\n\nTHREE.ShaderChunk['morphtarget_pars_vertex'] = \"#ifdef USE_MORPHTARGETS\\n\\n\\t#ifndef USE_MORPHNORMALS\\n\\n\\tuniform float morphTargetInfluences[ 8 ];\\n\\n\\t#else\\n\\n\\tuniform float morphTargetInfluences[ 4 ];\\n\\n\\t#endif\\n\\n#endif\"; // File:src/renderers/shaders/ShaderChunk/morphtarget_vertex.glsl\n\nTHREE.ShaderChunk['morphtarget_vertex'] = \"#ifdef USE_MORPHTARGETS\\n\\n\\ttransformed += ( morphTarget0 - position ) * morphTargetInfluences[ 0 ];\\n\\ttransformed += ( morphTarget1 - position ) * morphTargetInfluences[ 1 ];\\n\\ttransformed += ( morphTarget2 - position ) * morphTargetInfluences[ 2 ];\\n\\ttransformed += ( morphTarget3 - position ) * morphTargetInfluences[ 3 ];\\n\\n\\t#ifndef USE_MORPHNORMALS\\n\\n\\ttransformed += ( morphTarget4 - position ) * morphTargetInfluences[ 4 ];\\n\\ttransformed += ( morphTarget5 - position ) * morphTargetInfluences[ 5 ];\\n\\ttransformed += ( morphTarget6 - position ) * morphTargetInfluences[ 6 ];\\n\\ttransformed += ( morphTarget7 - position ) * morphTargetInfluences[ 7 ];\\n\\n\\t#endif\\n\\n#endif\\n\"; // File:src/renderers/shaders/ShaderChunk/premultiplied_alpha_fragment.glsl\n\nTHREE.ShaderChunk['premultiplied_alpha_fragment'] = \"#ifdef PREMULTIPLIED_ALPHA\\n\\n\\t// Get get normal blending with premultipled, use with CustomBlending, OneFactor, OneMinusSrcAlphaFactor, AddEquation.\\n\\tgl_FragColor.rgb *= gl_FragColor.a;\\n\\n#endif\\n\"; // File:src/renderers/shaders/ShaderChunk/project_vertex.glsl\n\nTHREE.ShaderChunk['project_vertex'] = \"#ifdef USE_SKINNING\\n\\n\\tvec4 mvPosition = modelViewMatrix * skinned;\\n\\n#else\\n\\n\\tvec4 mvPosition = modelViewMatrix * vec4( transformed, 1.0 );\\n\\n#endif\\n\\ngl_Position = projectionMatrix * mvPosition;\\n\"; // File:src/renderers/shaders/ShaderChunk/skinbase_vertex.glsl\n\nTHREE.ShaderChunk['skinbase_vertex'] = \"#ifdef USE_SKINNING\\n\\n\\tmat4 boneMatX = getBoneMatrix( skinIndex.x );\\n\\tmat4 boneMatY = getBoneMatrix( skinIndex.y );\\n\\tmat4 boneMatZ = getBoneMatrix( skinIndex.z );\\n\\tmat4 boneMatW = getBoneMatrix( skinIndex.w );\\n\\n#endif\"; // File:src/renderers/shaders/ShaderChunk/skinning_pars_vertex.glsl\n\nTHREE.ShaderChunk['skinning_pars_vertex'] = \"#ifdef USE_SKINNING\\n\\n\\tuniform mat4 bindMatrix;\\n\\tuniform mat4 bindMatrixInverse;\\n\\n\\t#ifdef BONE_TEXTURE\\n\\n\\t\\tuniform sampler2D boneTexture;\\n\\t\\tuniform int boneTextureWidth;\\n\\t\\tuniform int boneTextureHeight;\\n\\n\\t\\tmat4 getBoneMatrix( const in float i ) {\\n\\n\\t\\t\\tfloat j = i * 4.0;\\n\\t\\t\\tfloat x = mod( j, float( boneTextureWidth ) );\\n\\t\\t\\tfloat y = floor( j / float( boneTextureWidth ) );\\n\\n\\t\\t\\tfloat dx = 1.0 / float( boneTextureWidth );\\n\\t\\t\\tfloat dy = 1.0 / float( boneTextureHeight );\\n\\n\\t\\t\\ty = dy * ( y + 0.5 );\\n\\n\\t\\t\\tvec4 v1 = texture2D( boneTexture, vec2( dx * ( x + 0.5 ), y ) );\\n\\t\\t\\tvec4 v2 = texture2D( boneTexture, vec2( dx * ( x + 1.5 ), y ) );\\n\\t\\t\\tvec4 v3 = texture2D( boneTexture, vec2( dx * ( x + 2.5 ), y ) );\\n\\t\\t\\tvec4 v4 = texture2D( boneTexture, vec2( dx * ( x + 3.5 ), y ) );\\n\\n\\t\\t\\tmat4 bone = mat4( v1, v2, v3, v4 );\\n\\n\\t\\t\\treturn bone;\\n\\n\\t\\t}\\n\\n\\t#else\\n\\n\\t\\tuniform mat4 boneGlobalMatrices[ MAX_BONES ];\\n\\n\\t\\tmat4 getBoneMatrix( const in float i ) {\\n\\n\\t\\t\\tmat4 bone = boneGlobalMatrices[ int(i) ];\\n\\t\\t\\treturn bone;\\n\\n\\t\\t}\\n\\n\\t#endif\\n\\n#endif\\n\"; // File:src/renderers/shaders/ShaderChunk/skinning_vertex.glsl\n\nTHREE.ShaderChunk['skinning_vertex'] = \"#ifdef USE_SKINNING\\n\\n\\tvec4 skinVertex = bindMatrix * vec4( transformed, 1.0 );\\n\\n\\tvec4 skinned = vec4( 0.0 );\\n\\tskinned += boneMatX * skinVertex * skinWeight.x;\\n\\tskinned += boneMatY * skinVertex * skinWeight.y;\\n\\tskinned += boneMatZ * skinVertex * skinWeight.z;\\n\\tskinned += boneMatW * skinVertex * skinWeight.w;\\n\\tskinned  = bindMatrixInverse * skinned;\\n\\n#endif\\n\"; // File:src/renderers/shaders/ShaderChunk/skinnormal_vertex.glsl\n\nTHREE.ShaderChunk['skinnormal_vertex'] = \"#ifdef USE_SKINNING\\n\\n\\tmat4 skinMatrix = mat4( 0.0 );\\n\\tskinMatrix += skinWeight.x * boneMatX;\\n\\tskinMatrix += skinWeight.y * boneMatY;\\n\\tskinMatrix += skinWeight.z * boneMatZ;\\n\\tskinMatrix += skinWeight.w * boneMatW;\\n\\tskinMatrix  = bindMatrixInverse * skinMatrix * bindMatrix;\\n\\n\\tobjectNormal = vec4( skinMatrix * vec4( objectNormal, 0.0 ) ).xyz;\\n\\n#endif\\n\"; // File:src/renderers/shaders/ShaderChunk/specularmap_fragment.glsl\n\nTHREE.ShaderChunk['specularmap_fragment'] = \"float specularStrength;\\n\\n#ifdef USE_SPECULARMAP\\n\\n\\tvec4 texelSpecular = texture2D( specularMap, vUv );\\n\\tspecularStrength = texelSpecular.r;\\n\\n#else\\n\\n\\tspecularStrength = 1.0;\\n\\n#endif\"; // File:src/renderers/shaders/ShaderChunk/specularmap_pars_fragment.glsl\n\nTHREE.ShaderChunk['specularmap_pars_fragment'] = \"#ifdef USE_SPECULARMAP\\n\\n\\tuniform sampler2D specularMap;\\n\\n#endif\"; // File:src/renderers/shaders/ShaderChunk/tonemapping_fragment.glsl\n\nTHREE.ShaderChunk['tonemapping_fragment'] = \"#if defined( TONE_MAPPING )\\n\\n  gl_FragColor.rgb = toneMapping( gl_FragColor.rgb );\\n\\n#endif\\n\"; // File:src/renderers/shaders/ShaderChunk/tonemapping_pars_fragment.glsl\n\nTHREE.ShaderChunk['tonemapping_pars_fragment'] = \"#define saturate(a) clamp( a, 0.0, 1.0 )\\n\\nuniform float toneMappingExposure;\\nuniform float toneMappingWhitePoint;\\n\\n// exposure only\\nvec3 LinearToneMapping( vec3 color ) {\\n\\n  return toneMappingExposure * color;\\n\\n}\\n\\n// source: https://www.cs.utah.edu/~reinhard/cdrom/\\nvec3 ReinhardToneMapping( vec3 color ) {\\n\\n  color *= toneMappingExposure;\\n  return saturate( color / ( vec3( 1.0 ) + color ) );\\n\\n}\\n\\n// source: http://filmicgames.com/archives/75\\n#define Uncharted2Helper( x ) max( ( ( x * ( 0.15 * x + 0.10 * 0.50 ) + 0.20 * 0.02 ) / ( x * ( 0.15 * x + 0.50 ) + 0.20 * 0.30 ) ) - 0.02 / 0.30, vec3( 0.0 ) )\\nvec3 Uncharted2ToneMapping( vec3 color ) {\\n\\n  // John Hable's filmic operator from Uncharted 2 video game\\n  color *= toneMappingExposure;\\n  return saturate( Uncharted2Helper( color ) / Uncharted2Helper( vec3( toneMappingWhitePoint ) ) );\\n\\n}\\n\\n// source: http://filmicgames.com/archives/75\\nvec3 OptimizedCineonToneMapping( vec3 color ) {\\n\\n  // optimized filmic operator by Jim Hejl and Richard Burgess-Dawson\\n  color *= toneMappingExposure;\\n  color = max( vec3( 0.0 ), color - 0.004 );\\n  return pow( ( color * ( 6.2 * color + 0.5 ) ) / ( color * ( 6.2 * color + 1.7 ) + 0.06 ), vec3( 2.2 ) );\\n\\n}\\n\"; // File:src/renderers/shaders/ShaderChunk/uv2_pars_fragment.glsl\n\nTHREE.ShaderChunk['uv2_pars_fragment'] = \"#if defined( USE_LIGHTMAP ) || defined( USE_AOMAP )\\n\\n\\tvarying vec2 vUv2;\\n\\n#endif\"; // File:src/renderers/shaders/ShaderChunk/uv2_pars_vertex.glsl\n\nTHREE.ShaderChunk['uv2_pars_vertex'] = \"#if defined( USE_LIGHTMAP ) || defined( USE_AOMAP )\\n\\n\\tattribute vec2 uv2;\\n\\tvarying vec2 vUv2;\\n\\n#endif\"; // File:src/renderers/shaders/ShaderChunk/uv2_vertex.glsl\n\nTHREE.ShaderChunk['uv2_vertex'] = \"#if defined( USE_LIGHTMAP ) || defined( USE_AOMAP )\\n\\n\\tvUv2 = uv2;\\n\\n#endif\"; // File:src/renderers/shaders/ShaderChunk/uv_pars_fragment.glsl\n\nTHREE.ShaderChunk['uv_pars_fragment'] = \"#if defined( USE_MAP ) || defined( USE_BUMPMAP ) || defined( USE_NORMALMAP ) || defined( USE_SPECULARMAP ) || defined( USE_ALPHAMAP ) || defined( USE_EMISSIVEMAP ) || defined( USE_ROUGHNESSMAP ) || defined( USE_METALNESSMAP )\\n\\n\\tvarying vec2 vUv;\\n\\n#endif\"; // File:src/renderers/shaders/ShaderChunk/uv_pars_vertex.glsl\n\nTHREE.ShaderChunk['uv_pars_vertex'] = \"#if defined( USE_MAP ) || defined( USE_BUMPMAP ) || defined( USE_NORMALMAP ) || defined( USE_SPECULARMAP ) || defined( USE_ALPHAMAP ) || defined( USE_EMISSIVEMAP ) || defined( USE_ROUGHNESSMAP ) || defined( USE_METALNESSMAP )\\n\\n\\tvarying vec2 vUv;\\n\\tuniform vec4 offsetRepeat;\\n\\n#endif\\n\"; // File:src/renderers/shaders/ShaderChunk/uv_vertex.glsl\n\nTHREE.ShaderChunk['uv_vertex'] = \"#if defined( USE_MAP ) || defined( USE_BUMPMAP ) || defined( USE_NORMALMAP ) || defined( USE_SPECULARMAP ) || defined( USE_ALPHAMAP ) || defined( USE_EMISSIVEMAP ) || defined( USE_ROUGHNESSMAP ) || defined( USE_METALNESSMAP )\\n\\n\\tvUv = uv * offsetRepeat.zw + offsetRepeat.xy;\\n\\n#endif\"; // File:src/renderers/shaders/ShaderChunk/worldpos_vertex.glsl\n\nTHREE.ShaderChunk['worldpos_vertex'] = \"#if defined( USE_ENVMAP ) || defined( PHONG ) || defined( STANDARD ) || defined( LAMBERT ) || defined ( USE_SHADOWMAP )\\n\\n\\t#ifdef USE_SKINNING\\n\\n\\t\\tvec4 worldPosition = modelMatrix * skinned;\\n\\n\\t#else\\n\\n\\t\\tvec4 worldPosition = modelMatrix * vec4( transformed, 1.0 );\\n\\n\\t#endif\\n\\n#endif\\n\"; // File:src/renderers/shaders/ShaderLib/meshbasic_frag.glsl\n\nTHREE.ShaderChunk['meshbasic_frag'] = \"uniform vec3 diffuse;\\nuniform float opacity;\\n\\n#ifndef FLAT_SHADED\\n\\n\\tvarying vec3 vNormal;\\n\\n#endif\\n\\n#include <common>\\n#include <color_pars_fragment>\\n#include <uv_pars_fragment>\\n#include <uv2_pars_fragment>\\n#include <map_pars_fragment>\\n#include <alphamap_pars_fragment>\\n#include <aomap_pars_fragment>\\n#include <envmap_pars_fragment>\\n#include <fog_pars_fragment>\\n#include <specularmap_pars_fragment>\\n#include <logdepthbuf_pars_fragment>\\n\\nvoid main() {\\n\\n\\tvec4 diffuseColor = vec4( diffuse, opacity );\\n\\n\\t#include <logdepthbuf_fragment>\\n\\t#include <map_fragment>\\n\\t#include <color_fragment>\\n\\t#include <alphamap_fragment>\\n\\t#include <alphatest_fragment>\\n\\t#include <specularmap_fragment>\\n\\n\\tReflectedLight reflectedLight;\\n\\treflectedLight.directDiffuse = vec3( 0.0 );\\n\\treflectedLight.directSpecular = vec3( 0.0 );\\n\\treflectedLight.indirectDiffuse = diffuseColor.rgb;\\n\\treflectedLight.indirectSpecular = vec3( 0.0 );\\n\\n\\t#include <aomap_fragment>\\n\\n\\tvec3 outgoingLight = reflectedLight.indirectDiffuse;\\n\\n\\t#include <envmap_fragment>\\n\\n\\tgl_FragColor = vec4( outgoingLight, diffuseColor.a );\\n\\n\\t#include <premultiplied_alpha_fragment>\\n\\t#include <tonemapping_fragment>\\n\\t#include <encodings_fragment>\\n\\t#include <fog_fragment>\\n\\n}\\n\"; // File:src/renderers/shaders/ShaderLib/meshbasic_vert.glsl\n\nTHREE.ShaderChunk['meshbasic_vert'] = \"#include <common>\\n#include <uv_pars_vertex>\\n#include <uv2_pars_vertex>\\n#include <envmap_pars_vertex>\\n#include <color_pars_vertex>\\n#include <morphtarget_pars_vertex>\\n#include <skinning_pars_vertex>\\n#include <logdepthbuf_pars_vertex>\\n\\nvoid main() {\\n\\n\\t#include <uv_vertex>\\n\\t#include <uv2_vertex>\\n\\t#include <color_vertex>\\n\\t#include <skinbase_vertex>\\n\\n\\t#ifdef USE_ENVMAP\\n\\n\\t#include <beginnormal_vertex>\\n\\t#include <morphnormal_vertex>\\n\\t#include <skinnormal_vertex>\\n\\t#include <defaultnormal_vertex>\\n\\n\\t#endif\\n\\n\\t#include <begin_vertex>\\n\\t#include <morphtarget_vertex>\\n\\t#include <skinning_vertex>\\n\\t#include <project_vertex>\\n\\t#include <logdepthbuf_vertex>\\n\\n\\t#include <worldpos_vertex>\\n\\t#include <envmap_vertex>\\n\\n}\\n\"; // File:src/renderers/shaders/UniformsUtils.js\n\n/**\n * Uniform Utilities\n */\n\nTHREE.UniformsUtils = {\n  merge: function (uniforms) {\n    var merged = {};\n\n    for (var u = 0; u < uniforms.length; u++) {\n      var tmp = this.clone(uniforms[u]);\n\n      for (var p in tmp) {\n        merged[p] = tmp[p];\n      }\n    }\n\n    return merged;\n  },\n  clone: function (uniforms_src) {\n    var uniforms_dst = {};\n\n    for (var u in uniforms_src) {\n      uniforms_dst[u] = {};\n\n      for (var p in uniforms_src[u]) {\n        var parameter_src = uniforms_src[u][p];\n\n        if (parameter_src instanceof THREE.Color || parameter_src instanceof THREE.Vector2 || parameter_src instanceof THREE.Vector3 || parameter_src instanceof THREE.Vector4 || parameter_src instanceof THREE.Matrix3 || parameter_src instanceof THREE.Matrix4 || parameter_src instanceof THREE.Texture) {\n          uniforms_dst[u][p] = parameter_src.clone();\n        } else if (Array.isArray(parameter_src)) {\n          uniforms_dst[u][p] = parameter_src.slice();\n        } else {\n          uniforms_dst[u][p] = parameter_src;\n        }\n      }\n    }\n\n    return uniforms_dst;\n  }\n}; // File:src/renderers/shaders/UniformsLib.js\n\n/**\n * Uniforms library for shared webgl shaders\n */\n\nTHREE.UniformsLib = {\n  common: {\n    \"diffuse\": {\n      type: \"c\",\n      value: new THREE.Color(0xeeeeee)\n    },\n    \"opacity\": {\n      type: \"f\",\n      value: 1.0\n    },\n    \"map\": {\n      type: \"t\",\n      value: null\n    },\n    \"offsetRepeat\": {\n      type: \"v4\",\n      value: new THREE.Vector4(0, 0, 1, 1)\n    },\n    \"specularMap\": {\n      type: \"t\",\n      value: null\n    },\n    \"alphaMap\": {\n      type: \"t\",\n      value: null\n    },\n    \"envMap\": {\n      type: \"t\",\n      value: null\n    },\n    \"flipEnvMap\": {\n      type: \"f\",\n      value: -1\n    },\n    \"reflectivity\": {\n      type: \"f\",\n      value: 1.0\n    },\n    \"refractionRatio\": {\n      type: \"f\",\n      value: 0.98\n    }\n  },\n  aomap: {\n    \"aoMap\": {\n      type: \"t\",\n      value: null\n    },\n    \"aoMapIntensity\": {\n      type: \"f\",\n      value: 1\n    }\n  },\n  lightmap: {\n    \"lightMap\": {\n      type: \"t\",\n      value: null\n    },\n    \"lightMapIntensity\": {\n      type: \"f\",\n      value: 1\n    }\n  },\n  emissivemap: {\n    \"emissiveMap\": {\n      type: \"t\",\n      value: null\n    }\n  },\n  bumpmap: {\n    \"bumpMap\": {\n      type: \"t\",\n      value: null\n    },\n    \"bumpScale\": {\n      type: \"f\",\n      value: 1\n    }\n  },\n  normalmap: {\n    \"normalMap\": {\n      type: \"t\",\n      value: null\n    },\n    \"normalScale\": {\n      type: \"v2\",\n      value: new THREE.Vector2(1, 1)\n    }\n  },\n  displacementmap: {\n    \"displacementMap\": {\n      type: \"t\",\n      value: null\n    },\n    \"displacementScale\": {\n      type: \"f\",\n      value: 1\n    },\n    \"displacementBias\": {\n      type: \"f\",\n      value: 0\n    }\n  },\n  roughnessmap: {\n    \"roughnessMap\": {\n      type: \"t\",\n      value: null\n    }\n  },\n  metalnessmap: {\n    \"metalnessMap\": {\n      type: \"t\",\n      value: null\n    }\n  },\n  fog: {\n    \"fogDensity\": {\n      type: \"f\",\n      value: 0.00025\n    },\n    \"fogNear\": {\n      type: \"f\",\n      value: 1\n    },\n    \"fogFar\": {\n      type: \"f\",\n      value: 2000\n    },\n    \"fogColor\": {\n      type: \"c\",\n      value: new THREE.Color(0xffffff)\n    }\n  },\n  lights: {\n    \"ambientLightColor\": {\n      type: \"fv\",\n      value: []\n    },\n    \"directionalLights\": {\n      type: \"sa\",\n      value: [],\n      properties: {\n        \"direction\": {\n          type: \"v3\"\n        },\n        \"color\": {\n          type: \"c\"\n        },\n        \"shadow\": {\n          type: \"i\"\n        },\n        \"shadowBias\": {\n          type: \"f\"\n        },\n        \"shadowRadius\": {\n          type: \"f\"\n        },\n        \"shadowMapSize\": {\n          type: \"v2\"\n        }\n      }\n    },\n    \"directionalShadowMap\": {\n      type: \"tv\",\n      value: []\n    },\n    \"directionalShadowMatrix\": {\n      type: \"m4v\",\n      value: []\n    },\n    \"spotLights\": {\n      type: \"sa\",\n      value: [],\n      properties: {\n        \"color\": {\n          type: \"c\"\n        },\n        \"position\": {\n          type: \"v3\"\n        },\n        \"direction\": {\n          type: \"v3\"\n        },\n        \"distance\": {\n          type: \"f\"\n        },\n        \"coneCos\": {\n          type: \"f\"\n        },\n        \"penumbraCos\": {\n          type: \"f\"\n        },\n        \"decay\": {\n          type: \"f\"\n        },\n        \"shadow\": {\n          type: \"i\"\n        },\n        \"shadowBias\": {\n          type: \"f\"\n        },\n        \"shadowRadius\": {\n          type: \"f\"\n        },\n        \"shadowMapSize\": {\n          type: \"v2\"\n        }\n      }\n    },\n    \"spotShadowMap\": {\n      type: \"tv\",\n      value: []\n    },\n    \"spotShadowMatrix\": {\n      type: \"m4v\",\n      value: []\n    },\n    \"pointLights\": {\n      type: \"sa\",\n      value: [],\n      properties: {\n        \"color\": {\n          type: \"c\"\n        },\n        \"position\": {\n          type: \"v3\"\n        },\n        \"decay\": {\n          type: \"f\"\n        },\n        \"distance\": {\n          type: \"f\"\n        },\n        \"shadow\": {\n          type: \"i\"\n        },\n        \"shadowBias\": {\n          type: \"f\"\n        },\n        \"shadowRadius\": {\n          type: \"f\"\n        },\n        \"shadowMapSize\": {\n          type: \"v2\"\n        }\n      }\n    },\n    \"pointShadowMap\": {\n      type: \"tv\",\n      value: []\n    },\n    \"pointShadowMatrix\": {\n      type: \"m4v\",\n      value: []\n    },\n    \"hemisphereLights\": {\n      type: \"sa\",\n      value: [],\n      properties: {\n        \"direction\": {\n          type: \"v3\"\n        },\n        \"skyColor\": {\n          type: \"c\"\n        },\n        \"groundColor\": {\n          type: \"c\"\n        }\n      }\n    }\n  },\n  points: {\n    \"diffuse\": {\n      type: \"c\",\n      value: new THREE.Color(0xeeeeee)\n    },\n    \"opacity\": {\n      type: \"f\",\n      value: 1.0\n    },\n    \"size\": {\n      type: \"f\",\n      value: 1.0\n    },\n    \"scale\": {\n      type: \"f\",\n      value: 1.0\n    },\n    \"map\": {\n      type: \"t\",\n      value: null\n    },\n    \"offsetRepeat\": {\n      type: \"v4\",\n      value: new THREE.Vector4(0, 0, 1, 1)\n    }\n  }\n}; // File:src/renderers/shaders/ShaderLib.js\n\n/**\n * Webgl Shader Library for three.js\n *\n * @author alteredq / http://alteredqualia.com/\n * @author mrdoob / http://mrdoob.com/\n * @author mikael emtinger / http://gomo.se/\n */\n\nTHREE.ShaderLib = {\n  'basic': {\n    uniforms: THREE.UniformsUtils.merge([THREE.UniformsLib[\"common\"], THREE.UniformsLib[\"aomap\"], THREE.UniformsLib[\"fog\"]]),\n    vertexShader: THREE.ShaderChunk['meshbasic_vert'],\n    fragmentShader: THREE.ShaderChunk['meshbasic_frag']\n  },\n  'lambert': {\n    uniforms: THREE.UniformsUtils.merge([THREE.UniformsLib[\"common\"], THREE.UniformsLib[\"aomap\"], THREE.UniformsLib[\"lightmap\"], THREE.UniformsLib[\"emissivemap\"], THREE.UniformsLib[\"fog\"], THREE.UniformsLib[\"lights\"], {\n      \"emissive\": {\n        type: \"c\",\n        value: new THREE.Color(0x000000)\n      }\n    }]),\n    vertexShader: THREE.ShaderChunk['meshlambert_vert'],\n    fragmentShader: THREE.ShaderChunk['meshlambert_frag']\n  },\n  'phong': {\n    uniforms: THREE.UniformsUtils.merge([THREE.UniformsLib[\"common\"], THREE.UniformsLib[\"aomap\"], THREE.UniformsLib[\"lightmap\"], THREE.UniformsLib[\"emissivemap\"], THREE.UniformsLib[\"bumpmap\"], THREE.UniformsLib[\"normalmap\"], THREE.UniformsLib[\"displacementmap\"], THREE.UniformsLib[\"fog\"], THREE.UniformsLib[\"lights\"], {\n      \"emissive\": {\n        type: \"c\",\n        value: new THREE.Color(0x000000)\n      },\n      \"specular\": {\n        type: \"c\",\n        value: new THREE.Color(0x111111)\n      },\n      \"shininess\": {\n        type: \"f\",\n        value: 30\n      }\n    }]),\n    vertexShader: THREE.ShaderChunk['meshphong_vert'],\n    fragmentShader: THREE.ShaderChunk['meshphong_frag']\n  },\n  'standard': {\n    uniforms: THREE.UniformsUtils.merge([THREE.UniformsLib[\"common\"], THREE.UniformsLib[\"aomap\"], THREE.UniformsLib[\"lightmap\"], THREE.UniformsLib[\"emissivemap\"], THREE.UniformsLib[\"bumpmap\"], THREE.UniformsLib[\"normalmap\"], THREE.UniformsLib[\"displacementmap\"], THREE.UniformsLib[\"roughnessmap\"], THREE.UniformsLib[\"metalnessmap\"], THREE.UniformsLib[\"fog\"], THREE.UniformsLib[\"lights\"], {\n      \"emissive\": {\n        type: \"c\",\n        value: new THREE.Color(0x000000)\n      },\n      \"roughness\": {\n        type: \"f\",\n        value: 0.5\n      },\n      \"metalness\": {\n        type: \"f\",\n        value: 0\n      },\n      \"envMapIntensity\": {\n        type: \"f\",\n        value: 1 // temporary\n\n      }\n    }]),\n    vertexShader: THREE.ShaderChunk['meshstandard_vert'],\n    fragmentShader: THREE.ShaderChunk['meshstandard_frag']\n  },\n  'points': {\n    uniforms: THREE.UniformsUtils.merge([THREE.UniformsLib[\"points\"], THREE.UniformsLib[\"fog\"]]),\n    vertexShader: THREE.ShaderChunk['points_vert'],\n    fragmentShader: THREE.ShaderChunk['points_frag']\n  },\n  'dashed': {\n    uniforms: THREE.UniformsUtils.merge([THREE.UniformsLib[\"common\"], THREE.UniformsLib[\"fog\"], {\n      \"scale\": {\n        type: \"f\",\n        value: 1\n      },\n      \"dashSize\": {\n        type: \"f\",\n        value: 1\n      },\n      \"totalSize\": {\n        type: \"f\",\n        value: 2\n      }\n    }]),\n    vertexShader: THREE.ShaderChunk['linedashed_vert'],\n    fragmentShader: THREE.ShaderChunk['linedashed_frag']\n  },\n  'depth': {\n    uniforms: {\n      \"mNear\": {\n        type: \"f\",\n        value: 1.0\n      },\n      \"mFar\": {\n        type: \"f\",\n        value: 2000.0\n      },\n      \"opacity\": {\n        type: \"f\",\n        value: 1.0\n      }\n    },\n    vertexShader: THREE.ShaderChunk['depth_vert'],\n    fragmentShader: THREE.ShaderChunk['depth_frag']\n  },\n  'normal': {\n    uniforms: {\n      \"opacity\": {\n        type: \"f\",\n        value: 1.0\n      }\n    },\n    vertexShader: THREE.ShaderChunk['normal_vert'],\n    fragmentShader: THREE.ShaderChunk['normal_frag']\n  },\n\n  /* -------------------------------------------------------------------------\n  //\tCube map shader\n   ------------------------------------------------------------------------- */\n  'cube': {\n    uniforms: {\n      \"tCube\": {\n        type: \"t\",\n        value: null\n      },\n      \"tFlip\": {\n        type: \"f\",\n        value: -1\n      }\n    },\n    vertexShader: THREE.ShaderChunk['cube_vert'],\n    fragmentShader: THREE.ShaderChunk['cube_frag']\n  },\n\n  /* -------------------------------------------------------------------------\n  //\tCube map shader\n   ------------------------------------------------------------------------- */\n  'equirect': {\n    uniforms: {\n      \"tEquirect\": {\n        type: \"t\",\n        value: null\n      },\n      \"tFlip\": {\n        type: \"f\",\n        value: -1\n      }\n    },\n    vertexShader: THREE.ShaderChunk['equirect_vert'],\n    fragmentShader: THREE.ShaderChunk['equirect_frag']\n  },\n\n  /* Depth encoding into RGBA texture\n   *\n   * based on SpiderGL shadow map example\n   * http://spidergl.org/example.php?id=6\n   *\n   * originally from\n   * http://www.gamedev.net/topic/442138-packing-a-float-into-a-a8r8g8b8-texture-shader/page__whichpage__1%25EF%25BF%25BD\n   *\n   * see also\n   * http://aras-p.info/blog/2009/07/30/encoding-floats-to-rgba-the-final/\n   */\n  'depthRGBA': {\n    uniforms: {},\n    vertexShader: THREE.ShaderChunk['depthRGBA_vert'],\n    fragmentShader: THREE.ShaderChunk['depthRGBA_frag']\n  },\n  'distanceRGBA': {\n    uniforms: {\n      \"lightPos\": {\n        type: \"v3\",\n        value: new THREE.Vector3(0, 0, 0)\n      }\n    },\n    vertexShader: THREE.ShaderChunk['distanceRGBA_vert'],\n    fragmentShader: THREE.ShaderChunk['distanceRGBA_frag']\n  }\n}; // File:src/renderers/WebGLRenderer.js\n\n/**\n * @author supereggbert / http://www.paulbrunt.co.uk/\n * @author mrdoob / http://mrdoob.com/\n * @author alteredq / http://alteredqualia.com/\n * @author szimek / https://github.com/szimek/\n */\n\nTHREE.WebGLRenderer = function (parameters) {\n  parameters = parameters || {};\n\n  var _canvas = parameters.canvas !== undefined ? parameters.canvas : document.createElement('canvas'),\n      _context = parameters.context !== undefined ? parameters.context : null,\n      _alpha = parameters.alpha !== undefined ? parameters.alpha : false,\n      _depth = parameters.depth !== undefined ? parameters.depth : true,\n      _stencil = parameters.stencil !== undefined ? parameters.stencil : true,\n      _antialias = parameters.antialias !== undefined ? parameters.antialias : false,\n      _premultipliedAlpha = parameters.premultipliedAlpha !== undefined ? parameters.premultipliedAlpha : true,\n      _preserveDrawingBuffer = parameters.preserveDrawingBuffer !== undefined ? parameters.preserveDrawingBuffer : false;\n\n  var lights = [];\n  var opaqueObjects = [];\n  var opaqueObjectsLastIndex = -1;\n  var transparentObjects = [];\n  var transparentObjectsLastIndex = -1;\n  var morphInfluences = new Float32Array(8);\n  var sprites = [];\n  var lensFlares = []; // public properties\n\n  this.domElement = _canvas;\n  this.context = null; // clearing\n\n  this.autoClear = true;\n  this.autoClearColor = true;\n  this.autoClearDepth = true;\n  this.autoClearStencil = true; // scene graph\n\n  this.sortObjects = true; // physically based shading\n\n  this.gammaFactor = 2.0; // for backwards compatibility\n\n  this.gammaInput = false;\n  this.gammaOutput = false; // physical lights\n\n  this.physicallyCorrectLights = false; // tone mapping\n\n  this.toneMapping = THREE.LinearToneMapping;\n  this.toneMappingExposure = 1.0;\n  this.toneMappingWhitePoint = 1.0; // morphs\n\n  this.maxMorphTargets = 8;\n  this.maxMorphNormals = 4; // flags\n\n  this.autoScaleCubemaps = true; // internal properties\n\n  var _this = this,\n      // internal state cache\n  _currentProgram = null,\n      _currentRenderTarget = null,\n      _currentFramebuffer = null,\n      _currentMaterialId = -1,\n      _currentGeometryProgram = '',\n      _currentCamera = null,\n      _currentScissor = new THREE.Vector4(),\n      _currentScissorTest = null,\n      _currentViewport = new THREE.Vector4(),\n      //\n  _usedTextureUnits = 0,\n      //\n  _clearColor = new THREE.Color(0x000000),\n      _clearAlpha = 0,\n      _width = _canvas.width,\n      _height = _canvas.height,\n      _pixelRatio = 1,\n      _scissor = new THREE.Vector4(0, 0, _width, _height),\n      _scissorTest = false,\n      _viewport = new THREE.Vector4(0, 0, _width, _height),\n      // frustum\n  _frustum = new THREE.Frustum(),\n      // camera matrices cache\n  _projScreenMatrix = new THREE.Matrix4(),\n      _vector3 = new THREE.Vector3(),\n      // light arrays cache\n  _lights = {\n    hash: '',\n    ambient: [0, 0, 0],\n    directional: [],\n    directionalShadowMap: [],\n    directionalShadowMatrix: [],\n    spot: [],\n    spotShadowMap: [],\n    spotShadowMatrix: [],\n    point: [],\n    pointShadowMap: [],\n    pointShadowMatrix: [],\n    hemi: [],\n    shadows: [],\n    shadowsPointLight: 0\n  },\n      // info\n  _infoMemory = {\n    geometries: 0,\n    textures: 0\n  },\n      _infoRender = {\n    calls: 0,\n    vertices: 0,\n    faces: 0,\n    points: 0\n  };\n\n  this.info = {\n    render: _infoRender,\n    memory: _infoMemory,\n    programs: null\n  }; // initialize\n\n  var _gl;\n\n  try {\n    var attributes = {\n      alpha: _alpha,\n      depth: _depth,\n      stencil: _stencil,\n      antialias: _antialias,\n      premultipliedAlpha: _premultipliedAlpha,\n      preserveDrawingBuffer: _preserveDrawingBuffer\n    };\n    _gl = _context || _canvas.getContext('webgl', attributes) || _canvas.getContext('experimental-webgl', attributes);\n\n    if (_gl === null) {\n      if (_canvas.getContext('webgl') !== null) {\n        throw 'Error creating WebGL context with your selected attributes.';\n      } else {\n        throw 'Error creating WebGL context.';\n      }\n    } // Some experimental-webgl implementations do not have getShaderPrecisionFormat\n\n\n    if (_gl.getShaderPrecisionFormat === undefined) {\n      _gl.getShaderPrecisionFormat = function () {\n        return {\n          'rangeMin': 1,\n          'rangeMax': 1,\n          'precision': 1\n        };\n      };\n    }\n\n    _canvas.addEventListener('webglcontextlost', onContextLost, false);\n  } catch (error) {}\n\n  var extensions = new THREE.WebGLExtensions(_gl);\n  extensions.get('OES_texture_float');\n  extensions.get('OES_texture_float_linear');\n  extensions.get('OES_texture_half_float');\n  extensions.get('OES_texture_half_float_linear');\n  extensions.get('OES_standard_derivatives');\n  extensions.get('ANGLE_instanced_arrays');\n\n  if (extensions.get('OES_element_index_uint')) {\n    THREE.BufferGeometry.MaxIndex = 4294967296;\n  }\n\n  var capabilities = new THREE.WebGLCapabilities(_gl, extensions, parameters);\n  var state = new THREE.WebGLState(_gl, extensions, paramThreeToGL);\n  var properties = new THREE.WebGLProperties();\n  var objects = new THREE.WebGLObjects(_gl, properties, this.info);\n  var programCache = new THREE.WebGLPrograms(this, capabilities);\n  var lightCache = new THREE.WebGLLights();\n  this.info.programs = programCache.programs;\n  var bufferRenderer = new THREE.WebGLBufferRenderer(_gl, extensions, _infoRender);\n  var indexedBufferRenderer = new THREE.WebGLIndexedBufferRenderer(_gl, extensions, _infoRender); //\n\n  function getTargetPixelRatio() {\n    return _currentRenderTarget === null ? _pixelRatio : 1;\n  }\n\n  function glClearColor(r, g, b, a) {\n    if (_premultipliedAlpha === true) {\n      r *= a;\n      g *= a;\n      b *= a;\n    }\n\n    state.clearColor(r, g, b, a);\n  }\n\n  function setDefaultGLState() {\n    state.init();\n    state.scissor(_currentScissor.copy(_scissor).multiplyScalar(_pixelRatio));\n    state.viewport(_currentViewport.copy(_viewport).multiplyScalar(_pixelRatio));\n    glClearColor(_clearColor.r, _clearColor.g, _clearColor.b, _clearAlpha);\n  }\n\n  function resetGLState() {\n    _currentProgram = null;\n    _currentCamera = null;\n    _currentGeometryProgram = '';\n    _currentMaterialId = -1;\n    state.reset();\n  }\n\n  setDefaultGLState();\n  this.context = _gl;\n  this.capabilities = capabilities;\n  this.extensions = extensions;\n  this.properties = properties;\n  this.state = state; // shadow map\n\n  var shadowMap = new THREE.WebGLShadowMap(this, _lights, objects);\n  this.shadowMap = shadowMap; // Plugins\n\n  var spritePlugin = new THREE.SpritePlugin(this, sprites);\n  var lensFlarePlugin = new THREE.LensFlarePlugin(this, lensFlares); // API\n\n  this.getContext = function () {\n    return _gl;\n  };\n\n  this.getContextAttributes = function () {\n    return _gl.getContextAttributes();\n  };\n\n  this.forceContextLoss = function () {\n    extensions.get('WEBGL_lose_context').loseContext();\n  };\n\n  this.getMaxAnisotropy = function () {\n    var value;\n    return function getMaxAnisotropy() {\n      if (value !== undefined) return value;\n      var extension = extensions.get('EXT_texture_filter_anisotropic');\n\n      if (extension !== null) {\n        value = _gl.getParameter(extension.MAX_TEXTURE_MAX_ANISOTROPY_EXT);\n      } else {\n        value = 0;\n      }\n\n      return value;\n    };\n  }();\n\n  this.getPrecision = function () {\n    return capabilities.precision;\n  };\n\n  this.getPixelRatio = function () {\n    return _pixelRatio;\n  };\n\n  this.setPixelRatio = function (value) {\n    if (value === undefined) return;\n    _pixelRatio = value;\n    this.setSize(_viewport.z, _viewport.w, false);\n  };\n\n  this.getSize = function () {\n    return {\n      width: _width,\n      height: _height\n    };\n  };\n\n  this.setSize = function (width, height, updateStyle) {\n    _width = width;\n    _height = height;\n    _canvas.width = width * _pixelRatio;\n    _canvas.height = height * _pixelRatio;\n\n    if (updateStyle !== false) {\n      _canvas.style.width = width + 'px';\n      _canvas.style.height = height + 'px';\n    }\n\n    this.setViewport(0, 0, width, height);\n  };\n\n  this.setViewport = function (x, y, width, height) {\n    state.viewport(_viewport.set(x, y, width, height));\n  };\n\n  this.setScissor = function (x, y, width, height) {\n    state.scissor(_scissor.set(x, y, width, height));\n  };\n\n  this.setScissorTest = function (boolean) {\n    state.setScissorTest(_scissorTest = boolean);\n  }; // Clearing\n\n\n  this.getClearColor = function () {\n    return _clearColor;\n  };\n\n  this.setClearColor = function (color, alpha) {\n    _clearColor.set(color);\n\n    _clearAlpha = alpha !== undefined ? alpha : 1;\n    glClearColor(_clearColor.r, _clearColor.g, _clearColor.b, _clearAlpha);\n  };\n\n  this.getClearAlpha = function () {\n    return _clearAlpha;\n  };\n\n  this.setClearAlpha = function (alpha) {\n    _clearAlpha = alpha;\n    glClearColor(_clearColor.r, _clearColor.g, _clearColor.b, _clearAlpha);\n  };\n\n  this.clear = function (color, depth, stencil) {\n    var bits = 0;\n    if (color === undefined || color) bits |= _gl.COLOR_BUFFER_BIT;\n    if (depth === undefined || depth) bits |= _gl.DEPTH_BUFFER_BIT;\n    if (stencil === undefined || stencil) bits |= _gl.STENCIL_BUFFER_BIT;\n\n    _gl.clear(bits);\n  };\n\n  this.clearColor = function () {\n    this.clear(true, false, false);\n  };\n\n  this.clearDepth = function () {\n    this.clear(false, true, false);\n  };\n\n  this.clearStencil = function () {\n    this.clear(false, false, true);\n  };\n\n  this.clearTarget = function (renderTarget, color, depth, stencil) {\n    this.setRenderTarget(renderTarget);\n    this.clear(color, depth, stencil);\n  }; // Reset\n\n\n  this.resetGLState = resetGLState;\n\n  this.dispose = function () {\n    _canvas.removeEventListener('webglcontextlost', onContextLost, false);\n  }; // Events\n\n\n  function onContextLost(event) {\n    event.preventDefault();\n    resetGLState();\n    setDefaultGLState();\n    properties.clear();\n  }\n\n  function onTextureDispose(event) {\n    var texture = event.target;\n    texture.removeEventListener('dispose', onTextureDispose);\n    deallocateTexture(texture);\n    _infoMemory.textures--;\n  }\n\n  function onRenderTargetDispose(event) {\n    var renderTarget = event.target;\n    renderTarget.removeEventListener('dispose', onRenderTargetDispose);\n    deallocateRenderTarget(renderTarget);\n    _infoMemory.textures--;\n  }\n\n  function onMaterialDispose(event) {\n    var material = event.target;\n    material.removeEventListener('dispose', onMaterialDispose);\n    deallocateMaterial(material);\n  } // Buffer deallocation\n\n\n  function deallocateTexture(texture) {\n    var textureProperties = properties.get(texture);\n\n    if (texture.image && textureProperties.__image__webglTextureCube) {\n      // cube texture\n      _gl.deleteTexture(textureProperties.__image__webglTextureCube);\n    } else {\n      // 2D texture\n      if (textureProperties.__webglInit === undefined) return;\n\n      _gl.deleteTexture(textureProperties.__webglTexture);\n    } // remove all webgl properties\n\n\n    properties.delete(texture);\n  }\n\n  function deallocateRenderTarget(renderTarget) {\n    var renderTargetProperties = properties.get(renderTarget);\n    var textureProperties = properties.get(renderTarget.texture);\n    if (!renderTarget || textureProperties.__webglTexture === undefined) return;\n\n    _gl.deleteTexture(textureProperties.__webglTexture);\n\n    if (renderTarget instanceof THREE.WebGLRenderTargetCube) {\n      for (var i = 0; i < 6; i++) {\n        _gl.deleteFramebuffer(renderTargetProperties.__webglFramebuffer[i]);\n\n        _gl.deleteRenderbuffer(renderTargetProperties.__webglDepthbuffer[i]);\n      }\n    } else {\n      _gl.deleteFramebuffer(renderTargetProperties.__webglFramebuffer);\n\n      _gl.deleteRenderbuffer(renderTargetProperties.__webglDepthbuffer);\n    }\n\n    properties.delete(renderTarget.texture);\n    properties.delete(renderTarget);\n  }\n\n  function deallocateMaterial(material) {\n    releaseMaterialProgramReference(material);\n    properties.delete(material);\n  }\n\n  function releaseMaterialProgramReference(material) {\n    var programInfo = properties.get(material).program;\n    material.program = undefined;\n\n    if (programInfo !== undefined) {\n      programCache.releaseProgram(programInfo);\n    }\n  } // Buffer rendering\n\n\n  this.renderBufferImmediate = function (object, program, material) {\n    state.initAttributes();\n    var buffers = properties.get(object);\n    if (object.hasPositions && !buffers.position) buffers.position = _gl.createBuffer();\n    if (object.hasNormals && !buffers.normal) buffers.normal = _gl.createBuffer();\n    if (object.hasUvs && !buffers.uv) buffers.uv = _gl.createBuffer();\n    if (object.hasColors && !buffers.color) buffers.color = _gl.createBuffer();\n    var attributes = program.getAttributes();\n\n    if (object.hasPositions) {\n      _gl.bindBuffer(_gl.ARRAY_BUFFER, buffers.position);\n\n      _gl.bufferData(_gl.ARRAY_BUFFER, object.positionArray, _gl.DYNAMIC_DRAW);\n\n      state.enableAttribute(attributes.position);\n\n      _gl.vertexAttribPointer(attributes.position, 3, _gl.FLOAT, false, 0, 0);\n    }\n\n    if (object.hasNormals) {\n      _gl.bindBuffer(_gl.ARRAY_BUFFER, buffers.normal);\n\n      if (material.type !== 'MeshPhongMaterial' && material.type !== 'MeshStandardMaterial' && material.shading === THREE.FlatShading) {\n        for (var i = 0, l = object.count * 3; i < l; i += 9) {\n          var array = object.normalArray;\n          var nx = (array[i + 0] + array[i + 3] + array[i + 6]) / 3;\n          var ny = (array[i + 1] + array[i + 4] + array[i + 7]) / 3;\n          var nz = (array[i + 2] + array[i + 5] + array[i + 8]) / 3;\n          array[i + 0] = nx;\n          array[i + 1] = ny;\n          array[i + 2] = nz;\n          array[i + 3] = nx;\n          array[i + 4] = ny;\n          array[i + 5] = nz;\n          array[i + 6] = nx;\n          array[i + 7] = ny;\n          array[i + 8] = nz;\n        }\n      }\n\n      _gl.bufferData(_gl.ARRAY_BUFFER, object.normalArray, _gl.DYNAMIC_DRAW);\n\n      state.enableAttribute(attributes.normal);\n\n      _gl.vertexAttribPointer(attributes.normal, 3, _gl.FLOAT, false, 0, 0);\n    }\n\n    if (object.hasUvs && material.map) {\n      _gl.bindBuffer(_gl.ARRAY_BUFFER, buffers.uv);\n\n      _gl.bufferData(_gl.ARRAY_BUFFER, object.uvArray, _gl.DYNAMIC_DRAW);\n\n      state.enableAttribute(attributes.uv);\n\n      _gl.vertexAttribPointer(attributes.uv, 2, _gl.FLOAT, false, 0, 0);\n    }\n\n    if (object.hasColors && material.vertexColors !== THREE.NoColors) {\n      _gl.bindBuffer(_gl.ARRAY_BUFFER, buffers.color);\n\n      _gl.bufferData(_gl.ARRAY_BUFFER, object.colorArray, _gl.DYNAMIC_DRAW);\n\n      state.enableAttribute(attributes.color);\n\n      _gl.vertexAttribPointer(attributes.color, 3, _gl.FLOAT, false, 0, 0);\n    }\n\n    state.disableUnusedAttributes();\n\n    _gl.drawArrays(_gl.TRIANGLES, 0, object.count);\n\n    object.count = 0;\n  };\n\n  this.renderBufferDirect = function (camera, fog, geometry, material, object, group) {\n    setMaterial(material);\n    var program = setProgram(camera, fog, material, object);\n    var updateBuffers = false;\n    var geometryProgram = geometry.id + '_' + program.id + '_' + material.wireframe;\n\n    if (geometryProgram !== _currentGeometryProgram) {\n      _currentGeometryProgram = geometryProgram;\n      updateBuffers = true;\n    } // morph targets\n\n\n    var morphTargetInfluences = object.morphTargetInfluences;\n\n    if (morphTargetInfluences !== undefined) {\n      var activeInfluences = [];\n\n      for (var i = 0, l = morphTargetInfluences.length; i < l; i++) {\n        var influence = morphTargetInfluences[i];\n        activeInfluences.push([influence, i]);\n      }\n\n      activeInfluences.sort(absNumericalSort);\n\n      if (activeInfluences.length > 8) {\n        activeInfluences.length = 8;\n      }\n\n      var morphAttributes = geometry.morphAttributes;\n\n      for (var i = 0, l = activeInfluences.length; i < l; i++) {\n        var influence = activeInfluences[i];\n        morphInfluences[i] = influence[0];\n\n        if (influence[0] !== 0) {\n          var index = influence[1];\n          if (material.morphTargets === true && morphAttributes.position) geometry.addAttribute('morphTarget' + i, morphAttributes.position[index]);\n          if (material.morphNormals === true && morphAttributes.normal) geometry.addAttribute('morphNormal' + i, morphAttributes.normal[index]);\n        } else {\n          if (material.morphTargets === true) geometry.removeAttribute('morphTarget' + i);\n          if (material.morphNormals === true) geometry.removeAttribute('morphNormal' + i);\n        }\n      }\n\n      var uniforms = program.getUniforms();\n\n      if (uniforms.morphTargetInfluences !== null) {\n        _gl.uniform1fv(uniforms.morphTargetInfluences, morphInfluences);\n      }\n\n      updateBuffers = true;\n    } //\n\n\n    var index = geometry.index;\n    var position = geometry.attributes.position;\n\n    if (material.wireframe === true) {\n      index = objects.getWireframeAttribute(geometry);\n    }\n\n    var renderer;\n\n    if (index !== null) {\n      renderer = indexedBufferRenderer;\n      renderer.setIndex(index);\n    } else {\n      renderer = bufferRenderer;\n    }\n\n    if (updateBuffers) {\n      setupVertexAttributes(material, program, geometry);\n\n      if (index !== null) {\n        _gl.bindBuffer(_gl.ELEMENT_ARRAY_BUFFER, objects.getAttributeBuffer(index));\n      }\n    } //\n\n\n    var dataStart = 0;\n    var dataCount = Infinity;\n\n    if (index !== null) {\n      dataCount = index.count;\n    } else if (position !== undefined) {\n      dataCount = position.count;\n    }\n\n    var rangeStart = geometry.drawRange.start;\n    var rangeCount = geometry.drawRange.count;\n    var groupStart = group !== null ? group.start : 0;\n    var groupCount = group !== null ? group.count : Infinity;\n    var drawStart = Math.max(dataStart, rangeStart, groupStart);\n    var drawEnd = Math.min(dataStart + dataCount, rangeStart + rangeCount, groupStart + groupCount) - 1;\n    var drawCount = Math.max(0, drawEnd - drawStart + 1); //\n\n    if (object instanceof THREE.Mesh) {\n      if (material.wireframe === true) {\n        state.setLineWidth(material.wireframeLinewidth * getTargetPixelRatio());\n        renderer.setMode(_gl.LINES);\n      } else {\n        switch (object.drawMode) {\n          case THREE.TrianglesDrawMode:\n            renderer.setMode(_gl.TRIANGLES);\n            break;\n\n          case THREE.TriangleStripDrawMode:\n            renderer.setMode(_gl.TRIANGLE_STRIP);\n            break;\n\n          case THREE.TriangleFanDrawMode:\n            renderer.setMode(_gl.TRIANGLE_FAN);\n            break;\n        }\n      }\n    } else if (object instanceof THREE.Line) {\n      var lineWidth = material.linewidth;\n      if (lineWidth === undefined) lineWidth = 1; // Not using Line*Material\n\n      state.setLineWidth(lineWidth * getTargetPixelRatio());\n\n      if (object instanceof THREE.LineSegments) {\n        renderer.setMode(_gl.LINES);\n      } else {\n        renderer.setMode(_gl.LINE_STRIP);\n      }\n    } else if (object instanceof THREE.Points) {\n      renderer.setMode(_gl.POINTS);\n    }\n\n    if (geometry instanceof THREE.InstancedBufferGeometry) {\n      if (geometry.maxInstancedCount > 0) {\n        renderer.renderInstances(geometry, drawStart, drawCount);\n      }\n    } else {\n      renderer.render(drawStart, drawCount);\n    }\n  };\n\n  function setupVertexAttributes(material, program, geometry, startIndex) {\n    var extension;\n\n    if (geometry instanceof THREE.InstancedBufferGeometry) {\n      extension = extensions.get('ANGLE_instanced_arrays');\n\n      if (extension === null) {\n        return;\n      }\n    }\n\n    if (startIndex === undefined) startIndex = 0;\n    state.initAttributes();\n    var geometryAttributes = geometry.attributes;\n    var programAttributes = program.getAttributes();\n    var materialDefaultAttributeValues = material.defaultAttributeValues;\n\n    for (var name in programAttributes) {\n      var programAttribute = programAttributes[name];\n\n      if (programAttribute >= 0) {\n        var geometryAttribute = geometryAttributes[name];\n\n        if (geometryAttribute !== undefined) {\n          var size = geometryAttribute.itemSize;\n          var buffer = objects.getAttributeBuffer(geometryAttribute);\n\n          if (geometryAttribute instanceof THREE.InterleavedBufferAttribute) {\n            var data = geometryAttribute.data;\n            var stride = data.stride;\n            var offset = geometryAttribute.offset;\n\n            if (data instanceof THREE.InstancedInterleavedBuffer) {\n              state.enableAttributeAndDivisor(programAttribute, data.meshPerAttribute, extension);\n\n              if (geometry.maxInstancedCount === undefined) {\n                geometry.maxInstancedCount = data.meshPerAttribute * data.count;\n              }\n            } else {\n              state.enableAttribute(programAttribute);\n            }\n\n            _gl.bindBuffer(_gl.ARRAY_BUFFER, buffer);\n\n            _gl.vertexAttribPointer(programAttribute, size, _gl.FLOAT, false, stride * data.array.BYTES_PER_ELEMENT, (startIndex * stride + offset) * data.array.BYTES_PER_ELEMENT);\n          } else {\n            if (geometryAttribute instanceof THREE.InstancedBufferAttribute) {\n              state.enableAttributeAndDivisor(programAttribute, geometryAttribute.meshPerAttribute, extension);\n\n              if (geometry.maxInstancedCount === undefined) {\n                geometry.maxInstancedCount = geometryAttribute.meshPerAttribute * geometryAttribute.count;\n              }\n            } else {\n              state.enableAttribute(programAttribute);\n            }\n\n            _gl.bindBuffer(_gl.ARRAY_BUFFER, buffer);\n\n            _gl.vertexAttribPointer(programAttribute, size, _gl.FLOAT, false, 0, startIndex * size * 4); // 4 bytes per Float32\n\n          }\n        } else if (materialDefaultAttributeValues !== undefined) {\n          var value = materialDefaultAttributeValues[name];\n\n          if (value !== undefined) {\n            switch (value.length) {\n              case 2:\n                _gl.vertexAttrib2fv(programAttribute, value);\n\n                break;\n\n              case 3:\n                _gl.vertexAttrib3fv(programAttribute, value);\n\n                break;\n\n              case 4:\n                _gl.vertexAttrib4fv(programAttribute, value);\n\n                break;\n\n              default:\n                _gl.vertexAttrib1fv(programAttribute, value);\n\n            }\n          }\n        }\n      }\n    }\n\n    state.disableUnusedAttributes();\n  } // Sorting\n\n\n  function absNumericalSort(a, b) {\n    return Math.abs(b[0]) - Math.abs(a[0]);\n  }\n\n  function painterSortStable(a, b) {\n    if (a.object.renderOrder !== b.object.renderOrder) {\n      return a.object.renderOrder - b.object.renderOrder;\n    } else if (a.material.id !== b.material.id) {\n      return a.material.id - b.material.id;\n    } else if (a.z !== b.z) {\n      return a.z - b.z;\n    } else {\n      return a.id - b.id;\n    }\n  }\n\n  function reversePainterSortStable(a, b) {\n    if (a.object.renderOrder !== b.object.renderOrder) {\n      return a.object.renderOrder - b.object.renderOrder;\n    }\n\n    if (a.z !== b.z) {\n      return b.z - a.z;\n    } else {\n      return a.id - b.id;\n    }\n  } // Rendering\n\n\n  this.render = function (scene, camera, renderTarget, forceClear) {\n    if (camera instanceof THREE.Camera === false) {\n      return;\n    }\n\n    var fog = scene.fog; // reset caching for this frame\n\n    _currentGeometryProgram = '';\n    _currentMaterialId = -1;\n    _currentCamera = null; // update scene graph\n\n    if (scene.autoUpdate === true) scene.updateMatrixWorld(); // update camera matrices and frustum\n\n    if (camera.parent === null) camera.updateMatrixWorld();\n    camera.matrixWorldInverse.getInverse(camera.matrixWorld);\n\n    _projScreenMatrix.multiplyMatrices(camera.projectionMatrix, camera.matrixWorldInverse);\n\n    _frustum.setFromMatrix(_projScreenMatrix);\n\n    lights.length = 0;\n    opaqueObjectsLastIndex = -1;\n    transparentObjectsLastIndex = -1;\n    sprites.length = 0;\n    lensFlares.length = 0;\n    projectObject(scene, camera);\n    opaqueObjects.length = opaqueObjectsLastIndex + 1;\n    transparentObjects.length = transparentObjectsLastIndex + 1;\n\n    if (_this.sortObjects === true) {\n      opaqueObjects.sort(painterSortStable);\n      transparentObjects.sort(reversePainterSortStable);\n    }\n\n    setupLights(lights, camera); //\n\n    shadowMap.render(scene, camera); //\n\n    _infoRender.calls = 0;\n    _infoRender.vertices = 0;\n    _infoRender.faces = 0;\n    _infoRender.points = 0;\n\n    if (renderTarget === undefined) {\n      renderTarget = null;\n    }\n\n    this.setRenderTarget(renderTarget);\n\n    if (this.autoClear || forceClear) {\n      this.clear(this.autoClearColor, this.autoClearDepth, this.autoClearStencil);\n    } //\n\n\n    if (scene.overrideMaterial) {\n      var overrideMaterial = scene.overrideMaterial;\n      renderObjects(opaqueObjects, camera, fog, overrideMaterial);\n      renderObjects(transparentObjects, camera, fog, overrideMaterial);\n    } else {\n      // opaque pass (front-to-back order)\n      state.setBlending(THREE.NoBlending);\n      renderObjects(opaqueObjects, camera, fog); // transparent pass (back-to-front order)\n\n      renderObjects(transparentObjects, camera, fog);\n    } // custom render plugins (post pass)\n\n\n    spritePlugin.render(scene, camera);\n    lensFlarePlugin.render(scene, camera, _currentViewport); // Generate mipmap if we're using any kind of mipmap filtering\n\n    if (renderTarget) {\n      var texture = renderTarget.texture;\n\n      if (texture.generateMipmaps && isPowerOfTwo(renderTarget) && texture.minFilter !== THREE.NearestFilter && texture.minFilter !== THREE.LinearFilter) {\n        updateRenderTargetMipmap(renderTarget);\n      }\n    } // Ensure depth buffer writing is enabled so it can be cleared on next render\n\n\n    state.setDepthTest(true);\n    state.setDepthWrite(true);\n    state.setColorWrite(true); // _gl.finish();\n  };\n\n  function pushRenderItem(object, geometry, material, z, group) {\n    var array, index; // allocate the next position in the appropriate array\n\n    if (material.transparent) {\n      array = transparentObjects;\n      index = ++transparentObjectsLastIndex;\n    } else {\n      array = opaqueObjects;\n      index = ++opaqueObjectsLastIndex;\n    } // recycle existing render item or grow the array\n\n\n    var renderItem = array[index];\n\n    if (renderItem !== undefined) {\n      renderItem.id = object.id;\n      renderItem.object = object;\n      renderItem.geometry = geometry;\n      renderItem.material = material;\n      renderItem.z = _vector3.z;\n      renderItem.group = group;\n    } else {\n      renderItem = {\n        id: object.id,\n        object: object,\n        geometry: geometry,\n        material: material,\n        z: _vector3.z,\n        group: group\n      }; // assert( index === array.length );\n\n      array.push(renderItem);\n    }\n  }\n\n  function projectObject(object, camera) {\n    if (object.visible === false) return;\n\n    if (object.layers.test(camera.layers)) {\n      if (object instanceof THREE.Light) {\n        lights.push(object);\n      } else if (object instanceof THREE.Sprite) {\n        if (object.frustumCulled === false || _frustum.intersectsObject(object) === true) {\n          sprites.push(object);\n        }\n      } else if (object instanceof THREE.LensFlare) {\n        lensFlares.push(object);\n      } else if (object instanceof THREE.ImmediateRenderObject) {\n        if (_this.sortObjects === true) {\n          _vector3.setFromMatrixPosition(object.matrixWorld);\n\n          _vector3.applyProjection(_projScreenMatrix);\n        }\n\n        pushRenderItem(object, null, object.material, _vector3.z, null);\n      } else if (object instanceof THREE.Mesh || object instanceof THREE.Line || object instanceof THREE.Points) {\n        if (object instanceof THREE.SkinnedMesh) {\n          object.skeleton.update();\n        }\n\n        if (object.frustumCulled === false || _frustum.intersectsObject(object) === true) {\n          var material = object.material;\n\n          if (material.visible === true) {\n            if (_this.sortObjects === true) {\n              _vector3.setFromMatrixPosition(object.matrixWorld);\n\n              _vector3.applyProjection(_projScreenMatrix);\n            }\n\n            var geometry = objects.update(object);\n\n            if (material instanceof THREE.MultiMaterial) {\n              var groups = geometry.groups;\n              var materials = material.materials;\n\n              for (var i = 0, l = groups.length; i < l; i++) {\n                var group = groups[i];\n                var groupMaterial = materials[group.materialIndex];\n\n                if (groupMaterial.visible === true) {\n                  pushRenderItem(object, geometry, groupMaterial, _vector3.z, group);\n                }\n              }\n            } else {\n              pushRenderItem(object, geometry, material, _vector3.z, null);\n            }\n          }\n        }\n      }\n    }\n\n    var children = object.children;\n\n    for (var i = 0, l = children.length; i < l; i++) {\n      projectObject(children[i], camera);\n    }\n  }\n\n  function renderObjects(renderList, camera, fog, overrideMaterial) {\n    for (var i = 0, l = renderList.length; i < l; i++) {\n      var renderItem = renderList[i];\n      var object = renderItem.object;\n      var geometry = renderItem.geometry;\n      var material = overrideMaterial === undefined ? renderItem.material : overrideMaterial;\n      var group = renderItem.group;\n      object.modelViewMatrix.multiplyMatrices(camera.matrixWorldInverse, object.matrixWorld);\n      object.normalMatrix.getNormalMatrix(object.modelViewMatrix);\n\n      if (object instanceof THREE.ImmediateRenderObject) {\n        setMaterial(material);\n        var program = setProgram(camera, fog, material, object);\n        _currentGeometryProgram = '';\n        object.render(function (object) {\n          _this.renderBufferImmediate(object, program, material);\n        });\n      } else {\n        _this.renderBufferDirect(camera, fog, geometry, material, object, group);\n      }\n    }\n  }\n\n  function initMaterial(material, fog, object) {\n    var materialProperties = properties.get(material);\n    var parameters = programCache.getParameters(material, _lights, fog, object);\n    var code = programCache.getProgramCode(material, parameters);\n    var program = materialProperties.program;\n    var programChange = true;\n\n    if (program === undefined) {\n      // new material\n      material.addEventListener('dispose', onMaterialDispose);\n    } else if (program.code !== code) {\n      // changed glsl or parameters\n      releaseMaterialProgramReference(material);\n    } else if (parameters.shaderID !== undefined) {\n      // same glsl and uniform list\n      return;\n    } else {\n      // only rebuild uniform list\n      programChange = false;\n    }\n\n    if (programChange) {\n      if (parameters.shaderID) {\n        var shader = THREE.ShaderLib[parameters.shaderID];\n        materialProperties.__webglShader = {\n          name: material.type,\n          uniforms: THREE.UniformsUtils.clone(shader.uniforms),\n          vertexShader: shader.vertexShader,\n          fragmentShader: shader.fragmentShader\n        };\n      } else {\n        materialProperties.__webglShader = {\n          name: material.type,\n          uniforms: material.uniforms,\n          vertexShader: material.vertexShader,\n          fragmentShader: material.fragmentShader\n        };\n      }\n\n      material.__webglShader = materialProperties.__webglShader;\n      program = programCache.acquireProgram(material, parameters, code);\n      materialProperties.program = program;\n      material.program = program;\n    }\n\n    var attributes = program.getAttributes();\n\n    if (material.morphTargets) {\n      material.numSupportedMorphTargets = 0;\n\n      for (var i = 0; i < _this.maxMorphTargets; i++) {\n        if (attributes['morphTarget' + i] >= 0) {\n          material.numSupportedMorphTargets++;\n        }\n      }\n    }\n\n    if (material.morphNormals) {\n      material.numSupportedMorphNormals = 0;\n\n      for (var i = 0; i < _this.maxMorphNormals; i++) {\n        if (attributes['morphNormal' + i] >= 0) {\n          material.numSupportedMorphNormals++;\n        }\n      }\n    }\n\n    materialProperties.uniformsList = [];\n    var uniforms = materialProperties.__webglShader.uniforms,\n        uniformLocations = materialProperties.program.getUniforms();\n\n    for (var u in uniforms) {\n      var location = uniformLocations[u];\n\n      if (location) {\n        materialProperties.uniformsList.push([materialProperties.__webglShader.uniforms[u], location]);\n      }\n    }\n\n    if (material instanceof THREE.MeshPhongMaterial || material instanceof THREE.MeshLambertMaterial || material instanceof THREE.MeshStandardMaterial || material.lights) {\n      // store the light setup it was created for\n      materialProperties.lightsHash = _lights.hash; // wire up the material to this renderer's lighting state\n\n      uniforms.ambientLightColor.value = _lights.ambient;\n      uniforms.directionalLights.value = _lights.directional;\n      uniforms.spotLights.value = _lights.spot;\n      uniforms.pointLights.value = _lights.point;\n      uniforms.hemisphereLights.value = _lights.hemi;\n      uniforms.directionalShadowMap.value = _lights.directionalShadowMap;\n      uniforms.directionalShadowMatrix.value = _lights.directionalShadowMatrix;\n      uniforms.spotShadowMap.value = _lights.spotShadowMap;\n      uniforms.spotShadowMatrix.value = _lights.spotShadowMatrix;\n      uniforms.pointShadowMap.value = _lights.pointShadowMap;\n      uniforms.pointShadowMatrix.value = _lights.pointShadowMatrix;\n    } // detect dynamic uniforms\n\n\n    materialProperties.hasDynamicUniforms = false;\n\n    for (var j = 0, jl = materialProperties.uniformsList.length; j < jl; j++) {\n      var uniform = materialProperties.uniformsList[j][0];\n\n      if (uniform.dynamic === true) {\n        materialProperties.hasDynamicUniforms = true;\n        break;\n      }\n    }\n  }\n\n  function setMaterial(material) {\n    setMaterialFaces(material);\n\n    if (material.transparent === true) {\n      state.setBlending(material.blending, material.blendEquation, material.blendSrc, material.blendDst, material.blendEquationAlpha, material.blendSrcAlpha, material.blendDstAlpha, material.premultipliedAlpha);\n    } else {\n      state.setBlending(THREE.NoBlending);\n    }\n\n    state.setDepthFunc(material.depthFunc);\n    state.setDepthTest(material.depthTest);\n    state.setDepthWrite(material.depthWrite);\n    state.setColorWrite(material.colorWrite);\n    state.setPolygonOffset(material.polygonOffset, material.polygonOffsetFactor, material.polygonOffsetUnits);\n  }\n\n  function setMaterialFaces(material) {\n    material.side !== THREE.DoubleSide ? state.enable(_gl.CULL_FACE) : state.disable(_gl.CULL_FACE);\n    state.setFlipSided(material.side === THREE.BackSide);\n  }\n\n  function setProgram(camera, fog, material, object) {\n    _usedTextureUnits = 0;\n    var materialProperties = properties.get(material);\n\n    if (materialProperties.program === undefined) {\n      material.needsUpdate = true;\n    }\n\n    if (materialProperties.lightsHash !== undefined && materialProperties.lightsHash !== _lights.hash) {\n      material.needsUpdate = true;\n    }\n\n    if (material.needsUpdate) {\n      initMaterial(material, fog, object);\n      material.needsUpdate = false;\n    }\n\n    var refreshProgram = false;\n    var refreshMaterial = false;\n    var refreshLights = false;\n    var program = materialProperties.program,\n        p_uniforms = program.getUniforms(),\n        m_uniforms = materialProperties.__webglShader.uniforms;\n\n    if (program.id !== _currentProgram) {\n      _gl.useProgram(program.program);\n\n      _currentProgram = program.id;\n      refreshProgram = true;\n      refreshMaterial = true;\n      refreshLights = true;\n    }\n\n    if (material.id !== _currentMaterialId) {\n      _currentMaterialId = material.id;\n      refreshMaterial = true;\n    }\n\n    if (refreshProgram || camera !== _currentCamera) {\n      _gl.uniformMatrix4fv(p_uniforms.projectionMatrix, false, camera.projectionMatrix.elements);\n\n      if (capabilities.logarithmicDepthBuffer) {\n        _gl.uniform1f(p_uniforms.logDepthBufFC, 2.0 / (Math.log(camera.far + 1.0) / Math.LN2));\n      }\n\n      if (camera !== _currentCamera) {\n        _currentCamera = camera; // lighting uniforms depend on the camera so enforce an update\n        // now, in case this material supports lights - or later, when\n        // the next material that does gets activated:\n\n        refreshMaterial = true; // set to true on material change\n\n        refreshLights = true; // remains set until update done\n      } // load material specific uniforms\n      // (shader material also gets them for the sake of genericity)\n\n\n      if (material instanceof THREE.ShaderMaterial || material instanceof THREE.MeshPhongMaterial || material instanceof THREE.MeshStandardMaterial || material.envMap) {\n        if (p_uniforms.cameraPosition !== undefined) {\n          _vector3.setFromMatrixPosition(camera.matrixWorld);\n\n          _gl.uniform3f(p_uniforms.cameraPosition, _vector3.x, _vector3.y, _vector3.z);\n        }\n      }\n\n      if (material instanceof THREE.MeshPhongMaterial || material instanceof THREE.MeshLambertMaterial || material instanceof THREE.MeshBasicMaterial || material instanceof THREE.MeshStandardMaterial || material instanceof THREE.ShaderMaterial || material.skinning) {\n        if (p_uniforms.viewMatrix !== undefined) {\n          _gl.uniformMatrix4fv(p_uniforms.viewMatrix, false, camera.matrixWorldInverse.elements);\n        }\n      }\n\n      if (p_uniforms.toneMappingExposure !== undefined) {\n        _gl.uniform1f(p_uniforms.toneMappingExposure, _this.toneMappingExposure);\n      }\n\n      if (p_uniforms.toneMappingWhitePoint !== undefined) {\n        _gl.uniform1f(p_uniforms.toneMappingWhitePoint, _this.toneMappingWhitePoint);\n      }\n    } // skinning uniforms must be set even if material didn't change\n    // auto-setting of texture unit for bone texture must go before other textures\n    // not sure why, but otherwise weird things happen\n\n\n    if (material.skinning) {\n      if (object.bindMatrix && p_uniforms.bindMatrix !== undefined) {\n        _gl.uniformMatrix4fv(p_uniforms.bindMatrix, false, object.bindMatrix.elements);\n      }\n\n      if (object.bindMatrixInverse && p_uniforms.bindMatrixInverse !== undefined) {\n        _gl.uniformMatrix4fv(p_uniforms.bindMatrixInverse, false, object.bindMatrixInverse.elements);\n      }\n\n      if (capabilities.floatVertexTextures && object.skeleton && object.skeleton.useVertexTexture) {\n        if (p_uniforms.boneTexture !== undefined) {\n          var textureUnit = getTextureUnit();\n\n          _gl.uniform1i(p_uniforms.boneTexture, textureUnit);\n\n          _this.setTexture(object.skeleton.boneTexture, textureUnit);\n        }\n\n        if (p_uniforms.boneTextureWidth !== undefined) {\n          _gl.uniform1i(p_uniforms.boneTextureWidth, object.skeleton.boneTextureWidth);\n        }\n\n        if (p_uniforms.boneTextureHeight !== undefined) {\n          _gl.uniform1i(p_uniforms.boneTextureHeight, object.skeleton.boneTextureHeight);\n        }\n      } else if (object.skeleton && object.skeleton.boneMatrices) {\n        if (p_uniforms.boneGlobalMatrices !== undefined) {\n          _gl.uniformMatrix4fv(p_uniforms.boneGlobalMatrices, false, object.skeleton.boneMatrices);\n        }\n      }\n    }\n\n    if (refreshMaterial) {\n      if (material instanceof THREE.MeshPhongMaterial || material instanceof THREE.MeshLambertMaterial || material instanceof THREE.MeshStandardMaterial || material.lights) {\n        // the current material requires lighting info\n        // note: all lighting uniforms are always set correctly\n        // they simply reference the renderer's state for their\n        // values\n        //\n        // use the current material's .needsUpdate flags to set\n        // the GL state when required\n        markUniformsLightsNeedsUpdate(m_uniforms, refreshLights);\n      } // refresh uniforms common to several materials\n\n\n      if (fog && material.fog) {\n        refreshUniformsFog(m_uniforms, fog);\n      }\n\n      if (material instanceof THREE.MeshBasicMaterial || material instanceof THREE.MeshLambertMaterial || material instanceof THREE.MeshPhongMaterial || material instanceof THREE.MeshStandardMaterial) {\n        refreshUniformsCommon(m_uniforms, material);\n      } // refresh single material specific uniforms\n\n\n      if (material instanceof THREE.LineBasicMaterial) {\n        refreshUniformsLine(m_uniforms, material);\n      } else if (material instanceof THREE.LineDashedMaterial) {\n        refreshUniformsLine(m_uniforms, material);\n        refreshUniformsDash(m_uniforms, material);\n      } else if (material instanceof THREE.PointsMaterial) {\n        refreshUniformsPoints(m_uniforms, material);\n      } else if (material instanceof THREE.MeshLambertMaterial) {\n        refreshUniformsLambert(m_uniforms, material);\n      } else if (material instanceof THREE.MeshPhongMaterial) {\n        refreshUniformsPhong(m_uniforms, material);\n      } else if (material instanceof THREE.MeshStandardMaterial) {\n        refreshUniformsStandard(m_uniforms, material);\n      } else if (material instanceof THREE.MeshDepthMaterial) {\n        m_uniforms.mNear.value = camera.near;\n        m_uniforms.mFar.value = camera.far;\n        m_uniforms.opacity.value = material.opacity;\n      } else if (material instanceof THREE.MeshNormalMaterial) {\n        m_uniforms.opacity.value = material.opacity;\n      } // load common uniforms\n\n\n      loadUniformsGeneric(materialProperties.uniformsList);\n    }\n\n    loadUniformsMatrices(p_uniforms, object);\n\n    if (p_uniforms.modelMatrix !== undefined) {\n      _gl.uniformMatrix4fv(p_uniforms.modelMatrix, false, object.matrixWorld.elements);\n    }\n\n    if (materialProperties.hasDynamicUniforms === true) {\n      updateDynamicUniforms(materialProperties.uniformsList, object, camera);\n    }\n\n    return program;\n  }\n\n  function updateDynamicUniforms(uniforms, object, camera) {\n    var dynamicUniforms = [];\n\n    for (var j = 0, jl = uniforms.length; j < jl; j++) {\n      var uniform = uniforms[j][0];\n      var onUpdateCallback = uniform.onUpdateCallback;\n\n      if (onUpdateCallback !== undefined) {\n        onUpdateCallback.bind(uniform)(object, camera);\n        dynamicUniforms.push(uniforms[j]);\n      }\n    }\n\n    loadUniformsGeneric(dynamicUniforms);\n  } // Uniforms (refresh uniforms objects)\n\n\n  function refreshUniformsCommon(uniforms, material) {\n    uniforms.opacity.value = material.opacity;\n    uniforms.diffuse.value = material.color;\n\n    if (material.emissive) {\n      uniforms.emissive.value.copy(material.emissive).multiplyScalar(material.emissiveIntensity);\n    }\n\n    uniforms.map.value = material.map;\n    uniforms.specularMap.value = material.specularMap;\n    uniforms.alphaMap.value = material.alphaMap;\n\n    if (material.aoMap) {\n      uniforms.aoMap.value = material.aoMap;\n      uniforms.aoMapIntensity.value = material.aoMapIntensity;\n    } // uv repeat and offset setting priorities\n    // 1. color map\n    // 2. specular map\n    // 3. normal map\n    // 4. bump map\n    // 5. alpha map\n    // 6. emissive map\n\n\n    var uvScaleMap;\n\n    if (material.map) {\n      uvScaleMap = material.map;\n    } else if (material.specularMap) {\n      uvScaleMap = material.specularMap;\n    } else if (material.displacementMap) {\n      uvScaleMap = material.displacementMap;\n    } else if (material.normalMap) {\n      uvScaleMap = material.normalMap;\n    } else if (material.bumpMap) {\n      uvScaleMap = material.bumpMap;\n    } else if (material.roughnessMap) {\n      uvScaleMap = material.roughnessMap;\n    } else if (material.metalnessMap) {\n      uvScaleMap = material.metalnessMap;\n    } else if (material.alphaMap) {\n      uvScaleMap = material.alphaMap;\n    } else if (material.emissiveMap) {\n      uvScaleMap = material.emissiveMap;\n    }\n\n    if (uvScaleMap !== undefined) {\n      if (uvScaleMap instanceof THREE.WebGLRenderTarget) {\n        uvScaleMap = uvScaleMap.texture;\n      }\n\n      var offset = uvScaleMap.offset;\n      var repeat = uvScaleMap.repeat;\n      uniforms.offsetRepeat.value.set(offset.x, offset.y, repeat.x, repeat.y);\n    }\n\n    uniforms.envMap.value = material.envMap;\n    uniforms.flipEnvMap.value = material.envMap instanceof THREE.WebGLRenderTargetCube ? 1 : -1;\n    uniforms.reflectivity.value = material.reflectivity;\n    uniforms.refractionRatio.value = material.refractionRatio;\n  }\n\n  function refreshUniformsLine(uniforms, material) {\n    uniforms.diffuse.value = material.color;\n    uniforms.opacity.value = material.opacity;\n  }\n\n  function refreshUniformsDash(uniforms, material) {\n    uniforms.dashSize.value = material.dashSize;\n    uniforms.totalSize.value = material.dashSize + material.gapSize;\n    uniforms.scale.value = material.scale;\n  }\n\n  function refreshUniformsPoints(uniforms, material) {\n    uniforms.diffuse.value = material.color;\n    uniforms.opacity.value = material.opacity;\n    uniforms.size.value = material.size * _pixelRatio;\n    uniforms.scale.value = _canvas.clientHeight / 2.0; // TODO: Cache this.\n\n    uniforms.map.value = material.map;\n\n    if (material.map !== null) {\n      var offset = material.map.offset;\n      var repeat = material.map.repeat;\n      uniforms.offsetRepeat.value.set(offset.x, offset.y, repeat.x, repeat.y);\n    }\n  }\n\n  function refreshUniformsFog(uniforms, fog) {\n    uniforms.fogColor.value = fog.color;\n\n    if (fog instanceof THREE.Fog) {\n      uniforms.fogNear.value = fog.near;\n      uniforms.fogFar.value = fog.far;\n    } else if (fog instanceof THREE.FogExp2) {\n      uniforms.fogDensity.value = fog.density;\n    }\n  }\n\n  function refreshUniformsLambert(uniforms, material) {\n    if (material.lightMap) {\n      uniforms.lightMap.value = material.lightMap;\n      uniforms.lightMapIntensity.value = material.lightMapIntensity;\n    }\n\n    if (material.emissiveMap) {\n      uniforms.emissiveMap.value = material.emissiveMap;\n    }\n  }\n\n  function refreshUniformsPhong(uniforms, material) {\n    uniforms.specular.value = material.specular;\n    uniforms.shininess.value = Math.max(material.shininess, 1e-4); // to prevent pow( 0.0, 0.0 )\n\n    if (material.lightMap) {\n      uniforms.lightMap.value = material.lightMap;\n      uniforms.lightMapIntensity.value = material.lightMapIntensity;\n    }\n\n    if (material.emissiveMap) {\n      uniforms.emissiveMap.value = material.emissiveMap;\n    }\n\n    if (material.bumpMap) {\n      uniforms.bumpMap.value = material.bumpMap;\n      uniforms.bumpScale.value = material.bumpScale;\n    }\n\n    if (material.normalMap) {\n      uniforms.normalMap.value = material.normalMap;\n      uniforms.normalScale.value.copy(material.normalScale);\n    }\n\n    if (material.displacementMap) {\n      uniforms.displacementMap.value = material.displacementMap;\n      uniforms.displacementScale.value = material.displacementScale;\n      uniforms.displacementBias.value = material.displacementBias;\n    }\n  }\n\n  function refreshUniformsStandard(uniforms, material) {\n    uniforms.roughness.value = material.roughness;\n    uniforms.metalness.value = material.metalness;\n\n    if (material.roughnessMap) {\n      uniforms.roughnessMap.value = material.roughnessMap;\n    }\n\n    if (material.metalnessMap) {\n      uniforms.metalnessMap.value = material.metalnessMap;\n    }\n\n    if (material.lightMap) {\n      uniforms.lightMap.value = material.lightMap;\n      uniforms.lightMapIntensity.value = material.lightMapIntensity;\n    }\n\n    if (material.emissiveMap) {\n      uniforms.emissiveMap.value = material.emissiveMap;\n    }\n\n    if (material.bumpMap) {\n      uniforms.bumpMap.value = material.bumpMap;\n      uniforms.bumpScale.value = material.bumpScale;\n    }\n\n    if (material.normalMap) {\n      uniforms.normalMap.value = material.normalMap;\n      uniforms.normalScale.value.copy(material.normalScale);\n    }\n\n    if (material.displacementMap) {\n      uniforms.displacementMap.value = material.displacementMap;\n      uniforms.displacementScale.value = material.displacementScale;\n      uniforms.displacementBias.value = material.displacementBias;\n    }\n\n    if (material.envMap) {\n      //uniforms.envMap.value = material.envMap; // part of uniforms common\n      uniforms.envMapIntensity.value = material.envMapIntensity;\n    }\n  } // If uniforms are marked as clean, they don't need to be loaded to the GPU.\n\n\n  function markUniformsLightsNeedsUpdate(uniforms, value) {\n    uniforms.ambientLightColor.needsUpdate = value;\n    uniforms.directionalLights.needsUpdate = value;\n    uniforms.pointLights.needsUpdate = value;\n    uniforms.spotLights.needsUpdate = value;\n    uniforms.hemisphereLights.needsUpdate = value;\n  } // Uniforms (load to GPU)\n\n\n  function loadUniformsMatrices(uniforms, object) {\n    _gl.uniformMatrix4fv(uniforms.modelViewMatrix, false, object.modelViewMatrix.elements);\n\n    if (uniforms.normalMatrix) {\n      _gl.uniformMatrix3fv(uniforms.normalMatrix, false, object.normalMatrix.elements);\n    }\n  }\n\n  function getTextureUnit() {\n    var textureUnit = _usedTextureUnits;\n\n    _usedTextureUnits += 1;\n    return textureUnit;\n  }\n\n  function loadUniform(uniform, type, location, value) {\n    var texture, textureUnit;\n\n    if (type === '1i') {\n      _gl.uniform1i(location, value);\n    } else if (type === '1f') {\n      _gl.uniform1f(location, value);\n    } else if (type === '2f') {\n      _gl.uniform2f(location, value[0], value[1]);\n    } else if (type === '3f') {\n      _gl.uniform3f(location, value[0], value[1], value[2]);\n    } else if (type === '4f') {\n      _gl.uniform4f(location, value[0], value[1], value[2], value[3]);\n    } else if (type === '1iv') {\n      _gl.uniform1iv(location, value);\n    } else if (type === '3iv') {\n      _gl.uniform3iv(location, value);\n    } else if (type === '1fv') {\n      _gl.uniform1fv(location, value);\n    } else if (type === '2fv') {\n      _gl.uniform2fv(location, value);\n    } else if (type === '3fv') {\n      _gl.uniform3fv(location, value);\n    } else if (type === '4fv') {\n      _gl.uniform4fv(location, value);\n    } else if (type === 'Matrix2fv') {\n      _gl.uniformMatrix2fv(location, false, value);\n    } else if (type === 'Matrix3fv') {\n      _gl.uniformMatrix3fv(location, false, value);\n    } else if (type === 'Matrix4fv') {\n      _gl.uniformMatrix4fv(location, false, value); //\n\n    } else if (type === 'i') {\n      // single integer\n      _gl.uniform1i(location, value);\n    } else if (type === 'f') {\n      // single float\n      _gl.uniform1f(location, value);\n    } else if (type === 'v2') {\n      // single THREE.Vector2\n      _gl.uniform2f(location, value.x, value.y);\n    } else if (type === 'v3') {\n      // single THREE.Vector3\n      _gl.uniform3f(location, value.x, value.y, value.z);\n    } else if (type === 'v4') {\n      // single THREE.Vector4\n      _gl.uniform4f(location, value.x, value.y, value.z, value.w);\n    } else if (type === 'c') {\n      // single THREE.Color\n      _gl.uniform3f(location, value.r, value.g, value.b);\n    } else if (type === 's') {\n      // TODO: Optimize this\n      var properties = uniform.properties;\n\n      for (var name in properties) {\n        var property = properties[name];\n        var locationProperty = location[name];\n        var valueProperty = value[name];\n        loadUniform(property, property.type, locationProperty, valueProperty);\n      }\n    } else if (type === 'sa') {\n      // TODO: Optimize this\n      var properties = uniform.properties;\n\n      for (var i = 0, l = value.length; i < l; i++) {\n        for (var name in properties) {\n          var property = properties[name];\n          var locationProperty = location[i][name];\n          var valueProperty = value[i][name];\n          loadUniform(property, property.type, locationProperty, valueProperty);\n        }\n      }\n    } else if (type === 'iv1') {\n      // flat array of integers (JS or typed array)\n      _gl.uniform1iv(location, value);\n    } else if (type === 'iv') {\n      // flat array of integers with 3 x N size (JS or typed array)\n      _gl.uniform3iv(location, value);\n    } else if (type === 'fv1') {\n      // flat array of floats (JS or typed array)\n      _gl.uniform1fv(location, value);\n    } else if (type === 'fv') {\n      // flat array of floats with 3 x N size (JS or typed array)\n      _gl.uniform3fv(location, value);\n    } else if (type === 'v2v') {\n      // array of THREE.Vector2\n      if (uniform._array === undefined) {\n        uniform._array = new Float32Array(2 * value.length);\n      }\n\n      for (var i = 0, i2 = 0, il = value.length; i < il; i++, i2 += 2) {\n        uniform._array[i2 + 0] = value[i].x;\n        uniform._array[i2 + 1] = value[i].y;\n      }\n\n      _gl.uniform2fv(location, uniform._array);\n    } else if (type === 'v3v') {\n      // array of THREE.Vector3\n      if (uniform._array === undefined) {\n        uniform._array = new Float32Array(3 * value.length);\n      }\n\n      for (var i = 0, i3 = 0, il = value.length; i < il; i++, i3 += 3) {\n        uniform._array[i3 + 0] = value[i].x;\n        uniform._array[i3 + 1] = value[i].y;\n        uniform._array[i3 + 2] = value[i].z;\n      }\n\n      _gl.uniform3fv(location, uniform._array);\n    } else if (type === 'v4v') {\n      // array of THREE.Vector4\n      if (uniform._array === undefined) {\n        uniform._array = new Float32Array(4 * value.length);\n      }\n\n      for (var i = 0, i4 = 0, il = value.length; i < il; i++, i4 += 4) {\n        uniform._array[i4 + 0] = value[i].x;\n        uniform._array[i4 + 1] = value[i].y;\n        uniform._array[i4 + 2] = value[i].z;\n        uniform._array[i4 + 3] = value[i].w;\n      }\n\n      _gl.uniform4fv(location, uniform._array);\n    } else if (type === 'm2') {\n      // single THREE.Matrix2\n      _gl.uniformMatrix2fv(location, false, value.elements);\n    } else if (type === 'm3') {\n      // single THREE.Matrix3\n      _gl.uniformMatrix3fv(location, false, value.elements);\n    } else if (type === 'm3v') {\n      // array of THREE.Matrix3\n      if (uniform._array === undefined) {\n        uniform._array = new Float32Array(9 * value.length);\n      }\n\n      for (var i = 0, il = value.length; i < il; i++) {\n        value[i].flattenToArrayOffset(uniform._array, i * 9);\n      }\n\n      _gl.uniformMatrix3fv(location, false, uniform._array);\n    } else if (type === 'm4') {\n      // single THREE.Matrix4\n      _gl.uniformMatrix4fv(location, false, value.elements);\n    } else if (type === 'm4v') {\n      // array of THREE.Matrix4\n      if (uniform._array === undefined) {\n        uniform._array = new Float32Array(16 * value.length);\n      }\n\n      for (var i = 0, il = value.length; i < il; i++) {\n        value[i].flattenToArrayOffset(uniform._array, i * 16);\n      }\n\n      _gl.uniformMatrix4fv(location, false, uniform._array);\n    } else if (type === 't') {\n      // single THREE.Texture (2d or cube)\n      texture = value;\n      textureUnit = getTextureUnit();\n\n      _gl.uniform1i(location, textureUnit);\n\n      if (!texture) return;\n\n      if (texture instanceof THREE.CubeTexture || Array.isArray(texture.image) && texture.image.length === 6) {\n        // CompressedTexture can have Array in image :/\n        setCubeTexture(texture, textureUnit);\n      } else if (texture instanceof THREE.WebGLRenderTargetCube) {\n        setCubeTextureDynamic(texture.texture, textureUnit);\n      } else if (texture instanceof THREE.WebGLRenderTarget) {\n        _this.setTexture(texture.texture, textureUnit);\n      } else {\n        _this.setTexture(texture, textureUnit);\n      }\n    } else if (type === 'tv') {\n      // array of THREE.Texture (2d or cube)\n      if (uniform._array === undefined) {\n        uniform._array = [];\n      }\n\n      for (var i = 0, il = uniform.value.length; i < il; i++) {\n        uniform._array[i] = getTextureUnit();\n      }\n\n      _gl.uniform1iv(location, uniform._array);\n\n      for (var i = 0, il = uniform.value.length; i < il; i++) {\n        texture = uniform.value[i];\n        textureUnit = uniform._array[i];\n        if (!texture) continue;\n\n        if (texture instanceof THREE.CubeTexture || texture.image instanceof Array && texture.image.length === 6) {\n          // CompressedTexture can have Array in image :/\n          setCubeTexture(texture, textureUnit);\n        } else if (texture instanceof THREE.WebGLRenderTarget) {\n          _this.setTexture(texture.texture, textureUnit);\n        } else if (texture instanceof THREE.WebGLRenderTargetCube) {\n          setCubeTextureDynamic(texture.texture, textureUnit);\n        } else {\n          _this.setTexture(texture, textureUnit);\n        }\n      }\n    }\n  }\n\n  function loadUniformsGeneric(uniforms) {\n    for (var i = 0, l = uniforms.length; i < l; i++) {\n      var uniform = uniforms[i][0]; // needsUpdate property is not added to all uniforms.\n\n      if (uniform.needsUpdate === false) continue;\n      var type = uniform.type;\n      var location = uniforms[i][1];\n      var value = uniform.value;\n      loadUniform(uniform, type, location, value);\n    }\n  }\n\n  function setupLights(lights, camera) {\n    var l,\n        ll,\n        light,\n        r = 0,\n        g = 0,\n        b = 0,\n        color,\n        intensity,\n        distance,\n        viewMatrix = camera.matrixWorldInverse,\n        directionalLength = 0,\n        pointLength = 0,\n        spotLength = 0,\n        hemiLength = 0,\n        shadowsLength = 0;\n    _lights.shadowsPointLight = 0;\n\n    for (l = 0, ll = lights.length; l < ll; l++) {\n      light = lights[l];\n      color = light.color;\n      intensity = light.intensity;\n      distance = light.distance;\n\n      if (light instanceof THREE.AmbientLight) {\n        r += color.r * intensity;\n        g += color.g * intensity;\n        b += color.b * intensity;\n      } else if (light instanceof THREE.DirectionalLight) {\n        var uniforms = lightCache.get(light);\n        uniforms.color.copy(light.color).multiplyScalar(light.intensity);\n        uniforms.direction.setFromMatrixPosition(light.matrixWorld);\n\n        _vector3.setFromMatrixPosition(light.target.matrixWorld);\n\n        uniforms.direction.sub(_vector3);\n        uniforms.direction.transformDirection(viewMatrix);\n        uniforms.shadow = light.castShadow;\n\n        if (light.castShadow) {\n          uniforms.shadowBias = light.shadow.bias;\n          uniforms.shadowRadius = light.shadow.radius;\n          uniforms.shadowMapSize = light.shadow.mapSize;\n          _lights.shadows[shadowsLength++] = light;\n        }\n\n        _lights.directionalShadowMap[directionalLength] = light.shadow.map;\n        _lights.directionalShadowMatrix[directionalLength] = light.shadow.matrix;\n        _lights.directional[directionalLength++] = uniforms;\n      } else if (light instanceof THREE.SpotLight) {\n        var uniforms = lightCache.get(light);\n        uniforms.position.setFromMatrixPosition(light.matrixWorld);\n        uniforms.position.applyMatrix4(viewMatrix);\n        uniforms.color.copy(color).multiplyScalar(intensity);\n        uniforms.distance = distance;\n        uniforms.direction.setFromMatrixPosition(light.matrixWorld);\n\n        _vector3.setFromMatrixPosition(light.target.matrixWorld);\n\n        uniforms.direction.sub(_vector3);\n        uniforms.direction.transformDirection(viewMatrix);\n        uniforms.coneCos = Math.cos(light.angle);\n        uniforms.penumbraCos = Math.cos(light.angle * (1 - light.penumbra));\n        uniforms.decay = light.distance === 0 ? 0.0 : light.decay;\n        uniforms.shadow = light.castShadow;\n\n        if (light.castShadow) {\n          uniforms.shadowBias = light.shadow.bias;\n          uniforms.shadowRadius = light.shadow.radius;\n          uniforms.shadowMapSize = light.shadow.mapSize;\n          _lights.shadows[shadowsLength++] = light;\n        }\n\n        _lights.spotShadowMap[spotLength] = light.shadow.map;\n        _lights.spotShadowMatrix[spotLength] = light.shadow.matrix;\n        _lights.spot[spotLength++] = uniforms;\n      } else if (light instanceof THREE.PointLight) {\n        var uniforms = lightCache.get(light);\n        uniforms.position.setFromMatrixPosition(light.matrixWorld);\n        uniforms.position.applyMatrix4(viewMatrix);\n        uniforms.color.copy(light.color).multiplyScalar(light.intensity);\n        uniforms.distance = light.distance;\n        uniforms.decay = light.distance === 0 ? 0.0 : light.decay;\n        uniforms.shadow = light.castShadow;\n\n        if (light.castShadow) {\n          uniforms.shadowBias = light.shadow.bias;\n          uniforms.shadowRadius = light.shadow.radius;\n          uniforms.shadowMapSize = light.shadow.mapSize;\n          _lights.shadows[shadowsLength++] = light;\n        }\n\n        _lights.pointShadowMap[pointLength] = light.shadow.map;\n\n        if (_lights.pointShadowMatrix[pointLength] === undefined) {\n          _lights.pointShadowMatrix[pointLength] = new THREE.Matrix4();\n        } // for point lights we set the shadow matrix to be a translation-only matrix\n        // equal to inverse of the light's position\n\n\n        _vector3.setFromMatrixPosition(light.matrixWorld).negate();\n\n        _lights.pointShadowMatrix[pointLength].identity().setPosition(_vector3);\n\n        _lights.point[pointLength++] = uniforms;\n      } else if (light instanceof THREE.HemisphereLight) {\n        var uniforms = lightCache.get(light);\n        uniforms.direction.setFromMatrixPosition(light.matrixWorld);\n        uniforms.direction.transformDirection(viewMatrix);\n        uniforms.direction.normalize();\n        uniforms.skyColor.copy(light.color).multiplyScalar(intensity);\n        uniforms.groundColor.copy(light.groundColor).multiplyScalar(intensity);\n        _lights.hemi[hemiLength++] = uniforms;\n      }\n    }\n\n    _lights.ambient[0] = r;\n    _lights.ambient[1] = g;\n    _lights.ambient[2] = b;\n    _lights.directional.length = directionalLength;\n    _lights.spot.length = spotLength;\n    _lights.point.length = pointLength;\n    _lights.hemi.length = hemiLength;\n    _lights.shadows.length = shadowsLength;\n    _lights.hash = directionalLength + ',' + pointLength + ',' + spotLength + ',' + hemiLength + ',' + shadowsLength;\n  } // GL state setting\n\n\n  this.setFaceCulling = function (cullFace, frontFaceDirection) {\n    if (cullFace === THREE.CullFaceNone) {\n      state.disable(_gl.CULL_FACE);\n    } else {\n      if (frontFaceDirection === THREE.FrontFaceDirectionCW) {\n        _gl.frontFace(_gl.CW);\n      } else {\n        _gl.frontFace(_gl.CCW);\n      }\n\n      if (cullFace === THREE.CullFaceBack) {\n        _gl.cullFace(_gl.BACK);\n      } else if (cullFace === THREE.CullFaceFront) {\n        _gl.cullFace(_gl.FRONT);\n      } else {\n        _gl.cullFace(_gl.FRONT_AND_BACK);\n      }\n\n      state.enable(_gl.CULL_FACE);\n    }\n  }; // Textures\n\n\n  function setTextureParameters(textureType, texture, isPowerOfTwoImage) {\n    var extension;\n\n    if (isPowerOfTwoImage) {\n      _gl.texParameteri(textureType, _gl.TEXTURE_WRAP_S, paramThreeToGL(texture.wrapS));\n\n      _gl.texParameteri(textureType, _gl.TEXTURE_WRAP_T, paramThreeToGL(texture.wrapT));\n\n      _gl.texParameteri(textureType, _gl.TEXTURE_MAG_FILTER, paramThreeToGL(texture.magFilter));\n\n      _gl.texParameteri(textureType, _gl.TEXTURE_MIN_FILTER, paramThreeToGL(texture.minFilter));\n    } else {\n      _gl.texParameteri(textureType, _gl.TEXTURE_WRAP_S, _gl.CLAMP_TO_EDGE);\n\n      _gl.texParameteri(textureType, _gl.TEXTURE_WRAP_T, _gl.CLAMP_TO_EDGE);\n\n      if (texture.wrapS !== THREE.ClampToEdgeWrapping || texture.wrapT !== THREE.ClampToEdgeWrapping) ;\n\n      _gl.texParameteri(textureType, _gl.TEXTURE_MAG_FILTER, filterFallback(texture.magFilter));\n\n      _gl.texParameteri(textureType, _gl.TEXTURE_MIN_FILTER, filterFallback(texture.minFilter));\n\n      if (texture.minFilter !== THREE.NearestFilter && texture.minFilter !== THREE.LinearFilter) ;\n    }\n\n    extension = extensions.get('EXT_texture_filter_anisotropic');\n\n    if (extension) {\n      if (texture.type === THREE.FloatType && extensions.get('OES_texture_float_linear') === null) return;\n      if (texture.type === THREE.HalfFloatType && extensions.get('OES_texture_half_float_linear') === null) return;\n\n      if (texture.anisotropy > 1 || properties.get(texture).__currentAnisotropy) {\n        _gl.texParameterf(textureType, extension.TEXTURE_MAX_ANISOTROPY_EXT, Math.min(texture.anisotropy, _this.getMaxAnisotropy()));\n\n        properties.get(texture).__currentAnisotropy = texture.anisotropy;\n      }\n    }\n  }\n\n  function uploadTexture(textureProperties, texture, slot) {\n    if (textureProperties.__webglInit === undefined) {\n      textureProperties.__webglInit = true;\n      texture.addEventListener('dispose', onTextureDispose);\n      textureProperties.__webglTexture = _gl.createTexture();\n      _infoMemory.textures++;\n    }\n\n    state.activeTexture(_gl.TEXTURE0 + slot);\n    state.bindTexture(_gl.TEXTURE_2D, textureProperties.__webglTexture);\n\n    _gl.pixelStorei(_gl.UNPACK_FLIP_Y_WEBGL, texture.flipY);\n\n    _gl.pixelStorei(_gl.UNPACK_PREMULTIPLY_ALPHA_WEBGL, texture.premultiplyAlpha);\n\n    _gl.pixelStorei(_gl.UNPACK_ALIGNMENT, texture.unpackAlignment);\n\n    var image = clampToMaxSize(texture.image, capabilities.maxTextureSize);\n\n    if (textureNeedsPowerOfTwo(texture) && isPowerOfTwo(image) === false) {\n      image = makePowerOfTwo(image);\n    }\n\n    var isPowerOfTwoImage = isPowerOfTwo(image),\n        glFormat = paramThreeToGL(texture.format),\n        glType = paramThreeToGL(texture.type);\n    setTextureParameters(_gl.TEXTURE_2D, texture, isPowerOfTwoImage);\n    var mipmap,\n        mipmaps = texture.mipmaps;\n\n    if (texture instanceof THREE.DataTexture) {\n      // use manually created mipmaps if available\n      // if there are no manual mipmaps\n      // set 0 level mipmap and then use GL to generate other mipmap levels\n      if (mipmaps.length > 0 && isPowerOfTwoImage) {\n        for (var i = 0, il = mipmaps.length; i < il; i++) {\n          mipmap = mipmaps[i];\n          state.texImage2D(_gl.TEXTURE_2D, i, glFormat, mipmap.width, mipmap.height, 0, glFormat, glType, mipmap.data);\n        }\n\n        texture.generateMipmaps = false;\n      } else {\n        state.texImage2D(_gl.TEXTURE_2D, 0, glFormat, image.width, image.height, 0, glFormat, glType, image.data);\n      }\n    } else if (texture instanceof THREE.CompressedTexture) {\n      for (var i = 0, il = mipmaps.length; i < il; i++) {\n        mipmap = mipmaps[i];\n\n        if (texture.format !== THREE.RGBAFormat && texture.format !== THREE.RGBFormat) {\n          if (state.getCompressedTextureFormats().indexOf(glFormat) > -1) {\n            state.compressedTexImage2D(_gl.TEXTURE_2D, i, glFormat, mipmap.width, mipmap.height, 0, mipmap.data);\n          }\n        } else {\n          state.texImage2D(_gl.TEXTURE_2D, i, glFormat, mipmap.width, mipmap.height, 0, glFormat, glType, mipmap.data);\n        }\n      }\n    } else {\n      // regular Texture (image, video, canvas)\n      // use manually created mipmaps if available\n      // if there are no manual mipmaps\n      // set 0 level mipmap and then use GL to generate other mipmap levels\n      if (mipmaps.length > 0 && isPowerOfTwoImage) {\n        for (var i = 0, il = mipmaps.length; i < il; i++) {\n          mipmap = mipmaps[i];\n          state.texImage2D(_gl.TEXTURE_2D, i, glFormat, glFormat, glType, mipmap);\n        }\n\n        texture.generateMipmaps = false;\n      } else {\n        state.texImage2D(_gl.TEXTURE_2D, 0, glFormat, glFormat, glType, image);\n      }\n    }\n\n    if (texture.generateMipmaps && isPowerOfTwoImage) _gl.generateMipmap(_gl.TEXTURE_2D);\n    textureProperties.__version = texture.version;\n    if (texture.onUpdate) texture.onUpdate(texture);\n  }\n\n  this.setTexture = function (texture, slot) {\n    var textureProperties = properties.get(texture);\n\n    if (texture.version > 0 && textureProperties.__version !== texture.version) {\n      var image = texture.image;\n\n      if (image === undefined) {\n        return;\n      }\n\n      if (image.complete === false) {\n        return;\n      }\n\n      uploadTexture(textureProperties, texture, slot);\n      return;\n    }\n\n    state.activeTexture(_gl.TEXTURE0 + slot);\n    state.bindTexture(_gl.TEXTURE_2D, textureProperties.__webglTexture);\n  };\n\n  function clampToMaxSize(image, maxSize) {\n    if (image.width > maxSize || image.height > maxSize) {\n      // Warning: Scaling through the canvas will only work with images that use\n      // premultiplied alpha.\n      var scale = maxSize / Math.max(image.width, image.height);\n      var canvas = document.createElement('canvas');\n      canvas.width = Math.floor(image.width * scale);\n      canvas.height = Math.floor(image.height * scale);\n      var context = canvas.getContext('2d');\n      context.drawImage(image, 0, 0, image.width, image.height, 0, 0, canvas.width, canvas.height);\n      return canvas;\n    }\n\n    return image;\n  }\n\n  function isPowerOfTwo(image) {\n    return THREE.Math.isPowerOfTwo(image.width) && THREE.Math.isPowerOfTwo(image.height);\n  }\n\n  function textureNeedsPowerOfTwo(texture) {\n    if (texture.wrapS !== THREE.ClampToEdgeWrapping || texture.wrapT !== THREE.ClampToEdgeWrapping) return true;\n    if (texture.minFilter !== THREE.NearestFilter && texture.minFilter !== THREE.LinearFilter) return true;\n    return false;\n  }\n\n  function makePowerOfTwo(image) {\n    if (image instanceof HTMLImageElement || image instanceof HTMLCanvasElement) {\n      var canvas = document.createElement('canvas');\n      canvas.width = THREE.Math.nearestPowerOfTwo(image.width);\n      canvas.height = THREE.Math.nearestPowerOfTwo(image.height);\n      var context = canvas.getContext('2d');\n      context.drawImage(image, 0, 0, canvas.width, canvas.height);\n      return canvas;\n    }\n\n    return image;\n  }\n\n  function setCubeTexture(texture, slot) {\n    var textureProperties = properties.get(texture);\n\n    if (texture.image.length === 6) {\n      if (texture.version > 0 && textureProperties.__version !== texture.version) {\n        if (!textureProperties.__image__webglTextureCube) {\n          texture.addEventListener('dispose', onTextureDispose);\n          textureProperties.__image__webglTextureCube = _gl.createTexture();\n          _infoMemory.textures++;\n        }\n\n        state.activeTexture(_gl.TEXTURE0 + slot);\n        state.bindTexture(_gl.TEXTURE_CUBE_MAP, textureProperties.__image__webglTextureCube);\n\n        _gl.pixelStorei(_gl.UNPACK_FLIP_Y_WEBGL, texture.flipY);\n\n        var isCompressed = texture instanceof THREE.CompressedTexture;\n        var isDataTexture = texture.image[0] instanceof THREE.DataTexture;\n        var cubeImage = [];\n\n        for (var i = 0; i < 6; i++) {\n          if (_this.autoScaleCubemaps && !isCompressed && !isDataTexture) {\n            cubeImage[i] = clampToMaxSize(texture.image[i], capabilities.maxCubemapSize);\n          } else {\n            cubeImage[i] = isDataTexture ? texture.image[i].image : texture.image[i];\n          }\n        }\n\n        var image = cubeImage[0],\n            isPowerOfTwoImage = isPowerOfTwo(image),\n            glFormat = paramThreeToGL(texture.format),\n            glType = paramThreeToGL(texture.type);\n        setTextureParameters(_gl.TEXTURE_CUBE_MAP, texture, isPowerOfTwoImage);\n\n        for (var i = 0; i < 6; i++) {\n          if (!isCompressed) {\n            if (isDataTexture) {\n              state.texImage2D(_gl.TEXTURE_CUBE_MAP_POSITIVE_X + i, 0, glFormat, cubeImage[i].width, cubeImage[i].height, 0, glFormat, glType, cubeImage[i].data);\n            } else {\n              state.texImage2D(_gl.TEXTURE_CUBE_MAP_POSITIVE_X + i, 0, glFormat, glFormat, glType, cubeImage[i]);\n            }\n          } else {\n            var mipmap,\n                mipmaps = cubeImage[i].mipmaps;\n\n            for (var j = 0, jl = mipmaps.length; j < jl; j++) {\n              mipmap = mipmaps[j];\n\n              if (texture.format !== THREE.RGBAFormat && texture.format !== THREE.RGBFormat) {\n                if (state.getCompressedTextureFormats().indexOf(glFormat) > -1) {\n                  state.compressedTexImage2D(_gl.TEXTURE_CUBE_MAP_POSITIVE_X + i, j, glFormat, mipmap.width, mipmap.height, 0, mipmap.data);\n                }\n              } else {\n                state.texImage2D(_gl.TEXTURE_CUBE_MAP_POSITIVE_X + i, j, glFormat, mipmap.width, mipmap.height, 0, glFormat, glType, mipmap.data);\n              }\n            }\n          }\n        }\n\n        if (texture.generateMipmaps && isPowerOfTwoImage) {\n          _gl.generateMipmap(_gl.TEXTURE_CUBE_MAP);\n        }\n\n        textureProperties.__version = texture.version;\n        if (texture.onUpdate) texture.onUpdate(texture);\n      } else {\n        state.activeTexture(_gl.TEXTURE0 + slot);\n        state.bindTexture(_gl.TEXTURE_CUBE_MAP, textureProperties.__image__webglTextureCube);\n      }\n    }\n  }\n\n  function setCubeTextureDynamic(texture, slot) {\n    state.activeTexture(_gl.TEXTURE0 + slot);\n    state.bindTexture(_gl.TEXTURE_CUBE_MAP, properties.get(texture).__webglTexture);\n  } // Render targets\n  // Setup storage for target texture and bind it to correct framebuffer\n\n\n  function setupFrameBufferTexture(framebuffer, renderTarget, attachment, textureTarget) {\n    var glFormat = paramThreeToGL(renderTarget.texture.format);\n    var glType = paramThreeToGL(renderTarget.texture.type);\n    state.texImage2D(textureTarget, 0, glFormat, renderTarget.width, renderTarget.height, 0, glFormat, glType, null);\n\n    _gl.bindFramebuffer(_gl.FRAMEBUFFER, framebuffer);\n\n    _gl.framebufferTexture2D(_gl.FRAMEBUFFER, attachment, textureTarget, properties.get(renderTarget.texture).__webglTexture, 0);\n\n    _gl.bindFramebuffer(_gl.FRAMEBUFFER, null);\n  } // Setup storage for internal depth/stencil buffers and bind to correct framebuffer\n\n\n  function setupRenderBufferStorage(renderbuffer, renderTarget) {\n    _gl.bindRenderbuffer(_gl.RENDERBUFFER, renderbuffer);\n\n    if (renderTarget.depthBuffer && !renderTarget.stencilBuffer) {\n      _gl.renderbufferStorage(_gl.RENDERBUFFER, _gl.DEPTH_COMPONENT16, renderTarget.width, renderTarget.height);\n\n      _gl.framebufferRenderbuffer(_gl.FRAMEBUFFER, _gl.DEPTH_ATTACHMENT, _gl.RENDERBUFFER, renderbuffer);\n    } else if (renderTarget.depthBuffer && renderTarget.stencilBuffer) {\n      _gl.renderbufferStorage(_gl.RENDERBUFFER, _gl.DEPTH_STENCIL, renderTarget.width, renderTarget.height);\n\n      _gl.framebufferRenderbuffer(_gl.FRAMEBUFFER, _gl.DEPTH_STENCIL_ATTACHMENT, _gl.RENDERBUFFER, renderbuffer);\n    } else {\n      // FIXME: We don't support !depth !stencil\n      _gl.renderbufferStorage(_gl.RENDERBUFFER, _gl.RGBA4, renderTarget.width, renderTarget.height);\n    }\n\n    _gl.bindRenderbuffer(_gl.RENDERBUFFER, null);\n  } // Setup GL resources for a non-texture depth buffer\n\n\n  function setupDepthRenderbuffer(renderTarget) {\n    var renderTargetProperties = properties.get(renderTarget);\n    var isCube = renderTarget instanceof THREE.WebGLRenderTargetCube;\n\n    if (isCube) {\n      renderTargetProperties.__webglDepthbuffer = [];\n\n      for (var i = 0; i < 6; i++) {\n        _gl.bindFramebuffer(_gl.FRAMEBUFFER, renderTargetProperties.__webglFramebuffer[i]);\n\n        renderTargetProperties.__webglDepthbuffer[i] = _gl.createRenderbuffer();\n        setupRenderBufferStorage(renderTargetProperties.__webglDepthbuffer[i], renderTarget);\n      }\n    } else {\n      _gl.bindFramebuffer(_gl.FRAMEBUFFER, renderTargetProperties.__webglFramebuffer);\n\n      renderTargetProperties.__webglDepthbuffer = _gl.createRenderbuffer();\n      setupRenderBufferStorage(renderTargetProperties.__webglDepthbuffer, renderTarget);\n    }\n\n    _gl.bindFramebuffer(_gl.FRAMEBUFFER, null);\n  } // Set up GL resources for the render target\n\n\n  function setupRenderTarget(renderTarget) {\n    var renderTargetProperties = properties.get(renderTarget);\n    var textureProperties = properties.get(renderTarget.texture);\n    renderTarget.addEventListener('dispose', onRenderTargetDispose);\n    textureProperties.__webglTexture = _gl.createTexture();\n    _infoMemory.textures++;\n    var isCube = renderTarget instanceof THREE.WebGLRenderTargetCube;\n    var isTargetPowerOfTwo = THREE.Math.isPowerOfTwo(renderTarget.width) && THREE.Math.isPowerOfTwo(renderTarget.height); // Setup framebuffer\n\n    if (isCube) {\n      renderTargetProperties.__webglFramebuffer = [];\n\n      for (var i = 0; i < 6; i++) {\n        renderTargetProperties.__webglFramebuffer[i] = _gl.createFramebuffer();\n      }\n    } else {\n      renderTargetProperties.__webglFramebuffer = _gl.createFramebuffer();\n    } // Setup color buffer\n\n\n    if (isCube) {\n      state.bindTexture(_gl.TEXTURE_CUBE_MAP, textureProperties.__webglTexture);\n      setTextureParameters(_gl.TEXTURE_CUBE_MAP, renderTarget.texture, isTargetPowerOfTwo);\n\n      for (var i = 0; i < 6; i++) {\n        setupFrameBufferTexture(renderTargetProperties.__webglFramebuffer[i], renderTarget, _gl.COLOR_ATTACHMENT0, _gl.TEXTURE_CUBE_MAP_POSITIVE_X + i);\n      }\n\n      if (renderTarget.texture.generateMipmaps && isTargetPowerOfTwo) _gl.generateMipmap(_gl.TEXTURE_CUBE_MAP);\n      state.bindTexture(_gl.TEXTURE_CUBE_MAP, null);\n    } else {\n      state.bindTexture(_gl.TEXTURE_2D, textureProperties.__webglTexture);\n      setTextureParameters(_gl.TEXTURE_2D, renderTarget.texture, isTargetPowerOfTwo);\n      setupFrameBufferTexture(renderTargetProperties.__webglFramebuffer, renderTarget, _gl.COLOR_ATTACHMENT0, _gl.TEXTURE_2D);\n      if (renderTarget.texture.generateMipmaps && isTargetPowerOfTwo) _gl.generateMipmap(_gl.TEXTURE_2D);\n      state.bindTexture(_gl.TEXTURE_2D, null);\n    } // Setup depth and stencil buffers\n\n\n    if (renderTarget.depthBuffer) {\n      setupDepthRenderbuffer(renderTarget);\n    }\n  }\n\n  this.getCurrentRenderTarget = function () {\n    return _currentRenderTarget;\n  };\n\n  this.setRenderTarget = function (renderTarget) {\n    _currentRenderTarget = renderTarget;\n\n    if (renderTarget && properties.get(renderTarget).__webglFramebuffer === undefined) {\n      setupRenderTarget(renderTarget);\n    }\n\n    var isCube = renderTarget instanceof THREE.WebGLRenderTargetCube;\n    var framebuffer;\n\n    if (renderTarget) {\n      var renderTargetProperties = properties.get(renderTarget);\n\n      if (isCube) {\n        framebuffer = renderTargetProperties.__webglFramebuffer[renderTarget.activeCubeFace];\n      } else {\n        framebuffer = renderTargetProperties.__webglFramebuffer;\n      }\n\n      _currentScissor.copy(renderTarget.scissor);\n\n      _currentScissorTest = renderTarget.scissorTest;\n\n      _currentViewport.copy(renderTarget.viewport);\n    } else {\n      framebuffer = null;\n\n      _currentScissor.copy(_scissor).multiplyScalar(_pixelRatio);\n\n      _currentScissorTest = _scissorTest;\n\n      _currentViewport.copy(_viewport).multiplyScalar(_pixelRatio);\n    }\n\n    if (_currentFramebuffer !== framebuffer) {\n      _gl.bindFramebuffer(_gl.FRAMEBUFFER, framebuffer);\n\n      _currentFramebuffer = framebuffer;\n    }\n\n    state.scissor(_currentScissor);\n    state.setScissorTest(_currentScissorTest);\n    state.viewport(_currentViewport);\n\n    if (isCube) {\n      var textureProperties = properties.get(renderTarget.texture);\n\n      _gl.framebufferTexture2D(_gl.FRAMEBUFFER, _gl.COLOR_ATTACHMENT0, _gl.TEXTURE_CUBE_MAP_POSITIVE_X + renderTarget.activeCubeFace, textureProperties.__webglTexture, renderTarget.activeMipMapLevel);\n    }\n  };\n\n  this.readRenderTargetPixels = function (renderTarget, x, y, width, height, buffer) {\n    if (renderTarget instanceof THREE.WebGLRenderTarget === false) {\n      return;\n    }\n\n    var framebuffer = properties.get(renderTarget).__webglFramebuffer;\n\n    if (framebuffer) {\n      var restore = false;\n\n      if (framebuffer !== _currentFramebuffer) {\n        _gl.bindFramebuffer(_gl.FRAMEBUFFER, framebuffer);\n\n        restore = true;\n      }\n\n      try {\n        var texture = renderTarget.texture;\n\n        if (texture.format !== THREE.RGBAFormat && paramThreeToGL(texture.format) !== _gl.getParameter(_gl.IMPLEMENTATION_COLOR_READ_FORMAT)) {\n          return;\n        }\n\n        if (texture.type !== THREE.UnsignedByteType && paramThreeToGL(texture.type) !== _gl.getParameter(_gl.IMPLEMENTATION_COLOR_READ_TYPE) && !(texture.type === THREE.FloatType && extensions.get('WEBGL_color_buffer_float')) && !(texture.type === THREE.HalfFloatType && extensions.get('EXT_color_buffer_half_float'))) {\n          return;\n        }\n\n        if (_gl.checkFramebufferStatus(_gl.FRAMEBUFFER) === _gl.FRAMEBUFFER_COMPLETE) {\n          _gl.readPixels(x, y, width, height, paramThreeToGL(texture.format), paramThreeToGL(texture.type), buffer);\n        }\n      } finally {\n        if (restore) {\n          _gl.bindFramebuffer(_gl.FRAMEBUFFER, _currentFramebuffer);\n        }\n      }\n    }\n  };\n\n  function updateRenderTargetMipmap(renderTarget) {\n    var target = renderTarget instanceof THREE.WebGLRenderTargetCube ? _gl.TEXTURE_CUBE_MAP : _gl.TEXTURE_2D;\n\n    var texture = properties.get(renderTarget.texture).__webglTexture;\n\n    state.bindTexture(target, texture);\n\n    _gl.generateMipmap(target);\n\n    state.bindTexture(target, null);\n  } // Fallback filters for non-power-of-2 textures\n\n\n  function filterFallback(f) {\n    if (f === THREE.NearestFilter || f === THREE.NearestMipMapNearestFilter || f === THREE.NearestMipMapLinearFilter) {\n      return _gl.NEAREST;\n    }\n\n    return _gl.LINEAR;\n  } // Map three.js constants to WebGL constants\n\n\n  function paramThreeToGL(p) {\n    var extension;\n    if (p === THREE.RepeatWrapping) return _gl.REPEAT;\n    if (p === THREE.ClampToEdgeWrapping) return _gl.CLAMP_TO_EDGE;\n    if (p === THREE.MirroredRepeatWrapping) return _gl.MIRRORED_REPEAT;\n    if (p === THREE.NearestFilter) return _gl.NEAREST;\n    if (p === THREE.NearestMipMapNearestFilter) return _gl.NEAREST_MIPMAP_NEAREST;\n    if (p === THREE.NearestMipMapLinearFilter) return _gl.NEAREST_MIPMAP_LINEAR;\n    if (p === THREE.LinearFilter) return _gl.LINEAR;\n    if (p === THREE.LinearMipMapNearestFilter) return _gl.LINEAR_MIPMAP_NEAREST;\n    if (p === THREE.LinearMipMapLinearFilter) return _gl.LINEAR_MIPMAP_LINEAR;\n    if (p === THREE.UnsignedByteType) return _gl.UNSIGNED_BYTE;\n    if (p === THREE.UnsignedShort4444Type) return _gl.UNSIGNED_SHORT_4_4_4_4;\n    if (p === THREE.UnsignedShort5551Type) return _gl.UNSIGNED_SHORT_5_5_5_1;\n    if (p === THREE.UnsignedShort565Type) return _gl.UNSIGNED_SHORT_5_6_5;\n    if (p === THREE.ByteType) return _gl.BYTE;\n    if (p === THREE.ShortType) return _gl.SHORT;\n    if (p === THREE.UnsignedShortType) return _gl.UNSIGNED_SHORT;\n    if (p === THREE.IntType) return _gl.INT;\n    if (p === THREE.UnsignedIntType) return _gl.UNSIGNED_INT;\n    if (p === THREE.FloatType) return _gl.FLOAT;\n    extension = extensions.get('OES_texture_half_float');\n\n    if (extension !== null) {\n      if (p === THREE.HalfFloatType) return extension.HALF_FLOAT_OES;\n    }\n\n    if (p === THREE.AlphaFormat) return _gl.ALPHA;\n    if (p === THREE.RGBFormat) return _gl.RGB;\n    if (p === THREE.RGBAFormat) return _gl.RGBA;\n    if (p === THREE.LuminanceFormat) return _gl.LUMINANCE;\n    if (p === THREE.LuminanceAlphaFormat) return _gl.LUMINANCE_ALPHA;\n    if (p === THREE.AddEquation) return _gl.FUNC_ADD;\n    if (p === THREE.SubtractEquation) return _gl.FUNC_SUBTRACT;\n    if (p === THREE.ReverseSubtractEquation) return _gl.FUNC_REVERSE_SUBTRACT;\n    if (p === THREE.ZeroFactor) return _gl.ZERO;\n    if (p === THREE.OneFactor) return _gl.ONE;\n    if (p === THREE.SrcColorFactor) return _gl.SRC_COLOR;\n    if (p === THREE.OneMinusSrcColorFactor) return _gl.ONE_MINUS_SRC_COLOR;\n    if (p === THREE.SrcAlphaFactor) return _gl.SRC_ALPHA;\n    if (p === THREE.OneMinusSrcAlphaFactor) return _gl.ONE_MINUS_SRC_ALPHA;\n    if (p === THREE.DstAlphaFactor) return _gl.DST_ALPHA;\n    if (p === THREE.OneMinusDstAlphaFactor) return _gl.ONE_MINUS_DST_ALPHA;\n    if (p === THREE.DstColorFactor) return _gl.DST_COLOR;\n    if (p === THREE.OneMinusDstColorFactor) return _gl.ONE_MINUS_DST_COLOR;\n    if (p === THREE.SrcAlphaSaturateFactor) return _gl.SRC_ALPHA_SATURATE;\n    extension = extensions.get('WEBGL_compressed_texture_s3tc');\n\n    if (extension !== null) {\n      if (p === THREE.RGB_S3TC_DXT1_Format) return extension.COMPRESSED_RGB_S3TC_DXT1_EXT;\n      if (p === THREE.RGBA_S3TC_DXT1_Format) return extension.COMPRESSED_RGBA_S3TC_DXT1_EXT;\n      if (p === THREE.RGBA_S3TC_DXT3_Format) return extension.COMPRESSED_RGBA_S3TC_DXT3_EXT;\n      if (p === THREE.RGBA_S3TC_DXT5_Format) return extension.COMPRESSED_RGBA_S3TC_DXT5_EXT;\n    }\n\n    extension = extensions.get('WEBGL_compressed_texture_pvrtc');\n\n    if (extension !== null) {\n      if (p === THREE.RGB_PVRTC_4BPPV1_Format) return extension.COMPRESSED_RGB_PVRTC_4BPPV1_IMG;\n      if (p === THREE.RGB_PVRTC_2BPPV1_Format) return extension.COMPRESSED_RGB_PVRTC_2BPPV1_IMG;\n      if (p === THREE.RGBA_PVRTC_4BPPV1_Format) return extension.COMPRESSED_RGBA_PVRTC_4BPPV1_IMG;\n      if (p === THREE.RGBA_PVRTC_2BPPV1_Format) return extension.COMPRESSED_RGBA_PVRTC_2BPPV1_IMG;\n    }\n\n    extension = extensions.get('WEBGL_compressed_texture_etc1');\n\n    if (extension !== null) {\n      if (p === THREE.RGB_ETC1_Format) return extension.COMPRESSED_RGB_ETC1_WEBGL;\n    }\n\n    extension = extensions.get('EXT_blend_minmax');\n\n    if (extension !== null) {\n      if (p === THREE.MinEquation) return extension.MIN_EXT;\n      if (p === THREE.MaxEquation) return extension.MAX_EXT;\n    }\n\n    return 0;\n  }\n}; // File:src/renderers/webgl/WebGLExtensions.js\n\n/**\n* @author mrdoob / http://mrdoob.com/\n*/\n\n\nTHREE.WebGLExtensions = function (gl) {\n  var extensions = {};\n\n  this.get = function (name) {\n    if (extensions[name] !== undefined) {\n      return extensions[name];\n    }\n\n    var extension;\n\n    switch (name) {\n      case 'EXT_texture_filter_anisotropic':\n        extension = gl.getExtension('EXT_texture_filter_anisotropic') || gl.getExtension('MOZ_EXT_texture_filter_anisotropic') || gl.getExtension('WEBKIT_EXT_texture_filter_anisotropic');\n        break;\n\n      case 'WEBGL_compressed_texture_s3tc':\n        extension = gl.getExtension('WEBGL_compressed_texture_s3tc') || gl.getExtension('MOZ_WEBGL_compressed_texture_s3tc') || gl.getExtension('WEBKIT_WEBGL_compressed_texture_s3tc');\n        break;\n\n      case 'WEBGL_compressed_texture_pvrtc':\n        extension = gl.getExtension('WEBGL_compressed_texture_pvrtc') || gl.getExtension('WEBKIT_WEBGL_compressed_texture_pvrtc');\n        break;\n\n      case 'WEBGL_compressed_texture_etc1':\n        extension = gl.getExtension('WEBGL_compressed_texture_etc1');\n        break;\n\n      default:\n        extension = gl.getExtension(name);\n    }\n\n    extensions[name] = extension;\n    return extension;\n  };\n}; // File:src/renderers/webgl/WebGLCapabilities.js\n\n\nTHREE.WebGLCapabilities = function (gl, extensions, parameters) {\n  function getMaxPrecision(precision) {\n    if (precision === 'highp') {\n      if (gl.getShaderPrecisionFormat(gl.VERTEX_SHADER, gl.HIGH_FLOAT).precision > 0 && gl.getShaderPrecisionFormat(gl.FRAGMENT_SHADER, gl.HIGH_FLOAT).precision > 0) {\n        return 'highp';\n      }\n\n      precision = 'mediump';\n    }\n\n    if (precision === 'mediump') {\n      if (gl.getShaderPrecisionFormat(gl.VERTEX_SHADER, gl.MEDIUM_FLOAT).precision > 0 && gl.getShaderPrecisionFormat(gl.FRAGMENT_SHADER, gl.MEDIUM_FLOAT).precision > 0) {\n        return 'mediump';\n      }\n    }\n\n    return 'lowp';\n  }\n\n  this.getMaxPrecision = getMaxPrecision;\n  this.precision = parameters.precision !== undefined ? parameters.precision : 'highp', this.logarithmicDepthBuffer = parameters.logarithmicDepthBuffer !== undefined ? parameters.logarithmicDepthBuffer : false;\n  this.maxTextures = gl.getParameter(gl.MAX_TEXTURE_IMAGE_UNITS);\n  this.maxVertexTextures = gl.getParameter(gl.MAX_VERTEX_TEXTURE_IMAGE_UNITS);\n  this.maxTextureSize = gl.getParameter(gl.MAX_TEXTURE_SIZE);\n  this.maxCubemapSize = gl.getParameter(gl.MAX_CUBE_MAP_TEXTURE_SIZE);\n  this.maxAttributes = gl.getParameter(gl.MAX_VERTEX_ATTRIBS);\n  this.maxVertexUniforms = gl.getParameter(gl.MAX_VERTEX_UNIFORM_VECTORS);\n  this.maxVaryings = gl.getParameter(gl.MAX_VARYING_VECTORS);\n  this.maxFragmentUniforms = gl.getParameter(gl.MAX_FRAGMENT_UNIFORM_VECTORS);\n  this.vertexTextures = this.maxVertexTextures > 0;\n  this.floatFragmentTextures = !!extensions.get('OES_texture_float');\n  this.floatVertexTextures = this.vertexTextures && this.floatFragmentTextures;\n\n  var _maxPrecision = getMaxPrecision(this.precision);\n\n  if (_maxPrecision !== this.precision) {\n    this.precision = _maxPrecision;\n  }\n\n  if (this.logarithmicDepthBuffer) {\n    this.logarithmicDepthBuffer = !!extensions.get('EXT_frag_depth');\n  }\n}; // File:src/renderers/webgl/WebGLProperties.js\n\n/**\n* @author fordacious / fordacious.github.io\n*/\n\n\nTHREE.WebGLProperties = function () {\n  var properties = {};\n\n  this.get = function (object) {\n    var uuid = object.uuid;\n    var map = properties[uuid];\n\n    if (map === undefined) {\n      map = {};\n      properties[uuid] = map;\n    }\n\n    return map;\n  };\n\n  this.delete = function (object) {\n    delete properties[object.uuid];\n  };\n\n  this.clear = function () {\n    properties = {};\n  };\n}; // File:src/renderers/webgl/WebGLLights.js\n\n/**\n* @author mrdoob / http://mrdoob.com/\n*/\n\n\nTHREE.WebGLLights = function () {\n  var lights = {};\n\n  this.get = function (light) {\n    if (lights[light.id] !== undefined) {\n      return lights[light.id];\n    }\n\n    var uniforms;\n\n    switch (light.type) {\n      case 'DirectionalLight':\n        uniforms = {\n          direction: new THREE.Vector3(),\n          color: new THREE.Color(),\n          shadow: false,\n          shadowBias: 0,\n          shadowRadius: 1,\n          shadowMapSize: new THREE.Vector2()\n        };\n        break;\n\n      case 'SpotLight':\n        uniforms = {\n          position: new THREE.Vector3(),\n          direction: new THREE.Vector3(),\n          color: new THREE.Color(),\n          distance: 0,\n          coneCos: 0,\n          penumbraCos: 0,\n          decay: 0,\n          shadow: false,\n          shadowBias: 0,\n          shadowRadius: 1,\n          shadowMapSize: new THREE.Vector2()\n        };\n        break;\n\n      case 'PointLight':\n        uniforms = {\n          position: new THREE.Vector3(),\n          color: new THREE.Color(),\n          distance: 0,\n          decay: 0,\n          shadow: false,\n          shadowBias: 0,\n          shadowRadius: 1,\n          shadowMapSize: new THREE.Vector2()\n        };\n        break;\n\n      case 'HemisphereLight':\n        uniforms = {\n          direction: new THREE.Vector3(),\n          skyColor: new THREE.Color(),\n          groundColor: new THREE.Color()\n        };\n        break;\n    }\n\n    lights[light.id] = uniforms;\n    return uniforms;\n  };\n}; // File:src/renderers/webgl/WebGLState.js\n\n/**\n* @author mrdoob / http://mrdoob.com/\n*/\n\n\nTHREE.WebGLState = function (gl, extensions, paramThreeToGL) {\n  var _this = this;\n\n  var color = new THREE.Vector4();\n  var newAttributes = new Uint8Array(16);\n  var enabledAttributes = new Uint8Array(16);\n  var attributeDivisors = new Uint8Array(16);\n  var capabilities = {};\n  var compressedTextureFormats = null;\n  var currentBlending = null;\n  var currentBlendEquation = null;\n  var currentBlendSrc = null;\n  var currentBlendDst = null;\n  var currentBlendEquationAlpha = null;\n  var currentBlendSrcAlpha = null;\n  var currentBlendDstAlpha = null;\n  var currentPremultipledAlpha = false;\n  var currentDepthFunc = null;\n  var currentDepthWrite = null;\n  var currentColorWrite = null;\n  var currentStencilWrite = null;\n  var currentStencilFunc = null;\n  var currentStencilRef = null;\n  var currentStencilMask = null;\n  var currentStencilFail = null;\n  var currentStencilZFail = null;\n  var currentStencilZPass = null;\n  var currentFlipSided = null;\n  var currentLineWidth = null;\n  var currentPolygonOffsetFactor = null;\n  var currentPolygonOffsetUnits = null;\n  var currentScissorTest = null;\n  var maxTextures = gl.getParameter(gl.MAX_TEXTURE_IMAGE_UNITS);\n  var currentTextureSlot = undefined;\n  var currentBoundTextures = {};\n  var currentClearColor = new THREE.Vector4();\n  var currentClearDepth = null;\n  var currentClearStencil = null;\n  var currentScissor = new THREE.Vector4();\n  var currentViewport = new THREE.Vector4();\n  var emptyTexture = gl.createTexture();\n  gl.bindTexture(gl.TEXTURE_2D, emptyTexture);\n  gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_MIN_FILTER, gl.LINEAR);\n  gl.texImage2D(gl.TEXTURE_2D, 0, gl.RGB, 1, 1, 0, gl.RGB, gl.UNSIGNED_BYTE, new Uint8Array(3));\n\n  this.init = function () {\n    this.clearColor(0, 0, 0, 1);\n    this.clearDepth(1);\n    this.clearStencil(0);\n    this.enable(gl.DEPTH_TEST);\n    gl.depthFunc(gl.LEQUAL);\n    gl.frontFace(gl.CCW);\n    gl.cullFace(gl.BACK);\n    this.enable(gl.CULL_FACE);\n    this.enable(gl.BLEND);\n    gl.blendEquation(gl.FUNC_ADD);\n    gl.blendFunc(gl.SRC_ALPHA, gl.ONE_MINUS_SRC_ALPHA);\n  };\n\n  this.initAttributes = function () {\n    for (var i = 0, l = newAttributes.length; i < l; i++) {\n      newAttributes[i] = 0;\n    }\n  };\n\n  this.enableAttribute = function (attribute) {\n    newAttributes[attribute] = 1;\n\n    if (enabledAttributes[attribute] === 0) {\n      gl.enableVertexAttribArray(attribute);\n      enabledAttributes[attribute] = 1;\n    }\n\n    if (attributeDivisors[attribute] !== 0) {\n      var extension = extensions.get('ANGLE_instanced_arrays');\n      extension.vertexAttribDivisorANGLE(attribute, 0);\n      attributeDivisors[attribute] = 0;\n    }\n  };\n\n  this.enableAttributeAndDivisor = function (attribute, meshPerAttribute, extension) {\n    newAttributes[attribute] = 1;\n\n    if (enabledAttributes[attribute] === 0) {\n      gl.enableVertexAttribArray(attribute);\n      enabledAttributes[attribute] = 1;\n    }\n\n    if (attributeDivisors[attribute] !== meshPerAttribute) {\n      extension.vertexAttribDivisorANGLE(attribute, meshPerAttribute);\n      attributeDivisors[attribute] = meshPerAttribute;\n    }\n  };\n\n  this.disableUnusedAttributes = function () {\n    for (var i = 0, l = enabledAttributes.length; i < l; i++) {\n      if (enabledAttributes[i] !== newAttributes[i]) {\n        gl.disableVertexAttribArray(i);\n        enabledAttributes[i] = 0;\n      }\n    }\n  };\n\n  this.enable = function (id) {\n    if (capabilities[id] !== true) {\n      gl.enable(id);\n      capabilities[id] = true;\n    }\n  };\n\n  this.disable = function (id) {\n    if (capabilities[id] !== false) {\n      gl.disable(id);\n      capabilities[id] = false;\n    }\n  };\n\n  this.getCompressedTextureFormats = function () {\n    if (compressedTextureFormats === null) {\n      compressedTextureFormats = [];\n\n      if (extensions.get('WEBGL_compressed_texture_pvrtc') || extensions.get('WEBGL_compressed_texture_s3tc') || extensions.get('WEBGL_compressed_texture_etc1')) {\n        var formats = gl.getParameter(gl.COMPRESSED_TEXTURE_FORMATS);\n\n        for (var i = 0; i < formats.length; i++) {\n          compressedTextureFormats.push(formats[i]);\n        }\n      }\n    }\n\n    return compressedTextureFormats;\n  };\n\n  this.setBlending = function (blending, blendEquation, blendSrc, blendDst, blendEquationAlpha, blendSrcAlpha, blendDstAlpha, premultipliedAlpha) {\n    if (blending === THREE.NoBlending) {\n      this.disable(gl.BLEND);\n    } else {\n      this.enable(gl.BLEND);\n    }\n\n    if (blending !== currentBlending || premultipliedAlpha !== currentPremultipledAlpha) {\n      if (blending === THREE.AdditiveBlending) {\n        if (premultipliedAlpha) {\n          gl.blendEquationSeparate(gl.FUNC_ADD, gl.FUNC_ADD);\n          gl.blendFuncSeparate(gl.ONE, gl.ONE, gl.ONE, gl.ONE);\n        } else {\n          gl.blendEquation(gl.FUNC_ADD);\n          gl.blendFunc(gl.SRC_ALPHA, gl.ONE);\n        }\n      } else if (blending === THREE.SubtractiveBlending) {\n        if (premultipliedAlpha) {\n          gl.blendEquationSeparate(gl.FUNC_ADD, gl.FUNC_ADD);\n          gl.blendFuncSeparate(gl.ZERO, gl.ZERO, gl.ONE_MINUS_SRC_COLOR, gl.ONE_MINUS_SRC_ALPHA);\n        } else {\n          gl.blendEquation(gl.FUNC_ADD);\n          gl.blendFunc(gl.ZERO, gl.ONE_MINUS_SRC_COLOR);\n        }\n      } else if (blending === THREE.MultiplyBlending) {\n        if (premultipliedAlpha) {\n          gl.blendEquationSeparate(gl.FUNC_ADD, gl.FUNC_ADD);\n          gl.blendFuncSeparate(gl.ZERO, gl.ZERO, gl.SRC_COLOR, gl.SRC_ALPHA);\n        } else {\n          gl.blendEquation(gl.FUNC_ADD);\n          gl.blendFunc(gl.ZERO, gl.SRC_COLOR);\n        }\n      } else {\n        if (premultipliedAlpha) {\n          gl.blendEquationSeparate(gl.FUNC_ADD, gl.FUNC_ADD);\n          gl.blendFuncSeparate(gl.ONE, gl.ONE_MINUS_SRC_ALPHA, gl.ONE, gl.ONE_MINUS_SRC_ALPHA);\n        } else {\n          gl.blendEquationSeparate(gl.FUNC_ADD, gl.FUNC_ADD);\n          gl.blendFuncSeparate(gl.SRC_ALPHA, gl.ONE_MINUS_SRC_ALPHA, gl.ONE, gl.ONE_MINUS_SRC_ALPHA);\n        }\n      }\n\n      currentBlending = blending;\n      currentPremultipledAlpha = premultipliedAlpha;\n    }\n\n    if (blending === THREE.CustomBlending) {\n      blendEquationAlpha = blendEquationAlpha || blendEquation;\n      blendSrcAlpha = blendSrcAlpha || blendSrc;\n      blendDstAlpha = blendDstAlpha || blendDst;\n\n      if (blendEquation !== currentBlendEquation || blendEquationAlpha !== currentBlendEquationAlpha) {\n        gl.blendEquationSeparate(paramThreeToGL(blendEquation), paramThreeToGL(blendEquationAlpha));\n        currentBlendEquation = blendEquation;\n        currentBlendEquationAlpha = blendEquationAlpha;\n      }\n\n      if (blendSrc !== currentBlendSrc || blendDst !== currentBlendDst || blendSrcAlpha !== currentBlendSrcAlpha || blendDstAlpha !== currentBlendDstAlpha) {\n        gl.blendFuncSeparate(paramThreeToGL(blendSrc), paramThreeToGL(blendDst), paramThreeToGL(blendSrcAlpha), paramThreeToGL(blendDstAlpha));\n        currentBlendSrc = blendSrc;\n        currentBlendDst = blendDst;\n        currentBlendSrcAlpha = blendSrcAlpha;\n        currentBlendDstAlpha = blendDstAlpha;\n      }\n    } else {\n      currentBlendEquation = null;\n      currentBlendSrc = null;\n      currentBlendDst = null;\n      currentBlendEquationAlpha = null;\n      currentBlendSrcAlpha = null;\n      currentBlendDstAlpha = null;\n    }\n  };\n\n  this.setDepthFunc = function (depthFunc) {\n    if (currentDepthFunc !== depthFunc) {\n      if (depthFunc) {\n        switch (depthFunc) {\n          case THREE.NeverDepth:\n            gl.depthFunc(gl.NEVER);\n            break;\n\n          case THREE.AlwaysDepth:\n            gl.depthFunc(gl.ALWAYS);\n            break;\n\n          case THREE.LessDepth:\n            gl.depthFunc(gl.LESS);\n            break;\n\n          case THREE.LessEqualDepth:\n            gl.depthFunc(gl.LEQUAL);\n            break;\n\n          case THREE.EqualDepth:\n            gl.depthFunc(gl.EQUAL);\n            break;\n\n          case THREE.GreaterEqualDepth:\n            gl.depthFunc(gl.GEQUAL);\n            break;\n\n          case THREE.GreaterDepth:\n            gl.depthFunc(gl.GREATER);\n            break;\n\n          case THREE.NotEqualDepth:\n            gl.depthFunc(gl.NOTEQUAL);\n            break;\n\n          default:\n            gl.depthFunc(gl.LEQUAL);\n        }\n      } else {\n        gl.depthFunc(gl.LEQUAL);\n      }\n\n      currentDepthFunc = depthFunc;\n    }\n  };\n\n  this.setDepthTest = function (depthTest) {\n    if (depthTest) {\n      this.enable(gl.DEPTH_TEST);\n    } else {\n      this.disable(gl.DEPTH_TEST);\n    }\n  };\n\n  this.setDepthWrite = function (depthWrite) {\n    // TODO: Rename to setDepthMask\n    if (currentDepthWrite !== depthWrite) {\n      gl.depthMask(depthWrite);\n      currentDepthWrite = depthWrite;\n    }\n  };\n\n  this.setColorWrite = function (colorWrite) {\n    // TODO: Rename to setColorMask\n    if (currentColorWrite !== colorWrite) {\n      gl.colorMask(colorWrite, colorWrite, colorWrite, colorWrite);\n      currentColorWrite = colorWrite;\n    }\n  };\n\n  this.setStencilFunc = function (stencilFunc, stencilRef, stencilMask) {\n    if (currentStencilFunc !== stencilFunc || currentStencilRef !== stencilRef || currentStencilMask !== stencilMask) {\n      gl.stencilFunc(stencilFunc, stencilRef, stencilMask);\n      currentStencilFunc = stencilFunc;\n      currentStencilRef = stencilRef;\n      currentStencilMask = stencilMask;\n    }\n  };\n\n  this.setStencilOp = function (stencilFail, stencilZFail, stencilZPass) {\n    if (currentStencilFail !== stencilFail || currentStencilZFail !== stencilZFail || currentStencilZPass !== stencilZPass) {\n      gl.stencilOp(stencilFail, stencilZFail, stencilZPass);\n      currentStencilFail = stencilFail;\n      currentStencilZFail = stencilZFail;\n      currentStencilZPass = stencilZPass;\n    }\n  };\n\n  this.setStencilTest = function (stencilTest) {\n    if (stencilTest) {\n      this.enable(gl.STENCIL_TEST);\n    } else {\n      this.disable(gl.STENCIL_TEST);\n    }\n  };\n\n  this.setStencilWrite = function (stencilWrite) {\n    // TODO: Rename to setStencilMask\n    if (currentStencilWrite !== stencilWrite) {\n      gl.stencilMask(stencilWrite);\n      currentStencilWrite = stencilWrite;\n    }\n  };\n\n  this.setFlipSided = function (flipSided) {\n    if (currentFlipSided !== flipSided) {\n      if (flipSided) {\n        gl.frontFace(gl.CW);\n      } else {\n        gl.frontFace(gl.CCW);\n      }\n\n      currentFlipSided = flipSided;\n    }\n  };\n\n  this.setLineWidth = function (width) {\n    if (width !== currentLineWidth) {\n      gl.lineWidth(width);\n      currentLineWidth = width;\n    }\n  };\n\n  this.setPolygonOffset = function (polygonOffset, factor, units) {\n    if (polygonOffset) {\n      this.enable(gl.POLYGON_OFFSET_FILL);\n    } else {\n      this.disable(gl.POLYGON_OFFSET_FILL);\n    }\n\n    if (polygonOffset && (currentPolygonOffsetFactor !== factor || currentPolygonOffsetUnits !== units)) {\n      gl.polygonOffset(factor, units);\n      currentPolygonOffsetFactor = factor;\n      currentPolygonOffsetUnits = units;\n    }\n  };\n\n  this.getScissorTest = function () {\n    return currentScissorTest;\n  };\n\n  this.setScissorTest = function (scissorTest) {\n    currentScissorTest = scissorTest;\n\n    if (scissorTest) {\n      this.enable(gl.SCISSOR_TEST);\n    } else {\n      this.disable(gl.SCISSOR_TEST);\n    }\n  }; // texture\n\n\n  this.activeTexture = function (webglSlot) {\n    if (webglSlot === undefined) webglSlot = gl.TEXTURE0 + maxTextures - 1;\n\n    if (currentTextureSlot !== webglSlot) {\n      gl.activeTexture(webglSlot);\n      currentTextureSlot = webglSlot;\n    }\n  };\n\n  this.bindTexture = function (webglType, webglTexture) {\n    if (currentTextureSlot === undefined) {\n      _this.activeTexture();\n    }\n\n    var boundTexture = currentBoundTextures[currentTextureSlot];\n\n    if (boundTexture === undefined) {\n      boundTexture = {\n        type: undefined,\n        texture: undefined\n      };\n      currentBoundTextures[currentTextureSlot] = boundTexture;\n    }\n\n    if (boundTexture.type !== webglType || boundTexture.texture !== webglTexture) {\n      gl.bindTexture(webglType, webglTexture || emptyTexture);\n      boundTexture.type = webglType;\n      boundTexture.texture = webglTexture;\n    }\n  };\n\n  this.compressedTexImage2D = function () {\n    try {\n      gl.compressedTexImage2D.apply(gl, arguments);\n    } catch (error) {}\n  };\n\n  this.texImage2D = function () {\n    try {\n      gl.texImage2D.apply(gl, arguments);\n    } catch (error) {}\n  }; // clear values\n\n\n  this.clearColor = function (r, g, b, a) {\n    color.set(r, g, b, a);\n\n    if (currentClearColor.equals(color) === false) {\n      gl.clearColor(r, g, b, a);\n      currentClearColor.copy(color);\n    }\n  };\n\n  this.clearDepth = function (depth) {\n    if (currentClearDepth !== depth) {\n      gl.clearDepth(depth);\n      currentClearDepth = depth;\n    }\n  };\n\n  this.clearStencil = function (stencil) {\n    if (currentClearStencil !== stencil) {\n      gl.clearStencil(stencil);\n      currentClearStencil = stencil;\n    }\n  }; //\n\n\n  this.scissor = function (scissor) {\n    if (currentScissor.equals(scissor) === false) {\n      gl.scissor(scissor.x, scissor.y, scissor.z, scissor.w);\n      currentScissor.copy(scissor);\n    }\n  };\n\n  this.viewport = function (viewport) {\n    if (currentViewport.equals(viewport) === false) {\n      gl.viewport(viewport.x, viewport.y, viewport.z, viewport.w);\n      currentViewport.copy(viewport);\n    }\n  }; //\n\n\n  this.reset = function () {\n    for (var i = 0; i < enabledAttributes.length; i++) {\n      if (enabledAttributes[i] === 1) {\n        gl.disableVertexAttribArray(i);\n        enabledAttributes[i] = 0;\n      }\n    }\n\n    capabilities = {};\n    compressedTextureFormats = null;\n    currentTextureSlot = undefined;\n    currentBoundTextures = {};\n    currentBlending = null;\n    currentColorWrite = null;\n    currentDepthWrite = null;\n    currentStencilWrite = null;\n    currentFlipSided = null;\n  };\n}; // File:src/renderers/webgl/WebGLGeometries.js\n\n/**\n* @author mrdoob / http://mrdoob.com/\n*/\n\n\nTHREE.WebGLGeometries = function (gl, properties, info) {\n  var geometries = {};\n\n  function get(object) {\n    var geometry = object.geometry;\n\n    if (geometries[geometry.id] !== undefined) {\n      return geometries[geometry.id];\n    }\n\n    geometry.addEventListener('dispose', onGeometryDispose);\n    var buffergeometry;\n\n    if (geometry instanceof THREE.BufferGeometry) {\n      buffergeometry = geometry;\n    } else if (geometry instanceof THREE.Geometry) {\n      if (geometry._bufferGeometry === undefined) {\n        geometry._bufferGeometry = new THREE.BufferGeometry().setFromObject(object);\n      }\n\n      buffergeometry = geometry._bufferGeometry;\n    }\n\n    geometries[geometry.id] = buffergeometry;\n    info.memory.geometries++;\n    return buffergeometry;\n  }\n\n  function onGeometryDispose(event) {\n    var geometry = event.target;\n    var buffergeometry = geometries[geometry.id];\n\n    if (buffergeometry.index !== null) {\n      deleteAttribute(buffergeometry.index);\n    }\n\n    deleteAttributes(buffergeometry.attributes);\n    geometry.removeEventListener('dispose', onGeometryDispose);\n    delete geometries[geometry.id]; // TODO\n\n    var property = properties.get(geometry);\n\n    if (property.wireframe) {\n      deleteAttribute(property.wireframe);\n    }\n\n    properties.delete(geometry);\n    var bufferproperty = properties.get(buffergeometry);\n\n    if (bufferproperty.wireframe) {\n      deleteAttribute(bufferproperty.wireframe);\n    }\n\n    properties.delete(buffergeometry); //\n\n    info.memory.geometries--;\n  }\n\n  function getAttributeBuffer(attribute) {\n    if (attribute instanceof THREE.InterleavedBufferAttribute) {\n      return properties.get(attribute.data).__webglBuffer;\n    }\n\n    return properties.get(attribute).__webglBuffer;\n  }\n\n  function deleteAttribute(attribute) {\n    var buffer = getAttributeBuffer(attribute);\n\n    if (buffer !== undefined) {\n      gl.deleteBuffer(buffer);\n      removeAttributeBuffer(attribute);\n    }\n  }\n\n  function deleteAttributes(attributes) {\n    for (var name in attributes) {\n      deleteAttribute(attributes[name]);\n    }\n  }\n\n  function removeAttributeBuffer(attribute) {\n    if (attribute instanceof THREE.InterleavedBufferAttribute) {\n      properties.delete(attribute.data);\n    } else {\n      properties.delete(attribute);\n    }\n  }\n\n  this.get = get;\n}; // File:src/renderers/webgl/WebGLBufferRenderer.js\n\n/**\n* @author mrdoob / http://mrdoob.com/\n*/\n\n\nTHREE.WebGLBufferRenderer = function (_gl, extensions, _infoRender) {\n  var mode;\n\n  function setMode(value) {\n    mode = value;\n  }\n\n  function render(start, count) {\n    _gl.drawArrays(mode, start, count);\n\n    _infoRender.calls++;\n    _infoRender.vertices += count;\n    if (mode === _gl.TRIANGLES) _infoRender.faces += count / 3;\n  }\n\n  function renderInstances(geometry) {\n    var extension = extensions.get('ANGLE_instanced_arrays');\n\n    if (extension === null) {\n      return;\n    }\n\n    var position = geometry.attributes.position;\n    var count = 0;\n\n    if (position instanceof THREE.InterleavedBufferAttribute) {\n      count = position.data.count;\n      extension.drawArraysInstancedANGLE(mode, 0, count, geometry.maxInstancedCount);\n    } else {\n      count = position.count;\n      extension.drawArraysInstancedANGLE(mode, 0, count, geometry.maxInstancedCount);\n    }\n\n    _infoRender.calls++;\n    _infoRender.vertices += count * geometry.maxInstancedCount;\n    if (mode === _gl.TRIANGLES) _infoRender.faces += geometry.maxInstancedCount * count / 3;\n  }\n\n  this.setMode = setMode;\n  this.render = render;\n  this.renderInstances = renderInstances;\n}; // File:src/renderers/webgl/WebGLIndexedBufferRenderer.js\n\n/**\n* @author mrdoob / http://mrdoob.com/\n*/\n\n\nTHREE.WebGLIndexedBufferRenderer = function (_gl, extensions, _infoRender) {\n  var mode;\n\n  function setMode(value) {\n    mode = value;\n  }\n\n  var type, size;\n\n  function setIndex(index) {\n    if (index.array instanceof Uint32Array && extensions.get('OES_element_index_uint')) {\n      type = _gl.UNSIGNED_INT;\n      size = 4;\n    } else {\n      type = _gl.UNSIGNED_SHORT;\n      size = 2;\n    }\n  }\n\n  function render(start, count) {\n    _gl.drawElements(mode, count, type, start * size);\n\n    _infoRender.calls++;\n    _infoRender.vertices += count;\n    if (mode === _gl.TRIANGLES) _infoRender.faces += count / 3;\n  }\n\n  function renderInstances(geometry, start, count) {\n    var extension = extensions.get('ANGLE_instanced_arrays');\n\n    if (extension === null) {\n      return;\n    }\n\n    extension.drawElementsInstancedANGLE(mode, count, type, start * size, geometry.maxInstancedCount);\n    _infoRender.calls++;\n    _infoRender.vertices += count * geometry.maxInstancedCount;\n    if (mode === _gl.TRIANGLES) _infoRender.faces += geometry.maxInstancedCount * count / 3;\n  }\n\n  this.setMode = setMode;\n  this.setIndex = setIndex;\n  this.render = render;\n  this.renderInstances = renderInstances;\n}; // File:src/renderers/webgl/WebGLShader.js\n\n\nTHREE.WebGLShader = function () {\n\n  return function WebGLShader(gl, type, string) {\n    var shader = gl.createShader(type);\n    gl.shaderSource(shader, string);\n    gl.compileShader(shader);\n\n    if (gl.getShaderParameter(shader, gl.COMPILE_STATUS) === false) ;\n\n    if (gl.getShaderInfoLog(shader) !== '') ; // --enable-privileged-webgl-extension\n    // console.log( type, gl.getExtension( 'WEBGL_debug_shaders' ).getTranslatedShaderSource( shader ) );\n\n\n    return shader;\n  };\n}(); // File:src/renderers/webgl/WebGLShadowMap.js\n\n/**\n * @author alteredq / http://alteredqualia.com/\n * @author mrdoob / http://mrdoob.com/\n */\n\n\nTHREE.WebGLShadowMap = function (_renderer, _lights, _objects) {\n  var _gl = _renderer.context,\n      _state = _renderer.state,\n      _frustum = new THREE.Frustum(),\n      _projScreenMatrix = new THREE.Matrix4(),\n      _shadowMapSize = new THREE.Vector2(),\n      _lookTarget = new THREE.Vector3(),\n      _lightPositionWorld = new THREE.Vector3(),\n      _renderList = [],\n      _MorphingFlag = 1,\n      _SkinningFlag = 2,\n      _NumberOfMaterialVariants = (_MorphingFlag | _SkinningFlag) + 1,\n      _depthMaterials = new Array(_NumberOfMaterialVariants),\n      _distanceMaterials = new Array(_NumberOfMaterialVariants);\n\n  var cubeDirections = [new THREE.Vector3(1, 0, 0), new THREE.Vector3(-1, 0, 0), new THREE.Vector3(0, 0, 1), new THREE.Vector3(0, 0, -1), new THREE.Vector3(0, 1, 0), new THREE.Vector3(0, -1, 0)];\n  var cubeUps = [new THREE.Vector3(0, 1, 0), new THREE.Vector3(0, 1, 0), new THREE.Vector3(0, 1, 0), new THREE.Vector3(0, 1, 0), new THREE.Vector3(0, 0, 1), new THREE.Vector3(0, 0, -1)];\n  var cube2DViewPorts = [new THREE.Vector4(), new THREE.Vector4(), new THREE.Vector4(), new THREE.Vector4(), new THREE.Vector4(), new THREE.Vector4()]; // init\n\n  var depthShader = THREE.ShaderLib[\"depthRGBA\"];\n  var depthUniforms = THREE.UniformsUtils.clone(depthShader.uniforms);\n  var distanceShader = THREE.ShaderLib[\"distanceRGBA\"];\n  var distanceUniforms = THREE.UniformsUtils.clone(distanceShader.uniforms);\n\n  for (var i = 0; i !== _NumberOfMaterialVariants; ++i) {\n    var useMorphing = (i & _MorphingFlag) !== 0;\n    var useSkinning = (i & _SkinningFlag) !== 0;\n    var depthMaterial = new THREE.ShaderMaterial({\n      uniforms: depthUniforms,\n      vertexShader: depthShader.vertexShader,\n      fragmentShader: depthShader.fragmentShader,\n      morphTargets: useMorphing,\n      skinning: useSkinning\n    });\n    _depthMaterials[i] = depthMaterial;\n    var distanceMaterial = new THREE.ShaderMaterial({\n      defines: {\n        'USE_SHADOWMAP': ''\n      },\n      uniforms: distanceUniforms,\n      vertexShader: distanceShader.vertexShader,\n      fragmentShader: distanceShader.fragmentShader,\n      morphTargets: useMorphing,\n      skinning: useSkinning\n    });\n    _distanceMaterials[i] = distanceMaterial;\n  } //\n\n\n  var scope = this;\n  this.enabled = false;\n  this.autoUpdate = true;\n  this.needsUpdate = false;\n  this.type = THREE.PCFShadowMap;\n  this.cullFace = THREE.CullFaceFront;\n\n  this.render = function (scene, camera) {\n    var faceCount, isPointLight;\n    var shadows = _lights.shadows;\n    if (shadows.length === 0) return;\n    if (scope.enabled === false) return;\n    if (scope.autoUpdate === false && scope.needsUpdate === false) return; // Set GL state for depth map.\n\n    _state.clearColor(1, 1, 1, 1);\n\n    _state.disable(_gl.BLEND);\n\n    _state.enable(_gl.CULL_FACE);\n\n    _gl.frontFace(_gl.CCW);\n\n    _gl.cullFace(scope.cullFace === THREE.CullFaceFront ? _gl.FRONT : _gl.BACK);\n\n    _state.setDepthTest(true);\n\n    _state.setScissorTest(false); // render depth map\n\n\n    for (var i = 0, il = shadows.length; i < il; i++) {\n      var light = shadows[i];\n      var shadow = light.shadow;\n      var shadowCamera = shadow.camera;\n\n      _shadowMapSize.copy(shadow.mapSize);\n\n      if (light instanceof THREE.PointLight) {\n        faceCount = 6;\n        isPointLight = true;\n        var vpWidth = _shadowMapSize.x;\n        var vpHeight = _shadowMapSize.y; // These viewports map a cube-map onto a 2D texture with the\n        // following orientation:\n        //\n        //  xzXZ\n        //   y Y\n        //\n        // X - Positive x direction\n        // x - Negative x direction\n        // Y - Positive y direction\n        // y - Negative y direction\n        // Z - Positive z direction\n        // z - Negative z direction\n        // positive X\n\n        cube2DViewPorts[0].set(vpWidth * 2, vpHeight, vpWidth, vpHeight); // negative X\n\n        cube2DViewPorts[1].set(0, vpHeight, vpWidth, vpHeight); // positive Z\n\n        cube2DViewPorts[2].set(vpWidth * 3, vpHeight, vpWidth, vpHeight); // negative Z\n\n        cube2DViewPorts[3].set(vpWidth, vpHeight, vpWidth, vpHeight); // positive Y\n\n        cube2DViewPorts[4].set(vpWidth * 3, 0, vpWidth, vpHeight); // negative Y\n\n        cube2DViewPorts[5].set(vpWidth, 0, vpWidth, vpHeight);\n        _shadowMapSize.x *= 4.0;\n        _shadowMapSize.y *= 2.0;\n      } else {\n        faceCount = 1;\n        isPointLight = false;\n      }\n\n      if (shadow.map === null) {\n        var pars = {\n          minFilter: THREE.NearestFilter,\n          magFilter: THREE.NearestFilter,\n          format: THREE.RGBAFormat\n        };\n        shadow.map = new THREE.WebGLRenderTarget(_shadowMapSize.x, _shadowMapSize.y, pars); //\n\n        if (light instanceof THREE.SpotLight) {\n          shadowCamera.aspect = _shadowMapSize.x / _shadowMapSize.y;\n        }\n\n        shadowCamera.updateProjectionMatrix();\n      }\n\n      var shadowMap = shadow.map;\n      var shadowMatrix = shadow.matrix;\n\n      _lightPositionWorld.setFromMatrixPosition(light.matrixWorld);\n\n      shadowCamera.position.copy(_lightPositionWorld);\n\n      _renderer.setRenderTarget(shadowMap);\n\n      _renderer.clear(); // render shadow map for each cube face (if omni-directional) or\n      // run a single pass if not\n\n\n      for (var face = 0; face < faceCount; face++) {\n        if (isPointLight) {\n          _lookTarget.copy(shadowCamera.position);\n\n          _lookTarget.add(cubeDirections[face]);\n\n          shadowCamera.up.copy(cubeUps[face]);\n          shadowCamera.lookAt(_lookTarget);\n          var vpDimensions = cube2DViewPorts[face];\n\n          _state.viewport(vpDimensions);\n        } else {\n          _lookTarget.setFromMatrixPosition(light.target.matrixWorld);\n\n          shadowCamera.lookAt(_lookTarget);\n        }\n\n        shadowCamera.updateMatrixWorld();\n        shadowCamera.matrixWorldInverse.getInverse(shadowCamera.matrixWorld); // compute shadow matrix\n\n        shadowMatrix.set(0.5, 0.0, 0.0, 0.5, 0.0, 0.5, 0.0, 0.5, 0.0, 0.0, 0.5, 0.5, 0.0, 0.0, 0.0, 1.0);\n        shadowMatrix.multiply(shadowCamera.projectionMatrix);\n        shadowMatrix.multiply(shadowCamera.matrixWorldInverse); // update camera matrices and frustum\n\n        _projScreenMatrix.multiplyMatrices(shadowCamera.projectionMatrix, shadowCamera.matrixWorldInverse);\n\n        _frustum.setFromMatrix(_projScreenMatrix); // set object matrices & frustum culling\n\n\n        _renderList.length = 0;\n        projectObject(scene, camera, shadowCamera); // render shadow map\n        // render regular objects\n\n        for (var j = 0, jl = _renderList.length; j < jl; j++) {\n          var object = _renderList[j];\n\n          var geometry = _objects.update(object);\n\n          var material = object.material;\n\n          if (material instanceof THREE.MultiMaterial) {\n            var groups = geometry.groups;\n            var materials = material.materials;\n\n            for (var k = 0, kl = groups.length; k < kl; k++) {\n              var group = groups[k];\n              var groupMaterial = materials[group.materialIndex];\n\n              if (groupMaterial.visible === true) {\n                var depthMaterial = getDepthMaterial(object, groupMaterial, isPointLight, _lightPositionWorld);\n\n                _renderer.renderBufferDirect(shadowCamera, null, geometry, depthMaterial, object, group);\n              }\n            }\n          } else {\n            var depthMaterial = getDepthMaterial(object, material, isPointLight, _lightPositionWorld);\n\n            _renderer.renderBufferDirect(shadowCamera, null, geometry, depthMaterial, object, null);\n          }\n        }\n      }\n    } // Restore GL state.\n\n\n    var clearColor = _renderer.getClearColor(),\n        clearAlpha = _renderer.getClearAlpha();\n\n    _renderer.setClearColor(clearColor, clearAlpha);\n\n    _state.enable(_gl.BLEND);\n\n    if (scope.cullFace === THREE.CullFaceFront) {\n      _gl.cullFace(_gl.BACK);\n    }\n\n    scope.needsUpdate = false;\n  };\n\n  function getDepthMaterial(object, material, isPointLight, lightPositionWorld) {\n    var geometry = object.geometry;\n    var newMaterial = null;\n    var materialVariants = _depthMaterials;\n    var customMaterial = object.customDepthMaterial;\n\n    if (isPointLight) {\n      materialVariants = _distanceMaterials;\n      customMaterial = object.customDistanceMaterial;\n    }\n\n    if (!customMaterial) {\n      var useMorphing = geometry.morphTargets !== undefined && geometry.morphTargets.length > 0 && material.morphTargets;\n      var useSkinning = object instanceof THREE.SkinnedMesh && material.skinning;\n      var variantIndex = 0;\n      if (useMorphing) variantIndex |= _MorphingFlag;\n      if (useSkinning) variantIndex |= _SkinningFlag;\n      newMaterial = materialVariants[variantIndex];\n    } else {\n      newMaterial = customMaterial;\n    }\n\n    newMaterial.visible = material.visible;\n    newMaterial.wireframe = material.wireframe;\n    newMaterial.wireframeLinewidth = material.wireframeLinewidth;\n\n    if (isPointLight && newMaterial.uniforms.lightPos !== undefined) {\n      newMaterial.uniforms.lightPos.value.copy(lightPositionWorld);\n    }\n\n    return newMaterial;\n  }\n\n  function projectObject(object, camera, shadowCamera) {\n    if (object.visible === false) return;\n\n    if (object.layers.test(camera.layers) && (object instanceof THREE.Mesh || object instanceof THREE.Line || object instanceof THREE.Points)) {\n      if (object.castShadow && (object.frustumCulled === false || _frustum.intersectsObject(object) === true)) {\n        var material = object.material;\n\n        if (material.visible === true) {\n          object.modelViewMatrix.multiplyMatrices(shadowCamera.matrixWorldInverse, object.matrixWorld);\n\n          _renderList.push(object);\n        }\n      }\n    }\n\n    var children = object.children;\n\n    for (var i = 0, l = children.length; i < l; i++) {\n      projectObject(children[i], camera, shadowCamera);\n    }\n  }\n}; // File:src/renderers/webgl/plugins/SpritePlugin.js\n\n/**\n * @author mikael emtinger / http://gomo.se/\n * @author alteredq / http://alteredqualia.com/\n */\n\n\nTHREE.SpritePlugin = function (renderer, sprites) {\n  var gl = renderer.context;\n  var state = renderer.state;\n  var vertexBuffer, elementBuffer;\n  var program, attributes, uniforms;\n  var texture; // decompose matrixWorld\n\n  var spritePosition = new THREE.Vector3();\n  var spriteRotation = new THREE.Quaternion();\n  var spriteScale = new THREE.Vector3();\n\n  function init() {\n    var vertices = new Float32Array([-0.5, -0.5, 0, 0, 0.5, -0.5, 1, 0, 0.5, 0.5, 1, 1, -0.5, 0.5, 0, 1]);\n    var faces = new Uint16Array([0, 1, 2, 0, 2, 3]);\n    vertexBuffer = gl.createBuffer();\n    elementBuffer = gl.createBuffer();\n    gl.bindBuffer(gl.ARRAY_BUFFER, vertexBuffer);\n    gl.bufferData(gl.ARRAY_BUFFER, vertices, gl.STATIC_DRAW);\n    gl.bindBuffer(gl.ELEMENT_ARRAY_BUFFER, elementBuffer);\n    gl.bufferData(gl.ELEMENT_ARRAY_BUFFER, faces, gl.STATIC_DRAW);\n    program = createProgram();\n    attributes = {\n      position: gl.getAttribLocation(program, 'position'),\n      uv: gl.getAttribLocation(program, 'uv')\n    };\n    uniforms = {\n      uvOffset: gl.getUniformLocation(program, 'uvOffset'),\n      uvScale: gl.getUniformLocation(program, 'uvScale'),\n      rotation: gl.getUniformLocation(program, 'rotation'),\n      scale: gl.getUniformLocation(program, 'scale'),\n      color: gl.getUniformLocation(program, 'color'),\n      map: gl.getUniformLocation(program, 'map'),\n      opacity: gl.getUniformLocation(program, 'opacity'),\n      modelViewMatrix: gl.getUniformLocation(program, 'modelViewMatrix'),\n      projectionMatrix: gl.getUniformLocation(program, 'projectionMatrix'),\n      fogType: gl.getUniformLocation(program, 'fogType'),\n      fogDensity: gl.getUniformLocation(program, 'fogDensity'),\n      fogNear: gl.getUniformLocation(program, 'fogNear'),\n      fogFar: gl.getUniformLocation(program, 'fogFar'),\n      fogColor: gl.getUniformLocation(program, 'fogColor'),\n      alphaTest: gl.getUniformLocation(program, 'alphaTest')\n    };\n    var canvas = document.createElement('canvas');\n    canvas.width = 8;\n    canvas.height = 8;\n    var context = canvas.getContext('2d');\n    context.fillStyle = 'white';\n    context.fillRect(0, 0, 8, 8);\n    texture = new THREE.Texture(canvas);\n    texture.needsUpdate = true;\n  }\n\n  this.render = function (scene, camera) {\n    if (sprites.length === 0) return; // setup gl\n\n    if (program === undefined) {\n      init();\n    }\n\n    gl.useProgram(program);\n    state.initAttributes();\n    state.enableAttribute(attributes.position);\n    state.enableAttribute(attributes.uv);\n    state.disableUnusedAttributes();\n    state.disable(gl.CULL_FACE);\n    state.enable(gl.BLEND);\n    gl.bindBuffer(gl.ARRAY_BUFFER, vertexBuffer);\n    gl.vertexAttribPointer(attributes.position, 2, gl.FLOAT, false, 2 * 8, 0);\n    gl.vertexAttribPointer(attributes.uv, 2, gl.FLOAT, false, 2 * 8, 8);\n    gl.bindBuffer(gl.ELEMENT_ARRAY_BUFFER, elementBuffer);\n    gl.uniformMatrix4fv(uniforms.projectionMatrix, false, camera.projectionMatrix.elements);\n    state.activeTexture(gl.TEXTURE0);\n    gl.uniform1i(uniforms.map, 0);\n    var oldFogType = 0;\n    var sceneFogType = 0;\n    var fog = scene.fog;\n\n    if (fog) {\n      gl.uniform3f(uniforms.fogColor, fog.color.r, fog.color.g, fog.color.b);\n\n      if (fog instanceof THREE.Fog) {\n        gl.uniform1f(uniforms.fogNear, fog.near);\n        gl.uniform1f(uniforms.fogFar, fog.far);\n        gl.uniform1i(uniforms.fogType, 1);\n        oldFogType = 1;\n        sceneFogType = 1;\n      } else if (fog instanceof THREE.FogExp2) {\n        gl.uniform1f(uniforms.fogDensity, fog.density);\n        gl.uniform1i(uniforms.fogType, 2);\n        oldFogType = 2;\n        sceneFogType = 2;\n      }\n    } else {\n      gl.uniform1i(uniforms.fogType, 0);\n      oldFogType = 0;\n      sceneFogType = 0;\n    } // update positions and sort\n\n\n    for (var i = 0, l = sprites.length; i < l; i++) {\n      var sprite = sprites[i];\n      sprite.modelViewMatrix.multiplyMatrices(camera.matrixWorldInverse, sprite.matrixWorld);\n      sprite.z = -sprite.modelViewMatrix.elements[14];\n    }\n\n    sprites.sort(painterSortStable); // render all sprites\n\n    var scale = [];\n\n    for (var i = 0, l = sprites.length; i < l; i++) {\n      var sprite = sprites[i];\n      var material = sprite.material;\n      gl.uniform1f(uniforms.alphaTest, material.alphaTest);\n      gl.uniformMatrix4fv(uniforms.modelViewMatrix, false, sprite.modelViewMatrix.elements);\n      sprite.matrixWorld.decompose(spritePosition, spriteRotation, spriteScale);\n      scale[0] = spriteScale.x;\n      scale[1] = spriteScale.y;\n      var fogType = 0;\n\n      if (scene.fog && material.fog) {\n        fogType = sceneFogType;\n      }\n\n      if (oldFogType !== fogType) {\n        gl.uniform1i(uniforms.fogType, fogType);\n        oldFogType = fogType;\n      }\n\n      if (material.map !== null) {\n        gl.uniform2f(uniforms.uvOffset, material.map.offset.x, material.map.offset.y);\n        gl.uniform2f(uniforms.uvScale, material.map.repeat.x, material.map.repeat.y);\n      } else {\n        gl.uniform2f(uniforms.uvOffset, 0, 0);\n        gl.uniform2f(uniforms.uvScale, 1, 1);\n      }\n\n      gl.uniform1f(uniforms.opacity, material.opacity);\n      gl.uniform3f(uniforms.color, material.color.r, material.color.g, material.color.b);\n      gl.uniform1f(uniforms.rotation, material.rotation);\n      gl.uniform2fv(uniforms.scale, scale);\n      state.setBlending(material.blending, material.blendEquation, material.blendSrc, material.blendDst);\n      state.setDepthTest(material.depthTest);\n      state.setDepthWrite(material.depthWrite);\n\n      if (material.map && material.map.image && material.map.image.width) {\n        renderer.setTexture(material.map, 0);\n      } else {\n        renderer.setTexture(texture, 0);\n      }\n\n      gl.drawElements(gl.TRIANGLES, 6, gl.UNSIGNED_SHORT, 0);\n    } // restore gl\n\n\n    state.enable(gl.CULL_FACE);\n    renderer.resetGLState();\n  };\n\n  function createProgram() {\n    var program = gl.createProgram();\n    var vertexShader = gl.createShader(gl.VERTEX_SHADER);\n    var fragmentShader = gl.createShader(gl.FRAGMENT_SHADER);\n    gl.shaderSource(vertexShader, ['precision ' + renderer.getPrecision() + ' float;', 'uniform mat4 modelViewMatrix;', 'uniform mat4 projectionMatrix;', 'uniform float rotation;', 'uniform vec2 scale;', 'uniform vec2 uvOffset;', 'uniform vec2 uvScale;', 'attribute vec2 position;', 'attribute vec2 uv;', 'varying vec2 vUV;', 'void main() {', 'vUV = uvOffset + uv * uvScale;', 'vec2 alignedPosition = position * scale;', 'vec2 rotatedPosition;', 'rotatedPosition.x = cos( rotation ) * alignedPosition.x - sin( rotation ) * alignedPosition.y;', 'rotatedPosition.y = sin( rotation ) * alignedPosition.x + cos( rotation ) * alignedPosition.y;', 'vec4 finalPosition;', 'finalPosition = modelViewMatrix * vec4( 0.0, 0.0, 0.0, 1.0 );', 'finalPosition.xy += rotatedPosition;', 'finalPosition = projectionMatrix * finalPosition;', 'gl_Position = finalPosition;', '}'].join('\\n'));\n    gl.shaderSource(fragmentShader, ['precision ' + renderer.getPrecision() + ' float;', 'uniform vec3 color;', 'uniform sampler2D map;', 'uniform float opacity;', 'uniform int fogType;', 'uniform vec3 fogColor;', 'uniform float fogDensity;', 'uniform float fogNear;', 'uniform float fogFar;', 'uniform float alphaTest;', 'varying vec2 vUV;', 'void main() {', 'vec4 texture = texture2D( map, vUV );', 'if ( texture.a < alphaTest ) discard;', 'gl_FragColor = vec4( color * texture.xyz, texture.a * opacity );', 'if ( fogType > 0 ) {', 'float depth = gl_FragCoord.z / gl_FragCoord.w;', 'float fogFactor = 0.0;', 'if ( fogType == 1 ) {', 'fogFactor = smoothstep( fogNear, fogFar, depth );', '} else {', 'const float LOG2 = 1.442695;', 'fogFactor = exp2( - fogDensity * fogDensity * depth * depth * LOG2 );', 'fogFactor = 1.0 - clamp( fogFactor, 0.0, 1.0 );', '}', 'gl_FragColor = mix( gl_FragColor, vec4( fogColor, gl_FragColor.w ), fogFactor );', '}', '}'].join('\\n'));\n    gl.compileShader(vertexShader);\n    gl.compileShader(fragmentShader);\n    gl.attachShader(program, vertexShader);\n    gl.attachShader(program, fragmentShader);\n    gl.linkProgram(program);\n    return program;\n  }\n\n  function painterSortStable(a, b) {\n    if (a.renderOrder !== b.renderOrder) {\n      return a.renderOrder - b.renderOrder;\n    } else if (a.z !== b.z) {\n      return b.z - a.z;\n    } else {\n      return b.id - a.id;\n    }\n  }\n}; // File:src/renderers/webgl/plugins/LensFlarePlugin.js\n\n/**\n * @author mikael emtinger / http://gomo.se/\n * @author alteredq / http://alteredqualia.com/\n */\n\n\nTHREE.LensFlarePlugin = function (renderer, flares) {\n  var gl = renderer.context;\n  var state = renderer.state;\n  var vertexBuffer, elementBuffer;\n  var program, attributes, uniforms;\n  var hasVertexTexture;\n  var tempTexture, occlusionTexture;\n\n  function init() {\n    var vertices = new Float32Array([-1, -1, 0, 0, 1, -1, 1, 0, 1, 1, 1, 1, -1, 1, 0, 1]);\n    var faces = new Uint16Array([0, 1, 2, 0, 2, 3]); // buffers\n\n    vertexBuffer = gl.createBuffer();\n    elementBuffer = gl.createBuffer();\n    gl.bindBuffer(gl.ARRAY_BUFFER, vertexBuffer);\n    gl.bufferData(gl.ARRAY_BUFFER, vertices, gl.STATIC_DRAW);\n    gl.bindBuffer(gl.ELEMENT_ARRAY_BUFFER, elementBuffer);\n    gl.bufferData(gl.ELEMENT_ARRAY_BUFFER, faces, gl.STATIC_DRAW); // textures\n\n    tempTexture = gl.createTexture();\n    occlusionTexture = gl.createTexture();\n    state.bindTexture(gl.TEXTURE_2D, tempTexture);\n    gl.texImage2D(gl.TEXTURE_2D, 0, gl.RGB, 16, 16, 0, gl.RGB, gl.UNSIGNED_BYTE, null);\n    gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_WRAP_S, gl.CLAMP_TO_EDGE);\n    gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_WRAP_T, gl.CLAMP_TO_EDGE);\n    gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_MAG_FILTER, gl.NEAREST);\n    gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_MIN_FILTER, gl.NEAREST);\n    state.bindTexture(gl.TEXTURE_2D, occlusionTexture);\n    gl.texImage2D(gl.TEXTURE_2D, 0, gl.RGBA, 16, 16, 0, gl.RGBA, gl.UNSIGNED_BYTE, null);\n    gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_WRAP_S, gl.CLAMP_TO_EDGE);\n    gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_WRAP_T, gl.CLAMP_TO_EDGE);\n    gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_MAG_FILTER, gl.NEAREST);\n    gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_MIN_FILTER, gl.NEAREST);\n    hasVertexTexture = gl.getParameter(gl.MAX_VERTEX_TEXTURE_IMAGE_UNITS) > 0;\n    var shader;\n\n    if (hasVertexTexture) {\n      shader = {\n        vertexShader: [\"uniform lowp int renderType;\", \"uniform vec3 screenPosition;\", \"uniform vec2 scale;\", \"uniform float rotation;\", \"uniform sampler2D occlusionMap;\", \"attribute vec2 position;\", \"attribute vec2 uv;\", \"varying vec2 vUV;\", \"varying float vVisibility;\", \"void main() {\", \"vUV = uv;\", \"vec2 pos = position;\", \"if ( renderType == 2 ) {\", \"vec4 visibility = texture2D( occlusionMap, vec2( 0.1, 0.1 ) );\", \"visibility += texture2D( occlusionMap, vec2( 0.5, 0.1 ) );\", \"visibility += texture2D( occlusionMap, vec2( 0.9, 0.1 ) );\", \"visibility += texture2D( occlusionMap, vec2( 0.9, 0.5 ) );\", \"visibility += texture2D( occlusionMap, vec2( 0.9, 0.9 ) );\", \"visibility += texture2D( occlusionMap, vec2( 0.5, 0.9 ) );\", \"visibility += texture2D( occlusionMap, vec2( 0.1, 0.9 ) );\", \"visibility += texture2D( occlusionMap, vec2( 0.1, 0.5 ) );\", \"visibility += texture2D( occlusionMap, vec2( 0.5, 0.5 ) );\", \"vVisibility =        visibility.r / 9.0;\", \"vVisibility *= 1.0 - visibility.g / 9.0;\", \"vVisibility *=       visibility.b / 9.0;\", \"vVisibility *= 1.0 - visibility.a / 9.0;\", \"pos.x = cos( rotation ) * position.x - sin( rotation ) * position.y;\", \"pos.y = sin( rotation ) * position.x + cos( rotation ) * position.y;\", \"}\", \"gl_Position = vec4( ( pos * scale + screenPosition.xy ).xy, screenPosition.z, 1.0 );\", \"}\"].join(\"\\n\"),\n        fragmentShader: [\"uniform lowp int renderType;\", \"uniform sampler2D map;\", \"uniform float opacity;\", \"uniform vec3 color;\", \"varying vec2 vUV;\", \"varying float vVisibility;\", \"void main() {\", // pink square\n        \"if ( renderType == 0 ) {\", \"gl_FragColor = vec4( 1.0, 0.0, 1.0, 0.0 );\", // restore\n        \"} else if ( renderType == 1 ) {\", \"gl_FragColor = texture2D( map, vUV );\", // flare\n        \"} else {\", \"vec4 texture = texture2D( map, vUV );\", \"texture.a *= opacity * vVisibility;\", \"gl_FragColor = texture;\", \"gl_FragColor.rgb *= color;\", \"}\", \"}\"].join(\"\\n\")\n      };\n    } else {\n      shader = {\n        vertexShader: [\"uniform lowp int renderType;\", \"uniform vec3 screenPosition;\", \"uniform vec2 scale;\", \"uniform float rotation;\", \"attribute vec2 position;\", \"attribute vec2 uv;\", \"varying vec2 vUV;\", \"void main() {\", \"vUV = uv;\", \"vec2 pos = position;\", \"if ( renderType == 2 ) {\", \"pos.x = cos( rotation ) * position.x - sin( rotation ) * position.y;\", \"pos.y = sin( rotation ) * position.x + cos( rotation ) * position.y;\", \"}\", \"gl_Position = vec4( ( pos * scale + screenPosition.xy ).xy, screenPosition.z, 1.0 );\", \"}\"].join(\"\\n\"),\n        fragmentShader: [\"precision mediump float;\", \"uniform lowp int renderType;\", \"uniform sampler2D map;\", \"uniform sampler2D occlusionMap;\", \"uniform float opacity;\", \"uniform vec3 color;\", \"varying vec2 vUV;\", \"void main() {\", // pink square\n        \"if ( renderType == 0 ) {\", \"gl_FragColor = vec4( texture2D( map, vUV ).rgb, 0.0 );\", // restore\n        \"} else if ( renderType == 1 ) {\", \"gl_FragColor = texture2D( map, vUV );\", // flare\n        \"} else {\", \"float visibility = texture2D( occlusionMap, vec2( 0.5, 0.1 ) ).a;\", \"visibility += texture2D( occlusionMap, vec2( 0.9, 0.5 ) ).a;\", \"visibility += texture2D( occlusionMap, vec2( 0.5, 0.9 ) ).a;\", \"visibility += texture2D( occlusionMap, vec2( 0.1, 0.5 ) ).a;\", \"visibility = ( 1.0 - visibility / 4.0 );\", \"vec4 texture = texture2D( map, vUV );\", \"texture.a *= opacity * visibility;\", \"gl_FragColor = texture;\", \"gl_FragColor.rgb *= color;\", \"}\", \"}\"].join(\"\\n\")\n      };\n    }\n\n    program = createProgram(shader);\n    attributes = {\n      vertex: gl.getAttribLocation(program, \"position\"),\n      uv: gl.getAttribLocation(program, \"uv\")\n    };\n    uniforms = {\n      renderType: gl.getUniformLocation(program, \"renderType\"),\n      map: gl.getUniformLocation(program, \"map\"),\n      occlusionMap: gl.getUniformLocation(program, \"occlusionMap\"),\n      opacity: gl.getUniformLocation(program, \"opacity\"),\n      color: gl.getUniformLocation(program, \"color\"),\n      scale: gl.getUniformLocation(program, \"scale\"),\n      rotation: gl.getUniformLocation(program, \"rotation\"),\n      screenPosition: gl.getUniformLocation(program, \"screenPosition\")\n    };\n  }\n  /*\n   * Render lens flares\n   * Method: renders 16x16 0xff00ff-colored points scattered over the light source area,\n   *         reads these back and calculates occlusion.\n   */\n\n\n  this.render = function (scene, camera, viewport) {\n    if (flares.length === 0) return;\n    var tempPosition = new THREE.Vector3();\n    var invAspect = viewport.w / viewport.z,\n        halfViewportWidth = viewport.z * 0.5,\n        halfViewportHeight = viewport.w * 0.5;\n    var size = 16 / viewport.w,\n        scale = new THREE.Vector2(size * invAspect, size);\n    var screenPosition = new THREE.Vector3(1, 1, 0),\n        screenPositionPixels = new THREE.Vector2(1, 1);\n\n    if (program === undefined) {\n      init();\n    }\n\n    gl.useProgram(program);\n    state.initAttributes();\n    state.enableAttribute(attributes.vertex);\n    state.enableAttribute(attributes.uv);\n    state.disableUnusedAttributes(); // loop through all lens flares to update their occlusion and positions\n    // setup gl and common used attribs/uniforms\n\n    gl.uniform1i(uniforms.occlusionMap, 0);\n    gl.uniform1i(uniforms.map, 1);\n    gl.bindBuffer(gl.ARRAY_BUFFER, vertexBuffer);\n    gl.vertexAttribPointer(attributes.vertex, 2, gl.FLOAT, false, 2 * 8, 0);\n    gl.vertexAttribPointer(attributes.uv, 2, gl.FLOAT, false, 2 * 8, 8);\n    gl.bindBuffer(gl.ELEMENT_ARRAY_BUFFER, elementBuffer);\n    state.disable(gl.CULL_FACE);\n    state.setDepthWrite(false);\n\n    for (var i = 0, l = flares.length; i < l; i++) {\n      size = 16 / viewport.w;\n      scale.set(size * invAspect, size); // calc object screen position\n\n      var flare = flares[i];\n      tempPosition.set(flare.matrixWorld.elements[12], flare.matrixWorld.elements[13], flare.matrixWorld.elements[14]);\n      tempPosition.applyMatrix4(camera.matrixWorldInverse);\n      tempPosition.applyProjection(camera.projectionMatrix); // setup arrays for gl programs\n\n      screenPosition.copy(tempPosition);\n      screenPositionPixels.x = screenPosition.x * halfViewportWidth + halfViewportWidth;\n      screenPositionPixels.y = screenPosition.y * halfViewportHeight + halfViewportHeight; // screen cull\n\n      if (hasVertexTexture || screenPositionPixels.x > 0 && screenPositionPixels.x < viewport.z && screenPositionPixels.y > 0 && screenPositionPixels.y < viewport.w) {\n        // save current RGB to temp texture\n        state.activeTexture(gl.TEXTURE0);\n        state.bindTexture(gl.TEXTURE_2D, null);\n        state.activeTexture(gl.TEXTURE1);\n        state.bindTexture(gl.TEXTURE_2D, tempTexture);\n        gl.copyTexImage2D(gl.TEXTURE_2D, 0, gl.RGB, viewport.x + screenPositionPixels.x - 8, viewport.y + screenPositionPixels.y - 8, 16, 16, 0); // render pink quad\n\n        gl.uniform1i(uniforms.renderType, 0);\n        gl.uniform2f(uniforms.scale, scale.x, scale.y);\n        gl.uniform3f(uniforms.screenPosition, screenPosition.x, screenPosition.y, screenPosition.z);\n        state.disable(gl.BLEND);\n        state.enable(gl.DEPTH_TEST);\n        gl.drawElements(gl.TRIANGLES, 6, gl.UNSIGNED_SHORT, 0); // copy result to occlusionMap\n\n        state.activeTexture(gl.TEXTURE0);\n        state.bindTexture(gl.TEXTURE_2D, occlusionTexture);\n        gl.copyTexImage2D(gl.TEXTURE_2D, 0, gl.RGBA, viewport.x + screenPositionPixels.x - 8, viewport.y + screenPositionPixels.y - 8, 16, 16, 0); // restore graphics\n\n        gl.uniform1i(uniforms.renderType, 1);\n        state.disable(gl.DEPTH_TEST);\n        state.activeTexture(gl.TEXTURE1);\n        state.bindTexture(gl.TEXTURE_2D, tempTexture);\n        gl.drawElements(gl.TRIANGLES, 6, gl.UNSIGNED_SHORT, 0); // update object positions\n\n        flare.positionScreen.copy(screenPosition);\n\n        if (flare.customUpdateCallback) {\n          flare.customUpdateCallback(flare);\n        } else {\n          flare.updateLensFlares();\n        } // render flares\n\n\n        gl.uniform1i(uniforms.renderType, 2);\n        state.enable(gl.BLEND);\n\n        for (var j = 0, jl = flare.lensFlares.length; j < jl; j++) {\n          var sprite = flare.lensFlares[j];\n\n          if (sprite.opacity > 0.001 && sprite.scale > 0.001) {\n            screenPosition.x = sprite.x;\n            screenPosition.y = sprite.y;\n            screenPosition.z = sprite.z;\n            size = sprite.size * sprite.scale / viewport.w;\n            scale.x = size * invAspect;\n            scale.y = size;\n            gl.uniform3f(uniforms.screenPosition, screenPosition.x, screenPosition.y, screenPosition.z);\n            gl.uniform2f(uniforms.scale, scale.x, scale.y);\n            gl.uniform1f(uniforms.rotation, sprite.rotation);\n            gl.uniform1f(uniforms.opacity, sprite.opacity);\n            gl.uniform3f(uniforms.color, sprite.color.r, sprite.color.g, sprite.color.b);\n            state.setBlending(sprite.blending, sprite.blendEquation, sprite.blendSrc, sprite.blendDst);\n            renderer.setTexture(sprite.texture, 1);\n            gl.drawElements(gl.TRIANGLES, 6, gl.UNSIGNED_SHORT, 0);\n          }\n        }\n      }\n    } // restore gl\n\n\n    state.enable(gl.CULL_FACE);\n    state.enable(gl.DEPTH_TEST);\n    state.setDepthWrite(true);\n    renderer.resetGLState();\n  };\n\n  function createProgram(shader) {\n    var program = gl.createProgram();\n    var fragmentShader = gl.createShader(gl.FRAGMENT_SHADER);\n    var vertexShader = gl.createShader(gl.VERTEX_SHADER);\n    var prefix = \"precision \" + renderer.getPrecision() + \" float;\\n\";\n    gl.shaderSource(fragmentShader, prefix + shader.fragmentShader);\n    gl.shaderSource(vertexShader, prefix + shader.vertexShader);\n    gl.compileShader(fragmentShader);\n    gl.compileShader(vertexShader);\n    gl.attachShader(program, fragmentShader);\n    gl.attachShader(program, vertexShader);\n    gl.linkProgram(program);\n    return program;\n  }\n}; // File:src/renderers/webgl/WebGLObjects.js\n\n/**\n* @author mrdoob / http://mrdoob.com/\n*/\n\n\nTHREE.WebGLObjects = function (gl, properties, info) {\n  var geometries = new THREE.WebGLGeometries(gl, properties, info); //\n\n  function update(object) {\n    // TODO: Avoid updating twice (when using shadowMap). Maybe add frame counter.\n    var geometry = geometries.get(object);\n\n    if (object.geometry instanceof THREE.Geometry) {\n      geometry.updateFromObject(object);\n    }\n\n    var index = geometry.index;\n    var attributes = geometry.attributes;\n\n    if (index !== null) {\n      updateAttribute(index, gl.ELEMENT_ARRAY_BUFFER);\n    }\n\n    for (var name in attributes) {\n      updateAttribute(attributes[name], gl.ARRAY_BUFFER);\n    } // morph targets\n\n\n    var morphAttributes = geometry.morphAttributes;\n\n    for (var name in morphAttributes) {\n      var array = morphAttributes[name];\n\n      for (var i = 0, l = array.length; i < l; i++) {\n        updateAttribute(array[i], gl.ARRAY_BUFFER);\n      }\n    }\n\n    return geometry;\n  }\n\n  function updateAttribute(attribute, bufferType) {\n    var data = attribute instanceof THREE.InterleavedBufferAttribute ? attribute.data : attribute;\n    var attributeProperties = properties.get(data);\n\n    if (attributeProperties.__webglBuffer === undefined) {\n      createBuffer(attributeProperties, data, bufferType);\n    } else if (attributeProperties.version !== data.version) {\n      updateBuffer(attributeProperties, data, bufferType);\n    }\n  }\n\n  function createBuffer(attributeProperties, data, bufferType) {\n    attributeProperties.__webglBuffer = gl.createBuffer();\n    gl.bindBuffer(bufferType, attributeProperties.__webglBuffer);\n    var usage = data.dynamic ? gl.DYNAMIC_DRAW : gl.STATIC_DRAW;\n    gl.bufferData(bufferType, data.array, usage);\n    attributeProperties.version = data.version;\n  }\n\n  function updateBuffer(attributeProperties, data, bufferType) {\n    gl.bindBuffer(bufferType, attributeProperties.__webglBuffer);\n\n    if (data.dynamic === false || data.updateRange.count === -1) {\n      // Not using update ranges\n      gl.bufferSubData(bufferType, 0, data.array);\n    } else if (data.updateRange.count === 0) ; else {\n      gl.bufferSubData(bufferType, data.updateRange.offset * data.array.BYTES_PER_ELEMENT, data.array.subarray(data.updateRange.offset, data.updateRange.offset + data.updateRange.count));\n      data.updateRange.count = 0; // reset range\n    }\n\n    attributeProperties.version = data.version;\n  }\n\n  function getAttributeBuffer(attribute) {\n    if (attribute instanceof THREE.InterleavedBufferAttribute) {\n      return properties.get(attribute.data).__webglBuffer;\n    }\n\n    return properties.get(attribute).__webglBuffer;\n  }\n\n  function getWireframeAttribute(geometry) {\n    var property = properties.get(geometry);\n\n    if (property.wireframe !== undefined) {\n      return property.wireframe;\n    }\n\n    var indices = [];\n    var index = geometry.index;\n    var attributes = geometry.attributes;\n    var position = attributes.position; // console.time( 'wireframe' );\n\n    if (index !== null) {\n      var edges = {};\n      var array = index.array;\n\n      for (var i = 0, l = array.length; i < l; i += 3) {\n        var a = array[i + 0];\n        var b = array[i + 1];\n        var c = array[i + 2];\n        if (checkEdge(edges, a, b)) indices.push(a, b);\n        if (checkEdge(edges, b, c)) indices.push(b, c);\n        if (checkEdge(edges, c, a)) indices.push(c, a);\n      }\n    } else {\n      var array = attributes.position.array;\n\n      for (var i = 0, l = array.length / 3 - 1; i < l; i += 3) {\n        var a = i + 0;\n        var b = i + 1;\n        var c = i + 2;\n        indices.push(a, b, b, c, c, a);\n      }\n    } // console.timeEnd( 'wireframe' );\n\n\n    var TypeArray = position.count > 65535 ? Uint32Array : Uint16Array;\n    var attribute = new THREE.BufferAttribute(new TypeArray(indices), 1);\n    updateAttribute(attribute, gl.ELEMENT_ARRAY_BUFFER);\n    property.wireframe = attribute;\n    return attribute;\n  }\n\n  function checkEdge(edges, a, b) {\n    if (a > b) {\n      var tmp = a;\n      a = b;\n      b = tmp;\n    }\n\n    var list = edges[a];\n\n    if (list === undefined) {\n      edges[a] = [b];\n      return true;\n    } else if (list.indexOf(b) === -1) {\n      list.push(b);\n      return true;\n    }\n\n    return false;\n  }\n\n  this.getAttributeBuffer = getAttributeBuffer;\n  this.getWireframeAttribute = getWireframeAttribute;\n  this.update = update;\n}; // File:src/renderers/webgl/WebGLProgram.js\n\n\nTHREE.WebGLProgram = function () {\n  var programIdCount = 0; // TODO: Combine the regex\n\n  var structRe = /^([\\w\\d_]+)\\.([\\w\\d_]+)$/;\n  var arrayStructRe = /^([\\w\\d_]+)\\[(\\d+)\\]\\.([\\w\\d_]+)$/;\n  var arrayRe = /^([\\w\\d_]+)\\[0\\]$/;\n\n  function getEncodingComponents(encoding) {\n    switch (encoding) {\n      case THREE.LinearEncoding:\n        return ['Linear', '( value )'];\n\n      case THREE.sRGBEncoding:\n        return ['sRGB', '( value )'];\n\n      case THREE.RGBEEncoding:\n        return ['RGBE', '( value )'];\n\n      case THREE.RGBM7Encoding:\n        return ['RGBM', '( value, 7.0 )'];\n\n      case THREE.RGBM16Encoding:\n        return ['RGBM', '( value, 16.0 )'];\n\n      case THREE.RGBDEncoding:\n        return ['RGBD', '( value, 256.0 )'];\n\n      case THREE.GammaEncoding:\n        return ['Gamma', '( value, float( GAMMA_FACTOR ) )'];\n\n      default:\n        throw new Error('unsupported encoding: ' + encoding);\n    }\n  }\n\n  function getTexelDecodingFunction(functionName, encoding) {\n    var components = getEncodingComponents(encoding);\n    return \"vec4 \" + functionName + \"( vec4 value ) { return \" + components[0] + \"ToLinear\" + components[1] + \"; }\";\n  }\n\n  function getTexelEncodingFunction(functionName, encoding) {\n    var components = getEncodingComponents(encoding);\n    return \"vec4 \" + functionName + \"( vec4 value ) { return LinearTo\" + components[0] + components[1] + \"; }\";\n  }\n\n  function getToneMappingFunction(functionName, toneMapping) {\n    var toneMappingName;\n\n    switch (toneMapping) {\n      case THREE.LinearToneMapping:\n        toneMappingName = \"Linear\";\n        break;\n\n      case THREE.ReinhardToneMapping:\n        toneMappingName = \"Reinhard\";\n        break;\n\n      case THREE.Uncharted2ToneMapping:\n        toneMappingName = \"Uncharted2\";\n        break;\n\n      case THREE.CineonToneMapping:\n        toneMappingName = \"OptimizedCineon\";\n        break;\n\n      default:\n        throw new Error('unsupported toneMapping: ' + toneMapping);\n    }\n\n    return \"vec3 \" + functionName + \"( vec3 color ) { return \" + toneMappingName + \"ToneMapping( color ); }\";\n  }\n\n  function generateExtensions(extensions, parameters, rendererExtensions) {\n    extensions = extensions || {};\n    var chunks = [extensions.derivatives || parameters.envMapCubeUV || parameters.bumpMap || parameters.normalMap || parameters.flatShading ? '#extension GL_OES_standard_derivatives : enable' : '', (extensions.fragDepth || parameters.logarithmicDepthBuffer) && rendererExtensions.get('EXT_frag_depth') ? '#extension GL_EXT_frag_depth : enable' : '', extensions.drawBuffers && rendererExtensions.get('WEBGL_draw_buffers') ? '#extension GL_EXT_draw_buffers : require' : '', (extensions.shaderTextureLOD || parameters.envMap) && rendererExtensions.get('EXT_shader_texture_lod') ? '#extension GL_EXT_shader_texture_lod : enable' : ''];\n    return chunks.filter(filterEmptyLine).join('\\n');\n  }\n\n  function generateDefines(defines) {\n    var chunks = [];\n\n    for (var name in defines) {\n      var value = defines[name];\n      if (value === false) continue;\n      chunks.push('#define ' + name + ' ' + value);\n    }\n\n    return chunks.join('\\n');\n  }\n\n  function fetchUniformLocations(gl, program, identifiers) {\n    var uniforms = {};\n    var n = gl.getProgramParameter(program, gl.ACTIVE_UNIFORMS);\n\n    for (var i = 0; i < n; i++) {\n      var info = gl.getActiveUniform(program, i);\n      var name = info.name;\n      var location = gl.getUniformLocation(program, name); //console.log(\"THREE.WebGLProgram: ACTIVE UNIFORM:\", name);\n\n      var matches = structRe.exec(name);\n\n      if (matches) {\n        var structName = matches[1];\n        var structProperty = matches[2];\n        var uniformsStruct = uniforms[structName];\n\n        if (!uniformsStruct) {\n          uniformsStruct = uniforms[structName] = {};\n        }\n\n        uniformsStruct[structProperty] = location;\n        continue;\n      }\n\n      matches = arrayStructRe.exec(name);\n\n      if (matches) {\n        var arrayName = matches[1];\n        var arrayIndex = matches[2];\n        var arrayProperty = matches[3];\n        var uniformsArray = uniforms[arrayName];\n\n        if (!uniformsArray) {\n          uniformsArray = uniforms[arrayName] = [];\n        }\n\n        var uniformsArrayIndex = uniformsArray[arrayIndex];\n\n        if (!uniformsArrayIndex) {\n          uniformsArrayIndex = uniformsArray[arrayIndex] = {};\n        }\n\n        uniformsArrayIndex[arrayProperty] = location;\n        continue;\n      }\n\n      matches = arrayRe.exec(name);\n\n      if (matches) {\n        var arrayName = matches[1];\n        uniforms[arrayName] = location;\n        continue;\n      }\n\n      uniforms[name] = location;\n    }\n\n    return uniforms;\n  }\n\n  function fetchAttributeLocations(gl, program, identifiers) {\n    var attributes = {};\n    var n = gl.getProgramParameter(program, gl.ACTIVE_ATTRIBUTES);\n\n    for (var i = 0; i < n; i++) {\n      var info = gl.getActiveAttrib(program, i);\n      var name = info.name; // console.log(\"THREE.WebGLProgram: ACTIVE VERTEX ATTRIBUTE:\", name, i );\n\n      attributes[name] = gl.getAttribLocation(program, name);\n    }\n\n    return attributes;\n  }\n\n  function filterEmptyLine(string) {\n    return string !== '';\n  }\n\n  function replaceLightNums(string, parameters) {\n    return string.replace(/NUM_DIR_LIGHTS/g, parameters.numDirLights).replace(/NUM_SPOT_LIGHTS/g, parameters.numSpotLights).replace(/NUM_POINT_LIGHTS/g, parameters.numPointLights).replace(/NUM_HEMI_LIGHTS/g, parameters.numHemiLights);\n  }\n\n  function parseIncludes(string) {\n    var pattern = /#include +<([\\w\\d.]+)>/g;\n\n    function replace(match, include) {\n      var replace = THREE.ShaderChunk[include];\n\n      if (replace === undefined) {\n        throw new Error('Can not resolve #include <' + include + '>');\n      }\n\n      return parseIncludes(replace);\n    }\n\n    return string.replace(pattern, replace);\n  }\n\n  function unrollLoops(string) {\n    var pattern = /for \\( int i \\= (\\d+)\\; i < (\\d+)\\; i \\+\\+ \\) \\{([\\s\\S]+?)(?=\\})\\}/g;\n\n    function replace(match, start, end, snippet) {\n      var unroll = '';\n\n      for (var i = parseInt(start); i < parseInt(end); i++) {\n        unroll += snippet.replace(/\\[ i \\]/g, '[ ' + i + ' ]');\n      }\n\n      return unroll;\n    }\n\n    return string.replace(pattern, replace);\n  }\n\n  return function WebGLProgram(renderer, code, material, parameters) {\n    var gl = renderer.context;\n    var extensions = material.extensions;\n    var defines = material.defines;\n    var vertexShader = material.__webglShader.vertexShader;\n    var fragmentShader = material.__webglShader.fragmentShader;\n    var shadowMapTypeDefine = 'SHADOWMAP_TYPE_BASIC';\n\n    if (parameters.shadowMapType === THREE.PCFShadowMap) {\n      shadowMapTypeDefine = 'SHADOWMAP_TYPE_PCF';\n    } else if (parameters.shadowMapType === THREE.PCFSoftShadowMap) {\n      shadowMapTypeDefine = 'SHADOWMAP_TYPE_PCF_SOFT';\n    }\n\n    var envMapTypeDefine = 'ENVMAP_TYPE_CUBE';\n    var envMapModeDefine = 'ENVMAP_MODE_REFLECTION';\n    var envMapBlendingDefine = 'ENVMAP_BLENDING_MULTIPLY';\n\n    if (parameters.envMap) {\n      switch (material.envMap.mapping) {\n        case THREE.CubeReflectionMapping:\n        case THREE.CubeRefractionMapping:\n          envMapTypeDefine = 'ENVMAP_TYPE_CUBE';\n          break;\n\n        case THREE.CubeUVReflectionMapping:\n        case THREE.CubeUVRefractionMapping:\n          envMapTypeDefine = 'ENVMAP_TYPE_CUBE_UV';\n          break;\n\n        case THREE.EquirectangularReflectionMapping:\n        case THREE.EquirectangularRefractionMapping:\n          envMapTypeDefine = 'ENVMAP_TYPE_EQUIREC';\n          break;\n\n        case THREE.SphericalReflectionMapping:\n          envMapTypeDefine = 'ENVMAP_TYPE_SPHERE';\n          break;\n      }\n\n      switch (material.envMap.mapping) {\n        case THREE.CubeRefractionMapping:\n        case THREE.EquirectangularRefractionMapping:\n          envMapModeDefine = 'ENVMAP_MODE_REFRACTION';\n          break;\n      }\n\n      switch (material.combine) {\n        case THREE.MultiplyOperation:\n          envMapBlendingDefine = 'ENVMAP_BLENDING_MULTIPLY';\n          break;\n\n        case THREE.MixOperation:\n          envMapBlendingDefine = 'ENVMAP_BLENDING_MIX';\n          break;\n\n        case THREE.AddOperation:\n          envMapBlendingDefine = 'ENVMAP_BLENDING_ADD';\n          break;\n      }\n    }\n\n    var gammaFactorDefine = renderer.gammaFactor > 0 ? renderer.gammaFactor : 1.0; // console.log( 'building new program ' );\n    //\n\n    var customExtensions = generateExtensions(extensions, parameters, renderer.extensions);\n    var customDefines = generateDefines(defines); //\n\n    var program = gl.createProgram();\n    var prefixVertex, prefixFragment;\n\n    if (material instanceof THREE.RawShaderMaterial) {\n      prefixVertex = '';\n      prefixFragment = '';\n    } else {\n      prefixVertex = ['precision ' + parameters.precision + ' float;', 'precision ' + parameters.precision + ' int;', '#define SHADER_NAME ' + material.__webglShader.name, customDefines, parameters.supportsVertexTextures ? '#define VERTEX_TEXTURES' : '', '#define GAMMA_FACTOR ' + gammaFactorDefine, '#define MAX_BONES ' + parameters.maxBones, parameters.map ? '#define USE_MAP' : '', parameters.envMap ? '#define USE_ENVMAP' : '', parameters.envMap ? '#define ' + envMapModeDefine : '', parameters.lightMap ? '#define USE_LIGHTMAP' : '', parameters.aoMap ? '#define USE_AOMAP' : '', parameters.emissiveMap ? '#define USE_EMISSIVEMAP' : '', parameters.bumpMap ? '#define USE_BUMPMAP' : '', parameters.normalMap ? '#define USE_NORMALMAP' : '', parameters.displacementMap && parameters.supportsVertexTextures ? '#define USE_DISPLACEMENTMAP' : '', parameters.specularMap ? '#define USE_SPECULARMAP' : '', parameters.roughnessMap ? '#define USE_ROUGHNESSMAP' : '', parameters.metalnessMap ? '#define USE_METALNESSMAP' : '', parameters.alphaMap ? '#define USE_ALPHAMAP' : '', parameters.vertexColors ? '#define USE_COLOR' : '', parameters.flatShading ? '#define FLAT_SHADED' : '', parameters.skinning ? '#define USE_SKINNING' : '', parameters.useVertexTexture ? '#define BONE_TEXTURE' : '', parameters.morphTargets ? '#define USE_MORPHTARGETS' : '', parameters.morphNormals && parameters.flatShading === false ? '#define USE_MORPHNORMALS' : '', parameters.doubleSided ? '#define DOUBLE_SIDED' : '', parameters.flipSided ? '#define FLIP_SIDED' : '', parameters.shadowMapEnabled ? '#define USE_SHADOWMAP' : '', parameters.shadowMapEnabled ? '#define ' + shadowMapTypeDefine : '', parameters.pointLightShadows > 0 ? '#define POINT_LIGHT_SHADOWS' : '', parameters.sizeAttenuation ? '#define USE_SIZEATTENUATION' : '', parameters.logarithmicDepthBuffer ? '#define USE_LOGDEPTHBUF' : '', parameters.logarithmicDepthBuffer && renderer.extensions.get('EXT_frag_depth') ? '#define USE_LOGDEPTHBUF_EXT' : '', 'uniform mat4 modelMatrix;', 'uniform mat4 modelViewMatrix;', 'uniform mat4 projectionMatrix;', 'uniform mat4 viewMatrix;', 'uniform mat3 normalMatrix;', 'uniform vec3 cameraPosition;', 'attribute vec3 position;', 'attribute vec3 normal;', 'attribute vec2 uv;', '#ifdef USE_COLOR', '\tattribute vec3 color;', '#endif', '#ifdef USE_MORPHTARGETS', '\tattribute vec3 morphTarget0;', '\tattribute vec3 morphTarget1;', '\tattribute vec3 morphTarget2;', '\tattribute vec3 morphTarget3;', '\t#ifdef USE_MORPHNORMALS', '\t\tattribute vec3 morphNormal0;', '\t\tattribute vec3 morphNormal1;', '\t\tattribute vec3 morphNormal2;', '\t\tattribute vec3 morphNormal3;', '\t#else', '\t\tattribute vec3 morphTarget4;', '\t\tattribute vec3 morphTarget5;', '\t\tattribute vec3 morphTarget6;', '\t\tattribute vec3 morphTarget7;', '\t#endif', '#endif', '#ifdef USE_SKINNING', '\tattribute vec4 skinIndex;', '\tattribute vec4 skinWeight;', '#endif', '\\n'].filter(filterEmptyLine).join('\\n');\n      prefixFragment = [customExtensions, 'precision ' + parameters.precision + ' float;', 'precision ' + parameters.precision + ' int;', '#define SHADER_NAME ' + material.__webglShader.name, customDefines, parameters.alphaTest ? '#define ALPHATEST ' + parameters.alphaTest : '', '#define GAMMA_FACTOR ' + gammaFactorDefine, parameters.useFog && parameters.fog ? '#define USE_FOG' : '', parameters.useFog && parameters.fogExp ? '#define FOG_EXP2' : '', parameters.map ? '#define USE_MAP' : '', parameters.envMap ? '#define USE_ENVMAP' : '', parameters.envMap ? '#define ' + envMapTypeDefine : '', parameters.envMap ? '#define ' + envMapModeDefine : '', parameters.envMap ? '#define ' + envMapBlendingDefine : '', parameters.lightMap ? '#define USE_LIGHTMAP' : '', parameters.aoMap ? '#define USE_AOMAP' : '', parameters.emissiveMap ? '#define USE_EMISSIVEMAP' : '', parameters.bumpMap ? '#define USE_BUMPMAP' : '', parameters.normalMap ? '#define USE_NORMALMAP' : '', parameters.specularMap ? '#define USE_SPECULARMAP' : '', parameters.roughnessMap ? '#define USE_ROUGHNESSMAP' : '', parameters.metalnessMap ? '#define USE_METALNESSMAP' : '', parameters.alphaMap ? '#define USE_ALPHAMAP' : '', parameters.vertexColors ? '#define USE_COLOR' : '', parameters.flatShading ? '#define FLAT_SHADED' : '', parameters.doubleSided ? '#define DOUBLE_SIDED' : '', parameters.flipSided ? '#define FLIP_SIDED' : '', parameters.shadowMapEnabled ? '#define USE_SHADOWMAP' : '', parameters.shadowMapEnabled ? '#define ' + shadowMapTypeDefine : '', parameters.pointLightShadows > 0 ? '#define POINT_LIGHT_SHADOWS' : '', parameters.premultipliedAlpha ? \"#define PREMULTIPLIED_ALPHA\" : '', parameters.physicallyCorrectLights ? \"#define PHYSICALLY_CORRECT_LIGHTS\" : '', parameters.logarithmicDepthBuffer ? '#define USE_LOGDEPTHBUF' : '', parameters.logarithmicDepthBuffer && renderer.extensions.get('EXT_frag_depth') ? '#define USE_LOGDEPTHBUF_EXT' : '', parameters.envMap && renderer.extensions.get('EXT_shader_texture_lod') ? '#define TEXTURE_LOD_EXT' : '', 'uniform mat4 viewMatrix;', 'uniform vec3 cameraPosition;', parameters.toneMapping !== THREE.NoToneMapping ? \"#define TONE_MAPPING\" : '', parameters.toneMapping !== THREE.NoToneMapping ? THREE.ShaderChunk['tonemapping_pars_fragment'] : '', // this code is required here because it is used by the toneMapping() function defined below\n      parameters.toneMapping !== THREE.NoToneMapping ? getToneMappingFunction(\"toneMapping\", parameters.toneMapping) : '', parameters.outputEncoding || parameters.mapEncoding || parameters.envMapEncoding || parameters.emissiveMapEncoding ? THREE.ShaderChunk['encodings_pars_fragment'] : '', // this code is required here because it is used by the various encoding/decoding function defined below\n      parameters.mapEncoding ? getTexelDecodingFunction('mapTexelToLinear', parameters.mapEncoding) : '', parameters.envMapEncoding ? getTexelDecodingFunction('envMapTexelToLinear', parameters.envMapEncoding) : '', parameters.emissiveMapEncoding ? getTexelDecodingFunction('emissiveMapTexelToLinear', parameters.emissiveMapEncoding) : '', parameters.outputEncoding ? getTexelEncodingFunction(\"linearToOutputTexel\", parameters.outputEncoding) : '', '\\n'].filter(filterEmptyLine).join('\\n');\n    }\n\n    vertexShader = parseIncludes(vertexShader, parameters);\n    vertexShader = replaceLightNums(vertexShader, parameters);\n    fragmentShader = parseIncludes(fragmentShader, parameters);\n    fragmentShader = replaceLightNums(fragmentShader, parameters);\n\n    if (material instanceof THREE.ShaderMaterial === false) {\n      vertexShader = unrollLoops(vertexShader);\n      fragmentShader = unrollLoops(fragmentShader);\n    }\n\n    var vertexGlsl = prefixVertex + vertexShader;\n    var fragmentGlsl = prefixFragment + fragmentShader; // console.log( '*VERTEX*', vertexGlsl );\n    // console.log( '*FRAGMENT*', fragmentGlsl );\n\n    var glVertexShader = THREE.WebGLShader(gl, gl.VERTEX_SHADER, vertexGlsl);\n    var glFragmentShader = THREE.WebGLShader(gl, gl.FRAGMENT_SHADER, fragmentGlsl);\n    gl.attachShader(program, glVertexShader);\n    gl.attachShader(program, glFragmentShader); // Force a particular attribute to index 0.\n\n    if (material.index0AttributeName !== undefined) {\n      gl.bindAttribLocation(program, 0, material.index0AttributeName);\n    } else if (parameters.morphTargets === true) {\n      // programs with morphTargets displace position out of attribute 0\n      gl.bindAttribLocation(program, 0, 'position');\n    }\n\n    gl.linkProgram(program);\n    var programLog = gl.getProgramInfoLog(program);\n    var vertexLog = gl.getShaderInfoLog(glVertexShader);\n    var fragmentLog = gl.getShaderInfoLog(glFragmentShader);\n    var runnable = true;\n    var haveDiagnostics = true; // console.log( '**VERTEX**', gl.getExtension( 'WEBGL_debug_shaders' ).getTranslatedShaderSource( glVertexShader ) );\n    // console.log( '**FRAGMENT**', gl.getExtension( 'WEBGL_debug_shaders' ).getTranslatedShaderSource( glFragmentShader ) );\n\n    if (gl.getProgramParameter(program, gl.LINK_STATUS) === false) {\n      runnable = false;\n    } else if (programLog !== '') ; else if (vertexLog === '' || fragmentLog === '') {\n      haveDiagnostics = false;\n    }\n\n    if (haveDiagnostics) {\n      this.diagnostics = {\n        runnable: runnable,\n        material: material,\n        programLog: programLog,\n        vertexShader: {\n          log: vertexLog,\n          prefix: prefixVertex\n        },\n        fragmentShader: {\n          log: fragmentLog,\n          prefix: prefixFragment\n        }\n      };\n    } // clean up\n\n\n    gl.deleteShader(glVertexShader);\n    gl.deleteShader(glFragmentShader); // set up caching for uniform locations\n\n    var cachedUniforms;\n\n    this.getUniforms = function () {\n      if (cachedUniforms === undefined) {\n        cachedUniforms = fetchUniformLocations(gl, program);\n      }\n\n      return cachedUniforms;\n    }; // set up caching for attribute locations\n\n\n    var cachedAttributes;\n\n    this.getAttributes = function () {\n      if (cachedAttributes === undefined) {\n        cachedAttributes = fetchAttributeLocations(gl, program);\n      }\n\n      return cachedAttributes;\n    }; // free resource\n\n\n    this.destroy = function () {\n      gl.deleteProgram(program);\n      this.program = undefined;\n    }; // DEPRECATED\n\n\n    Object.defineProperties(this, {\n      uniforms: {\n        get: function () {\n          return this.getUniforms();\n        }\n      },\n      attributes: {\n        get: function () {\n          return this.getAttributes();\n        }\n      }\n    }); //\n\n    this.id = programIdCount++;\n    this.code = code;\n    this.usedTimes = 1;\n    this.program = program;\n    this.vertexShader = glVertexShader;\n    this.fragmentShader = glFragmentShader;\n    return this;\n  };\n}(); // File:src/renderers/WebGLRenderTarget.js\n\n/**\n * @author szimek / https://github.com/szimek/\n * @author alteredq / http://alteredqualia.com/\n * @author Marius Kintel / https://github.com/kintel\n */\n\n/*\n In options, we can specify:\n * Texture parameters for an auto-generated target texture\n * depthBuffer/stencilBuffer: Booleans to indicate if we should generate these buffers\n*/\n\n\nTHREE.WebGLRenderTarget = function (width, height, options) {\n  this.uuid = THREE.Math.generateUUID();\n  this.width = width;\n  this.height = height;\n  this.scissor = new THREE.Vector4(0, 0, width, height);\n  this.scissorTest = false;\n  this.viewport = new THREE.Vector4(0, 0, width, height);\n  options = options || {};\n  if (options.minFilter === undefined) options.minFilter = THREE.LinearFilter;\n  this.texture = new THREE.Texture(undefined, undefined, options.wrapS, options.wrapT, options.magFilter, options.minFilter, options.format, options.type, options.anisotropy);\n  this.depthBuffer = options.depthBuffer !== undefined ? options.depthBuffer : true;\n  this.stencilBuffer = options.stencilBuffer !== undefined ? options.stencilBuffer : true;\n};\n\nTHREE.WebGLRenderTarget.prototype = {\n  constructor: THREE.WebGLRenderTarget,\n  setSize: function (width, height) {\n    if (this.width !== width || this.height !== height) {\n      this.width = width;\n      this.height = height;\n      this.dispose();\n    }\n\n    this.viewport.set(0, 0, width, height);\n    this.scissor.set(0, 0, width, height);\n  },\n  clone: function () {\n    return new this.constructor().copy(this);\n  },\n  copy: function (source) {\n    this.width = source.width;\n    this.height = source.height;\n    this.viewport.copy(source.viewport);\n    this.texture = source.texture.clone();\n    this.depthBuffer = source.depthBuffer;\n    this.stencilBuffer = source.stencilBuffer;\n    return this;\n  },\n  dispose: function () {\n    this.dispatchEvent({\n      type: 'dispose'\n    });\n  }\n};\nTHREE.EventDispatcher.prototype.apply(THREE.WebGLRenderTarget.prototype); // File:src/renderers/WebGLRenderTargetCube.js\n\n/**\n * @author alteredq / http://alteredqualia.com\n */\n\nTHREE.WebGLRenderTargetCube = function (width, height, options) {\n  THREE.WebGLRenderTarget.call(this, width, height, options);\n  this.activeCubeFace = 0; // PX 0, NX 1, PY 2, NY 3, PZ 4, NZ 5\n\n  this.activeMipMapLevel = 0;\n};\n\nTHREE.WebGLRenderTargetCube.prototype = Object.create(THREE.WebGLRenderTarget.prototype);\nTHREE.WebGLRenderTargetCube.prototype.constructor = THREE.WebGLRenderTargetCube; // File:src/renderers/webgl/WebGLPrograms.js\n\nTHREE.WebGLPrograms = function (renderer, capabilities) {\n  var programs = [];\n  var shaderIDs = {\n    MeshDepthMaterial: 'depth',\n    MeshNormalMaterial: 'normal',\n    MeshBasicMaterial: 'basic',\n    MeshLambertMaterial: 'lambert',\n    MeshPhongMaterial: 'phong',\n    MeshStandardMaterial: 'standard',\n    LineBasicMaterial: 'basic',\n    LineDashedMaterial: 'dashed',\n    PointsMaterial: 'points'\n  };\n  var parameterNames = [\"precision\", \"supportsVertexTextures\", \"map\", \"mapEncoding\", \"envMap\", \"envMapMode\", \"envMapEncoding\", \"lightMap\", \"aoMap\", \"emissiveMap\", \"emissiveMapEncoding\", \"bumpMap\", \"normalMap\", \"displacementMap\", \"specularMap\", \"roughnessMap\", \"metalnessMap\", \"alphaMap\", \"combine\", \"vertexColors\", \"fog\", \"useFog\", \"fogExp\", \"flatShading\", \"sizeAttenuation\", \"logarithmicDepthBuffer\", \"skinning\", \"maxBones\", \"useVertexTexture\", \"morphTargets\", \"morphNormals\", \"maxMorphTargets\", \"maxMorphNormals\", \"premultipliedAlpha\", \"numDirLights\", \"numPointLights\", \"numSpotLights\", \"numHemiLights\", \"shadowMapEnabled\", \"pointLightShadows\", \"toneMapping\", 'physicallyCorrectLights', \"shadowMapType\", \"alphaTest\", \"doubleSided\", \"flipSided\"];\n\n  function allocateBones(object) {\n    if (capabilities.floatVertexTextures && object && object.skeleton && object.skeleton.useVertexTexture) {\n      return 1024;\n    } else {\n      // default for when object is not specified\n      // ( for example when prebuilding shader to be used with multiple objects )\n      //\n      //  - leave some extra space for other uniforms\n      //  - limit here is ANGLE's 254 max uniform vectors\n      //    (up to 54 should be safe)\n      var nVertexUniforms = capabilities.maxVertexUniforms;\n      var nVertexMatrices = Math.floor((nVertexUniforms - 20) / 4);\n      var maxBones = nVertexMatrices;\n\n      if (object !== undefined && object instanceof THREE.SkinnedMesh) {\n        maxBones = Math.min(object.skeleton.bones.length, maxBones);\n\n        if (maxBones < object.skeleton.bones.length) ;\n      }\n\n      return maxBones;\n    }\n  }\n\n  function getTextureEncodingFromMap(map, gammaOverrideLinear) {\n    var encoding;\n\n    if (!map) {\n      encoding = THREE.LinearEncoding;\n    } else if (map instanceof THREE.Texture) {\n      encoding = map.encoding;\n    } else if (map instanceof THREE.WebGLRenderTarget) {\n      encoding = map.texture.encoding;\n    } // add backwards compatibility for WebGLRenderer.gammaInput/gammaOutput parameter, should probably be removed at some point.\n\n\n    if (encoding === THREE.LinearEncoding && gammaOverrideLinear) {\n      encoding = THREE.GammaEncoding;\n    }\n\n    return encoding;\n  }\n\n  this.getParameters = function (material, lights, fog, object) {\n    var shaderID = shaderIDs[material.type]; // heuristics to create shader parameters according to lights in the scene\n    // (not to blow over maxLights budget)\n\n    var maxBones = allocateBones(object);\n    var precision = renderer.getPrecision();\n\n    if (material.precision !== null) {\n      precision = capabilities.getMaxPrecision(material.precision);\n\n      if (precision !== material.precision) ;\n    }\n\n    var parameters = {\n      shaderID: shaderID,\n      precision: precision,\n      supportsVertexTextures: capabilities.vertexTextures,\n      outputEncoding: getTextureEncodingFromMap(renderer.getCurrentRenderTarget(), renderer.gammaOutput),\n      map: !!material.map,\n      mapEncoding: getTextureEncodingFromMap(material.map, renderer.gammaInput),\n      envMap: !!material.envMap,\n      envMapMode: material.envMap && material.envMap.mapping,\n      envMapEncoding: getTextureEncodingFromMap(material.envMap, renderer.gammaInput),\n      envMapCubeUV: !!material.envMap && (material.envMap.mapping === THREE.CubeUVReflectionMapping || material.envMap.mapping === THREE.CubeUVRefractionMapping),\n      lightMap: !!material.lightMap,\n      aoMap: !!material.aoMap,\n      emissiveMap: !!material.emissiveMap,\n      emissiveMapEncoding: getTextureEncodingFromMap(material.emissiveMap, renderer.gammaInput),\n      bumpMap: !!material.bumpMap,\n      normalMap: !!material.normalMap,\n      displacementMap: !!material.displacementMap,\n      roughnessMap: !!material.roughnessMap,\n      metalnessMap: !!material.metalnessMap,\n      specularMap: !!material.specularMap,\n      alphaMap: !!material.alphaMap,\n      combine: material.combine,\n      vertexColors: material.vertexColors,\n      fog: fog,\n      useFog: material.fog,\n      fogExp: fog instanceof THREE.FogExp2,\n      flatShading: material.shading === THREE.FlatShading,\n      sizeAttenuation: material.sizeAttenuation,\n      logarithmicDepthBuffer: capabilities.logarithmicDepthBuffer,\n      skinning: material.skinning,\n      maxBones: maxBones,\n      useVertexTexture: capabilities.floatVertexTextures && object && object.skeleton && object.skeleton.useVertexTexture,\n      morphTargets: material.morphTargets,\n      morphNormals: material.morphNormals,\n      maxMorphTargets: renderer.maxMorphTargets,\n      maxMorphNormals: renderer.maxMorphNormals,\n      numDirLights: lights.directional.length,\n      numPointLights: lights.point.length,\n      numSpotLights: lights.spot.length,\n      numHemiLights: lights.hemi.length,\n      pointLightShadows: lights.shadowsPointLight,\n      shadowMapEnabled: renderer.shadowMap.enabled && object.receiveShadow && lights.shadows.length > 0,\n      shadowMapType: renderer.shadowMap.type,\n      toneMapping: renderer.toneMapping,\n      physicallyCorrectLights: renderer.physicallyCorrectLights,\n      premultipliedAlpha: material.premultipliedAlpha,\n      alphaTest: material.alphaTest,\n      doubleSided: material.side === THREE.DoubleSide,\n      flipSided: material.side === THREE.BackSide\n    };\n    return parameters;\n  };\n\n  this.getProgramCode = function (material, parameters) {\n    var chunks = [];\n\n    if (parameters.shaderID) {\n      chunks.push(parameters.shaderID);\n    } else {\n      chunks.push(material.fragmentShader);\n      chunks.push(material.vertexShader);\n    }\n\n    if (material.defines !== undefined) {\n      for (var name in material.defines) {\n        chunks.push(name);\n        chunks.push(material.defines[name]);\n      }\n    }\n\n    for (var i = 0; i < parameterNames.length; i++) {\n      var parameterName = parameterNames[i];\n      chunks.push(parameterName);\n      chunks.push(parameters[parameterName]);\n    }\n\n    return chunks.join();\n  };\n\n  this.acquireProgram = function (material, parameters, code) {\n    var program; // Check if code has been already compiled\n\n    for (var p = 0, pl = programs.length; p < pl; p++) {\n      var programInfo = programs[p];\n\n      if (programInfo.code === code) {\n        program = programInfo;\n        ++program.usedTimes;\n        break;\n      }\n    }\n\n    if (program === undefined) {\n      program = new THREE.WebGLProgram(renderer, code, material, parameters);\n      programs.push(program);\n    }\n\n    return program;\n  };\n\n  this.releaseProgram = function (program) {\n    if (--program.usedTimes === 0) {\n      // Remove from unordered set\n      var i = programs.indexOf(program);\n      programs[i] = programs[programs.length - 1];\n      programs.pop(); // Free WebGL resources\n\n      program.destroy();\n    }\n  }; // Exposed for resource monitoring & error feedback via renderer.info:\n\n\n  this.programs = programs;\n};\n\nvar Renderer =\n/*#__PURE__*/\nfunction () {\n  function Renderer(options) {\n    _classCallCheck(this, Renderer);\n\n    Object.assign(this, options);\n    this.renderer = new threejs360.WebGLRenderer();\n    this.renderer.setClearColor(0x000000, 0);\n    this.renderer.setSize(this.width, this.height);\n    this.renderer.setPixelRatio(window.devicePixelRatio);\n    this.el = this.renderer.domElement;\n  }\n\n  _createClass(Renderer, [{\n    key: \"setTexture\",\n    value: function setTexture(texture) {\n      this.texture = texture;\n      this.mesh = this.createMesh();\n    }\n  }, {\n    key: \"setSize\",\n    value: function setSize(_ref) {\n      var height = _ref.height,\n          width = _ref.width;\n      this.height = height;\n      this.width = width;\n      this.renderer.setSize(width, height);\n    }\n  }, {\n    key: \"createMesh\",\n    value: function createMesh() {\n      this.material = new threejs360.MeshBasicMaterial({\n        map: this.texture\n      });\n      this.geometry = new threejs360.SphereGeometry(1, 50, 50);\n      this.geometry.scale(-1, 1, 1);\n      var mesh = new threejs360.Mesh(this.geometry, this.material);\n      return mesh;\n    }\n  }, {\n    key: \"destroy\",\n    value: function destroy() {\n      this.geometry.dispose();\n      this.material.dispose();\n      this.renderer.dispose();\n    }\n  }, {\n    key: \"render\",\n    value: function render(scene, camera, needsUpdate) {\n      if (!needsUpdate) return;\n      this.renderer.render(scene, camera);\n    }\n  }]);\n\n  return Renderer;\n}();\n\nvar easeOutBack = function easeOutBack(k) {\n  var s = 1.70158;\n  return --k * k * ((s + 1) * k + s) + 1;\n};\n\nvar Controls =\n/*#__PURE__*/\nfunction () {\n  function Controls(options) {\n    var _this = this;\n\n    _classCallCheck(this, Controls);\n\n    Object.assign(this, options);\n    this.el = this.renderer.el;\n    this.theta = this.initialYaw * Math.PI / 180;\n    this.phi = 0;\n    this.velo = 0.02;\n    this.rotateStart = new threejs360.Vector2();\n    this.rotateEnd = new threejs360.Vector2();\n    this.rotateDelta = new threejs360.Vector2();\n    this.orientation = new threejs360.Quaternion();\n    this.euler = new threejs360.Euler();\n    this.momentum = false;\n    this.isUserInteracting = false;\n    this.addDraggableStyle();\n    this.onMouseMove = this.onMouseMove.bind(this);\n    this.onMouseDown = this.onMouseDown.bind(this);\n    this.onMouseUp = this.onMouseUp.bind(this);\n\n    this.onTouchStart = function (e) {\n      return _this.onMouseDown({\n        clientX: e.touches[0].pageX,\n        clientY: e.touches[0].pageY\n      });\n    };\n\n    this.onTouchMove = function (e) {\n      return _this.onMouseMove({\n        clientX: e.touches[0].pageX,\n        clientY: e.touches[0].pageY\n      });\n    };\n\n    this.onTouchEnd = function (_) {\n      return _this.onMouseUp();\n    };\n\n    this.onDeviceMotion = this.onDeviceMotion.bind(this);\n    this.onMessage = this.onMessage.bind(this);\n    this.bindEvents();\n  }\n\n  _createClass(Controls, [{\n    key: \"bindEvents\",\n    value: function bindEvents() {\n      this.el.addEventListener('mouseleave', this.onMouseUp);\n      this.el.addEventListener('mousemove', this.onMouseMove);\n      this.el.addEventListener('mousedown', this.onMouseDown);\n      this.el.addEventListener('mouseup', this.onMouseUp);\n      this.el.addEventListener('touchstart', this.onTouchStart);\n      this.el.addEventListener('touchmove', this.onTouchMove);\n      this.el.addEventListener('touchend', this.onTouchEnd);\n      if (!this.isInIframe()) window.addEventListener('devicemotion', this.onDeviceMotion);\n      window.addEventListener('message', this.onMessage);\n    }\n  }, {\n    key: \"centralize\",\n    value: function centralize() {\n      var _this2 = this;\n\n      var endTheta = this.initialYaw * Math.PI / 180;\n      var duration = 750;\n      var startTheta = this.theta;\n      var startPhi = this.phi;\n      var start = Date.now();\n\n      var animate = function animate() {\n        var progress = Date.now() - start;\n        var elapsed = progress / duration;\n        elapsed = elapsed > 1 ? 1 : elapsed;\n\n        if (progress >= duration) {\n          return cancelAnimationFrame(id);\n        }\n\n        _this2.theta = startTheta + (endTheta - startTheta) * easeOutBack(elapsed);\n        _this2.phi = startPhi + (0 - startPhi) * easeOutBack(elapsed);\n        return requestAnimationFrame(animate);\n      };\n\n      var id = animate();\n    }\n  }, {\n    key: \"isInIframe\",\n    value: function isInIframe() {\n      try {\n        return window.self !== window.top;\n      } catch (e) {\n        return true;\n      }\n    }\n  }, {\n    key: \"destroy\",\n    value: function destroy() {\n      this.el.removeEventListener('mouseleave', this.onMouseUp);\n      this.el.removeEventListener('mousemove', this.onMouseMove);\n      this.el.removeEventListener('mousedown', this.onMouseDown);\n      this.el.removeEventListener('mouseup', this.onMouseUp);\n      this.el.removeEventListener('touchstart', this.onTouchStart);\n      this.el.removeEventListener('touchmove', this.onTouchMove);\n      this.el.removeEventListener('touchend', this.onTouchEnd);\n      window.removeEventListener('devicemotion', this.onDeviceMotion);\n      window.removeEventListener('message', this.onMessage);\n    }\n  }, {\n    key: \"getCurrentStyle\",\n    value: function getCurrentStyle() {\n      return \"height: \".concat(parseInt(this.el.style.height, 10), \"px; width: \").concat(parseInt(this.el.style.width, 10), \"px; user-select: none; -webkit-user-select: none; -webkit-touch-callout: none; -webkit-tap-highlight-color: rgba(0,0,0,0);\");\n    }\n  }, {\n    key: \"addDraggingStyle\",\n    value: function addDraggingStyle() {\n      this.el.setAttribute('style', \"\".concat(this.getCurrentStyle(), \" cursor: -webkit-grabbing; cursor: -moz-grabbing; cursor: grabbing;\"));\n    }\n  }, {\n    key: \"addDraggableStyle\",\n    value: function addDraggableStyle() {\n      this.el.setAttribute('style', \"\".concat(this.getCurrentStyle(), \" cursor: -webkit-grab; cursor: -moz-grab; cursor: grab;\"));\n    }\n  }, {\n    key: \"onMessage\",\n    value: function onMessage(event) {\n      var _event$data = event.data,\n          orientation = _event$data.orientation,\n          portrait = _event$data.portrait,\n          rotationRate = _event$data.rotationRate;\n      if (!rotationRate) return;\n      this.onDeviceMotion({\n        orientation: orientation,\n        portrait: portrait,\n        rotationRate: rotationRate\n      });\n    }\n  }, {\n    key: \"onDeviceMotion\",\n    value: function onDeviceMotion(event) {\n      var portrait = event.portrait !== undefined ? event.portrait : window.matchMedia(\"(orientation: portrait)\").matches;\n      var orientation;\n\n      if (event.orientation !== undefined) {\n        orientation = event.orientation;\n      } else if (window.orientation !== undefined) {\n        orientation = window.orientation;\n      } else {\n        orientation = -90;\n      }\n\n      var alpha = threejs360.Math.degToRad(event.rotationRate.alpha);\n      var beta = threejs360.Math.degToRad(event.rotationRate.beta);\n\n      if (portrait) {\n        this.phi = this.verticalPanning ? this.phi + alpha * this.velo : this.phi;\n        this.theta = this.theta - beta * this.velo * -1;\n      } else {\n        if (this.verticalPanning) {\n          this.phi = orientation === -90 ? this.phi + beta * this.velo : this.phi - beta * this.velo;\n        }\n\n        this.theta = orientation === -90 ? this.theta - alpha * this.velo : this.theta + alpha * this.velo;\n      }\n\n      this.adjustPhi();\n    }\n  }, {\n    key: \"onMouseMove\",\n    value: function onMouseMove(event) {\n      if (!this.isUserInteracting) {\n        return;\n      }\n\n      this.rotateEnd.set(event.clientX, event.clientY);\n      this.rotateDelta.subVectors(this.rotateEnd, this.rotateStart);\n      this.rotateStart.copy(this.rotateEnd);\n      this.phi = this.verticalPanning ? this.phi + 2 * Math.PI * this.rotateDelta.y / this.renderer.height * 0.3 : this.phi;\n      this.theta += 2 * Math.PI * this.rotateDelta.x / this.renderer.width * 0.5;\n      this.adjustPhi();\n    }\n  }, {\n    key: \"adjustPhi\",\n    value: function adjustPhi() {\n      // Prevent looking too far up or down.\n      this.phi = threejs360.Math.clamp(this.phi, -Math.PI / 1.95, Math.PI / 1.95);\n    }\n  }, {\n    key: \"onMouseDown\",\n    value: function onMouseDown(event) {\n      this.addDraggingStyle();\n      this.rotateStart.set(event.clientX, event.clientY);\n      this.isUserInteracting = true;\n      this.momentum = false;\n      this.onDragStart && this.onDragStart();\n    }\n  }, {\n    key: \"inertia\",\n    value: function inertia() {\n      if (!this.momentum) return;\n      this.rotateDelta.y *= 0.90;\n      this.rotateDelta.x *= 0.90;\n      this.theta += 0.005 * this.rotateDelta.x;\n      this.phi = this.verticalPanning ? this.phi + 0.005 * this.rotateDelta.y : this.phi;\n      this.adjustPhi();\n    }\n  }, {\n    key: \"onMouseUp\",\n    value: function onMouseUp() {\n      this.isUserInteracting && this.onDragStop && this.onDragStop();\n      this.addDraggableStyle();\n      this.isUserInteracting = false;\n      this.momentum = true;\n      this.inertia();\n    }\n  }, {\n    key: \"update\",\n    value: function update() {\n      if (this.phi === this.previousPhi && this.theta === this.previousTheta) return false;\n      this.previousPhi = this.phi;\n      this.previousTheta = this.theta;\n      this.euler.set(this.phi, this.theta, 0, 'YXZ');\n      this.orientation.setFromEuler(this.euler);\n      this.camera.quaternion.copy(this.orientation);\n      this.inertia();\n      return true;\n    }\n  }]);\n\n  return Controls;\n}();\n\nvar ThreeSixtyViewer =\n/*#__PURE__*/\nfunction () {\n  function ThreeSixtyViewer() {\n    var options = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n\n    _classCallCheck(this, ThreeSixtyViewer);\n\n    Object.assign(this, {\n      height: 360,\n      width: 640,\n      initialYaw: 90,\n      verticalPanning: true\n    }, options);\n    var height = this.height,\n        width = this.width,\n        container = this.container,\n        containerId = this.containerId,\n        initialYaw = this.initialYaw,\n        verticalPanning = this.verticalPanning,\n        onDragStart = this.onDragStart,\n        onDragStop = this.onDragStop;\n    this.renderer = new Renderer({\n      height: height,\n      width: width\n    });\n    this.camera = new threejs360.PerspectiveCamera(80, this.width / this.height, 0.1, 100);\n    this.controls = new Controls({\n      camera: this.camera,\n      renderer: this.renderer,\n      initialYaw: initialYaw,\n      verticalPanning: verticalPanning,\n      onDragStart: onDragStart,\n      onDragStop: onDragStop\n    });\n    this.stopVideoLoop = this.stopVideoLoop.bind(this);\n    this.onError = this.onError.bind(this);\n    this.startVideoLoop = this.startVideoLoop.bind(this);\n    this.needsUpdate = false;\n    this.scene = this.createScene();\n    this.scene.add(this.camera);\n    this.element = this.getElement();\n    this.elementReady = false;\n    this.element.addEventListener('playing', this.startVideoLoop);\n    this.element.addEventListener('pause', this.stopVideoLoop);\n    this.element.addEventListener('ended', this.stopVideoLoop);\n    this.element.addEventListener('loadedmetadata', this.initAfterLoadedMetadata.bind(this));\n    this.target = this.container ? this.container : document.querySelector(this.containerId);\n  }\n\n  _createClass(ThreeSixtyViewer, [{\n    key: \"initAfterLoadedMetadata\",\n    value: function initAfterLoadedMetadata() {\n      if (this.element.readyState >= 1 && !this.elementReady) {\n        this.texture = this.createTexture();\n        this.renderer.setTexture(this.texture);\n        this.scene.getObjectByName('photo').children = [this.renderer.mesh];\n        this.elementReady = true;\n      }\n    }\n  }, {\n    key: \"play\",\n    value: function play() {\n      this.element.play && this.element.play();\n    }\n  }, {\n    key: \"pause\",\n    value: function pause() {\n      this.element.pause && this.element.pause();\n    }\n  }, {\n    key: \"centralize\",\n    value: function centralize() {\n      this.controls.centralize();\n    }\n  }, {\n    key: \"stopVideoLoop\",\n    value: function stopVideoLoop() {\n      clearTimeout(this.videoLoopId);\n      this.videoLoopId = null;\n      this.needsUpdate = false;\n    }\n  }, {\n    key: \"destroy\",\n    value: function destroy() {\n      this.element.style.display = '';\n      clearTimeout(this.videoLoopId);\n      cancelAnimationFrame(this.animationFrameId);\n      this.element.pause && this.element.pause();\n      this.target.removeChild(this.renderer.el);\n      this.controls.destroy();\n      this.renderer.destroy();\n    }\n  }, {\n    key: \"setSize\",\n    value: function setSize(_ref) {\n      var height = _ref.height,\n          width = _ref.width;\n      this.camera.aspect = width / height;\n      this.camera.updateProjectionMatrix();\n      this.renderer.setSize({\n        height: height,\n        width: width\n      });\n    }\n  }, {\n    key: \"getElement\",\n    value: function getElement() {\n      if (this.source && this.source.tagName) return this.source;\n      var video = document.createElement('video');\n      video.loop = this.loop || false;\n      video.muted = this.muted || false;\n      video.setAttribute('crossorigin', 'anonymous');\n      video.setAttribute('webkit-playsinline', 'true');\n      video.setAttribute('playsinline', 'true');\n      video.setAttribute('src', this.source);\n      video.autoplay = this.autoplay !== undefined ? this.autoplay : true;\n      video.addEventListener('error', this.onError);\n      return video;\n    }\n  }, {\n    key: \"createTexture\",\n    value: function createTexture() {\n      var texture = new threejs360.Texture(this.element);\n      texture.minFilter = threejs360.LinearFilter;\n      texture.magFilter = threejs360.LinearFilter;\n      texture.format = threejs360.RGBFormat;\n      texture.generateMipmaps = false;\n      texture.needsUpdate = true;\n      return texture;\n    }\n  }, {\n    key: \"createScene\",\n    value: function createScene() {\n      var scene = new threejs360.Scene();\n      var group = new threejs360.Object3D();\n      group.name = 'photo';\n      scene.add(group);\n      return scene;\n    }\n  }, {\n    key: \"onError\",\n    value: function onError(err) {}\n  }, {\n    key: \"startVideoLoop\",\n    value: function startVideoLoop() {\n      var _this = this;\n\n      var videoFps = 1000 / 25;\n\n      if (this.videoLoopId) {\n        clearTimeout(this.videoLoopId);\n        this.videoLoopId = null;\n      }\n\n      var videoLoop = function videoLoop() {\n        _this.needsUpdate = true;\n        _this.videoLoopId = setTimeout(videoLoop, videoFps);\n      };\n\n      videoLoop();\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this2 = this;\n\n      this.target.appendChild(this.renderer.el);\n      this.element.style.display = 'none';\n\n      var loop = function loop() {\n        _this2.animationFrameId = requestAnimationFrame(loop);\n\n        var cameraUpdated = _this2.controls.update();\n\n        _this2.renderer.render(_this2.scene, _this2.camera, _this2.needsUpdate || cameraUpdated);\n\n        _this2.needsUpdate = false;\n      };\n\n      this.startVideoLoop();\n      loop();\n    }\n  }]);\n\n  return ThreeSixtyViewer;\n}();\n\nvar Video =\n/*#__PURE__*/\nfunction (_ThreeSixtyViewer) {\n  _inherits(Video, _ThreeSixtyViewer);\n\n  function Video(options) {\n    _classCallCheck(this, Video);\n\n    return _possibleConstructorReturn(this, _getPrototypeOf(Video).call(this, options));\n  }\n\n  _createClass(Video, [{\n    key: \"createTexture\",\n    value: function createTexture() {\n      var texture = new threejs360.VideoTexture(this.element); //TODO: we can pass all this info through the constructor\n\n      texture.minFilter = threejs360.LinearFilter;\n      texture.magFilter = threejs360.LinearFilter;\n      texture.format = threejs360.RGBFormat;\n      texture.generateMipmaps = false;\n      texture.needsUpdate = true;\n      return texture;\n    }\n  }]);\n\n  return Video;\n}(ThreeSixtyViewer);\n\nvar Image =\n/*#__PURE__*/\nfunction (_ThreeSixtyViewer) {\n  _inherits(Image, _ThreeSixtyViewer);\n\n  function Image(options) {\n    _classCallCheck(this, Image);\n\n    return _possibleConstructorReturn(this, _getPrototypeOf(Image).call(this, options));\n  }\n\n  _createClass(Image, [{\n    key: \"getElement\",\n    value: function getElement() {\n      if (this.source && this.source.tagName) return this.source;\n      var image = document.createElement('img');\n      image.setAttribute('crossorigin', 'anonymous');\n      image.src = this.source;\n      return image;\n    }\n  }]);\n\n  return Image;\n}(ThreeSixtyViewer);\n\nvar Canvas =\n/*#__PURE__*/\nfunction (_ThreeSixtyViewer) {\n  _inherits(Canvas, _ThreeSixtyViewer);\n\n  function Canvas(options) {\n    var _this;\n\n    _classCallCheck(this, Canvas);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(Canvas).call(this, options));\n    _this.context = _this.element.getContext('2d');\n    return _this;\n  }\n\n  _createClass(Canvas, [{\n    key: \"play\",\n    value: function play() {\n      this.video.play && this.video.play();\n    }\n  }, {\n    key: \"pause\",\n    value: function pause() {\n      this.video.pause && this.video.pause();\n    }\n  }, {\n    key: \"destroy\",\n    value: function destroy() {\n      this.video.style.display = '';\n\n      _get(_getPrototypeOf(Canvas.prototype), \"destroy\", this).call(this);\n    }\n  }, {\n    key: \"getElement\",\n    value: function getElement() {\n      this.video = _get(_getPrototypeOf(Canvas.prototype), \"getElement\", this).call(this);\n      this.video.addEventListener('playing', this.startVideoLoop);\n      this.video.addEventListener('pause', this.stopVideoLoop);\n      this.video.addEventListener('ended', this.stopVideoLoop);\n      var canvas = document.createElement('canvas');\n      canvas.height = this.video.videoHeight;\n      canvas.width = this.video.videoWidth;\n      return canvas;\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this2 = this;\n\n      this.target.appendChild(this.renderer.el);\n      this.video.style.display = 'none';\n\n      var loop = function loop() {\n        _this2.animationFrameId = requestAnimationFrame(loop);\n        var h = _this2.video.videoHeight;\n        var w = _this2.video.videoWidth;\n\n        if (_this2.element.height != h) {\n          _this2.element.height = h;\n        }\n\n        if (_this2.element.width != w) {\n          _this2.element.width = w;\n        }\n\n        _this2.context.clearRect(0, 0, w, h);\n\n        _this2.context.drawImage(_this2.video, 0, 0, w, h);\n\n        var cameraUpdated = _this2.controls.update();\n\n        _this2.renderer.render(_this2.scene, _this2.camera, _this2.needsUpdate || cameraUpdated);\n\n        _this2.renderer.mesh.material.map.needsUpdate = true;\n        _this2.needsUpdate = false;\n      };\n\n      this.startVideoLoop();\n      loop();\n    }\n  }]);\n\n  return Canvas;\n}(ThreeSixtyViewer);\n\nvar Audio =\n/*#__PURE__*/\nfunction (_ThreeSixtyViewer) {\n  _inherits(Audio, _ThreeSixtyViewer);\n\n  function Audio(options) {\n    var _this;\n\n    _classCallCheck(this, Audio);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(Audio).call(this, options));\n\n    _this.driver.addEventListener('playing', _this.startVideoLoop);\n\n    _this.driver.addEventListener('pause', _this.stopVideoLoop);\n\n    _this.driver.addEventListener('ended', _this.stopVideoLoop);\n\n    _this.driver.addEventListener('stalled', _this.stopVideoLoop);\n\n    _this.driverInitialized = false;\n    return _this;\n  }\n\n  _createClass(Audio, [{\n    key: \"play\",\n    value: function play() {\n      this.driver.play();\n    }\n  }, {\n    key: \"pause\",\n    value: function pause() {\n      this.driver.pause();\n    }\n  }, {\n    key: \"getElement\",\n    value: function getElement() {\n      if (this.source && this.source.tagName) {\n        this.driver = this.source;\n      } else {\n        this.driver = document.createElement('audio');\n        this.driver.src = this.source;\n        this.driver.loop = this.loop || false;\n        this.driver.muted = this.muted || false;\n        this.driver.setAttribute('crossorigin', 'anonymous');\n        this.driver.autoplay = this.autoplay || true;\n      }\n\n      this.source = this.driver.src;\n      this.driver.src = '';\n      this.driver.load();\n      var video = document.createElement('video');\n      video.setAttribute('crossorigin', 'anonymous');\n      video.src = this.source;\n      video.load();\n      video.addEventListener('error', this.onError);\n      return video;\n    }\n  }, {\n    key: \"createTexture\",\n    value: function createTexture() {\n      var texture = new threejs360.VideoTexture(this.element); //TODO: we can pass all this info through the constructor\n\n      texture.minFilter = threejs360.LinearFilter;\n      texture.magFilter = threejs360.LinearFilter;\n      texture.format = threejs360.RGBFormat;\n      texture.generateMipmaps = false;\n      texture.needsUpdate = true;\n      return texture;\n    }\n  }, {\n    key: \"startVideoLoop\",\n    value: function startVideoLoop() {\n      var _this2 = this;\n\n      var videoFps = 1000 / 25;\n\n      if (this.videoLoopId) {\n        clearTimeout(this.videoLoopId);\n        this.videoLoopId = null;\n      }\n\n      var videoLoop = function videoLoop() {\n        _this2.element.currentTime = _this2.driver.currentTime;\n        _this2.needsUpdate = true;\n        _this2.videoLoopId = setTimeout(videoLoop, videoFps);\n      };\n\n      videoLoop();\n    }\n  }, {\n    key: \"destroy\",\n    value: function destroy() {\n      this.driver.style.display = '';\n\n      _get(_getPrototypeOf(Audio.prototype), \"destroy\", this).call(this);\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this3 = this;\n\n      this.target.appendChild(this.renderer.el);\n      this.element.style.display = 'none';\n      this.driver.style.display = 'none';\n\n      var loop = function loop() {\n        var cameraUpdated = _this3.controls.update();\n\n        _this3.renderer.render(_this3.scene, _this3.camera, _this3.needsUpdate || cameraUpdated);\n\n        _this3.needsUpdate = false;\n        _this3.animationFrameId = requestAnimationFrame(loop);\n        var shouldInitializeDriver = _this3.element.readyState >= _this3.element.HAVE_FUTURE_DATA && !_this3.driverInitialized;\n\n        if (shouldInitializeDriver) {\n          _this3.driver.src = _this3.source;\n\n          _this3.driver.load();\n\n          _this3.onDriverReady && _this3.onDriverReady();\n          _this3.driverInitialized = true;\n        }\n      };\n\n      loop();\n    }\n  }]);\n\n  return Audio;\n}(ThreeSixtyViewer);\n\nvar video = function video(options) {\n  if (utils.shouldUseAudioDriver()) {\n    return new Audio(options);\n  }\n\n  if (utils.shouldUseCanvasInBetween()) {\n    return new Canvas(options);\n  }\n\n  return new Video(options);\n};\n\nexport { video as Video, Image };\n"]},"metadata":{},"sourceType":"module"}